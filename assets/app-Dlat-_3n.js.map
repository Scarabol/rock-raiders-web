{"version":3,"file":"app-Dlat-_3n.js","sources":["../../src/params.ts","../../src/resource/AssetCacheHelper.ts","../../src/resource/fileparser/VirtualFileSystem.ts","../../src/resource/selectfiles/SelectFilesAccordion.ts","../../src/resource/selectfiles/FileSelectComponent.ts","../../src/resource/selectfiles/SelectFilesForm.ts","../../src/core/ByteStreamReader.ts","../../node_modules/pako/dist/pako.esm.mjs","../../src/resource/fileparser/VirtualFile.ts","../../src/resource/fileparser/CabFile.ts","../../src/resource/fileparser/IsoFileParser.ts","../../src/resource/fileparser/CueFileParser.ts","../../src/resource/selectfiles/SelectFilesProgress.ts","../../node_modules/@zip.js/zip.js/lib/core/constants.js","../../node_modules/@zip.js/zip.js/lib/core/configuration.js","../../node_modules/@zip.js/zip.js/lib/core/web-worker-inline-wasm.js","../../node_modules/@zip.js/zip.js/lib/core/streams/codecs/crc32.js","../../node_modules/@zip.js/zip.js/lib/core/streams/crc32-stream.js","../../node_modules/@zip.js/zip.js/lib/core/util/encode-text.js","../../node_modules/@zip.js/zip.js/lib/core/streams/codecs/sjcl.js","../../node_modules/@zip.js/zip.js/lib/core/streams/common-crypto.js","../../node_modules/@zip.js/zip.js/lib/core/streams/aes-crypto-stream.js","../../node_modules/@zip.js/zip.js/lib/core/streams/zip-crypto-stream.js","../../node_modules/@zip.js/zip.js/lib/core/streams/zip-entry-stream.js","../../node_modules/@zip.js/zip.js/lib/core/streams/codec-stream.js","../../node_modules/@zip.js/zip.js/lib/core/codec-worker.js","../../node_modules/@zip.js/zip.js/lib/core/codec-pool.js","../../node_modules/@zip.js/zip.js/lib/core/io.js","../../node_modules/@zip.js/zip.js/lib/core/util/decode-cp437.js","../../node_modules/@zip.js/zip.js/lib/core/util/decode-text.js","../../node_modules/@zip.js/zip.js/lib/core/zip-entry.js","../../node_modules/@zip.js/zip.js/lib/core/options.js","../../node_modules/@zip.js/zip.js/lib/core/zip-reader.js","../../node_modules/@zip.js/zip.js/lib/zip-core-base.js","../../node_modules/@zip.js/zip.js/lib/core/zlib-streams-inline.js","../../node_modules/@zip.js/zip.js/lib/core/streams/zlib-wasm/zlib-streams.js","../../node_modules/@zip.js/zip.js/lib/core/streams/zlib-wasm/zlib-streams-loader.js","../../node_modules/@zip.js/zip.js/lib/zip-module-wasm.js","../../node_modules/@zip.js/zip.js/lib/core/util/mime-type.js","../../node_modules/@zip.js/zip.js/lib/zip-fs-wasm.js","../../src/resource/fileparser/ZipFileParser.ts","../../src/resource/selectfiles/SelectFilesModal.ts","../../src/cfg/ObjectListEntryCfg.ts","../../src/resource/fileparser/WadParser.ts","../../src/resource/fileparser/EncodingHelper.ts","../../src/resource/GameFilesLoader.ts","../../src/core/Sprite.ts","../../src/core/ImageHelper.ts","../../src/screen/AnimationFrame.ts","../../src/screen/layer/AbstractLayer.ts","../../src/screen/layer/ScreenLayer.ts","../../src/screen/layer/ScaledLayer.ts","../../src/cfg/InfoMessagesCfg.ts","../../src/cfg/TextInfoMessageCfg.ts","../../src/cfg/BubblesCfg.ts","../../src/cfg/ButtonCfg.ts","../../src/cfg/ButtonsCfg.ts","../../src/core/Rect.ts","../../src/cfg/DialogCfg.ts","../../src/cfg/GameStatsCfg.ts","../../src/game/model/job/PriorityIdentifier.ts","../../src/resource/SaveGameManager.ts","../../src/game/model/EntityType.ts","../../src/cfg/LevelsCfg.ts","../../src/cfg/MainCfg.ts","../../src/cfg/MenuCycleItemCfg.ts","../../src/cfg/MenuLabelItemCfg.ts","../../src/cfg/MenuSliderItemCfg.ts","../../src/cfg/MenuEntryCfg.ts","../../src/cfg/OverwriteCfg.ts","../../src/cfg/MenuCfg.ts","../../src/cfg/PanelCfg.ts","../../src/cfg/PanelRotationControlCfg.ts","../../src/cfg/PriorityButtonsCfg.ts","../../src/cfg/RewardCfg.ts","../../src/cfg/TexturesCfg.ts","../../src/cfg/MiscObjectsCfg.ts","../../src/cfg/RockFallStyle.ts","../../src/cfg/ObjInfoCfg.ts","../../src/cfg/WeaponTypeCfg.ts","../../src/cfg/SamplesCfg.ts","../../src/cfg/InterfaceSurroundImagesCfg.ts","../../src/cfg/AdvisorCfg.ts","../../src/cfg/PointersCfg.ts","../../src/cfg/InterfaceImageCfg.ts","../../src/cfg/GameConfig.ts","../../src/screen/layer/LoadingLayer.ts","../../node_modules/@ffmpeg/ffmpeg/dist/esm/const.js","../../node_modules/@ffmpeg/ffmpeg/dist/esm/utils.js","../../node_modules/@ffmpeg/ffmpeg/dist/esm/errors.js","../../node_modules/@ffmpeg/ffmpeg/dist/esm/classes.js","../../node_modules/@ffmpeg/ffmpeg/dist/esm/types.js","../../node_modules/@ffmpeg/core/dist/esm/ffmpeg-core.js?url","../../node_modules/@ffmpeg/core/dist/esm/ffmpeg-core.wasm?url","../../src/resource/fileparser/avi/FFmpegWasm.ts","../../src/screen/layer/VideoLayer.ts","../../src/screen/ScreenMaster.ts","../../src/resource/fileparser/RonFileParser.ts","../../src/worker/TypedWorker.ts","../../src/resource/fileparser/BitmapWithPalette.ts","../../src/worker/AbstractWorkerSystem.ts","../../src/worker/BitmapWorker.ts","../../src/worker/AbstractWorkerPool.ts","../../src/worker/BitmapWorkerPool.ts","../../src/resource/fileparser/ObjectiveTextParser.ts","../../src/resource/fileparser/LWOUVParser.ts","../../src/resource/fileparser/avi/MSVCDecoder.ts","../../src/resource/fileparser/avi/AVIVideoStream.ts","../../src/resource/fileparser/avi/AVI.ts","../../src/resource/fileparser/avi/AVIReader.ts","../../src/resource/fileparser/avi/ADPCMAudioDecoder.ts","../../src/resource/fileparser/avi/AVIAudioStream.ts","../../src/resource/fileparser/avi/AVIParser.ts","../../src/scene/SceneMesh.ts","../../src/scene/SequenceTextureMaterial.ts","../../src/resource/fileparser/LWOBParser.ts","../../src/screen/AnimatedCursor.ts","../../src/screen/CursorManager.ts","../../src/resource/ResourceManager.ts","../../src/resource/fileparser/FlhParser.ts","../../src/event/EventKeyEnum.ts","../../src/game/model/job/PriorityEntry.ts","../../src/event/EventBroker.ts","../../src/event/EventTypeMap.ts","../../src/event/WorldEvents.ts","../../src/gui/toppanel/PriorityList.ts","../../src/game/model/GameState.ts","../../src/core/SeededRandomGenerator.ts","../../src/game/factory/PRNG.ts","../../src/game/model/GameResult.ts","../../src/game/ECS.ts","../../src/game/component/PositionComponent.ts","../../src/game/terrain/SurfaceType.ts","../../src/game/component/AnimatedSceneEntityComponent.ts","../../src/game/component/FlockComponent.ts","../../src/scene/HealthBarSprite.ts","../../src/scene/HealthFontSprite.ts","../../src/game/component/HealthComponent.ts","../../src/game/component/MapMarkerComponent.ts","../../src/game/model/anim/AnimationActivity.ts","../../src/scene/SceneAudioMesh.ts","../../src/game/SceneEntity.ts","../../src/scene/AnimationGroup.ts","../../src/scene/AnimationQualityGroup.ts","../../src/scene/AnimatedSceneEntity.ts","../../src/game/component/MovableStatsComponent.ts","../../src/game/component/RandomMoveComponent.ts","../../src/game/component/MonsterStatsComponent.ts","../../src/game/component/LastWillComponent.ts","../../src/game/component/RockMonsterBehaviorComponent.ts","../../src/game/component/WorldTargetComponent.ts","../../src/game/model/PathTarget.ts","../../src/game/model/raider/RaiderTool.ts","../../src/game/model/raider/RaiderTraining.ts","../../src/game/model/job/JobState.ts","../../src/game/model/job/Job.ts","../../src/game/component/SceneSelectionComponent.ts","../../src/scene/SelectionFrameSprite.ts","../../src/game/component/SelectionFrameComponent.ts","../../src/gui/radar/MapSurfaceRect.ts","../../src/game/model/vehicle/VehicleUpgrade.ts","../../src/event/LocalEvents.ts","../../src/game/component/RaiderScareComponent.ts","../../src/game/model/job/CarryJob.ts","../../src/game/model/material/MaterialEntity.ts","../../src/game/component/BeamUpComponent.ts","../../src/core/BitmapFont.ts","../../src/worker/BitmapFontWorker.ts","../../src/worker/BitmapFontWorkerPool.ts","../../src/resource/TooltipSpriteBuilder.ts","../../src/event/GuiCommand.ts","../../src/game/component/TooltipComponent.ts","../../src/game/factory/MaterialSpawner.ts","../../src/game/component/SlugBehaviorComponent.ts","../../src/game/component/EntityPushedComponent.ts","../../src/game/component/HeadingComponent.ts","../../src/game/factory/MonsterSpawner.ts","../../src/nerp/NerpRunner.ts","../../src/audio/SoundManager.ts","../../node_modules/three/src/math/MathUtils.js","../../node_modules/three/src/math/Quaternion.js","../../node_modules/three/src/math/Vector3.js","../../node_modules/three/src/math/Vector2.js","../../node_modules/three/src/constants.js","../../node_modules/three/src/core/BufferAttribute.js","../../src/game/terrain/WallType.ts","../../src/game/terrain/SurfaceGeometry.ts","../../src/game/terrain/SurfaceMesh.ts","../../node_modules/three/examples/jsm/utils/BufferGeometryUtils.js","../../src/resource/AssetLoader.ts","../../src/resource/AnimEntityParser.ts","../../src/resource/fileparser/LWSCParser.ts","../../src/resource/fileparser/NerpMsgParser.ts","../../src/resource/AssetRegistry.ts","../../src/menu/UiElementState.ts","../../src/menu/MainMenuBaseItem.ts","../../src/event/EventTypeEnum.ts","../../src/event/GamePointerEvent.ts","../../src/menu/MainMenuIconButton.ts","../../src/menu/MainMenuLabelButton.ts","../../src/event/GameWheelEvent.ts","../../src/menu/FlicAnimOverlay.ts","../../src/menu/MainMenuLayer.ts","../../src/menu/MainMenuLevelButton.ts","../../src/menu/MainMenuPanel.ts","../../src/menu/MainMenuWindow.ts","../../src/menu/LevelSelectLayer.ts","../../src/menu/MainMenuLoadSaveButton.ts","../../src/menu/LoadSaveLayer.ts","../../src/menu/MainMenuCreditsLayer.ts","../../src/screen/BaseRenderer.ts","../../src/menu/RockWipeLayer.ts","../../src/nerp/NerpScript.ts","../../src/nerp/NerpParser.ts","../../src/game/LevelLoader.ts","../../src/screen/MainMenuScreen.ts","../../src/game/model/job/raider/RaiderJob.ts","../../src/game/model/job/MoveJob.ts","../../src/game/model/job/raider/GetToolJob.ts","../../src/game/model/job/UpgradeVehicleJob.ts","../../src/game/model/GameSelection.ts","../../src/game/model/Updateable.ts","../../src/game/EntityManager.ts","../../src/game/model/job/ManVehicleJob.ts","../../src/game/component/RaiderInfoComponent.ts","../../src/game/model/job/raider/EatJob.ts","../../src/game/model/job/raider/TrainRaiderJob.ts","../../src/game/model/job/raider/UpgradeRaiderJob.ts","../../src/scene/BubbleSprite.ts","../../src/game/model/building/BuildingType.ts","../../src/game/component/OxygenComponent.ts","../../src/game/component/ScannerComponent.ts","../../src/game/component/TeleportComponent.ts","../../src/game/component/LaserBeamTurretComponent.ts","../../src/game/model/building/BuildingEntity.ts","../../src/game/model/building/BuildingSite.ts","../../src/game/model/job/raider/RepairBuildingJob.ts","../../src/game/GuiManager.ts","../../src/game/model/EntityStep.ts","../../src/game/model/MoveState.ts","../../src/game/component/BulletComponent.ts","../../src/scene/SelectionNameSprite.ts","../../src/game/component/SelectionNameComponent.ts","../../src/game/model/raider/Raider.ts","../../src/game/model/vehicle/VehicleEntity.ts","../../src/game/model/vehicle/VehicleFactory.ts","../../src/game/ObjectListLoader.ts","../../node_modules/three/examples/jsm/controls/OrbitControls.js","../../node_modules/three/examples/jsm/controls/MapControls.js","../../src/scene/BirdViewControls.ts","../../src/game/model/building/BuildPlacementMarkerMesh.ts","../../src/game/model/building/BuildPlacementMarker.ts","../../src/game/model/job/surface/ClearRubbleJob.ts","../../src/game/model/job/surface/DrillJob.ts","../../src/game/model/job/surface/ReinforceJob.ts","../../src/game/component/EmergeComponent.ts","../../src/game/component/FallInComponent.ts","../../src/game/component/FluidSurfaceComponent.ts","../../src/game/model/job/surface/CompleteSurfaceJob.ts","../../src/game/terrain/Surface.ts","../../src/game/terrain/astar.ts","../../src/game/terrain/TerrainPathSegment.ts","../../src/game/terrain/TerrainPath.ts","../../src/game/terrain/PathFinder.ts","../../src/game/terrain/Terrain.ts","../../src/game/component/LavaErosionComponent.ts","../../src/game/TerrainLoader.ts","../../src/scene/BirdViewCamera.ts","../../src/scene/TorchLightCursor.ts","../../src/scene/SceneRenderer.ts","../../node_modules/three/examples/jsm/postprocessing/Pass.js","../../node_modules/three/examples/jsm/postprocessing/RenderPass.js","../../node_modules/three/examples/jsm/shaders/CopyShader.js","../../node_modules/three/examples/jsm/postprocessing/ShaderPass.js","../../node_modules/three/examples/jsm/postprocessing/MaskPass.js","../../node_modules/three/examples/jsm/postprocessing/EffectComposer.js","../../node_modules/three/examples/jsm/shaders/OutputShader.js","../../node_modules/three/examples/jsm/postprocessing/OutputPass.js","../../src/scene/GreenScaleShader.ts","../../src/scene/FollowerRenderer.ts","../../src/scene/LeveledAmbientLight.ts","../../src/scene/ObjectPointer.ts","../../src/scene/CameraFrustumUpdater.ts","../../src/game/SceneManager.ts","../../src/game/model/job/raider/EatBarracksJob.ts","../../src/game/Supervisor.ts","../../src/game/system/MovementSystem.ts","../../src/game/system/SceneEntityPositionSystem.ts","../../src/game/system/SceneEntityHeadingSystem.ts","../../src/game/system/RandomMoveBehaviorSystem.ts","../../src/game/system/FlockBehaviorSystem.ts","../../src/game/system/DamageSystem.ts","../../src/game/system/BeamUpSystem.ts","../../src/game/system/OxygenSystem.ts","../../src/game/system/MapMarkerUpdateSystem.ts","../../src/game/component/EntityFrozenComponent.ts","../../src/game/component/BoulderComponent.ts","../../src/game/system/RockMonsterBehaviorSystem.ts","../../src/game/system/ElectricFenceSystem.ts","../../src/game/system/DeathSystem.ts","../../src/game/model/job/raider/RunPanicJob.ts","../../src/game/system/RaiderScareSystem.ts","../../src/game/system/SlugBehaviorSystem.ts","../../src/game/system/TerrainScannerSystem.ts","../../src/game/system/BulletSystem.ts","../../src/game/system/BoulderSystem.ts","../../src/game/system/LavaErosionSystem.ts","../../src/game/terrain/PowerGrid.ts","../../src/game/system/EmergeSystem.ts","../../src/game/system/TeleportSystem.ts","../../src/game/system/FallInSystem.ts","../../src/game/system/FluidSurfaceSystem.ts","../../src/scene/LaserBeamMesh.ts","../../src/game/system/LaserShotSystem.ts","../../src/game/WorldManager.ts","../../src/event/GameKeyboardEvent.ts","../../src/scene/SelectionRaycaster.ts","../../src/screen/layer/GameLayer.ts","../../src/gui/base/BaseElement.ts","../../src/gui/base/Button.ts","../../src/gui/base/Panel.ts","../../src/worker/MapRendererWorker.ts","../../src/gui/radar/MapRenderer.ts","../../src/gui/radar/MapView.ts","../../src/gui/radar/FollowerView.ts","../../src/gui/radar/RadarPanel.ts","../../src/gui/messagepanel/TextInfoMessage.ts","../../src/gui/messagepanel/MessagePanel.ts","../../src/gui/sidebar/SideBarLabel.ts","../../src/gui/sidebar/PanelCrystalSideBar.ts","../../src/worker/DependencySpriteWorker.ts","../../src/worker/DependencySpriteWorkerPool.ts","../../src/gui/main/IconPanelButton.ts","../../src/gui/main/IconSubPanel.ts","../../src/gui/main/BuildingPanel.ts","../../src/gui/main/GetToolPanel.ts","../../src/gui/main/IconPanelButtonLabel.ts","../../src/gui/main/IconPanelToggleButton.ts","../../src/gui/main/select/SelectBuildingPanel.ts","../../src/gui/main/select/SelectFencePanel.ts","../../src/gui/main/select/SelectFloorPanel.ts","../../src/gui/main/select/SelectLavaErosionPanel.ts","../../src/gui/main/select/SelectRaiderPanel.ts","../../src/gui/main/select/SelectRubblePanel.ts","../../src/gui/main/select/SelectSitePanel.ts","../../src/gui/main/select/SelectVehicleEmptyPanel.ts","../../src/gui/main/select/SelectVehicleManedPanel.ts","../../src/gui/main/select/SelectWallPanel.ts","../../src/gui/main/TrainRaiderPanel.ts","../../src/gui/main/VehiclePanel.ts","../../src/gui/main/UpgradeVehiclePanel.ts","../../src/gui/main/select/ChangeCameraPanel.ts","../../src/gui/main/MainPanel.ts","../../src/gui/base/ToggleButton.ts","../../src/gui/toppanel/TopPanel.ts","../../src/gui/infodock/InformationPanel.ts","../../src/gui/toppanel/PriorityListPanel.ts","../../src/gui/infodock/InfoDockButton.ts","../../src/gui/infodock/InfoDockPanel.ts","../../src/gui/event/GuiEvent.ts","../../src/gui/cameracontrol/CameraControlPanel.ts","../../src/screen/layer/GuiMainLayer.ts","../../src/gui/briefing/BriefingPanelCfg.ts","../../src/gui/briefing/BriefingPanel.ts","../../src/gui/overlay/MenuCycleItem.ts","../../src/gui/overlay/MenuLabelItem.ts","../../src/gui/overlay/MenuSliderItem.ts","../../src/gui/overlay/MenuLayer.ts","../../src/gui/overlay/MenuBasePanel.ts","../../src/gui/overlay/OptionsLayerUtil.ts","../../src/gui/overlay/OptionsPanel.ts","../../src/gui/overlay/PausePanel.ts","../../src/screen/layer/OverlayLayer.ts","../../src/screen/layer/SelectionFrameLayer.ts","../../src/scene/AnimationLoopGroup.ts","../../src/screen/layer/AdvisorLayer.ts","../../src/screen/layer/NamingLayer.ts","../../src/screen/GameScreen.ts","../../src/menu/RewardScreenButton.ts","../../src/menu/MainMenuOverwritePanel.ts","../../src/menu/OverwriteLayer.ts","../../src/screen/RewardScreen.ts","../../src/screen/layer/TooltipLayer.ts","../../src/audio/MusicManager.ts","../../src/GameModule.ts","../../src/ConsoleIntegration.ts","../../src/cfg/CfgEntry.ts","../../src/resource/fileparser/CfgFileParser.ts","../../src/app.ts"],"sourcesContent":["export const DEV_MODE = import.meta.env.MODE === 'development'\nexport const VERBOSE = !DEV_MODE\nexport const ASSET_CACHE_DB_NAME = 'RockRaidersWeb'\nexport const ASSET_CACHE_VERSION = 2\nexport const JOB_SCHEDULE_INTERVAL = 1000 // milliseconds\nexport const CHECK_CLEAR_RUBBLE_INTERVAL = 5000 // milliseconds\nexport const CHECK_SPAWN_RAIDER_TIMER = 1000 // milliseconds\nexport const CHECK_SPAWN_VEHICLE_TIMER = 2000 // milliseconds\nexport const MAX_RAIDER_BASE = 12\nexport const MAX_RAIDER_REQUEST = 9\nexport const ADDITIONAL_RAIDER_PER_SUPPORT = 10\nexport const PANEL_ANIMATION_MULTIPLIER = 5\nexport const SEQUENCE_TEXTURE_INTERVAL_MS = 1000 / 5\nexport const KEY_PAN_SPEED = 20\nexport const SPIDER_SLIP_RANGE_SQ = 49\nexport const ITEM_ACTION_RANGE_SQ = 49\nexport const UPDATE_INTERVAL_MS = Math.round(1000 / 30)\nexport const BRICK_ORE_VALUE = 5\nexport const CAMERA_FOV = 40\nexport const CAMERA_MAX_DISTANCE = 5000\nexport const NUM_OF_LEVELS_TO_COMPLETE_GAME = 25\nexport const SAVE_GAME_SCREENSHOT_WIDTH = 160\nexport const SAVE_GAME_SCREENSHOT_HEIGHT = 120\nexport const RAIDER_CARRY_SLOWDOWN = 0.7\nexport const SURFACE_NUM_SEAM_LEVELS = 4\nexport const SURFACE_NUM_CONTAINED_ORE = 4\nexport const DEFAULT_GAME_SPEED_MULTIPLIER = 0.4\nexport const DEFAULT_SFX_VOLUME = 0.5\nexport const DEFAULT_MUSIC_VOLUME = 0\nexport const DEFAULT_GAME_BRIGHTNESS = 0.5\nexport const DEFAULT_SHOW_HELP_WINDOW = false\nexport const DEFAULT_WALL_DETAILS = true\nexport const DEFAULT_MUSIC_TOGGLE = false\nexport const DEFAULT_SFX_TOGGLE = true\nexport const DEFAULT_AUTO_GAME_SPEED = false\nexport const TOOLTIP_DELAY_TEXT_MENU = 500\nexport const TOOLTIP_DELAY_TEXT_SCENE = 1000\nexport const TOOLTIP_DELAY_SFX = 1000\nexport const TOOLTIP_DELAY_SFX_MENU = 500\nexport const DEFAULT_FONT_NAME = 'Interface/Fonts/Font5_Hi.bmp'\nexport const TOOLTIP_FONT_NAME = 'Interface/Fonts/tooltipfont.bmp'\nexport const CAMERA_MIN_HEIGHT_ABOVE_TERRAIN = 5\nexport const CAMERA_MAX_SHAKE_BUMP = 5\nexport const CAMERA_MAX_SHAKE_TILES = 12\nexport const AIR_LEVEL_WARNING_STEP = 10 / 100 // % -> each 10 percent down triggers warning\nexport const AIR_LEVEL_LEVEL_LOW = 25 / 100 // % -> below 25 percent trigger low level warning\nexport const NERP_EXECUTION_INTERVAL = 1000 / 25\nexport const CURSOR_MAX_HEIGHT = 32 // px; limited by browsers\nexport const MAP_PANEL_SURFACE_RECT_MARGIN = 1\nexport const MAP_MAX_UPDATE_INTERVAL = Math.round(1000 / 15)\nexport const SLUG_SUCK_TIME = 20000\nexport const SLUG_MAX_IDLE_TIME = 15000\nexport const USE_KEYBOARD_SHORTCUTS = false\nexport const RAIDER_PATH_PRECISION = 3\nexport const DEFAULT_SCREEN_RATIO_FIXED = 4 / 3\nexport const FPV_ENTITY_TURN_SPEED = 0.05\nexport const POINTER_THRESHOLD_DOWN_UP_CLICK = 20\nexport const CAMERA_PAN_LIMIT_MARGIN = 5\n\n// native constants (do not change)\n\nexport const NATIVE_SCREEN_WIDTH = 640\nexport const NATIVE_SCREEN_HEIGHT = 480\nexport const TILESIZE = 40\nexport const NATIVE_UPDATE_INTERVAL = 1000 / 25\n","/*\n Copycat from https://github.com/jakearchibald/idb-keyval\n\n - With custom db and object store name\n - No need for npm dependency and some unused functions\n */\n\nimport { ASSET_CACHE_DB_NAME, ASSET_CACHE_VERSION } from '../params'\n\nexport function promisifyRequest<T = undefined>(\n    request: IDBRequest<T> | IDBTransaction,\n): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result)\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error)\n    })\n}\n\nexport function createStore(storeName: string): UseStore {\n    const request = indexedDB.open(ASSET_CACHE_DB_NAME, ASSET_CACHE_VERSION)\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName)\n    const dbp = promisifyRequest(request)\n\n    return (txMode, callback) =>\n        dbp.then((db) =>\n            callback(db.transaction(storeName, txMode).objectStore(storeName)),\n        )\n}\n\nexport type UseStore = <T>(\n    txMode: IDBTransactionMode,\n    callback: (store: IDBObjectStore) => T | PromiseLike<T>,\n) => Promise<T>;\n\nlet defaultGetStoreFunc: UseStore | undefined\n\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('assetCache')\n    }\n    return defaultGetStoreFunc\n}\n\nexport function cacheGetData<T = any>(\n    key: IDBValidKey,\n    customStore = defaultGetStore(),\n): Promise<T | undefined> {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)))\n}\n\nexport function cachePutData(\n    key: IDBValidKey,\n    value: any,\n    customStore = defaultGetStore(),\n): Promise<void> {\n    return customStore('readwrite', (store) => {\n        store.put(value, key)\n        return promisifyRequest(store.transaction)\n    })\n}\n","import { VirtualFile } from './VirtualFile'\n\nexport type VFSEncoding = 'default' | 'windows-1250' | 'windows-1251' | 'windows-1252' | 'windows-1255'\n\nexport class VirtualFileSystem {\n    readonly files: Map<string, VirtualFile> = new Map()\n\n    constructor(readonly encoding: VFSEncoding = 'default') {\n    }\n\n    registerFile(file: VirtualFile) {\n        this.files.set(file.fileName.toLowerCase(), file)\n    }\n\n    getFile(filename: string): VirtualFile {\n        const lName = filename.toLowerCase()\n        const file = this.files.get(lName)\n        if (!file) throw new Error(`File \"${filename}\" (${lName}) not found`)\n        return file\n    }\n\n    filterEntryNames(regexStr: string): string[] {\n        const regex = new RegExp(regexStr.toLowerCase())\n        return Array.from(this.files.keys()).filter((f) => !!f.match(regex))\n    }\n\n    hasEntry(entryName: string): boolean {\n        return this.files.has(entryName.toLowerCase())\n    }\n\n    get fileNames(): string[] {\n        return Array.from(this.files.keys())\n    }\n\n    dispose(): void {\n        this.files.clear()\n    }\n}\n","export class SelectFilesAccordion {\n    readonly root: HTMLElement\n    lastIndex: number = 0\n\n    constructor() {\n        this.root = document.createElement('div')\n        this.root.classList.add('select-files-accordion')\n    }\n\n    addOption(labelHTML: string, panel: HTMLElement) {\n        const option = this.root.appendChild(document.createElement('div'))\n        option.classList.add('select-files-accordion-option')\n        const input = option.appendChild(document.createElement('input'))\n        input.type = 'radio'\n        input.name = 'select-files-accordion'\n        input.id = `select-files-accordion-option-${this.lastIndex}`\n        input.checked = this.lastIndex === 0\n        input.style.display = 'none'\n        const label = option.appendChild(document.createElement('label'))\n        label.htmlFor = input.id\n        label.innerHTML = labelHTML\n        panel.classList.add('select-files-accordion-panel')\n        option.appendChild(panel)\n        this.lastIndex++\n    }\n}\n","export class FileSelectComponent {\n    readonly label: HTMLLabelElement\n    readonly input: HTMLInputElement\n\n    constructor(filename: string) {\n        this.label = document.createElement('label')\n        this.label.innerHTML = `Select <b>${filename}</b> here:`\n        this.input = this.label.appendChild(document.createElement('input'))\n        this.input.classList.add('select-files-input')\n        this.input.type = 'file'\n        this.input.required = true\n        this.input.accept = `.${filename.split('.').last()}`\n    }\n}\n","import { FileSelectComponent } from './FileSelectComponent'\n\nexport class SelectFilesForm {\n    readonly root: HTMLElement\n\n    constructor(btnText: string, fileNames: string[], onSubmit: (files: File[]) => Promise<void>) {\n        this.root = document.createElement('form')\n        this.root.classList.add('select-files-option')\n        const fileSelectInputs = fileNames.map((fileName) => {\n            const fileSelect = new FileSelectComponent(fileName)\n            this.root.appendChild(fileSelect.label)\n            return fileSelect.input\n        })\n        const btnStart = this.root.appendChild(document.createElement('button'))\n        btnStart.innerText = btnText\n        this.root.addEventListener('submit', async (e) => {\n            try {\n                e.preventDefault()\n                btnStart.disabled = true\n                const files = fileSelectInputs.flatMap((f) => Array.from(f.files ?? [])).filter((f) => !!f)\n                await onSubmit(files)\n            } finally {\n                btnStart.disabled = false\n            }\n        })\n    }\n}\n","export class ByteStreamReader {\n    littleEndian: boolean = true\n    offset: number = 0\n\n    constructor(\n        readonly dataView: DataView,\n    ) {\n    }\n\n    hasMoreData(): boolean {\n        return this.offset < this.dataView.byteLength\n    }\n\n    seek(offset: number): void {\n        if (offset < 0 || offset >= this.dataView.byteLength) throw new Error(`Invalid offset (${offset}) given`)\n        this.offset = offset\n    }\n\n    skip(numBytes: number): void {\n        this.offset += numBytes\n    }\n\n    readString(byteLength: number): string {\n        const chars: number[] = []\n        for (let c = 0; c < byteLength; c++) {\n            chars.push(this.dataView.getUint8(this.offset))\n            this.offset++\n        }\n        return String.fromCharCode.apply(null, chars)\n    }\n\n    readStringNull(): string {\n        const charCodes: number[] = []\n        let char: number = 0\n        do {\n            char = this.read8()\n            if (char !== 0) charCodes.push(char)\n        } while (char !== 0)\n        return String.fromCharCode.apply(null, charCodes)\n    }\n\n    read8(): number {\n        if (this.offset + 1 > this.dataView.byteLength) throw new Error('Attempt to read past data end')\n        const data = this.dataView.getUint8(this.offset)\n        this.offset += 1\n        return data\n    }\n\n    read8Signed(): number {\n        if (this.offset + 1 > this.dataView.byteLength) throw new Error('Attempt to read past data end')\n        const data = this.dataView.getInt8(this.offset)\n        this.offset += 1\n        return data\n    }\n\n    read16Signed(): number {\n        if (this.offset + 2 > this.dataView.byteLength) throw new Error('Attempt to read past data end')\n        const data = this.dataView.getInt16(this.offset, this.littleEndian)\n        this.offset += 2\n        return data\n    }\n\n    read16(): number {\n        if (this.offset + 2 > this.dataView.byteLength) throw new Error('Attempt to read past data end')\n        const data = this.dataView.getUint16(this.offset, this.littleEndian)\n        this.offset += 2\n        return data\n    }\n\n    read32Signed(): number {\n        if (this.offset + 4 > this.dataView.byteLength) throw new Error('Attempt to read past data end')\n        const data = this.dataView.getInt32(this.offset, this.littleEndian)\n        this.offset += 4\n        return data\n    }\n\n    read32(): number {\n        if (this.offset + 4 > this.dataView.byteLength) throw new Error('Attempt to read past data end')\n        const data = this.dataView.getUint32(this.offset, this.littleEndian)\n        this.offset += 4\n        return data\n    }\n\n    readBytes(numOfBytes: number): Uint8Array {\n        const result = new Uint8Array(this.dataView.buffer, this.offset, numOfBytes)\n        this.offset += numOfBytes\n        return result\n    }\n}\n","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","export class VirtualFile {\n    private buffer?: ArrayBuffer\n    private text?: string\n\n    private constructor(readonly fileName: string, private view: DataView<ArrayBuffer>) {\n    }\n\n    static fromView(fileName: string, view: DataView<ArrayBuffer>): VirtualFile {\n        this.assertArgs(fileName, view)\n        return new VirtualFile(fileName, view)\n    }\n\n    static fromBuffer(fileName: string, buffer: ArrayBuffer): VirtualFile {\n        this.assertArgs(fileName, buffer)\n        const f = new VirtualFile(fileName, new DataView(buffer))\n        f.buffer = buffer\n        return f\n    }\n\n    private static assertArgs(fileName: string, view: DataView | ArrayBuffer) {\n        if (!fileName) throw new Error('No filename given')\n        if (!view) throw new Error(`No data given for\"${fileName}\"`)\n    }\n\n    /**\n     * This method actually clones the memory buffer and should be considered 'pricey' in terms of performance\n     */\n    toBuffer(): ArrayBuffer {\n        if (!this.buffer) this.buffer = this.view.buffer.slice(this.view.byteOffset, this.view.byteOffset + this.view.byteLength)\n        return this.buffer\n    }\n\n    toArray(): Uint8Array {\n        return new Uint8Array(this.view.buffer, this.view.byteOffset, this.view.byteLength)\n    }\n\n    toDataView(): DataView<ArrayBuffer> {\n        return new DataView(this.view.buffer, this.view.byteOffset, this.view.byteLength)\n    }\n\n    toText(): string {\n        if (this.text !== undefined && this.text !== null) return this.text\n        this.text = '' // otherwise text starts with 'undefined'\n        this.toArray().forEach((c) => this.text += String.fromCharCode(c)) // Shorthand with spread operator (...) exceeds call stack size\n        return this.text\n    }\n}\n","import { ByteStreamReader } from '../../core/ByteStreamReader'\nimport Pako from 'pako'\nimport { cacheGetData } from '../AssetCacheHelper'\nimport { VirtualFile } from './VirtualFile'\nimport { SelectFilesProgress } from '../selectfiles/SelectFilesProgress'\n\ninterface CabFileEntry {\n    filePathName: string;\n    dataOffset: number;\n    compressedSize: number;\n    expandedSize: number;\n    compressed: boolean;\n    fileDescriptorOffset: string;\n}\n\ninterface CabFileGroup {\n    name: string;\n    firstFile: number;\n    lastFile: number;\n}\n\nexport class CabFile {\n    static readonly CAB_SIGNATURE = 0x28635349\n    static readonly FALLBACK_MAJOR_VERSION = 5\n    static readonly MAX_FILE_GROUP_COUNT = 71\n    static readonly FILE_COMPRESSED = 4\n    static readonly FILE_INVALID = 8\n\n    readonly volumeReader: ByteStreamReader\n    readonly lowerFilePathNameToFile: Map<string, CabFileEntry> = new Map<string, CabFileEntry>()\n\n    constructor(readonly cabHeaderContent: ArrayBuffer, cabVolumeContent: ArrayBuffer, readonly verbose: boolean = false) {\n        this.volumeReader = new ByteStreamReader(new DataView(cabVolumeContent))\n    }\n\n    parse(): this {\n        this.lowerFilePathNameToFile.clear()\n        const reader = new ByteStreamReader(new DataView(this.cabHeaderContent))\n        const signature = reader.read32()\n        if (signature !== CabFile.CAB_SIGNATURE) throw new Error(`File signature ${signature.toString(16)} does not match ${CabFile.CAB_SIGNATURE.toString(16)}`)\n        const version = reader.read32()\n        if (this.verbose) console.log('version', version)\n        const volumeInfo = reader.read32()\n        if (this.verbose) console.log('volumeInfo', volumeInfo)\n        const cabDescriptorOffset = reader.read32()\n        if (this.verbose) console.log('cabDescriptorOffset', cabDescriptorOffset)\n        const cabDescriptorSize = reader.read32()\n        if (this.verbose) console.log('cabDescriptorSize', cabDescriptorSize)\n        const majorVersion = CabFile.versionToMajorVersion(version)\n        if (this.verbose) console.log('majorVersion', majorVersion)\n        if (majorVersion !== 5) throw new Error(`Unexpected major version; expected 5 got ${majorVersion}`)\n\n        // getCabDescriptor\n        reader.seek(cabDescriptorOffset + 0xc)\n        const fileTableOffset = reader.read32()\n        if (this.verbose) console.log('fileTableOffset', fileTableOffset)\n        reader.skip(4)\n        const fileTableSize = reader.read32()\n        if (this.verbose) console.log('fileTableSize', fileTableSize)\n        const fileTableSize2 = reader.read32()\n        if (this.verbose) console.log('fileTableSize2', fileTableSize2)\n        const directoryCount = reader.read32()\n        reader.skip(8)\n        const fileCount = reader.read32()\n        const fileTableOffset2 = reader.read32()\n        if (this.verbose) console.log('fileTableOffset2', fileTableOffset2)\n\n        // assert((p - (header->data + header->common.cab_descriptor_offset)) == 0x30);\n\n        if (fileTableSize !== fileTableSize2) {\n            console.warn('File table sizes do not match')\n        }\n\n        if (this.verbose) console.log(`Cabinet descriptor: ${fileTableOffset.toString(16)} ${fileTableSize} ${fileTableOffset2.toString(16)} ${fileTableSize2}`)\n\n        if (this.verbose) console.log('Directory count: %i', directoryCount)\n        if (this.verbose) console.log('File count: %i', fileCount)\n\n        reader.skip(0xe)\n\n        const fileGroupOffsets: number[] = []\n        for (let c = 0; c < CabFile.MAX_FILE_GROUP_COUNT; c++) {\n            fileGroupOffsets[c] = reader.read32()\n        }\n        if (this.verbose) console.log('fileGroupOffsets', fileGroupOffsets)\n\n        // XXX parse component offsets from header\n\n        // getFileTable\n        reader.seek(cabDescriptorOffset + fileTableOffset)\n        const fileOffsetsTable: number[] = []\n        for (let c = 0; c < (directoryCount + fileCount); c++) {\n            fileOffsetsTable[c] = reader.read32()\n        }\n\n        // XXX Parse components from header\n\n        // getFileGroups\n        const fileGroups: CabFileGroup[] = []\n        for (let c = 0; c < CabFile.MAX_FILE_GROUP_COUNT; c++) {\n            if (!fileGroupOffsets[c]) continue\n            const list = {nameOffset: 0, descriptorOffset: 0, nextOffset: fileGroupOffsets[c]}\n            while (list.nextOffset) {\n                reader.seek(cabDescriptorOffset + list.nextOffset)\n                list.nameOffset = reader.read32()\n                list.descriptorOffset = reader.read32()\n                list.nextOffset = reader.read32()\n                if (this.verbose) console.log('File group descriptor offset: ', list.descriptorOffset.toString(16))\n                reader.seek(cabDescriptorOffset + list.descriptorOffset)\n                const nameOffset = reader.read32()\n                reader.seek(cabDescriptorOffset + nameOffset)\n                const name = reader.readStringNull()\n                if (this.verbose) console.log(`File group name \"${name}\"`)\n                reader.seek(cabDescriptorOffset + list.descriptorOffset + 4 + 0x48)\n                const firstFile = reader.read32()\n                const lastFile = reader.read32()\n                fileGroups.push({name, firstFile, lastFile})\n            }\n        }\n        if (this.verbose) console.log('fileGroups', fileGroups)\n\n        for (let c = 0; c < fileGroups.length; c++) {\n            const fileGroup = fileGroups[c]\n            for (let i = fileGroup.firstFile; i <= fileGroup.lastFile; i++) {\n                const fileDescriptorOffset = cabDescriptorOffset + fileTableOffset + fileOffsetsTable[directoryCount + i]\n                reader.seek(fileDescriptorOffset)\n                if (this.verbose) console.log(`File descriptor offset ${i}: ${fileDescriptorOffset.toString(16)}`)\n                const nameOffset = reader.read32()\n                if (!nameOffset) {\n                    if (this.verbose) console.error('No name offset given')\n                    continue\n                }\n                const directoryIndex = reader.read32()\n                const flags = reader.read16()\n                const compressed = !!(flags & CabFile.FILE_COMPRESSED)\n                if (!compressed) {\n                    if (this.verbose) console.log('file is not compressed')\n                } else if (flags & CabFile.FILE_INVALID) {\n                    if (this.verbose) console.error('Invalid file skipped')\n                    continue\n                }\n                const expandedSize = reader.read32()\n                const compressedSize = reader.read32()\n                reader.skip(0x14)\n                const dataOffset = reader.read32()\n                if (!dataOffset) {\n                    if (this.verbose) console.error('No data offset given')\n                    continue\n                }\n                reader.seek(cabDescriptorOffset + fileTableOffset + fileOffsetsTable[directoryIndex])\n                const dirname = reader.readStringNull()\n                if (this.verbose) console.log('dirname', dirname)\n                reader.seek(cabDescriptorOffset + fileTableOffset + nameOffset)\n                const filename = reader.readStringNull()\n                if (this.verbose) console.log('filename', filename)\n                const filePathName = [fileGroup.name, dirname, filename]\n                    .filter((s) => !!s)\n                    .map((s) => s.replaceAll('\\\\', '/'))\n                    .join('/')\n                    .toLowerCase()\n                if (this.verbose) console.log(filePathName)\n                this.lowerFilePathNameToFile.set(filePathName.toLowerCase(), {\n                    filePathName,\n                    dataOffset,\n                    compressedSize,\n                    expandedSize,\n                    compressed,\n                    fileDescriptorOffset: fileDescriptorOffset.toString(16)\n                })\n            }\n        }\n\n        if (this.verbose) console.log(this.lowerFilePathNameToFile)\n\n        return this\n    }\n\n    static versionToMajorVersion(version: number): number {\n        if ((version >> 24) === 1) {\n            return (version >> 12) & 0xf\n        } else if ((version >> 24) === 2 || (version >> 24) === 4) {\n            let result = (version & 0xffff)\n            if (result !== 0) {\n                result = result / 100\n            }\n            return result\n        }\n        console.warn(`Could not determine major version using fallback version ${CabFile.FALLBACK_MAJOR_VERSION}`)\n        return CabFile.FALLBACK_MAJOR_VERSION\n    }\n\n    async loadAllFiles(progress: SelectFilesProgress | undefined): Promise<VirtualFile[]> {\n        const result: VirtualFile[] = []\n        await Promise.all(\n            Array.from(this.lowerFilePathNameToFile.keys()).map(async (fileName, c) => {\n                const buffer = await this.getFileBuffer(fileName)\n                const firstSlashIndex = fileName.indexOf('/') + 1\n                // Move files from \"program data files/\", \"0007-german files/\" or \"registration files/\" to root directory\n                const mappedFileName = firstSlashIndex > 1 ? fileName.substring(firstSlashIndex) : fileName\n                result.push(VirtualFile.fromBuffer(mappedFileName, buffer))\n                progress?.setProgress('Unpacking files from CAB...', c, this.lowerFilePathNameToFile.size)\n            })\n        )\n        return result\n    }\n\n    async getFileBuffer(fileName: string): Promise<ArrayBuffer> {\n        if (!fileName) throw new Error('No filename given')\n        const lName = fileName.toLowerCase()\n        const file = this.lowerFilePathNameToFile.get(lName)\n        if (!file) throw new Error(`File \"${fileName}\" not found`)\n        if (this.verbose) console.log(file)\n        const cached = await cacheGetData(file.filePathName)\n        if (cached) return cached\n        const fileData = new Uint8Array(file.expandedSize)\n        let offset = 0\n        this.volumeReader.seek(file.dataOffset)\n        let bytesLeft = file.compressedSize // TODO Which size to use for uncompressed files?\n        if (this.verbose) console.log('bytesLeft', bytesLeft)\n        while (bytesLeft > 0) {\n            const chunkSize = this.volumeReader.read16()\n            if (this.verbose) console.log('chunkSize', chunkSize)\n            bytesLeft -= 2\n            const chunkBuffer = this.volumeReader.readBytes(chunkSize)\n            if (this.verbose) console.log('chunkBuffer', chunkBuffer)\n            if (file.compressed) {\n                const inflated = Pako.inflate(chunkBuffer, {raw: true})\n                if (this.verbose) console.log(`Inflated chunk from ${chunkBuffer.byteLength} to ${inflated.byteLength}`)\n                fileData.set(inflated, offset)\n                offset += inflated.byteLength\n            } else {\n                console.error('How to handle uncompressed files?', file) // TODO How to handle uncompressed files?\n                fileData.set(chunkBuffer, offset)\n                offset += chunkBuffer.byteLength\n            }\n            bytesLeft -= chunkSize\n            if (this.verbose) console.log('bytesLeft', bytesLeft)\n        }\n        return fileData.buffer\n    }\n}\n","import { VirtualFile } from './VirtualFile'\nimport { ByteStreamReader } from '../../core/ByteStreamReader'\nimport { CabFile } from './CabFile'\nimport { VERBOSE } from '../../params'\nimport { SelectFilesProgress } from '../selectfiles/SelectFilesProgress'\n\nexport class IsoFileParser {\n    readonly files: VirtualFile[] = []\n    readonly reader: ByteStreamReader\n    logicalBlockSize: number = 2048\n\n    constructor(readonly buffer: ArrayBuffer) {\n        this.reader = new ByteStreamReader(new DataView(buffer))\n    }\n\n    async loadAllFiles(progress: SelectFilesProgress | undefined): Promise<VirtualFile[]> {\n        console.time('Parsing ISO file directory entries')\n        for (let offset = 32 * 1024; offset < this.buffer.byteLength; offset += 2048) { // skip first 32 kB for system area\n            this.reader.seek(offset)\n            const volumeDescriptorTypeCode = this.reader.read8()\n            if (volumeDescriptorTypeCode === VOLUME_DESCRIPTOR_TYPE_CODE.PRIMARY_VOLUME_DESCRIPTOR) {\n                this.reader.seek(offset + 128)\n                this.logicalBlockSize = this.reader.read16()\n                if (this.logicalBlockSize !== 2048) console.warn(`Unexpected logical block size (${this.logicalBlockSize})`)\n                this.reader.seek(offset + 132)\n                this.readDirectoryEntry(offset + 156, '') // start reading root directory entry\n            } else if (volumeDescriptorTypeCode === VOLUME_DESCRIPTOR_TYPE_CODE.SUPPLEMENTARY_VOLUME_DESCRIPTOR) {\n                if (VERBOSE) console.warn('Parsing supplementary volume descriptor not yet implemented')\n            } else if (volumeDescriptorTypeCode === VOLUME_DESCRIPTOR_TYPE_CODE.VOLUME_DESCRIPTOR_SET_TERMINATOR) {\n                break\n            } else {\n                console.warn(`Unexpected ISO volume descriptor type code ${volumeDescriptorTypeCode}`)\n            }\n        }\n        console.timeEnd('Parsing ISO file directory entries')\n        console.time('Extracting CAB files from ISO file listing')\n        const fileNames = this.files.map((f) => f.fileName)\n        const cabHeaderFile = this.files.find((f) => f.fileName === 'data1.hdr')\n        if (!cabHeaderFile) throw new Error(`Invalid ISO file without data1.hdr file given in ${fileNames.join(', ')}`)\n        const cabVolumeFile = this.files.find((f) => f.fileName === 'data1.cab')\n        if (!cabVolumeFile) throw new Error(`Invalid ISO file without data1.cab file given in ${fileNames.join(', ')}`)\n        console.timeEnd('Extracting CAB files from ISO file listing')\n        console.time('Parsing CAB header and volume files')\n        const cabFile = new CabFile(cabHeaderFile.toBuffer(), cabVolumeFile.toBuffer()).parse()\n        console.timeEnd('Parsing CAB header and volume files')\n        console.time('Loading all files from CAB file listing')\n        const cabFiles = await cabFile.loadAllFiles(progress)\n        console.timeEnd('Loading all files from CAB file listing')\n        return [...this.files, ...cabFiles]\n    }\n\n    private readDirectoryEntry(offset: number, parentName: string) {\n        this.reader.seek(offset)\n        const lenDirRecord = this.reader.read8()\n        if (lenDirRecord < 1) return\n        this.reader.read8() // Extended Attribute Record Length\n        const locExt = this.reader.read32()\n        this.reader.seek(offset + 10)\n        const dataLen = this.reader.read32()\n        this.reader.seek(offset + 25)\n        const flags = this.reader.read8()\n        const isDirectory = !!(flags & 0x2)\n        this.reader.seek(offset + 32)\n        const lenFileIdentifier = this.reader.read8()\n        const fileIdentifierRaw = this.reader.readString(lenFileIdentifier).toLowerCase()\n        const firstCharCode = fileIdentifierRaw.charCodeAt(0)\n        const indexDelimiter = fileIdentifierRaw.indexOf(';')\n        const fileIdentifier = firstCharCode === 0 ? '.' : (firstCharCode === 1 ? '..' : (indexDelimiter >= 0 ? fileIdentifierRaw.slice(0, indexDelimiter) : fileIdentifierRaw))\n        const filePathIdentifier = [parentName, fileIdentifier].filter((n) => !!n).join('/')\n        const startOffset = locExt * this.logicalBlockSize\n        const filename = filePathIdentifier.startsWith('./') ? filePathIdentifier.slice(2) : filePathIdentifier\n        if (!isDirectory) {\n            this.files.push(VirtualFile.fromBuffer(filename, this.buffer.slice(startOffset, startOffset + dataLen)))\n        }\n        if (lenFileIdentifier % 2 === 0) this.reader.skip(1) // padding\n        if (isDirectory && (parentName === '' || fileIdentifier !== '.') && fileIdentifier !== '..') {\n            this.readDirectoryEntry(startOffset, filePathIdentifier)\n        }\n        if (parentName) this.readDirectoryEntry(offset + lenDirRecord, parentName)\n    }\n}\n\nconst VOLUME_DESCRIPTOR_TYPE_CODE = {\n    PRIMARY_VOLUME_DESCRIPTOR: 1,\n    SUPPLEMENTARY_VOLUME_DESCRIPTOR: 2,\n    VOLUME_DESCRIPTOR_SET_TERMINATOR: 255,\n} as const\n","import { ByteStreamReader } from '../../core/ByteStreamReader'\nimport { VERBOSE } from '../../params'\n\nexport interface CueFile {\n    isoFile: ArrayBuffer\n    audioTracks: ArrayBuffer[]\n}\n\nexport class CueFileParser {\n    readonly hdrParser: CueHdrFileParser\n\n    constructor(cueFileBuffer: ArrayBuffer, readonly binFileBuffer: ArrayBuffer) {\n        this.hdrParser = new CueHdrFileParser(cueFileBuffer)\n    }\n\n    async parse(): Promise<CueFile> {\n        let isoFile: ArrayBuffer | undefined\n        const audioTracks: ArrayBuffer[] = []\n        const cueEntries = this.hdrParser.parseEntries()\n        if (VERBOSE) console.log('Entries found in CUE file', cueEntries)\n        const binFileBuffer = this.binFileBuffer\n        for (let c = 0; c < cueEntries.length; c++) {\n            const cueEntry = cueEntries[c]\n            switch (cueEntry.track.type) {\n                case 'MODE1': {\n                    const chunkSize = cueEntry.track.bitrate\n                    if (!chunkSize) throw new Error('No chunk size given for track')\n                    if (chunkSize !== 2352) console.warn(`Expected bitrate 2352 but got (${chunkSize}) instead`)\n                    const startSector = cueEntry.index.sector\n                    const startOffset = (16 + startSector) * chunkSize + 16\n                    const endSector = cueEntries[1].index.sector // TODO What if last entry?\n                    const endOffset = (16 + endSector - 1) * chunkSize + 16 - 64 * 1024\n                    const entryLength = (endSector - startSector) * 2048\n                    const entryData = new Uint8Array(entryLength)\n                    console.log(`Reading ISO with chunk size ${cueEntry.track.bitrate} from start offset ${startOffset} sector ${startSector} to end offset ${endOffset} sector ${endSector} and final iso length ${entryLength}`)\n                    let writeOffset = 32 * 1024\n                    for (let c = startOffset; c < endOffset; c += chunkSize) {\n                        const isoBuffer = binFileBuffer.slice(c, c + 2048)\n                        entryData.set(new Uint8Array(isoBuffer), writeOffset)\n                        writeOffset += 2048\n                    }\n                    isoFile = entryData.buffer\n                    break\n                }\n                case 'AUDIO': {\n                    const startOffset = cueEntries[c].index.sector * 2352\n                    const endOffset = !!cueEntries[c + 1] ? cueEntries[c + 1].index.sector * 2352 : binFileBuffer.byteLength\n                    const audioBuffer = this.readAudioEntry(binFileBuffer, startOffset, endOffset)\n                    audioTracks.push(audioBuffer)\n                    break\n                }\n                default:\n                    throw new Error(`Unexpected cue entry track type \"${cueEntry.track.type}\"`)\n            }\n        }\n        if (!isoFile) throw new Error('Invalid CUE/BIN files given; no iso image contained')\n        return {isoFile: isoFile, audioTracks: audioTracks}\n    }\n\n    private readAudioEntry(binFileBuffer: ArrayBuffer, startOffset: number, endOffset: number): ArrayBuffer {\n        const headerLen = 44\n        const entryDataLength = endOffset - startOffset\n        const trackArr = new Uint8Array(headerLen + entryDataLength)\n        const trackView = new DataView(trackArr.buffer)\n        // Write WAV header at start of buffer\n        const encoder = new TextEncoder()\n        trackArr.set(encoder.encode('RIFF')) // RIFF header\n        trackView.setUint32(4, entryDataLength + 8 + 24 + 4, true) // length of file, starting from WAVE\n        trackArr.set(encoder.encode('WAVE'), 8)\n        trackArr.set(encoder.encode('fmt '), 12) // FORMAT header\n        trackView.setUint32(16, 16, true) // length of FORMAT header\n        trackView.setUint16(20, 1, true) // constant\n        trackView.setUint16(22, 2, true) // channels\n        trackView.setUint32(24, 44100, true) // sample rate\n        trackView.setUint32(28, 44100 * 4, true) // bytes per second\n        trackView.setUint16(32, 4, true) // bytes per sample\n        trackView.setUint16(34, 16, true) // bits per channel\n        trackArr.set(encoder.encode('data'), 36) // DATA header\n        trackView.setUint32(40, entryDataLength, true)\n        for (let offset = startOffset; offset < endOffset; offset += 2352) {\n            const read = binFileBuffer.slice(offset, offset + 2352)\n            trackArr.set(new Uint8Array(read), headerLen + offset - startOffset)\n        }\n        return trackArr.buffer\n    }\n}\n\nexport class CueHdrFileParser {\n    readonly reader: ByteStreamReader\n\n    constructor(readonly buffer: ArrayBuffer) {\n        if (buffer.byteLength > 2000) throw new Error(`Unexpected CUE file length! Got ${buffer.byteLength} expected max 2000 bytes`)\n        this.reader = new ByteStreamReader(new DataView(buffer))\n    }\n\n    parseEntries(): CueEntry[] {\n        const content = this.reader.readString(this.buffer.byteLength)\n        const lines = content.split(/\\r?\\n/).map((l) => l.trim()).filter((l) => !!l)\n        const binFileLine = lines.find((l) => l.toUpperCase().startsWith('FILE '))\n        if (!binFileLine) throw new Error('Invalid CUE file! No line starts with \"FILE \" keyword')\n        const binFileParts = binFileLine.split(/\\s+/)\n        if (binFileParts.length !== 3) throw new Error(`Unexpected FILE line given! Expected \"FILE \"ROCKRAIDERS.bin\" BINARY\" but got \"${binFileLine}\" instead`)\n        if (binFileParts[2].toUpperCase() !== 'BINARY') throw new Error(`Unexpected BIN file mode given! Expected BINARY got ${binFileParts[2]} instead`)\n        const result: CueEntry[] = []\n        for (let index = 0; index < lines.length; index++) {\n            const line = lines[index]\n            if (!line.toUpperCase().startsWith('TRACK ')) continue\n            let indexLine = ''\n            for (let c = index; c < lines.length; c++) {\n                const line2 = lines[c]\n                if (line2.startsWith('INDEX')) {\n                    indexLine = line2\n                    break\n                }\n            }\n            if (!indexLine) throw new Error(`Missing INDEX line for given TRACK ${index}`)\n            result.push({\n                track: this.parseTrackLine(line),\n                index: this.parseIndexLine(indexLine)\n            })\n        }\n        result.sort((l, r) => l.track.number - r.track.number)\n        return result\n    }\n\n    private parseTrackLine(line: string): CueTrack {\n        if (!line.startsWith('TRACK ')) throw new Error(`Invalid TRACK line \"${line}\" given!`)\n        const parts = line.split(/\\s+/)\n        if (parts.length !== 3) throw new Error(`Unexpected TRACK line \"${line}\" given!`)\n        const typeSplit = parts[2].split('/')\n        const typeUpper = typeSplit[0].toUpperCase()\n        if (typeUpper !== 'MODE1' && typeUpper !== 'AUDIO') throw new Error(`Unexpected type \"${typeSplit[0]}\" given`)\n        return {\n            number: Number(parts[1]),\n            type: typeUpper,\n            bitrate: !!typeSplit[1] ? Number(typeSplit[1]) : undefined\n        }\n    }\n\n    private parseIndexLine(line: string): CuePosition {\n        if (!line.startsWith('INDEX ')) throw new Error(`Invalid INDEX line \"${line}\" given!`)\n        const parts = line.split(/\\s+/)\n        if (parts.length !== 3) throw new Error(`Unexpected INDEX line \"${line}\" given!`)\n        const posSplit = parts[2].split(':')\n        return {\n            // TODO Is it safe to ignore INDEX 00 aka pregap?\n            minute: Number(posSplit[0]),\n            second: Number(posSplit[1]),\n            frame: Number(posSplit[2]),\n            sector: Number(posSplit[0]) * 60 * 75 + Number(posSplit[1]) * 75 + Number(posSplit[2]), // 75 frames per second of audio\n        }\n    }\n}\n\nexport interface CueEntry {\n    track: CueTrack\n    index: CuePosition\n}\n\nexport interface CueTrack {\n    number: number\n    type: 'MODE1' | 'AUDIO'\n    bitrate?: number\n}\n\nexport interface CuePosition {\n    minute: number\n    second: number\n    frame: number\n    sector: number\n}\n","export class SelectFilesProgress {\n    readonly root: HTMLElement = document.createElement('div')\n    readonly progressByUrl: Map<string, HTMLProgressElement> = new Map<string, HTMLProgressElement>()\n\n    setProgress(name: string, done: number, total: number): void {\n        const progress = this.progressByUrl.getOrUpdate(name, () => {\n            const parent = this.root.appendChild(document.createElement('div'))\n            parent.classList.add('select-files-progress')\n            const label = parent.appendChild(document.createElement('label'))\n            label.innerText = name\n            return parent.appendChild(document.createElement('progress'))\n        })\n        progress.value = done\n        progress.max = total\n    }\n\n    reset() {\n        this.root.replaceChildren()\n    }\n}\n","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst MAX_32_BITS = 0xffffffff;\nconst MAX_16_BITS = 0xffff;\nconst MAX_8_BITS = 0xff;\nconst COMPRESSION_METHOD_DEFLATE = 0x08;\nconst COMPRESSION_METHOD_DEFLATE_64 = 0x09;\nconst COMPRESSION_METHOD_STORE = 0x00;\nconst COMPRESSION_METHOD_AES = 0x63;\n\nconst LOCAL_FILE_HEADER_SIGNATURE = 0x04034b50;\nconst SPLIT_ZIP_FILE_SIGNATURE = 0x08074b50;\nconst DATA_DESCRIPTOR_RECORD_SIGNATURE = SPLIT_ZIP_FILE_SIGNATURE;\nconst CENTRAL_FILE_HEADER_SIGNATURE = 0x02014b50;\nconst END_OF_CENTRAL_DIR_SIGNATURE = 0x06054b50;\nconst ZIP64_END_OF_CENTRAL_DIR_SIGNATURE = 0x06064b50;\nconst ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE = 0x07064b50;\nconst END_OF_CENTRAL_DIR_LENGTH = 22;\nconst ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH = 20;\nconst ZIP64_END_OF_CENTRAL_DIR_LENGTH = 56;\nconst ZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH = END_OF_CENTRAL_DIR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LENGTH;\n\nconst DATA_DESCRIPTOR_RECORD_LENGTH = 12;\nconst DATA_DESCRIPTOR_RECORD_ZIP_64_LENGTH = 20;\nconst DATA_DESCRIPTOR_RECORD_SIGNATURE_LENGTH = 4;\n\nconst EXTRAFIELD_TYPE_ZIP64 = 0x0001;\nconst EXTRAFIELD_TYPE_AES = 0x9901;\nconst EXTRAFIELD_TYPE_NTFS = 0x000a;\nconst EXTRAFIELD_TYPE_NTFS_TAG1 = 0x0001;\nconst EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP = 0x5455;\nconst EXTRAFIELD_TYPE_UNICODE_PATH = 0x7075;\nconst EXTRAFIELD_TYPE_UNICODE_COMMENT = 0x6375;\nconst EXTRAFIELD_TYPE_USDZ = 0x1986;\nconst EXTRAFIELD_TYPE_INFOZIP = 0x7875;\nconst EXTRAFIELD_TYPE_UNIX = 0x7855;\n\nconst BITFLAG_ENCRYPTED = 0b1;\nconst BITFLAG_LEVEL = 0b0110;\nconst BITFLAG_LEVEL_MAX_MASK = 0b010;\nconst BITFLAG_LEVEL_FAST_MASK = 0b100;\nconst BITFLAG_LEVEL_SUPER_FAST_MASK = 0b110;\nconst BITFLAG_DATA_DESCRIPTOR = 0b1000;\nconst BITFLAG_LANG_ENCODING_FLAG = 0b100000000000;\nconst FILE_ATTR_MSDOS_DIR_MASK = 0b10000;\nconst FILE_ATTR_MSDOS_READONLY_MASK = 0x01;\nconst FILE_ATTR_MSDOS_HIDDEN_MASK = 0x02;\nconst FILE_ATTR_MSDOS_SYSTEM_MASK = 0x04;\nconst FILE_ATTR_MSDOS_ARCHIVE_MASK = 0x20;\nconst FILE_ATTR_UNIX_TYPE_MASK = 0o170000;\nconst FILE_ATTR_UNIX_TYPE_DIR = 0o040000;\nconst FILE_ATTR_UNIX_EXECUTABLE_MASK = 0o111;\nconst FILE_ATTR_UNIX_DEFAULT_MASK = 0o644;\nconst FILE_ATTR_UNIX_SETUID_MASK = 0o4000;\nconst FILE_ATTR_UNIX_SETGID_MASK = 0o2000;\nconst FILE_ATTR_UNIX_STICKY_MASK = 0o1000;\n\nconst VERSION_DEFLATE = 0x14;\nconst VERSION_ZIP64 = 0x2D;\nconst VERSION_AES = 0x33;\n\nconst DIRECTORY_SIGNATURE = \"/\";\n\nconst HEADER_SIZE = 30;\nconst HEADER_OFFSET_SIGNATURE = 10;\nconst HEADER_OFFSET_COMPRESSED_SIZE = 14;\nconst HEADER_OFFSET_UNCOMPRESSED_SIZE = 18;\n\nconst MAX_DATE = new Date(2107, 11, 31);\nconst MIN_DATE = new Date(1980, 0, 1);\n\nconst UNDEFINED_VALUE = undefined;\nconst UNDEFINED_TYPE = \"undefined\";\nconst FUNCTION_TYPE = \"function\";\nconst OBJECT_TYPE = \"object\";\n\nexport {\n\tMAX_32_BITS,\n\tMAX_16_BITS,\n\tMAX_8_BITS,\n\tCOMPRESSION_METHOD_DEFLATE,\n\tCOMPRESSION_METHOD_DEFLATE_64,\n\tCOMPRESSION_METHOD_STORE,\n\tCOMPRESSION_METHOD_AES,\n\tSPLIT_ZIP_FILE_SIGNATURE,\n\tLOCAL_FILE_HEADER_SIGNATURE,\n\tDATA_DESCRIPTOR_RECORD_SIGNATURE,\n\tCENTRAL_FILE_HEADER_SIGNATURE,\n\tEND_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_SIGNATURE,\n\tDATA_DESCRIPTOR_RECORD_LENGTH,\n\tDATA_DESCRIPTOR_RECORD_ZIP_64_LENGTH,\n\tDATA_DESCRIPTOR_RECORD_SIGNATURE_LENGTH,\n\tEXTRAFIELD_TYPE_ZIP64,\n\tEXTRAFIELD_TYPE_AES,\n\tEXTRAFIELD_TYPE_NTFS,\n\tEXTRAFIELD_TYPE_NTFS_TAG1,\n\tEXTRAFIELD_TYPE_EXTENDED_TIMESTAMP,\n\tEXTRAFIELD_TYPE_UNICODE_PATH,\n\tEXTRAFIELD_TYPE_UNICODE_COMMENT,\n\tEXTRAFIELD_TYPE_USDZ,\n\tEXTRAFIELD_TYPE_INFOZIP,\n\tEXTRAFIELD_TYPE_UNIX,\n\tEND_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH,\n\tBITFLAG_ENCRYPTED,\n\tBITFLAG_LEVEL,\n\tBITFLAG_LEVEL_MAX_MASK,\n\tBITFLAG_LEVEL_FAST_MASK,\n\tBITFLAG_LEVEL_SUPER_FAST_MASK,\n\tBITFLAG_DATA_DESCRIPTOR,\n\tBITFLAG_LANG_ENCODING_FLAG,\n\tFILE_ATTR_MSDOS_DIR_MASK,\n\tFILE_ATTR_MSDOS_READONLY_MASK,\n\tFILE_ATTR_MSDOS_HIDDEN_MASK,\n\tFILE_ATTR_MSDOS_SYSTEM_MASK,\n\tFILE_ATTR_MSDOS_ARCHIVE_MASK,\n\tFILE_ATTR_UNIX_TYPE_MASK,\n\tFILE_ATTR_UNIX_TYPE_DIR,\n\tFILE_ATTR_UNIX_EXECUTABLE_MASK,\n\tFILE_ATTR_UNIX_DEFAULT_MASK,\n\tFILE_ATTR_UNIX_SETUID_MASK,\n\tFILE_ATTR_UNIX_SETGID_MASK,\n\tFILE_ATTR_UNIX_STICKY_MASK,\n\tVERSION_DEFLATE,\n\tVERSION_ZIP64,\n\tVERSION_AES,\n\tHEADER_SIZE,\n\tHEADER_OFFSET_SIGNATURE,\n\tHEADER_OFFSET_COMPRESSED_SIZE,\n\tHEADER_OFFSET_UNCOMPRESSED_SIZE,\n\tDIRECTORY_SIGNATURE,\n\tMIN_DATE,\n\tMAX_DATE,\n\tUNDEFINED_VALUE,\n\tUNDEFINED_TYPE,\n\tFUNCTION_TYPE,\n\tOBJECT_TYPE\n};","/*\n Copyright (c) 2025 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global navigator, CompressionStream, DecompressionStream */\n\nimport {\n\tUNDEFINED_VALUE,\n\tUNDEFINED_TYPE\n} from \"./constants.js\";\n\nconst MINIMUM_CHUNK_SIZE = 64;\nlet maxWorkers = 2;\ntry {\n\tif (typeof navigator != UNDEFINED_TYPE && navigator.hardwareConcurrency) {\n\t\tmaxWorkers = navigator.hardwareConcurrency;\n\t}\n} catch {\n\t// ignored\n}\nconst DEFAULT_CONFIGURATION = {\n\tworkerURI: \"./core/web-worker-wasm.js\",\n\twasmURI: \"./core/streams/zlib-wasm/zlib-streams.wasm\",\n\tchunkSize: 64 * 1024,\n\tmaxWorkers,\n\tterminateWorkerTimeout: 5000,\n\tuseWebWorkers: true,\n\tuseCompressionStream: true,\n\tCompressionStream: typeof CompressionStream != UNDEFINED_TYPE && CompressionStream,\n\tDecompressionStream: typeof DecompressionStream != UNDEFINED_TYPE && DecompressionStream\n};\n\nconst config = Object.assign({}, DEFAULT_CONFIGURATION);\n\nexport {\n\tconfigure,\n\tgetConfiguration,\n\tgetChunkSize\n};\n\nfunction getConfiguration() {\n\treturn config;\n}\n\nfunction getChunkSize(config) {\n\treturn Math.max(config.chunkSize, MINIMUM_CHUNK_SIZE);\n}\n\nfunction configure(configuration) {\n\tconst {\n\t\tbaseURI,\n\t\tchunkSize,\n\t\tmaxWorkers,\n\t\tterminateWorkerTimeout,\n\t\tuseCompressionStream,\n\t\tuseWebWorkers,\n\t\tCompressionStream,\n\t\tDecompressionStream,\n\t\tCompressionStreamZlib,\n\t\tDecompressionStreamZlib,\n\t\tworkerURI,\n\t\twasmURI\n\t} = configuration;\n\tsetIfDefined(\"baseURI\", baseURI);\n\tsetIfDefined(\"wasmURI\", wasmURI);\n\tsetIfDefined(\"workerURI\", workerURI);\n\tsetIfDefined(\"chunkSize\", chunkSize);\n\tsetIfDefined(\"maxWorkers\", maxWorkers);\n\tsetIfDefined(\"terminateWorkerTimeout\", terminateWorkerTimeout);\n\tsetIfDefined(\"useCompressionStream\", useCompressionStream);\n\tsetIfDefined(\"useWebWorkers\", useWebWorkers);\n\tsetIfDefined(\"CompressionStream\", CompressionStream);\n\tsetIfDefined(\"DecompressionStream\", DecompressionStream);\n\tsetIfDefined(\"CompressionStreamZlib\", CompressionStreamZlib);\n\tsetIfDefined(\"DecompressionStreamZlib\", DecompressionStreamZlib);\n}\n\nfunction setIfDefined(propertyName, propertyValue) {\n\tif (propertyValue !== UNDEFINED_VALUE) {\n\t\tconfig[propertyName] = propertyValue;\n\t}\n}\n","function t(t){let e;t({workerURI:()=>(e||(e=\"data:text/javascript,\"+encodeURIComponent('(t=>{\"function\"==typeof define&&define.amd?define(t):t()})(function(){\"use strict\";const{Array:t,Object:e,Number:n,Math:s,Error:r,Uint8Array:o,Uint16Array:i,Uint32Array:c,Int32Array:a,Map:h,DataView:f,Promise:l,TextEncoder:u,crypto:w,postMessage:p,TransformStream:d,ReadableStream:y,WritableStream:m,CompressionStream:g,DecompressionStream:S}=self,b=void 0,v=\"undefined\",k=\"function\",z=[];for(let t=0;256>t;t++){let e=t;for(let t=0;8>t;t++)1&e?e=e>>>1^3988292384:e>>>=1;z[t]=e}class C{constructor(t){this.t=t||-1}append(t){let e=0|this.t;for(let n=0,s=0|t.length;s>n;n++)e=e>>>8^z[255&(e^t[n])];this.t=e}get(){return~this.t}}class A extends d{constructor(){let t;const e=new C;super({transform(t,n){e.append(t),n.enqueue(t)},flush(){const n=new o(4);new f(n.buffer).setUint32(0,e.get()),t.value=n}}),t=this}}const x={concat(t,e){if(0===t.length||0===e.length)return t.concat(e);const n=t[t.length-1],s=x.o(n);return 32===s?t.concat(e):x.i(e,s,0|n,t.slice(0,t.length-1))},h(t){const e=t.length;if(0===e)return 0;const n=t[e-1];return 32*(e-1)+x.o(n)},l(t,e){if(32*t.length<e)return t;const n=(t=t.slice(0,s.ceil(e/32))).length;return e&=31,n>0&&e&&(t[n-1]=x.u(e,t[n-1]&2147483648>>e-1,1)),t},u:(t,e,n)=>32===t?e:(n?0|e:e<<32-t)+1099511627776*t,o:t=>s.round(t/1099511627776)||32,i(t,e,n,s){for(void 0===s&&(s=[]);e>=32;e-=32)s.push(n),n=0;if(0===e)return s.concat(t);for(let r=0;r<t.length;r++)s.push(n|t[r]>>>e),n=t[r]<<32-e;const r=t.length?t[t.length-1]:0,o=x.o(r);return s.push(x.u(e+o&31,e+o>32?n:s.pop(),1)),s}},I={bytes:{p(t){const e=x.h(t)/8,n=new o(e);let s;for(let r=0;e>r;r++)3&r||(s=t[r/4]),n[r]=s>>>24,s<<=8;return n},m(t){const e=[];let n,s=0;for(n=0;n<t.length;n++)s=s<<8|t[n],3&~n||(e.push(s),s=0);return 3&n&&e.push(x.u(8*(3&n),s)),e}}},R=class{constructor(t){const e=this;e.blockSize=512,e.S=[1732584193,4023233417,2562383102,271733878,3285377520],e.v=[1518500249,1859775393,2400959708,3395469782],t?(e.k=t.k.slice(0),e.C=t.C.slice(0),e.A=t.A):e.reset()}reset(){const t=this;return t.k=t.S.slice(0),t.C=[],t.A=0,t}update(t){const e=this;\"string\"==typeof t&&(t=I.I.m(t));const n=e.C=x.concat(e.C,t),s=e.A,o=e.A=s+x.h(t);if(o>9007199254740991)throw new r(\"Cannot hash more than 2^53 - 1 bits\");const i=new c(n);let a=0;for(let t=e.blockSize+s-(e.blockSize+s&e.blockSize-1);o>=t;t+=e.blockSize)e.R(i.subarray(16*a,16*(a+1))),a+=1;return n.splice(0,16*a),e}P(){const t=this;let e=t.C;const n=t.k;e=x.concat(e,[x.u(1,1)]);for(let t=e.length+2;15&t;t++)e.push(0);for(e.push(s.floor(t.A/4294967296)),e.push(0|t.A);e.length;)t.R(e.splice(0,16));return t.reset(),n}U(t,e,n,s){return t>19?t>39?t>59?t>79?void 0:e^n^s:e&n|e&s|n&s:e^n^s:e&n|~e&s}V(t,e){return e<<t|e>>>32-t}R(e){const n=this,r=n.k,o=t(80);for(let t=0;16>t;t++)o[t]=e[t];let i=r[0],c=r[1],a=r[2],h=r[3],f=r[4];for(let t=0;79>=t;t++){16>t||(o[t]=n.V(1,o[t-3]^o[t-8]^o[t-14]^o[t-16]));const e=n.V(5,i)+n.U(t,c,a,h)+f+o[t]+n.v[s.floor(t/20)]|0;f=h,h=a,a=n.V(30,c),c=i,i=e}r[0]=r[0]+i|0,r[1]=r[1]+c|0,r[2]=r[2]+a|0,r[3]=r[3]+h|0,r[4]=r[4]+f|0}},P={getRandomValues(t){const e=new c(t.buffer),n=t=>{let e=987654321;const n=4294967295;return()=>(e=36969*(65535&e)+(e>>16)&n,(((e<<16)+(t=18e3*(65535&t)+(t>>16)&n)&n)/4294967296+.5)*(s.random()>.5?1:-1))};for(let r,o=0;o<t.length;o+=4){const t=n(4294967296*(r||s.random()));r=987654071*t(),e[o/4]=4294967296*t()|0}return t}},U={importKey:t=>new U.M(I.bytes.m(t)),_(t,e,n,s){if(n=n||1e4,0>s||0>n)throw new r(\"invalid params to pbkdf2\");const o=1+(s>>5)<<2;let i,c,a,h,l;const u=new ArrayBuffer(o),w=new f(u);let p=0;const d=x;for(e=I.bytes.m(e),l=1;(o||1)>p;l++){for(i=c=t.encrypt(d.concat(e,[l])),a=1;n>a;a++)for(c=t.encrypt(c),h=0;h<c.length;h++)i[h]^=c[h];for(a=0;(o||1)>p&&a<i.length;a++)w.setInt32(p,i[a]),p+=4}return u.slice(0,s/8)},M:class{constructor(t){const e=this,n=e.B=R,s=[[],[]];e.D=[new n,new n];const r=e.D[0].blockSize/32;t.length>r&&(t=(new n).update(t).P());for(let e=0;r>e;e++)s[0][e]=909522486^t[e],s[1][e]=1549556828^t[e];e.D[0].update(s[0]),e.D[1].update(s[1]),e.W=new n(e.D[0])}reset(){const t=this;t.W=new t.B(t.D[0]),t.K=!1}update(t){this.K=!0,this.W.update(t)}digest(){const t=this,e=t.W.P(),n=new t.B(t.D[1]).update(e).P();return t.reset(),n}encrypt(t){if(this.K)throw new r(\"encrypt on already updated hmac called!\");return this.update(t),this.digest(t)}}},V=typeof w!=v&&typeof w.getRandomValues==k,M=\"Invalid password\",_=\"Invalid signature\",B=\"zipjs-abort-check-password\";function D(t){return V?w.getRandomValues(t):P.getRandomValues(t)}const W=16,K={name:\"PBKDF2\"},E=e.assign({hash:{name:\"HMAC\"}},K),L=e.assign({iterations:1e3,hash:{name:\"SHA-1\"}},K),O=[\"deriveBits\"],T=[8,12,16],j=[16,24,32],H=10,Z=[0,0,0,0],F=typeof w!=v,N=F&&w.subtle,q=F&&typeof N!=v,G=I.bytes,J=class{constructor(t){const e=this;e.L=[[[],[],[],[],[]],[[],[],[],[],[]]],e.L[0][0][0]||e.O();const n=e.L[0][4],s=e.L[1],o=t.length;let i,c,a,h=1;if(4!==o&&6!==o&&8!==o)throw new r(\"invalid aes key size\");for(e.v=[c=t.slice(0),a=[]],i=o;4*o+28>i;i++){let t=c[i-1];(i%o===0||8===o&&i%o===4)&&(t=n[t>>>24]<<24^n[t>>16&255]<<16^n[t>>8&255]<<8^n[255&t],i%o===0&&(t=t<<8^t>>>24^h<<24,h=h<<1^283*(h>>7))),c[i]=c[i-o]^t}for(let t=0;i;t++,i--){const e=c[3&t?i:i-4];a[t]=4>=i||4>t?e:s[0][n[e>>>24]]^s[1][n[e>>16&255]]^s[2][n[e>>8&255]]^s[3][n[255&e]]}}encrypt(t){return this.T(t,0)}decrypt(t){return this.T(t,1)}O(){const t=this.L[0],e=this.L[1],n=t[4],s=e[4],r=[],o=[];let i,c,a,h;for(let t=0;256>t;t++)o[(r[t]=t<<1^283*(t>>7))^t]=t;for(let f=i=0;!n[f];f^=c||1,i=o[i]||1){let o=i^i<<1^i<<2^i<<3^i<<4;o=o>>8^255&o^99,n[f]=o,s[o]=f,h=r[a=r[c=r[f]]];let l=16843009*h^65537*a^257*c^16843008*f,u=257*r[o]^16843008*o;for(let n=0;4>n;n++)t[n][f]=u=u<<24^u>>>8,e[n][o]=l=l<<24^l>>>8}for(let n=0;5>n;n++)t[n]=t[n].slice(0),e[n]=e[n].slice(0)}T(t,e){if(4!==t.length)throw new r(\"invalid aes block size\");const n=this.v[e],s=n.length/4-2,o=[0,0,0,0],i=this.L[e],c=i[0],a=i[1],h=i[2],f=i[3],l=i[4];let u,w,p,d=t[0]^n[0],y=t[e?3:1]^n[1],m=t[2]^n[2],g=t[e?1:3]^n[3],S=4;for(let t=0;s>t;t++)u=c[d>>>24]^a[y>>16&255]^h[m>>8&255]^f[255&g]^n[S],w=c[y>>>24]^a[m>>16&255]^h[g>>8&255]^f[255&d]^n[S+1],p=c[m>>>24]^a[g>>16&255]^h[d>>8&255]^f[255&y]^n[S+2],g=c[g>>>24]^a[d>>16&255]^h[y>>8&255]^f[255&m]^n[S+3],S+=4,d=u,y=w,m=p;for(let t=0;4>t;t++)o[e?3&-t:t]=l[d>>>24]<<24^l[y>>16&255]<<16^l[m>>8&255]<<8^l[255&g]^n[S++],u=d,d=y,y=m,m=g,g=u;return o}},Q=class{constructor(t,e){this.j=t,this.H=e,this.Z=e}reset(){this.Z=this.H}update(t){return this.F(this.j,t,this.Z)}N(t){if(255&~(t>>24))t+=1<<24;else{let e=t>>16&255,n=t>>8&255,s=255&t;255===e?(e=0,255===n?(n=0,255===s?s=0:++s):++n):++e,t=0,t+=e<<16,t+=n<<8,t+=s}return t}q(t){0===(t[0]=this.N(t[0]))&&(t[1]=this.N(t[1]))}F(t,e,n){let s;if(!(s=e.length))return[];const r=x.h(e);for(let r=0;s>r;r+=4){this.q(n);const s=t.encrypt(n);e[r]^=s[0],e[r+1]^=s[1],e[r+2]^=s[2],e[r+3]^=s[3]}return x.l(e,r)}},X=U.M;let Y=F&&q&&typeof N.importKey==k,$=F&&q&&typeof N.deriveBits==k;class tt extends d{constructor({password:t,rawPassword:n,signed:s,encryptionStrength:i,checkPasswordOnly:c}){super({start(){e.assign(this,{ready:new l(t=>this.G=t),password:rt(t,n),signed:s,J:i-1,pending:new o})},async transform(t,e){const n=this,{password:s,J:i,G:a,ready:h}=n;s?(await(async(t,e,n,s)=>{const o=await st(t,e,n,it(s,0,T[e])),i=it(s,T[e]);if(o[0]!=i[0]||o[1]!=i[1])throw new r(M)})(n,i,s,it(t,0,T[i]+2)),t=it(t,T[i]+2),c?e.error(new r(B)):a()):await h;const f=new o(t.length-H-(t.length-H)%W);e.enqueue(nt(n,t,f,0,H,!0))},async flush(t){const{signed:e,X:n,Y:s,pending:i,ready:c}=this;if(s&&n){await c;const a=it(i,0,i.length-H),h=it(i,i.length-H);let f=new o;if(a.length){const t=at(G,a);s.update(t);const e=n.update(t);f=ct(G,e)}if(e){const t=it(ct(G,s.digest()),0,H);for(let e=0;H>e;e++)if(t[e]!=h[e])throw new r(_)}t.enqueue(f)}}})}}class et extends d{constructor({password:t,rawPassword:n,encryptionStrength:s}){let r;super({start(){e.assign(this,{ready:new l(t=>this.G=t),password:rt(t,n),J:s-1,pending:new o})},async transform(t,e){const n=this,{password:s,J:r,G:i,ready:c}=n;let a=new o;s?(a=await(async(t,e,n)=>{const s=D(new o(T[e]));return ot(s,await st(t,e,n,s))})(n,r,s),i()):await c;const h=new o(a.length+t.length-t.length%W);h.set(a,0),e.enqueue(nt(n,t,h,a.length,0))},async flush(t){const{X:e,Y:n,pending:s,ready:i}=this;if(n&&e){await i;let c=new o;if(s.length){const t=e.update(at(G,s));n.update(t),c=ct(G,t)}r.signature=ct(G,n.digest()).slice(0,H),t.enqueue(ot(c,r.signature))}}}),r=this}}function nt(t,e,n,s,r,i){const{X:c,Y:a,pending:h}=t,f=e.length-r;let l;for(h.length&&(e=ot(h,e),n=((t,e)=>{if(e&&e>t.length){const n=t;(t=new o(e)).set(n,0)}return t})(n,f-f%W)),l=0;f-W>=l;l+=W){const t=at(G,it(e,l,l+W));i&&a.update(t);const r=c.update(t);i||a.update(r),n.set(ct(G,r),l+s)}return t.pending=it(e,l),n}async function st(n,s,r,i){n.password=null;const c=await(async(t,e,n,s,r)=>{if(!Y)return U.importKey(e);try{return await N.importKey(\"raw\",e,n,!1,r)}catch{return Y=!1,U.importKey(e)}})(0,r,E,0,O),a=await(async(t,e,n)=>{if(!$)return U._(e,t.salt,L.iterations,n);try{return await N.deriveBits(t,e,n)}catch{return $=!1,U._(e,t.salt,L.iterations,n)}})(e.assign({salt:i},L),c,8*(2*j[s]+2)),h=new o(a),f=at(G,it(h,0,j[s])),l=at(G,it(h,j[s],2*j[s])),u=it(h,2*j[s]);return e.assign(n,{keys:{key:f,$:l,passwordVerification:u},X:new Q(new J(f),t.from(Z)),Y:new X(l)}),u}function rt(t,e){return e===b?(t=>{if(typeof u==v){const e=new o((t=unescape(encodeURIComponent(t))).length);for(let n=0;n<e.length;n++)e[n]=t.charCodeAt(n);return e}return(new u).encode(t)})(t):e}function ot(t,e){let n=t;return t.length+e.length&&(n=new o(t.length+e.length),n.set(t,0),n.set(e,t.length)),n}function it(t,e,n){return t.subarray(e,n)}function ct(t,e){return t.p(e)}function at(t,e){return t.m(e)}class ht extends d{constructor({password:t,passwordVerification:n,checkPasswordOnly:s}){super({start(){e.assign(this,{password:t,passwordVerification:n}),wt(this,t)},transform(t,e){const n=this;if(n.password){const e=lt(n,t.subarray(0,12));if(n.password=null,e.at(-1)!=n.passwordVerification)throw new r(M);t=t.subarray(12)}s?e.error(new r(B)):e.enqueue(lt(n,t))}})}}class ft extends d{constructor({password:t,passwordVerification:n}){super({start(){e.assign(this,{password:t,passwordVerification:n}),wt(this,t)},transform(t,e){const n=this;let s,r;if(n.password){n.password=null;const e=D(new o(12));e[11]=n.passwordVerification,s=new o(t.length+e.length),s.set(ut(n,e),0),r=12}else s=new o(t.length),r=0;s.set(ut(n,t),r),e.enqueue(s)}})}}function lt(t,e){const n=new o(e.length);for(let s=0;s<e.length;s++)n[s]=dt(t)^e[s],pt(t,n[s]);return n}function ut(t,e){const n=new o(e.length);for(let s=0;s<e.length;s++)n[s]=dt(t)^e[s],pt(t,e[s]);return n}function wt(t,n){const s=[305419896,591751049,878082192];e.assign(t,{keys:s,tt:new C(s[0]),et:new C(s[2])});for(let e=0;e<n.length;e++)pt(t,n.charCodeAt(e))}function pt(t,e){let[n,r,o]=t.keys;t.tt.append([e]),n=~t.tt.get(),r=mt(s.imul(mt(r+yt(n)),134775813)+1),t.et.append([r>>>24]),o=~t.et.get(),t.keys=[n,r,o]}function dt(t){const e=2|t.keys[2];return yt(s.imul(e,1^e)>>>8)}function yt(t){return 255&t}function mt(t){return 4294967295&t}class gt extends d{constructor(t,{chunkSize:e,nt:n,CompressionStream:s}){super({});const{compressed:r,encrypted:o,useCompressionStream:i,zipCrypto:c,signed:a,level:h}=t,l=this;let u,w,p=super.readable;o&&!c||!a||(u=new A,p=kt(p,u)),r&&(p=vt(p,i,{level:h,chunkSize:e},s,n,s)),o&&(c?p=kt(p,new ft(t)):(w=new et(t),p=kt(p,w))),bt(l,p,()=>{let t;o&&!c&&(t=w.signature),o&&!c||!a||(t=new f(u.value.buffer).getUint32(0)),l.signature=t})}}class St extends d{constructor(t,{chunkSize:e,st:n,DecompressionStream:s}){super({});const{zipCrypto:o,encrypted:i,signed:c,signature:a,compressed:h,useCompressionStream:l,rt:u}=t;let w,p,d=super.readable;i&&(o?d=kt(d,new ht(t)):(p=new tt(t),d=kt(d,p))),h&&(d=vt(d,l,{chunkSize:e,rt:u},s,n,s)),i&&!o||!c||(w=new A,d=kt(d,w)),bt(this,d,()=>{if((!i||o)&&c){const t=new f(w.value.buffer);if(a!=t.getUint32(0,!1))throw new r(_)}})}}function bt(t,n,s){n=kt(n,new d({flush:s})),e.defineProperty(t,\"readable\",{get:()=>n})}function vt(t,e,n,s,r,o){const i=e&&s?s:r||o,c=n.rt?\"deflate64-raw\":\"deflate-raw\";try{t=kt(t,new i(c,n))}catch(s){if(!e)throw s;if(r)t=kt(t,new r(c,n));else{if(!o)throw s;t=kt(t,new o(c,n))}}return t}function kt(t,e){return t.pipeThrough(e)}const zt=\"data\",Ct=\"close\";class At extends d{constructor(t,n){super({});const s=this,{codecType:o}=t;let i;o.startsWith(\"deflate\")?i=gt:o.startsWith(\"inflate\")&&(i=St),s.outputSize=0;let c=0;const a=new i(t,n),h=super.readable,f=new d({transform(t,e){t&&t.length&&(c+=t.length,e.enqueue(t))},flush(){e.assign(s,{inputSize:c})}}),l=new d({transform(e,n){if(e&&e.length&&(n.enqueue(e),s.outputSize+=e.length,t.outputSize!==b&&s.outputSize>t.outputSize))throw new r(\"Invalid uncompressed size\")},flush(){const{signature:t}=a;e.assign(s,{signature:t,inputSize:c})}});e.defineProperty(s,\"readable\",{get:()=>h.pipeThrough(f).pipeThrough(a).pipeThrough(l)})}}class xt extends d{constructor(t){let e;super({transform:function n(s,r){if(e){const t=new o(e.length+s.length);t.set(e),t.set(s,e.length),s=t,e=null}s.length>t?(r.enqueue(s.slice(0,t)),n(s.slice(t),r)):e=s},flush(t){e&&e.length&&t.enqueue(e)}})}}const It=new h,Rt=new h;let Pt,Ut,Vt,Mt,_t,Bt=0;async function Dt(t){try{const{options:e,config:s}=t;if(!e.useCompressionStream)try{await self.initModule(t.config)}catch{e.useCompressionStream=!0}s.CompressionStream=self.CompressionStream,s.DecompressionStream=self.DecompressionStream;const r={highWaterMark:1},o=t.readable||new y({async pull(t){const e=new l(t=>It.set(Bt,t));Wt({type:\"pull\",messageId:Bt}),Bt=(Bt+1)%n.MAX_SAFE_INTEGER;const{value:s,done:r}=await e;t.enqueue(s),r&&t.close()}},r),i=t.writable||new m({async write(t){let e;const s=new l(t=>e=t);Rt.set(Bt,e),Wt({type:zt,value:t,messageId:Bt}),Bt=(Bt+1)%n.MAX_SAFE_INTEGER,await s}},r),c=new At(e,s);Pt=new AbortController;const{signal:a}=Pt;await o.pipeThrough(c).pipeThrough(new xt(s.chunkSize)).pipeTo(i,{signal:a,preventClose:!0,preventAbort:!0}),await i.getWriter().close();const{signature:h,inputSize:f,outputSize:u}=c;Wt({type:Ct,result:{signature:h,inputSize:f,outputSize:u}})}catch(t){t.outputSize=0,Kt(t)}}function Wt(t){let{value:e}=t;if(e)if(e.length)try{e=new o(e),t.value=e.buffer,p(t,[t.value])}catch{p(t)}else p(t);else p(t)}function Kt(t=new r(\"Unknown error\")){const{message:e,stack:n,code:s,name:o,outputSize:i}=t;p({error:{message:e,stack:n,code:s,name:o,outputSize:i}})}function Et(t,e,n={}){const i=\"number\"==typeof n.level?n.level:-1,c=\"number\"==typeof n.ot?n.ot:65536,a=\"number\"==typeof n.it?n.it:65536;return new d({start(){let n;if(this.ct=Vt(c),this.in=Vt(a),this.it=a,this.ht=new o(c),t?(this.ft=Ut.deflate_process,this.lt=Ut.deflate_last_consumed,this.ut=Ut.deflate_end,this.wt=Ut.deflate_new(),n=\"gzip\"===e?Ut.deflate_init_gzip(this.wt,i):\"deflate-raw\"===e?Ut.deflate_init_raw(this.wt,i):Ut.deflate_init(this.wt,i)):\"deflate64-raw\"===e?(this.ft=Ut.inflate9_process,this.lt=Ut.inflate9_last_consumed,this.ut=Ut.inflate9_end,this.wt=Ut.inflate9_new(),n=Ut.inflate9_init_raw(this.wt)):(this.ft=Ut.inflate_process,this.lt=Ut.inflate_last_consumed,this.ut=Ut.inflate_end,this.wt=Ut.inflate_new(),n=\"deflate-raw\"===e?Ut.inflate_init_raw(this.wt):\"gzip\"===e?Ut.inflate_init_gzip(this.wt):Ut.inflate_init(this.wt)),0!==n)throw new r(\"init failed:\"+n)},transform(e,n){try{const i=e,a=new o(_t.buffer),h=this.ft,f=this.lt,l=this.ct,u=this.ht;let w=0;for(;w<i.length;){const e=s.min(i.length-w,32768);this.in&&this.it>=e||(this.in&&Mt&&Mt(this.in),this.in=Vt(e),this.it=e),a.set(i.subarray(w,w+e),this.in);const o=h(this.wt,this.in,e,l,c,0);if(!t&&0>o)throw new r(\"process error:\"+o);const p=16777215&o;p&&(u.set(a.subarray(l,l+p),0),n.enqueue(u.slice(0,p)));const d=f(this.wt);if(0===d)break;w+=d}}catch(t){this.ut&&this.wt&&this.ut(this.wt),this.in&&Mt&&Mt(this.in),this.ct&&Mt&&Mt(this.ct),n.error(t)}},flush(e){try{const n=new o(_t.buffer),s=this.ft,i=this.ct,a=this.ht;for(;;){const o=s(this.wt,0,0,i,c,4);if(!t&&0>o)throw new r(\"process error:\"+o);const h=16777215&o,f=o>>24&255;if(h&&(a.set(n.subarray(i,i+h),0),e.enqueue(a.slice(0,h))),1===f||0===h)break}}catch(t){e.error(t)}finally{if(this.ut&&this.wt){const t=this.ut(this.wt);0!==t&&e.error(new r(\"end error:\"+t))}this.in&&Mt&&Mt(this.in),this.ct&&Mt&&Mt(this.ct)}}})}addEventListener(\"message\",({data:t})=>{const{type:e,messageId:n,value:s,done:r}=t;try{if(\"start\"==e&&Dt(t),e==zt){const t=It.get(n);It.delete(n),t({value:new o(s),done:r})}if(\"ack\"==e){const t=Rt.get(n);Rt.delete(n),t()}e==Ct&&Pt.abort()}catch(t){Kt(t)}});class Lt{constructor(t=\"deflate\",e){return Et(!0,t,e)}}class Ot{constructor(t=\"deflate\",e){return Et(!1,t,e)}}let Tt=!1;self.initModule=async t=>{try{const e=await(async(t,{baseURI:e})=>{if(!Tt){let n,s;try{try{s=new URL(t,e)}catch{}const r=await fetch(s);n=await r.arrayBuffer()}catch(e){if(!t.startsWith(\"data:application/wasm;base64,\"))throw e;n=(t=>{const e=t.split(\",\")[1],n=atob(e),s=n.length,r=new o(s);for(let t=0;s>t;++t)r[t]=n.charCodeAt(t);return r.buffer})(t)}(t=>{if(Ut=t,({malloc:Vt,free:Mt,memory:_t}=Ut),\"function\"!=typeof Vt||\"function\"!=typeof Mt||!_t)throw Ut=Vt=Mt=_t=null,new r(\"Invalid WASM module\")})((await WebAssembly.instantiate(n)).instance.exports),Tt=!0}})(t.wasmURI,t);return t.nt=Lt,t.st=Ot,e}catch{}}});\\n')),e)})}export{t as configureWebWorker};\n","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst table = [];\nfor (let i = 0; i < 256; i++) {\n\tlet t = i;\n\tfor (let j = 0; j < 8; j++) {\n\t\tif (t & 1) {\n\t\t\tt = (t >>> 1) ^ 0xEDB88320;\n\t\t} else {\n\t\t\tt = t >>> 1;\n\t\t}\n\t}\n\ttable[i] = t;\n}\n\nclass Crc32 {\n\n\tconstructor(crc) {\n\t\tthis.crc = crc || -1;\n\t}\n\n\tappend(data) {\n\t\tlet crc = this.crc | 0;\n\t\tfor (let offset = 0, length = data.length | 0; offset < length; offset++) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ data[offset]) & 0xFF];\n\t\t}\n\t\tthis.crc = crc;\n\t}\n\n\tget() {\n\t\treturn ~this.crc;\n\t}\n}\n\nexport {\n\tCrc32\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n\nimport { Crc32 } from \"./codecs/crc32.js\";\n\nclass Crc32Stream extends TransformStream {\n\n\tconstructor() {\n\t\t// deno-lint-ignore prefer-const\n\t\tlet stream;\n\t\tconst crc32 = new Crc32();\n\t\tsuper({\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tcrc32.append(chunk);\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t},\n\t\t\tflush() {\n\t\t\t\tconst value = new Uint8Array(4);\n\t\t\t\tconst dataView = new DataView(value.buffer);\n\t\t\t\tdataView.setUint32(0, crc32.get());\n\t\t\t\tstream.value = value;\n\t\t\t}\n\t\t});\n\t\tstream = this;\n\t}\n}\n\nexport {\n\tCrc32Stream\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextEncoder */\n\nimport { UNDEFINED_TYPE } from \"../constants.js\";\n\nexport {\n\tencodeText\n};\n\nfunction encodeText(value) {\n\t// deno-lint-ignore valid-typeof\n\tif (typeof TextEncoder == UNDEFINED_TYPE) {\n\t\tvalue = unescape(encodeURIComponent(value));\n\t\tconst result = new Uint8Array(value.length);\n\t\tfor (let i = 0; i < result.length; i++) {\n\t\t\tresult[i] = value.charCodeAt(i);\n\t\t}\n\t\treturn result;\n\t} else {\n\t\treturn new TextEncoder().encode(value);\n\t}\n}","// Derived from https://github.com/xqdoo00o/jszip/blob/master/lib/sjcl.js and https://github.com/bitwiseshiftleft/sjcl\n\n// deno-lint-ignore-file no-this-alias\n\n/*\n * SJCL is open. You can use, modify and redistribute it under a BSD\n * license or under the GNU GPL, version 2.0.\n */\n\n/** @fileOverview Javascript cryptography implementation.\n *\n * Crush to remove comments, shorten variable names and\n * generally reduce transmission size.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/*jslint indent: 2, bitwise: false, nomen: false, plusplus: false, white: false, regexp: false */\n\n/** @fileOverview Arrays of bits, encoded as arrays of Numbers.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/**\n * Arrays of bits, encoded as arrays of Numbers.\n * @namespace\n * @description\n * <p>\n * These objects are the currency accepted by SJCL's crypto functions.\n * </p>\n *\n * <p>\n * Most of our crypto primitives operate on arrays of 4-byte words internally,\n * but many of them can take arguments that are not a multiple of 4 bytes.\n * This library encodes arrays of bits (whose size need not be a multiple of 8\n * bits) as arrays of 32-bit words.  The bits are packed, big-endian, into an\n * array of words, 32 bits at a time.  Since the words are double-precision\n * floating point numbers, they fit some extra data.  We use this (in a private,\n * possibly-changing manner) to encode the number of bits actually  present\n * in the last word of the array.\n * </p>\n *\n * <p>\n * Because bitwise ops clear this out-of-band data, these arrays can be passed\n * to ciphers like AES which want arrays of words.\n * </p>\n */\nconst bitArray = {\n\t/**\n\t * Concatenate two bit arrays.\n\t * @param {bitArray} a1 The first array.\n\t * @param {bitArray} a2 The second array.\n\t * @return {bitArray} The concatenation of a1 and a2.\n\t */\n\tconcat(a1, a2) {\n\t\tif (a1.length === 0 || a2.length === 0) {\n\t\t\treturn a1.concat(a2);\n\t\t}\n\n\t\tconst last = a1[a1.length - 1], shift = bitArray.getPartial(last);\n\t\tif (shift === 32) {\n\t\t\treturn a1.concat(a2);\n\t\t} else {\n\t\t\treturn bitArray._shiftRight(a2, shift, last | 0, a1.slice(0, a1.length - 1));\n\t\t}\n\t},\n\n\t/**\n\t * Find the length of an array of bits.\n\t * @param {bitArray} a The array.\n\t * @return {Number} The length of a, in bits.\n\t */\n\tbitLength(a) {\n\t\tconst l = a.length;\n\t\tif (l === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst x = a[l - 1];\n\t\treturn (l - 1) * 32 + bitArray.getPartial(x);\n\t},\n\n\t/**\n\t * Truncate an array.\n\t * @param {bitArray} a The array.\n\t * @param {Number} len The length to truncate to, in bits.\n\t * @return {bitArray} A new array, truncated to len bits.\n\t */\n\tclamp(a, len) {\n\t\tif (a.length * 32 < len) {\n\t\t\treturn a;\n\t\t}\n\t\ta = a.slice(0, Math.ceil(len / 32));\n\t\tconst l = a.length;\n\t\tlen = len & 31;\n\t\tif (l > 0 && len) {\n\t\t\ta[l - 1] = bitArray.partial(len, a[l - 1] & 0x80000000 >> (len - 1), 1);\n\t\t}\n\t\treturn a;\n\t},\n\n\t/**\n\t * Make a partial word for a bit array.\n\t * @param {Number} len The number of bits in the word.\n\t * @param {Number} x The bits.\n\t * @param {Number} [_end=0] Pass 1 if x has already been shifted to the high side.\n\t * @return {Number} The partial word.\n\t */\n\tpartial(len, x, _end) {\n\t\tif (len === 32) {\n\t\t\treturn x;\n\t\t}\n\t\treturn (_end ? x | 0 : x << (32 - len)) + len * 0x10000000000;\n\t},\n\n\t/**\n\t * Get the number of bits used by a partial word.\n\t * @param {Number} x The partial word.\n\t * @return {Number} The number of bits used by the partial word.\n\t */\n\tgetPartial(x) {\n\t\treturn Math.round(x / 0x10000000000) || 32;\n\t},\n\n\t/** Shift an array right.\n\t * @param {bitArray} a The array to shift.\n\t * @param {Number} shift The number of bits to shift.\n\t * @param {Number} [carry=0] A byte to carry in\n\t * @param {bitArray} [out=[]] An array to prepend to the output.\n\t * @private\n\t */\n\t_shiftRight(a, shift, carry, out) {\n\t\tif (out === undefined) {\n\t\t\tout = [];\n\t\t}\n\n\t\tfor (; shift >= 32; shift -= 32) {\n\t\t\tout.push(carry);\n\t\t\tcarry = 0;\n\t\t}\n\t\tif (shift === 0) {\n\t\t\treturn out.concat(a);\n\t\t}\n\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tout.push(carry | a[i] >>> shift);\n\t\t\tcarry = a[i] << (32 - shift);\n\t\t}\n\t\tconst last2 = a.length ? a[a.length - 1] : 0;\n\t\tconst shift2 = bitArray.getPartial(last2);\n\t\tout.push(bitArray.partial(shift + shift2 & 31, (shift + shift2 > 32) ? carry : out.pop(), 1));\n\t\treturn out;\n\t}\n};\n\n/** @fileOverview Bit array codec implementations.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/**\n * Arrays of bytes\n * @namespace\n */\nconst codec = {\n\tbytes: {\n\t\t/** Convert from a bitArray to an array of bytes. */\n\t\tfromBits(arr) {\n\t\t\tconst bl = bitArray.bitLength(arr);\n\t\t\tconst byteLength = bl / 8;\n\t\t\tconst out = new Uint8Array(byteLength);\n\t\t\tlet tmp;\n\t\t\tfor (let i = 0; i < byteLength; i++) {\n\t\t\t\tif ((i & 3) === 0) {\n\t\t\t\t\ttmp = arr[i / 4];\n\t\t\t\t}\n\t\t\t\tout[i] = tmp >>> 24;\n\t\t\t\ttmp <<= 8;\n\t\t\t}\n\t\t\treturn out;\n\t\t},\n\t\t/** Convert from an array of bytes to a bitArray. */\n\t\ttoBits(bytes) {\n\t\t\tconst out = [];\n\t\t\tlet i;\n\t\t\tlet tmp = 0;\n\t\t\tfor (i = 0; i < bytes.length; i++) {\n\t\t\t\ttmp = tmp << 8 | bytes[i];\n\t\t\t\tif ((i & 3) === 3) {\n\t\t\t\t\tout.push(tmp);\n\t\t\t\t\ttmp = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i & 3) {\n\t\t\t\tout.push(bitArray.partial(8 * (i & 3), tmp));\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t}\n};\n\nconst hash = {};\n\n/**\n * Context for a SHA-1 operation in progress.\n * @constructor\n */\nhash.sha1 = class {\n\tconstructor(hash) {\n\t\tconst sha1 = this;\n\t\t/**\n\t\t * The hash's block size, in bits.\n\t\t * @constant\n\t\t */\n\t\tsha1.blockSize = 512;\n\t\t/**\n\t\t * The SHA-1 initialization vector.\n\t\t * @private\n\t\t */\n\t\tsha1._init = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0];\n\t\t/**\n\t\t * The SHA-1 hash key.\n\t\t * @private\n\t\t */\n\t\tsha1._key = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];\n\t\tif (hash) {\n\t\t\tsha1._h = hash._h.slice(0);\n\t\t\tsha1._buffer = hash._buffer.slice(0);\n\t\t\tsha1._length = hash._length;\n\t\t} else {\n\t\t\tsha1.reset();\n\t\t}\n\t}\n\n\t/**\n\t * Reset the hash state.\n\t * @return this\n\t */\n\treset() {\n\t\tconst sha1 = this;\n\t\tsha1._h = sha1._init.slice(0);\n\t\tsha1._buffer = [];\n\t\tsha1._length = 0;\n\t\treturn sha1;\n\t}\n\n\t/**\n\t * Input several words to the hash.\n\t * @param {bitArray|String} data the data to hash.\n\t * @return this\n\t */\n\tupdate(data) {\n\t\tconst sha1 = this;\n\t\tif (typeof data === \"string\") {\n\t\t\tdata = codec.utf8String.toBits(data);\n\t\t}\n\t\tconst b = sha1._buffer = bitArray.concat(sha1._buffer, data);\n\t\tconst ol = sha1._length;\n\t\tconst nl = sha1._length = ol + bitArray.bitLength(data);\n\t\tif (nl > 9007199254740991) {\n\t\t\tthrow new Error(\"Cannot hash more than 2^53 - 1 bits\");\n\t\t}\n\t\tconst c = new Uint32Array(b);\n\t\tlet j = 0;\n\t\tfor (let i = sha1.blockSize + ol - ((sha1.blockSize + ol) & (sha1.blockSize - 1)); i <= nl;\n\t\t\ti += sha1.blockSize) {\n\t\t\tsha1._block(c.subarray(16 * j, 16 * (j + 1)));\n\t\t\tj += 1;\n\t\t}\n\t\tb.splice(0, 16 * j);\n\t\treturn sha1;\n\t}\n\n\t/**\n\t * Complete hashing and output the hash value.\n\t * @return {bitArray} The hash value, an array of 5 big-endian words. TODO\n\t */\n\tfinalize() {\n\t\tconst sha1 = this;\n\t\tlet b = sha1._buffer;\n\t\tconst h = sha1._h;\n\n\t\t// Round out and push the buffer\n\t\tb = bitArray.concat(b, [bitArray.partial(1, 1)]);\n\t\t// Round out the buffer to a multiple of 16 words, less the 2 length words.\n\t\tfor (let i = b.length + 2; i & 15; i++) {\n\t\t\tb.push(0);\n\t\t}\n\n\t\t// append the length\n\t\tb.push(Math.floor(sha1._length / 0x100000000));\n\t\tb.push(sha1._length | 0);\n\n\t\twhile (b.length) {\n\t\t\tsha1._block(b.splice(0, 16));\n\t\t}\n\n\t\tsha1.reset();\n\t\treturn h;\n\t}\n\n\t/**\n\t * The SHA-1 logical functions f(0), f(1), ..., f(79).\n\t * @private\n\t */\n\t_f(t, b, c, d) {\n\t\tif (t <= 19) {\n\t\t\treturn (b & c) | (~b & d);\n\t\t} else if (t <= 39) {\n\t\t\treturn b ^ c ^ d;\n\t\t} else if (t <= 59) {\n\t\t\treturn (b & c) | (b & d) | (c & d);\n\t\t} else if (t <= 79) {\n\t\t\treturn b ^ c ^ d;\n\t\t}\n\t}\n\n\t/**\n\t * Circular left-shift operator.\n\t * @private\n\t */\n\t_S(n, x) {\n\t\treturn (x << n) | (x >>> 32 - n);\n\t}\n\n\t/**\n\t * Perform one cycle of SHA-1.\n\t * @param {Uint32Array|bitArray} words one block of words.\n\t * @private\n\t */\n\t_block(words) {\n\t\tconst sha1 = this;\n\t\tconst h = sha1._h;\n\t\t// When words is passed to _block, it has 16 elements. SHA1 _block\n\t\t// function extends words with new elements (at the end there are 80 elements). \n\t\t// The problem is that if we use Uint32Array instead of Array, \n\t\t// the length of Uint32Array cannot be changed. Thus, we replace words with a \n\t\t// normal Array here.\n\t\tconst w = Array(80); // do not use Uint32Array here as the instantiation is slower\n\t\tfor (let j = 0; j < 16; j++) {\n\t\t\tw[j] = words[j];\n\t\t}\n\n\t\tlet a = h[0];\n\t\tlet b = h[1];\n\t\tlet c = h[2];\n\t\tlet d = h[3];\n\t\tlet e = h[4];\n\n\t\tfor (let t = 0; t <= 79; t++) {\n\t\t\tif (t >= 16) {\n\t\t\t\tw[t] = sha1._S(1, w[t - 3] ^ w[t - 8] ^ w[t - 14] ^ w[t - 16]);\n\t\t\t}\n\t\t\tconst tmp = (sha1._S(5, a) + sha1._f(t, b, c, d) + e + w[t] +\n\t\t\t\tsha1._key[Math.floor(t / 20)]) | 0;\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = sha1._S(30, b);\n\t\t\tb = a;\n\t\t\ta = tmp;\n\t\t}\n\n\t\th[0] = (h[0] + a) | 0;\n\t\th[1] = (h[1] + b) | 0;\n\t\th[2] = (h[2] + c) | 0;\n\t\th[3] = (h[3] + d) | 0;\n\t\th[4] = (h[4] + e) | 0;\n\t}\n};\n\n/** @fileOverview Low-level AES implementation.\n *\n * This file contains a low-level implementation of AES, optimized for\n * size and for efficiency on several browsers.  It is based on\n * OpenSSL's aes_core.c, a public-domain implementation by Vincent\n * Rijmen, Antoon Bosselaers and Paulo Barreto.\n *\n * An older version of this implementation is available in the public\n * domain, but this one is (c) Emily Stark, Mike Hamburg, Dan Boneh,\n * Stanford University 2008-2010 and BSD-licensed for liability\n * reasons.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\nconst cipher = {};\n\n/**\n * Schedule out an AES key for both encryption and decryption.  This\n * is a low-level class.  Use a cipher mode to do bulk encryption.\n *\n * @constructor\n * @param {Array} key The key as an array of 4, 6 or 8 words.\n */\ncipher.aes = class {\n\tconstructor(key) {\n\t\t/**\n\t\t * The expanded S-box and inverse S-box tables.  These will be computed\n\t\t * on the client so that we don't have to send them down the wire.\n\t\t *\n\t\t * There are two tables, _tables[0] is for encryption and\n\t\t * _tables[1] is for decryption.\n\t\t *\n\t\t * The first 4 sub-tables are the expanded S-box with MixColumns.  The\n\t\t * last (_tables[01][4]) is the S-box itself.\n\t\t *\n\t\t * @private\n\t\t */\n\t\tconst aes = this;\n\t\taes._tables = [[[], [], [], [], []], [[], [], [], [], []]];\n\n\t\tif (!aes._tables[0][0][0]) {\n\t\t\taes._precompute();\n\t\t}\n\n\t\tconst sbox = aes._tables[0][4];\n\t\tconst decTable = aes._tables[1];\n\t\tconst keyLen = key.length;\n\n\t\tlet i, encKey, decKey, rcon = 1;\n\n\t\tif (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n\t\t\tthrow new Error(\"invalid aes key size\");\n\t\t}\n\n\t\taes._key = [encKey = key.slice(0), decKey = []];\n\n\t\t// schedule encryption keys\n\t\tfor (i = keyLen; i < 4 * keyLen + 28; i++) {\n\t\t\tlet tmp = encKey[i - 1];\n\n\t\t\t// apply sbox\n\t\t\tif (i % keyLen === 0 || (keyLen === 8 && i % keyLen === 4)) {\n\t\t\t\ttmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n\t\t\t\t// shift rows and add rcon\n\t\t\t\tif (i % keyLen === 0) {\n\t\t\t\t\ttmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n\t\t\t\t\trcon = rcon << 1 ^ (rcon >> 7) * 283;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tencKey[i] = encKey[i - keyLen] ^ tmp;\n\t\t}\n\n\t\t// schedule decryption keys\n\t\tfor (let j = 0; i; j++, i--) {\n\t\t\tconst tmp = encKey[j & 3 ? i : i - 4];\n\t\t\tif (i <= 4 || j < 4) {\n\t\t\t\tdecKey[j] = tmp;\n\t\t\t} else {\n\t\t\t\tdecKey[j] = decTable[0][sbox[tmp >>> 24]] ^\n\t\t\t\t\tdecTable[1][sbox[tmp >> 16 & 255]] ^\n\t\t\t\t\tdecTable[2][sbox[tmp >> 8 & 255]] ^\n\t\t\t\t\tdecTable[3][sbox[tmp & 255]];\n\t\t\t}\n\t\t}\n\t}\n\t// public\n\t/* Something like this might appear here eventually\n\tname: \"AES\",\n\tblockSize: 4,\n\tkeySizes: [4,6,8],\n\t*/\n\n\t/**\n\t * Encrypt an array of 4 big-endian words.\n\t * @param {Array} data The plaintext.\n\t * @return {Array} The ciphertext.\n\t */\n\tencrypt(data) {\n\t\treturn this._crypt(data, 0);\n\t}\n\n\t/**\n\t * Decrypt an array of 4 big-endian words.\n\t * @param {Array} data The ciphertext.\n\t * @return {Array} The plaintext.\n\t */\n\tdecrypt(data) {\n\t\treturn this._crypt(data, 1);\n\t}\n\n\t/**\n\t * Expand the S-box tables.\n\t *\n\t * @private\n\t */\n\t_precompute() {\n\t\tconst encTable = this._tables[0];\n\t\tconst decTable = this._tables[1];\n\t\tconst sbox = encTable[4];\n\t\tconst sboxInv = decTable[4];\n\t\tconst d = [];\n\t\tconst th = [];\n\t\tlet xInv, x2, x4, x8;\n\n\t\t// Compute double and third tables\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tth[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n\t\t}\n\n\t\tfor (let x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n\t\t\t// Compute sbox\n\t\t\tlet s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n\t\t\ts = s >> 8 ^ s & 255 ^ 99;\n\t\t\tsbox[x] = s;\n\t\t\tsboxInv[s] = x;\n\n\t\t\t// Compute MixColumns\n\t\t\tx8 = d[x4 = d[x2 = d[x]]];\n\t\t\tlet tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n\t\t\tlet tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tencTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n\t\t\t\tdecTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n\t\t\t}\n\t\t}\n\n\t\t// Compactify.  Considerable speedup on Firefox.\n\t\tfor (let i = 0; i < 5; i++) {\n\t\t\tencTable[i] = encTable[i].slice(0);\n\t\t\tdecTable[i] = decTable[i].slice(0);\n\t\t}\n\t}\n\n\t/**\n\t * Encryption and decryption core.\n\t * @param {Array} input Four words to be encrypted or decrypted.\n\t * @param dir The direction, 0 for encrypt and 1 for decrypt.\n\t * @return {Array} The four encrypted or decrypted words.\n\t * @private\n\t */\n\t_crypt(input, dir) {\n\t\tif (input.length !== 4) {\n\t\t\tthrow new Error(\"invalid aes block size\");\n\t\t}\n\n\t\tconst key = this._key[dir];\n\n\t\tconst nInnerRounds = key.length / 4 - 2;\n\t\tconst out = [0, 0, 0, 0];\n\t\tconst table = this._tables[dir];\n\n\t\t// load up the tables\n\t\tconst t0 = table[0];\n\t\tconst t1 = table[1];\n\t\tconst t2 = table[2];\n\t\tconst t3 = table[3];\n\t\tconst sbox = table[4];\n\n\t\t// state variables a,b,c,d are loaded with pre-whitened data\n\t\tlet a = input[0] ^ key[0];\n\t\tlet b = input[dir ? 3 : 1] ^ key[1];\n\t\tlet c = input[2] ^ key[2];\n\t\tlet d = input[dir ? 1 : 3] ^ key[3];\n\t\tlet kIndex = 4;\n\t\tlet a2, b2, c2;\n\n\t\t// Inner rounds.  Cribbed from OpenSSL.\n\t\tfor (let i = 0; i < nInnerRounds; i++) {\n\t\t\ta2 = t0[a >>> 24] ^ t1[b >> 16 & 255] ^ t2[c >> 8 & 255] ^ t3[d & 255] ^ key[kIndex];\n\t\t\tb2 = t0[b >>> 24] ^ t1[c >> 16 & 255] ^ t2[d >> 8 & 255] ^ t3[a & 255] ^ key[kIndex + 1];\n\t\t\tc2 = t0[c >>> 24] ^ t1[d >> 16 & 255] ^ t2[a >> 8 & 255] ^ t3[b & 255] ^ key[kIndex + 2];\n\t\t\td = t0[d >>> 24] ^ t1[a >> 16 & 255] ^ t2[b >> 8 & 255] ^ t3[c & 255] ^ key[kIndex + 3];\n\t\t\tkIndex += 4;\n\t\t\ta = a2; b = b2; c = c2;\n\t\t}\n\n\t\t// Last round.\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tout[dir ? 3 & -i : i] =\n\t\t\t\tsbox[a >>> 24] << 24 ^\n\t\t\t\tsbox[b >> 16 & 255] << 16 ^\n\t\t\t\tsbox[c >> 8 & 255] << 8 ^\n\t\t\t\tsbox[d & 255] ^\n\t\t\t\tkey[kIndex++];\n\t\t\ta2 = a; a = b; b = c; c = d; d = a2;\n\t\t}\n\n\t\treturn out;\n\t}\n};\n\n/**\n * Random values\n * @namespace\n */\nconst random = {\n\t/** \n\t * Generate random words with pure js, cryptographically not as strong & safe as native implementation.\n\t * @param {TypedArray} typedArray The array to fill.\n\t * @return {TypedArray} The random values.\n\t */\n\tgetRandomValues(typedArray) {\n\t\tconst words = new Uint32Array(typedArray.buffer);\n\t\tconst r = (m_w) => {\n\t\t\tlet m_z = 0x3ade68b1;\n\t\t\tconst mask = 0xffffffff;\n\t\t\treturn function () {\n\t\t\t\tm_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t\t\t\tm_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t\t\t\tconst result = ((((m_z << 0x10) + m_w) & mask) / 0x100000000) + .5;\n\t\t\t\treturn result * (Math.random() > .5 ? 1 : -1);\n\t\t\t};\n\t\t};\n\t\tfor (let i = 0, rcache; i < typedArray.length; i += 4) {\n\t\t\tconst _r = r((rcache || Math.random()) * 0x100000000);\n\t\t\trcache = _r() * 0x3ade67b7;\n\t\t\twords[i / 4] = (_r() * 0x100000000) | 0;\n\t\t}\n\t\treturn typedArray;\n\t}\n};\n\n/** @fileOverview CTR mode implementation.\n *\n * Special thanks to Roy Nicholson for pointing out a bug in our\n * implementation.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/** Brian Gladman's CTR Mode.\n* @constructor\n* @param {Object} _prf The aes instance to generate key.\n* @param {bitArray} _iv The iv for ctr mode, it must be 128 bits.\n*/\n\nconst mode = {};\n\n/**\n * Brian Gladman's CTR Mode.\n * @namespace\n */\nmode.ctrGladman = class {\n\tconstructor(prf, iv) {\n\t\tthis._prf = prf;\n\t\tthis._initIv = iv;\n\t\tthis._iv = iv;\n\t}\n\n\treset() {\n\t\tthis._iv = this._initIv;\n\t}\n\n\t/** Input some data to calculate.\n\t * @param {bitArray} data the data to process, it must be intergral multiple of 128 bits unless it's the last.\n\t */\n\tupdate(data) {\n\t\treturn this.calculate(this._prf, data, this._iv);\n\t}\n\n\tincWord(word) {\n\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tlet b1 = (word >> 16) & 0xff;\n\t\t\tlet b2 = (word >> 8) & 0xff;\n\t\t\tlet b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) { // overflow b1   \n\t\t\t\tb1 = 0;\n\t\t\t\tif (b2 === 0xff) {\n\t\t\t\t\tb2 = 0;\n\t\t\t\t\tif (b3 === 0xff) {\n\t\t\t\t\t\tb3 = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t++b3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t++b2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t} else {\n\t\t\tword += (0x01 << 24);\n\t\t}\n\t\treturn word;\n\t}\n\n\tincCounter(counter) {\n\t\tif ((counter[0] = this.incWord(counter[0])) === 0) {\n\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\tcounter[1] = this.incWord(counter[1]);\n\t\t}\n\t}\n\n\tcalculate(prf, data, iv) {\n\t\tlet l;\n\t\tif (!(l = data.length)) {\n\t\t\treturn [];\n\t\t}\n\t\tconst bl = bitArray.bitLength(data);\n\t\tfor (let i = 0; i < l; i += 4) {\n\t\t\tthis.incCounter(iv);\n\t\t\tconst e = prf.encrypt(iv);\n\t\t\tdata[i] ^= e[0];\n\t\t\tdata[i + 1] ^= e[1];\n\t\t\tdata[i + 2] ^= e[2];\n\t\t\tdata[i + 3] ^= e[3];\n\t\t}\n\t\treturn bitArray.clamp(data, bl);\n\t}\n};\n\nconst misc = {\n\timportKey(password) {\n\t\treturn new misc.hmacSha1(codec.bytes.toBits(password));\n\t},\n\tpbkdf2(prf, salt, count, length) {\n\t\tcount = count || 10000;\n\t\tif (length < 0 || count < 0) {\n\t\t\tthrow new Error(\"invalid params to pbkdf2\");\n\t\t}\n\t\tconst byteLength = ((length >> 5) + 1) << 2;\n\t\tlet u, ui, i, j, k;\n\t\tconst arrayBuffer = new ArrayBuffer(byteLength);\n\t\tconst out = new DataView(arrayBuffer);\n\t\tlet outLength = 0;\n\t\tconst b = bitArray;\n\t\tsalt = codec.bytes.toBits(salt);\n\t\tfor (k = 1; outLength < (byteLength || 1); k++) {\n\t\t\tu = ui = prf.encrypt(b.concat(salt, [k]));\n\t\t\tfor (i = 1; i < count; i++) {\n\t\t\t\tui = prf.encrypt(ui);\n\t\t\t\tfor (j = 0; j < ui.length; j++) {\n\t\t\t\t\tu[j] ^= ui[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (i = 0; outLength < (byteLength || 1) && i < u.length; i++) {\n\t\t\t\tout.setInt32(outLength, u[i]);\n\t\t\t\toutLength += 4;\n\t\t\t}\n\t\t}\n\t\treturn arrayBuffer.slice(0, length / 8);\n\t}\n};\n\n/** @fileOverview HMAC implementation.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/** HMAC with the specified hash function.\n * @constructor\n * @param {bitArray} key the key for HMAC.\n * @param {Object} [Hash=hash.sha1] The hash function to use.\n */\nmisc.hmacSha1 = class {\n\n\tconstructor(key) {\n\t\tconst hmac = this;\n\t\tconst Hash = hmac._hash = hash.sha1;\n\t\tconst exKey = [[], []];\n\t\thmac._baseHash = [new Hash(), new Hash()];\n\t\tconst bs = hmac._baseHash[0].blockSize / 32;\n\n\t\tif (key.length > bs) {\n\t\t\tkey = new Hash().update(key).finalize();\n\t\t}\n\n\t\tfor (let i = 0; i < bs; i++) {\n\t\t\texKey[0][i] = key[i] ^ 0x36363636;\n\t\t\texKey[1][i] = key[i] ^ 0x5C5C5C5C;\n\t\t}\n\n\t\thmac._baseHash[0].update(exKey[0]);\n\t\thmac._baseHash[1].update(exKey[1]);\n\t\thmac._resultHash = new Hash(hmac._baseHash[0]);\n\t}\n\treset() {\n\t\tconst hmac = this;\n\t\thmac._resultHash = new hmac._hash(hmac._baseHash[0]);\n\t\thmac._updated = false;\n\t}\n\n\tupdate(data) {\n\t\tconst hmac = this;\n\t\thmac._updated = true;\n\t\thmac._resultHash.update(data);\n\t}\n\n\tdigest() {\n\t\tconst hmac = this;\n\t\tconst w = hmac._resultHash.finalize();\n\t\tconst result = new (hmac._hash)(hmac._baseHash[1]).update(w).finalize();\n\n\t\thmac.reset();\n\n\t\treturn result;\n\t}\n\n\tencrypt(data) {\n\t\tif (!this._updated) {\n\t\t\tthis.update(data);\n\t\t\treturn this.digest(data);\n\t\t} else {\n\t\t\tthrow new Error(\"encrypt on already updated hmac called!\");\n\t\t}\n\t}\n};\n\nexport {\n\tcipher,\n\tcodec,\n\tmisc,\n\tmode,\n\trandom\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global crypto */\n\nimport { FUNCTION_TYPE, UNDEFINED_TYPE } from \"../constants.js\";\nimport {\n\trandom\n} from \"./codecs/sjcl.js\";\n\nconst GET_RANDOM_VALUES_SUPPORTED = typeof crypto != UNDEFINED_TYPE && typeof crypto.getRandomValues == FUNCTION_TYPE;\n\nconst ERR_INVALID_PASSWORD = \"Invalid password\";\nconst ERR_INVALID_SIGNATURE = \"Invalid signature\";\nconst ERR_ABORT_CHECK_PASSWORD = \"zipjs-abort-check-password\";\n\nexport {\n\tgetRandomValues,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD\n};\n\nfunction getRandomValues(array) {\n\tif (GET_RANDOM_VALUES_SUPPORTED) {\n\t\treturn crypto.getRandomValues(array);\n\t} else {\n\t\treturn random.getRandomValues(array);\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global crypto, TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { UNDEFINED_VALUE, UNDEFINED_TYPE, FUNCTION_TYPE } from \"../constants.js\";\nimport { encodeText } from \"./../util/encode-text.js\";\nimport {\n\tcipher,\n\tcodec,\n\tmisc,\n\tmode\n} from \"./codecs/sjcl.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD,\n\tgetRandomValues\n} from \"./common-crypto.js\";\n\nconst BLOCK_LENGTH = 16;\nconst RAW_FORMAT = \"raw\";\nconst PBKDF2_ALGORITHM = { name: \"PBKDF2\" };\nconst HASH_ALGORITHM = { name: \"HMAC\" };\nconst HASH_FUNCTION = \"SHA-1\";\nconst BASE_KEY_ALGORITHM = Object.assign({ hash: HASH_ALGORITHM }, PBKDF2_ALGORITHM);\nconst DERIVED_BITS_ALGORITHM = Object.assign({ iterations: 1000, hash: { name: HASH_FUNCTION } }, PBKDF2_ALGORITHM);\nconst DERIVED_BITS_USAGE = [\"deriveBits\"];\nconst SALT_LENGTH = [8, 12, 16];\nconst KEY_LENGTH = [16, 24, 32];\nconst SIGNATURE_LENGTH = 10;\nconst COUNTER_DEFAULT_VALUE = [0, 0, 0, 0];\n// deno-lint-ignore valid-typeof\nconst CRYPTO_API_SUPPORTED = typeof crypto != UNDEFINED_TYPE;\nconst subtle = CRYPTO_API_SUPPORTED && crypto.subtle;\nconst SUBTLE_API_SUPPORTED = CRYPTO_API_SUPPORTED && typeof subtle != UNDEFINED_TYPE;\nconst codecBytes = codec.bytes;\nconst Aes = cipher.aes;\nconst CtrGladman = mode.ctrGladman;\nconst HmacSha1 = misc.hmacSha1;\n\nlet IMPORT_KEY_SUPPORTED = CRYPTO_API_SUPPORTED && SUBTLE_API_SUPPORTED && typeof subtle.importKey == FUNCTION_TYPE;\nlet DERIVE_BITS_SUPPORTED = CRYPTO_API_SUPPORTED && SUBTLE_API_SUPPORTED && typeof subtle.deriveBits == FUNCTION_TYPE;\n\nclass AESDecryptionStream extends TransformStream {\n\n\tconstructor({ password, rawPassword, signed, encryptionStrength, checkPasswordOnly }) {\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tready: new Promise(resolve => this.resolveReady = resolve),\n\t\t\t\t\tpassword: encodePassword(password, rawPassword),\n\t\t\t\t\tsigned,\n\t\t\t\t\tstrength: encryptionStrength - 1,\n\t\t\t\t\tpending: new Uint8Array()\n\t\t\t\t});\n\t\t\t},\n\t\t\tasync transform(chunk, controller) {\n\t\t\t\tconst aesCrypto = this;\n\t\t\t\tconst {\n\t\t\t\t\tpassword,\n\t\t\t\t\tstrength,\n\t\t\t\t\tresolveReady,\n\t\t\t\t\tready\n\t\t\t\t} = aesCrypto;\n\t\t\t\tif (password) {\n\t\t\t\t\tawait createDecryptionKeys(aesCrypto, strength, password, subarray(chunk, 0, SALT_LENGTH[strength] + 2));\n\t\t\t\t\tchunk = subarray(chunk, SALT_LENGTH[strength] + 2);\n\t\t\t\t\tif (checkPasswordOnly) {\n\t\t\t\t\t\tcontroller.error(new Error(ERR_ABORT_CHECK_PASSWORD));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolveReady();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tawait ready;\n\t\t\t\t}\n\t\t\t\tconst output = new Uint8Array(chunk.length - SIGNATURE_LENGTH - ((chunk.length - SIGNATURE_LENGTH) % BLOCK_LENGTH));\n\t\t\t\tcontroller.enqueue(append(aesCrypto, chunk, output, 0, SIGNATURE_LENGTH, true));\n\t\t\t},\n\t\t\tasync flush(controller) {\n\t\t\t\tconst {\n\t\t\t\t\tsigned,\n\t\t\t\t\tctr,\n\t\t\t\t\thmac,\n\t\t\t\t\tpending,\n\t\t\t\t\tready\n\t\t\t\t} = this;\n\t\t\t\tif (hmac && ctr) {\n\t\t\t\t\tawait ready;\n\t\t\t\t\tconst chunkToDecrypt = subarray(pending, 0, pending.length - SIGNATURE_LENGTH);\n\t\t\t\t\tconst originalSignature = subarray(pending, pending.length - SIGNATURE_LENGTH);\n\t\t\t\t\tlet decryptedChunkArray = new Uint8Array();\n\t\t\t\t\tif (chunkToDecrypt.length) {\n\t\t\t\t\t\tconst encryptedChunk = toBits(codecBytes, chunkToDecrypt);\n\t\t\t\t\t\thmac.update(encryptedChunk);\n\t\t\t\t\t\tconst decryptedChunk = ctr.update(encryptedChunk);\n\t\t\t\t\t\tdecryptedChunkArray = fromBits(codecBytes, decryptedChunk);\n\t\t\t\t\t}\n\t\t\t\t\tif (signed) {\n\t\t\t\t\t\tconst signature = subarray(fromBits(codecBytes, hmac.digest()), 0, SIGNATURE_LENGTH);\n\t\t\t\t\t\tfor (let indexSignature = 0; indexSignature < SIGNATURE_LENGTH; indexSignature++) {\n\t\t\t\t\t\t\tif (signature[indexSignature] != originalSignature[indexSignature]) {\n\t\t\t\t\t\t\t\tthrow new Error(ERR_INVALID_SIGNATURE);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.enqueue(decryptedChunkArray);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass AESEncryptionStream extends TransformStream {\n\n\tconstructor({ password, rawPassword, encryptionStrength }) {\n\t\t// deno-lint-ignore prefer-const\n\t\tlet stream;\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tready: new Promise(resolve => this.resolveReady = resolve),\n\t\t\t\t\tpassword: encodePassword(password, rawPassword),\n\t\t\t\t\tstrength: encryptionStrength - 1,\n\t\t\t\t\tpending: new Uint8Array()\n\t\t\t\t});\n\t\t\t},\n\t\t\tasync transform(chunk, controller) {\n\t\t\t\tconst aesCrypto = this;\n\t\t\t\tconst {\n\t\t\t\t\tpassword,\n\t\t\t\t\tstrength,\n\t\t\t\t\tresolveReady,\n\t\t\t\t\tready\n\t\t\t\t} = aesCrypto;\n\t\t\t\tlet preamble = new Uint8Array();\n\t\t\t\tif (password) {\n\t\t\t\t\tpreamble = await createEncryptionKeys(aesCrypto, strength, password);\n\t\t\t\t\tresolveReady();\n\t\t\t\t} else {\n\t\t\t\t\tawait ready;\n\t\t\t\t}\n\t\t\t\tconst output = new Uint8Array(preamble.length + chunk.length - (chunk.length % BLOCK_LENGTH));\n\t\t\t\toutput.set(preamble, 0);\n\t\t\t\tcontroller.enqueue(append(aesCrypto, chunk, output, preamble.length, 0));\n\t\t\t},\n\t\t\tasync flush(controller) {\n\t\t\t\tconst {\n\t\t\t\t\tctr,\n\t\t\t\t\thmac,\n\t\t\t\t\tpending,\n\t\t\t\t\tready\n\t\t\t\t} = this;\n\t\t\t\tif (hmac && ctr) {\n\t\t\t\t\tawait ready;\n\t\t\t\t\tlet encryptedChunkArray = new Uint8Array();\n\t\t\t\t\tif (pending.length) {\n\t\t\t\t\t\tconst encryptedChunk = ctr.update(toBits(codecBytes, pending));\n\t\t\t\t\t\thmac.update(encryptedChunk);\n\t\t\t\t\t\tencryptedChunkArray = fromBits(codecBytes, encryptedChunk);\n\t\t\t\t\t}\n\t\t\t\t\tstream.signature = fromBits(codecBytes, hmac.digest()).slice(0, SIGNATURE_LENGTH);\n\t\t\t\t\tcontroller.enqueue(concat(encryptedChunkArray, stream.signature));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tstream = this;\n\t}\n}\n\nexport {\n\tAESDecryptionStream,\n\tAESEncryptionStream,\n\tERR_INVALID_PASSWORD\n};\n\nfunction append(aesCrypto, input, output, paddingStart, paddingEnd, verifySignature) {\n\tconst {\n\t\tctr,\n\t\thmac,\n\t\tpending\n\t} = aesCrypto;\n\tconst inputLength = input.length - paddingEnd;\n\tif (pending.length) {\n\t\tinput = concat(pending, input);\n\t\toutput = expand(output, inputLength - (inputLength % BLOCK_LENGTH));\n\t}\n\tlet offset;\n\tfor (offset = 0; offset <= inputLength - BLOCK_LENGTH; offset += BLOCK_LENGTH) {\n\t\tconst inputChunk = toBits(codecBytes, subarray(input, offset, offset + BLOCK_LENGTH));\n\t\tif (verifySignature) {\n\t\t\thmac.update(inputChunk);\n\t\t}\n\t\tconst outputChunk = ctr.update(inputChunk);\n\t\tif (!verifySignature) {\n\t\t\thmac.update(outputChunk);\n\t\t}\n\t\toutput.set(fromBits(codecBytes, outputChunk), offset + paddingStart);\n\t}\n\taesCrypto.pending = subarray(input, offset);\n\treturn output;\n}\n\nasync function createDecryptionKeys(decrypt, strength, password, preamble) {\n\tconst passwordVerificationKey = await createKeys(decrypt, strength, password, subarray(preamble, 0, SALT_LENGTH[strength]));\n\tconst passwordVerification = subarray(preamble, SALT_LENGTH[strength]);\n\tif (passwordVerificationKey[0] != passwordVerification[0] || passwordVerificationKey[1] != passwordVerification[1]) {\n\t\tthrow new Error(ERR_INVALID_PASSWORD);\n\t}\n}\n\nasync function createEncryptionKeys(encrypt, strength, password) {\n\tconst salt = getRandomValues(new Uint8Array(SALT_LENGTH[strength]));\n\tconst passwordVerification = await createKeys(encrypt, strength, password, salt);\n\treturn concat(salt, passwordVerification);\n}\n\nasync function createKeys(aesCrypto, strength, password, salt) {\n\taesCrypto.password = null;\n\tconst baseKey = await importKey(RAW_FORMAT, password, BASE_KEY_ALGORITHM, false, DERIVED_BITS_USAGE);\n\tconst derivedBits = await deriveBits(Object.assign({ salt }, DERIVED_BITS_ALGORITHM), baseKey, 8 * ((KEY_LENGTH[strength] * 2) + 2));\n\tconst compositeKey = new Uint8Array(derivedBits);\n\tconst key = toBits(codecBytes, subarray(compositeKey, 0, KEY_LENGTH[strength]));\n\tconst authentication = toBits(codecBytes, subarray(compositeKey, KEY_LENGTH[strength], KEY_LENGTH[strength] * 2));\n\tconst passwordVerification = subarray(compositeKey, KEY_LENGTH[strength] * 2);\n\tObject.assign(aesCrypto, {\n\t\tkeys: {\n\t\t\tkey,\n\t\t\tauthentication,\n\t\t\tpasswordVerification\n\t\t},\n\t\tctr: new CtrGladman(new Aes(key), Array.from(COUNTER_DEFAULT_VALUE)),\n\t\thmac: new HmacSha1(authentication)\n\t});\n\treturn passwordVerification;\n}\n\nasync function importKey(format, password, algorithm, extractable, keyUsages) {\n\tif (IMPORT_KEY_SUPPORTED) {\n\t\ttry {\n\t\t\treturn await subtle.importKey(format, password, algorithm, extractable, keyUsages);\n\t\t} catch {\n\t\t\tIMPORT_KEY_SUPPORTED = false;\n\t\t\treturn misc.importKey(password);\n\t\t}\n\t} else {\n\t\treturn misc.importKey(password);\n\t}\n}\n\nasync function deriveBits(algorithm, baseKey, length) {\n\tif (DERIVE_BITS_SUPPORTED) {\n\t\ttry {\n\t\t\treturn await subtle.deriveBits(algorithm, baseKey, length);\n\t\t} catch {\n\t\t\tDERIVE_BITS_SUPPORTED = false;\n\t\t\treturn misc.pbkdf2(baseKey, algorithm.salt, DERIVED_BITS_ALGORITHM.iterations, length);\n\t\t}\n\t} else {\n\t\treturn misc.pbkdf2(baseKey, algorithm.salt, DERIVED_BITS_ALGORITHM.iterations, length);\n\t}\n}\n\nfunction encodePassword(password, rawPassword) {\n\tif (rawPassword === UNDEFINED_VALUE) {\n\t\treturn encodeText(password);\n\t} else {\n\t\treturn rawPassword;\n\t}\n}\n\nfunction concat(leftArray, rightArray) {\n\tlet array = leftArray;\n\tif (leftArray.length + rightArray.length) {\n\t\tarray = new Uint8Array(leftArray.length + rightArray.length);\n\t\tarray.set(leftArray, 0);\n\t\tarray.set(rightArray, leftArray.length);\n\t}\n\treturn array;\n}\n\nfunction expand(inputArray, length) {\n\tif (length && length > inputArray.length) {\n\t\tconst array = inputArray;\n\t\tinputArray = new Uint8Array(length);\n\t\tinputArray.set(array, 0);\n\t}\n\treturn inputArray;\n}\n\nfunction subarray(array, begin, end) {\n\treturn array.subarray(begin, end);\n}\n\nfunction fromBits(codecBytes, chunk) {\n\treturn codecBytes.fromBits(chunk);\n}\nfunction toBits(codecBytes, chunk) {\n\treturn codecBytes.toBits(chunk);\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { Crc32 } from \"./codecs/crc32.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_ABORT_CHECK_PASSWORD,\n\tgetRandomValues\n} from \"./common-crypto.js\";\n\nconst HEADER_LENGTH = 12;\n\nclass ZipCryptoDecryptionStream extends TransformStream {\n\n\tconstructor({ password, passwordVerification, checkPasswordOnly }) {\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tpassword,\n\t\t\t\t\tpasswordVerification\n\t\t\t\t});\n\t\t\t\tcreateKeys(this, password);\n\t\t\t},\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tconst zipCrypto = this;\n\t\t\t\tif (zipCrypto.password) {\n\t\t\t\t\tconst decryptedHeader = decrypt(zipCrypto, chunk.subarray(0, HEADER_LENGTH));\n\t\t\t\t\tzipCrypto.password = null;\n\t\t\t\t\tif (decryptedHeader.at(-1) != zipCrypto.passwordVerification) {\n\t\t\t\t\t\tthrow new Error(ERR_INVALID_PASSWORD);\n\t\t\t\t\t}\n\t\t\t\t\tchunk = chunk.subarray(HEADER_LENGTH);\n\t\t\t\t}\n\t\t\t\tif (checkPasswordOnly) {\n\t\t\t\t\tcontroller.error(new Error(ERR_ABORT_CHECK_PASSWORD));\n\t\t\t\t} else {\n\t\t\t\t\tcontroller.enqueue(decrypt(zipCrypto, chunk));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass ZipCryptoEncryptionStream extends TransformStream {\n\n\tconstructor({ password, passwordVerification }) {\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tpassword,\n\t\t\t\t\tpasswordVerification\n\t\t\t\t});\n\t\t\t\tcreateKeys(this, password);\n\t\t\t},\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tconst zipCrypto = this;\n\t\t\t\tlet output;\n\t\t\t\tlet offset;\n\t\t\t\tif (zipCrypto.password) {\n\t\t\t\t\tzipCrypto.password = null;\n\t\t\t\t\tconst header = getRandomValues(new Uint8Array(HEADER_LENGTH));\n\t\t\t\t\theader[HEADER_LENGTH - 1] = zipCrypto.passwordVerification;\n\t\t\t\t\toutput = new Uint8Array(chunk.length + header.length);\n\t\t\t\t\toutput.set(encrypt(zipCrypto, header), 0);\n\t\t\t\t\toffset = HEADER_LENGTH;\n\t\t\t\t} else {\n\t\t\t\t\toutput = new Uint8Array(chunk.length);\n\t\t\t\t\toffset = 0;\n\t\t\t\t}\n\t\t\t\toutput.set(encrypt(zipCrypto, chunk), offset);\n\t\t\t\tcontroller.enqueue(output);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport {\n\tZipCryptoDecryptionStream,\n\tZipCryptoEncryptionStream,\n\tERR_INVALID_PASSWORD\n};\n\nfunction decrypt(target, input) {\n\tconst output = new Uint8Array(input.length);\n\tfor (let index = 0; index < input.length; index++) {\n\t\toutput[index] = getByte(target) ^ input[index];\n\t\tupdateKeys(target, output[index]);\n\t}\n\treturn output;\n}\n\nfunction encrypt(target, input) {\n\tconst output = new Uint8Array(input.length);\n\tfor (let index = 0; index < input.length; index++) {\n\t\toutput[index] = getByte(target) ^ input[index];\n\t\tupdateKeys(target, input[index]);\n\t}\n\treturn output;\n}\n\nfunction createKeys(target, password) {\n\tconst keys = [0x12345678, 0x23456789, 0x34567890];\n\tObject.assign(target, {\n\t\tkeys,\n\t\tcrcKey0: new Crc32(keys[0]),\n\t\tcrcKey2: new Crc32(keys[2])\n\t});\n\tfor (let index = 0; index < password.length; index++) {\n\t\tupdateKeys(target, password.charCodeAt(index));\n\t}\n}\n\nfunction updateKeys(target, byte) {\n\tlet [key0, key1, key2] = target.keys;\n\ttarget.crcKey0.append([byte]);\n\tkey0 = ~target.crcKey0.get();\n\tkey1 = getInt32(Math.imul(getInt32(key1 + getInt8(key0)), 134775813) + 1);\n\ttarget.crcKey2.append([key1 >>> 24]);\n\tkey2 = ~target.crcKey2.get();\n\ttarget.keys = [key0, key1, key2];\n}\n\nfunction getByte(target) {\n\tconst temp = target.keys[2] | 2;\n\treturn getInt8(Math.imul(temp, (temp ^ 1)) >>> 8);\n}\n\nfunction getInt8(number) {\n\treturn number & 0xFF;\n}\n\nfunction getInt32(number) {\n\treturn number & 0xFFFFFFFF;\n}","/*\n Copyright (c) 2025 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { Crc32Stream } from \"./crc32-stream.js\";\nimport {\n\tAESEncryptionStream,\n\tAESDecryptionStream\n} from \"./aes-crypto-stream.js\";\nimport {\n\tZipCryptoEncryptionStream,\n\tZipCryptoDecryptionStream\n} from \"./zip-crypto-stream.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD\n} from \"./common-crypto.js\";\n\nconst ERR_INVALID_UNCOMPRESSED_SIZE = \"Invalid uncompressed size\";\nconst FORMAT_DEFLATE_RAW = \"deflate-raw\";\nconst FORMAT_DEFLATE64_RAW = \"deflate64-raw\";\n\nclass DeflateStream extends TransformStream {\n\n\tconstructor(options, { chunkSize, CompressionStreamZlib, CompressionStream }) {\n\t\tsuper({});\n\t\tconst { compressed, encrypted, useCompressionStream, zipCrypto, signed, level } = options;\n\t\tconst stream = this;\n\t\tlet crc32Stream, encryptionStream;\n\t\tlet readable = super.readable;\n\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\tcrc32Stream = new Crc32Stream();\n\t\t\treadable = pipeThrough(readable, crc32Stream);\n\t\t}\n\t\tif (compressed) {\n\t\t\treadable = pipeThroughCommpressionStream(readable, useCompressionStream, { level, chunkSize }, CompressionStream, CompressionStreamZlib, CompressionStream);\n\t\t}\n\t\tif (encrypted) {\n\t\t\tif (zipCrypto) {\n\t\t\t\treadable = pipeThrough(readable, new ZipCryptoEncryptionStream(options));\n\t\t\t} else {\n\t\t\t\tencryptionStream = new AESEncryptionStream(options);\n\t\t\t\treadable = pipeThrough(readable, encryptionStream);\n\t\t\t}\n\t\t}\n\t\tsetReadable(stream, readable, () => {\n\t\t\tlet signature;\n\t\t\tif (encrypted && !zipCrypto) {\n\t\t\t\tsignature = encryptionStream.signature;\n\t\t\t}\n\t\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\t\tsignature = new DataView(crc32Stream.value.buffer).getUint32(0);\n\t\t\t}\n\t\t\tstream.signature = signature;\n\t\t});\n\t}\n}\n\nclass InflateStream extends TransformStream {\n\n\tconstructor(options, { chunkSize, DecompressionStreamZlib, DecompressionStream }) {\n\t\tsuper({});\n\t\tconst { zipCrypto, encrypted, signed, signature, compressed, useCompressionStream, deflate64 } = options;\n\t\tlet crc32Stream, decryptionStream;\n\t\tlet readable = super.readable;\n\t\tif (encrypted) {\n\t\t\tif (zipCrypto) {\n\t\t\t\treadable = pipeThrough(readable, new ZipCryptoDecryptionStream(options));\n\t\t\t} else {\n\t\t\t\tdecryptionStream = new AESDecryptionStream(options);\n\t\t\t\treadable = pipeThrough(readable, decryptionStream);\n\t\t\t}\n\t\t}\n\t\tif (compressed) {\n\t\t\treadable = pipeThroughCommpressionStream(readable, useCompressionStream, { chunkSize, deflate64 }, DecompressionStream, DecompressionStreamZlib, DecompressionStream);\n\t\t}\n\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\tcrc32Stream = new Crc32Stream();\n\t\t\treadable = pipeThrough(readable, crc32Stream);\n\t\t}\n\t\tsetReadable(this, readable, () => {\n\t\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\t\tconst dataViewSignature = new DataView(crc32Stream.value.buffer);\n\t\t\t\tif (signature != dataViewSignature.getUint32(0, false)) {\n\t\t\t\t\tthrow new Error(ERR_INVALID_SIGNATURE);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport {\n\tDeflateStream,\n\tInflateStream,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_UNCOMPRESSED_SIZE,\n\tERR_ABORT_CHECK_PASSWORD\n};\n\nfunction setReadable(stream, readable, flush) {\n\treadable = pipeThrough(readable, new TransformStream({ flush }));\n\tObject.defineProperty(stream, \"readable\", {\n\t\tget() {\n\t\t\treturn readable;\n\t\t}\n\t});\n}\n\nfunction pipeThroughCommpressionStream(readable, useCompressionStream, options, CompressionStreamNative, CompressionStreamZlib, CompressionStream) {\n\tconst Stream = useCompressionStream && CompressionStreamNative ? CompressionStreamNative : CompressionStreamZlib || CompressionStream;\n\tconst format = options.deflate64 ? FORMAT_DEFLATE64_RAW : FORMAT_DEFLATE_RAW;\n\ttry {\n\t\treadable = pipeThrough(readable, new Stream(format, options));\n\t} catch (error) {\n\t\tif (useCompressionStream) {\n\t\t\tif (CompressionStreamZlib) {\n\t\t\t\treadable = pipeThrough(readable, new CompressionStreamZlib(format, options));\n\t\t\t} else if (CompressionStream) {\n\t\t\t\treadable = pipeThrough(readable, new CompressionStream(format, options));\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n\treturn readable;\n}\n\nfunction pipeThrough(readable, transformStream) {\n\treturn readable.pipeThrough(transformStream);\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * This program is based on JZlib 1.0.2 ymnk, JCraft,Inc.\n * JZlib is based on zlib-1.1.3, so all credit should go authors\n * Jean-loup Gailly(jloup@gzip.org) and Mark Adler(madler@alumni.caltech.edu)\n * and contributors of zlib.\n */\n\n/* global TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { UNDEFINED_VALUE } from \"../constants.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_UNCOMPRESSED_SIZE,\n\tERR_ABORT_CHECK_PASSWORD,\n\tInflateStream,\n\tDeflateStream\n} from \"./zip-entry-stream.js\";\n\nconst MESSAGE_EVENT_TYPE = \"message\";\nconst MESSAGE_START = \"start\";\nconst MESSAGE_PULL = \"pull\";\nconst MESSAGE_DATA = \"data\";\nconst MESSAGE_ACK_DATA = \"ack\";\nconst MESSAGE_CLOSE = \"close\";\nconst CODEC_DEFLATE = \"deflate\";\nconst CODEC_INFLATE = \"inflate\";\n\nexport {\n\tCODEC_DEFLATE,\n\tCODEC_INFLATE,\n\tMESSAGE_EVENT_TYPE,\n\tMESSAGE_START,\n\tMESSAGE_PULL,\n\tMESSAGE_DATA,\n\tMESSAGE_ACK_DATA,\n\tMESSAGE_CLOSE,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_UNCOMPRESSED_SIZE,\n\tERR_ABORT_CHECK_PASSWORD,\n\tCodecStream,\n\tChunkStream\n};\n\nclass CodecStream extends TransformStream {\n\n\tconstructor(options, config) {\n\t\tsuper({});\n\t\tconst codec = this;\n\t\tconst { codecType } = options;\n\t\tlet Stream;\n\t\tif (codecType.startsWith(CODEC_DEFLATE)) {\n\t\t\tStream = DeflateStream;\n\t\t} else if (codecType.startsWith(CODEC_INFLATE)) {\n\t\t\tStream = InflateStream;\n\t\t}\n\t\tcodec.outputSize = 0;\n\t\tlet inputSize = 0;\n\t\tconst stream = new Stream(options, config);\n\t\tconst readable = super.readable;\n\t\tconst inputSizeStream = new TransformStream({\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tif (chunk && chunk.length) {\n\t\t\t\t\tinputSize += chunk.length;\n\t\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tflush() {\n\t\t\t\tObject.assign(codec, {\n\t\t\t\t\tinputSize\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tconst outputSizeStream = new TransformStream({\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tif (chunk && chunk.length) {\n\t\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t\t\tcodec.outputSize += chunk.length;\n\t\t\t\t\tif (options.outputSize !== UNDEFINED_VALUE && codec.outputSize > options.outputSize) {\n\t\t\t\t\t\tthrow new Error(ERR_INVALID_UNCOMPRESSED_SIZE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tflush() {\n\t\t\t\tconst { signature } = stream;\n\t\t\t\tObject.assign(codec, {\n\t\t\t\t\tsignature,\n\t\t\t\t\tinputSize\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(codec, \"readable\", {\n\t\t\tget() {\n\t\t\t\treturn readable.pipeThrough(inputSizeStream).pipeThrough(stream).pipeThrough(outputSizeStream);\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass ChunkStream extends TransformStream {\n\n\tconstructor(chunkSize) {\n\t\tlet pendingChunk;\n\t\tsuper({\n\t\t\ttransform,\n\t\t\tflush(controller) {\n\t\t\t\tif (pendingChunk && pendingChunk.length) {\n\t\t\t\t\tcontroller.enqueue(pendingChunk);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tfunction transform(chunk, controller) {\n\t\t\tif (pendingChunk) {\n\t\t\t\tconst newChunk = new Uint8Array(pendingChunk.length + chunk.length);\n\t\t\t\tnewChunk.set(pendingChunk);\n\t\t\t\tnewChunk.set(chunk, pendingChunk.length);\n\t\t\t\tchunk = newChunk;\n\t\t\t\tpendingChunk = null;\n\t\t\t}\n\t\t\tif (chunk.length > chunkSize) {\n\t\t\t\tcontroller.enqueue(chunk.slice(0, chunkSize));\n\t\t\t\ttransform(chunk.slice(chunkSize), controller);\n\t\t\t} else {\n\t\t\t\tpendingChunk = chunk;\n\t\t\t}\n\t\t}\n\t}\n}","/*\n Copyright (c) 2025 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global Worker, URL, TransformStream, WritableStream */\n\nimport {\n\tUNDEFINED_TYPE,\n\tFUNCTION_TYPE\n} from \"./constants.js\";\nimport {\n\tCodecStream,\n\tChunkStream,\n\tMESSAGE_EVENT_TYPE,\n\tMESSAGE_START,\n\tMESSAGE_PULL,\n\tMESSAGE_DATA,\n\tMESSAGE_ACK_DATA,\n\tMESSAGE_CLOSE\n} from \"./streams/codec-stream.js\";\n\n// deno-lint-ignore valid-typeof\nlet WEB_WORKERS_SUPPORTED = typeof Worker != UNDEFINED_TYPE;\nlet initModule = () => { };\n\nexport {\n\tCodecWorker,\n\tconfigureWorker\n};\n\nfunction configureWorker({ initModule: initModuleFunction }) {\n\tinitModule = initModuleFunction;\n}\n\nclass CodecWorker {\n\n\tconstructor(workerData, { readable, writable }, { options, config, streamOptions, useWebWorkers, transferStreams, workerURI }, onTaskFinished) {\n\t\tconst { signal } = streamOptions;\n\t\tObject.assign(workerData, {\n\t\t\tbusy: true,\n\t\t\treadable: readable\n\t\t\t\t.pipeThrough(new ChunkStream(config.chunkSize))\n\t\t\t\t.pipeThrough(new ProgressWatcherStream(streamOptions), { signal }),\n\t\t\twritable,\n\t\t\toptions: Object.assign({}, options),\n\t\t\tworkerURI,\n\t\t\ttransferStreams,\n\t\t\tterminate() {\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\tconst { worker, busy } = workerData;\n\t\t\t\t\tif (worker) {\n\t\t\t\t\t\tif (busy) {\n\t\t\t\t\t\t\tworkerData.resolveTerminated = resolve;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tworker.terminate();\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tworkerData.interface = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tonTaskFinished() {\n\t\t\t\tconst { resolveTerminated } = workerData;\n\t\t\t\tif (resolveTerminated) {\n\t\t\t\t\tworkerData.resolveTerminated = null;\n\t\t\t\t\tworkerData.terminated = true;\n\t\t\t\t\tworkerData.worker.terminate();\n\t\t\t\t\tresolveTerminated();\n\t\t\t\t}\n\t\t\t\tworkerData.busy = false;\n\t\t\t\tonTaskFinished(workerData);\n\t\t\t}\n\t\t});\n\t\treturn (useWebWorkers && WEB_WORKERS_SUPPORTED ? createWebWorkerInterface : createWorkerInterface)(workerData, config);\n\t}\n}\n\nclass ProgressWatcherStream extends TransformStream {\n\n\tconstructor({ onstart, onprogress, size, onend }) {\n\t\tlet chunkOffset = 0;\n\t\tsuper({\n\t\t\tasync start() {\n\t\t\t\tif (onstart) {\n\t\t\t\t\tawait callHandler(onstart, size);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync transform(chunk, controller) {\n\t\t\t\tchunkOffset += chunk.length;\n\t\t\t\tif (onprogress) {\n\t\t\t\t\tawait callHandler(onprogress, chunkOffset, size);\n\t\t\t\t}\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t},\n\t\t\tasync flush() {\n\t\t\t\tif (onend) {\n\t\t\t\t\tawait callHandler(onend, chunkOffset);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nasync function callHandler(handler, ...parameters) {\n\ttry {\n\t\tawait handler(...parameters);\n\t} catch {\n\t\t// ignored\n\t}\n}\n\nfunction createWorkerInterface(workerData, config) {\n\treturn {\n\t\trun: () => runWorker(workerData, config)\n\t};\n}\n\nfunction createWebWorkerInterface(workerData, config) {\n\tconst { baseURI, chunkSize } = config;\n\tlet { wasmURI } = config;\n\n\tif (!workerData.interface) {\n\t\t// deno-lint-ignore valid-typeof\n\t\tif (typeof wasmURI == FUNCTION_TYPE) {\n\t\t\twasmURI = wasmURI();\n\t\t}\n\t\tlet worker;\n\t\ttry {\n\t\t\tworker = getWebWorker(workerData.workerURI, baseURI, workerData);\n\t\t} catch {\n\t\t\tWEB_WORKERS_SUPPORTED = false;\n\t\t\treturn createWorkerInterface(workerData, config);\n\t\t}\n\t\tObject.assign(workerData, {\n\t\t\tworker,\n\t\t\tinterface: {\n\t\t\t\trun: () => runWebWorker(workerData, { chunkSize, wasmURI, baseURI })\n\t\t\t}\n\t\t});\n\t}\n\treturn workerData.interface;\n}\n\nasync function runWorker({ options, readable, writable, onTaskFinished }, config) {\n\tlet codecStream;\n\ttry {\n\t\tif (!options.useCompressionStream) {\n\t\t\ttry {\n\t\t\t\tawait initModule(config);\n\t\t\t} catch {\n\t\t\t\toptions.useCompressionStream = true;\n\t\t\t}\n\t\t}\n\t\tcodecStream = new CodecStream(options, config);\n\t\tawait readable.pipeThrough(codecStream).pipeTo(writable, { preventClose: true, preventAbort: true });\n\t\tconst {\n\t\t\tsignature,\n\t\t\tinputSize,\n\t\t\toutputSize\n\t\t} = codecStream;\n\t\treturn {\n\t\t\tsignature,\n\t\t\tinputSize,\n\t\t\toutputSize\n\t\t};\n\t} catch (error) {\n\t\tif (codecStream) {\n\t\t\terror.outputSize = codecStream.outputSize;\n\t\t}\n\t\tthrow error;\n\t} finally {\n\t\tonTaskFinished();\n\t}\n}\n\nasync function runWebWorker(workerData, config) {\n\tlet resolveResult, rejectResult;\n\tconst result = new Promise((resolve, reject) => {\n\t\tresolveResult = resolve;\n\t\trejectResult = reject;\n\t});\n\tObject.assign(workerData, {\n\t\treader: null,\n\t\twriter: null,\n\t\tresolveResult,\n\t\trejectResult,\n\t\tresult\n\t});\n\tconst { readable, options } = workerData;\n\tconst { writable, closed } = watchClosedStream(workerData.writable);\n\tconst streamsTransferred = sendMessage({\n\t\ttype: MESSAGE_START,\n\t\toptions,\n\t\tconfig,\n\t\treadable,\n\t\twritable\n\t}, workerData);\n\tif (!streamsTransferred) {\n\t\tObject.assign(workerData, {\n\t\t\treader: readable.getReader(),\n\t\t\twriter: writable.getWriter()\n\t\t});\n\t}\n\tconst resultValue = await result;\n\tif (!streamsTransferred) {\n\t\tawait writable.getWriter().close();\n\t}\n\tawait closed;\n\treturn resultValue;\n}\n\nfunction watchClosedStream(writableSource) {\n\tlet resolveStreamClosed;\n\tconst closed = new Promise(resolve => resolveStreamClosed = resolve);\n\tconst writable = new WritableStream({\n\t\tasync write(chunk) {\n\t\t\tconst writer = writableSource.getWriter();\n\t\t\tawait writer.ready;\n\t\t\tawait writer.write(chunk);\n\t\t\twriter.releaseLock();\n\t\t},\n\t\tclose() {\n\t\t\tresolveStreamClosed();\n\t\t},\n\t\tabort(reason) {\n\t\t\tconst writer = writableSource.getWriter();\n\t\t\treturn writer.abort(reason);\n\t\t}\n\t});\n\treturn { writable, closed };\n}\n\nlet transferStreamsSupported = true;\n\nfunction getWebWorker(url, baseURI, workerData) {\n\tconst workerOptions = { type: \"module\" };\n\tlet scriptUrl, worker;\n\t// deno-lint-ignore valid-typeof\n\tif (typeof url == FUNCTION_TYPE) {\n\t\turl = url();\n\t}\n\tif (url.startsWith(\"data:\") || url.startsWith(\"blob:\")) {\n\t\ttry {\n\t\t\tworker = new Worker(url);\n\t\t} catch {\n\t\t\tworker = new Worker(url, workerOptions);\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tscriptUrl = new URL(url, baseURI);\n\t\t} catch {\n\t\t\tscriptUrl = url;\n\t\t}\n\t\tworker = new Worker(scriptUrl, workerOptions);\n\t}\n\tworker.addEventListener(MESSAGE_EVENT_TYPE, event => onMessage(event, workerData));\n\treturn worker;\n}\n\nfunction sendMessage(message, { worker, writer, onTaskFinished, transferStreams }) {\n\ttry {\n\t\tconst { value, readable, writable } = message;\n\t\tconst transferables = [];\n\t\tif (value) {\n\t\t\tmessage.value = value;\n\t\t\ttransferables.push(message.value.buffer);\n\t\t}\n\t\tif (transferStreams && transferStreamsSupported) {\n\t\t\tif (readable) {\n\t\t\t\ttransferables.push(readable);\n\t\t\t}\n\t\t\tif (writable) {\n\t\t\t\ttransferables.push(writable);\n\t\t\t}\n\t\t} else {\n\t\t\tmessage.readable = message.writable = null;\n\t\t}\n\t\tif (transferables.length) {\n\t\t\ttry {\n\t\t\t\tworker.postMessage(message, transferables);\n\t\t\t\treturn true;\n\t\t\t} catch {\n\t\t\t\ttransferStreamsSupported = false;\n\t\t\t\tmessage.readable = message.writable = null;\n\t\t\t\tworker.postMessage(message);\n\t\t\t}\n\t\t} else {\n\t\t\tworker.postMessage(message);\n\t\t}\n\t} catch (error) {\n\t\tif (writer) {\n\t\t\twriter.releaseLock();\n\t\t}\n\t\tonTaskFinished();\n\t\tthrow error;\n\t}\n}\n\nasync function onMessage({ data }, workerData) {\n\tconst { type, value, messageId, result, error } = data;\n\tconst { reader, writer, resolveResult, rejectResult, onTaskFinished } = workerData;\n\ttry {\n\t\tif (error) {\n\t\t\tconst { message, stack, code, name, outputSize } = error;\n\t\t\tconst responseError = new Error(message);\n\t\t\tObject.assign(responseError, { stack, code, name, outputSize });\n\t\t\tclose(responseError);\n\t\t} else {\n\t\t\tif (type == MESSAGE_PULL) {\n\t\t\t\tconst { value, done } = await reader.read();\n\t\t\t\tsendMessage({ type: MESSAGE_DATA, value, done, messageId }, workerData);\n\t\t\t}\n\t\t\tif (type == MESSAGE_DATA) {\n\t\t\t\tawait writer.ready;\n\t\t\t\tawait writer.write(new Uint8Array(value));\n\t\t\t\tsendMessage({ type: MESSAGE_ACK_DATA, messageId }, workerData);\n\t\t\t}\n\t\t\tif (type == MESSAGE_CLOSE) {\n\t\t\t\tclose(null, result);\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tsendMessage({ type: MESSAGE_CLOSE, messageId }, workerData);\n\t\tclose(error);\n\t}\n\n\tfunction close(error, result) {\n\t\tif (error) {\n\t\t\trejectResult(error);\n\t\t} else {\n\t\t\tresolveResult(result);\n\t\t}\n\t\tif (writer) {\n\t\t\twriter.releaseLock();\n\t\t}\n\t\tonTaskFinished();\n\t}\n}","/*\n Copyright (c) 2025 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global setTimeout, clearTimeout */\n\nimport { UNDEFINED_VALUE } from \"./constants.js\";\nimport {\n\tCODEC_INFLATE,\n\tCODEC_DEFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_UNCOMPRESSED_SIZE,\n\tERR_INVALID_PASSWORD,\n\tERR_ABORT_CHECK_PASSWORD\n} from \"./streams/codec-stream.js\";\nimport { CodecWorker } from \"./codec-worker.js\";\n\nlet pool = [];\nconst pendingRequests = [];\n\nexport {\n\trunWorker,\n\tterminateWorkers,\n\tCODEC_DEFLATE,\n\tCODEC_INFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_UNCOMPRESSED_SIZE,\n\tERR_INVALID_PASSWORD,\n\tERR_ABORT_CHECK_PASSWORD\n};\n\nlet indexWorker = 0;\n\nasync function runWorker(stream, workerOptions) {\n\tconst { options, config } = workerOptions;\n\tconst { transferStreams, useWebWorkers, useCompressionStream, compressed, signed, encrypted } = options;\n\tconst { workerURI, maxWorkers } = config;\n\tworkerOptions.transferStreams = transferStreams || transferStreams === UNDEFINED_VALUE;\n\tconst streamCopy = !compressed && !signed && !encrypted && !workerOptions.transferStreams;\n\tworkerOptions.useWebWorkers = !streamCopy && (useWebWorkers || (useWebWorkers === UNDEFINED_VALUE && config.useWebWorkers));\n\tworkerOptions.workerURI = workerOptions.useWebWorkers && workerURI ? workerURI : UNDEFINED_VALUE;\n\toptions.useCompressionStream = useCompressionStream || (useCompressionStream === UNDEFINED_VALUE && config.useCompressionStream);\n\treturn (await getWorker()).run();\n\n\t// deno-lint-ignore require-await\n\tasync function getWorker() {\n\t\tconst workerData = pool.find(workerData => !workerData.busy);\n\t\tif (workerData) {\n\t\t\tclearTerminateTimeout(workerData);\n\t\t\treturn new CodecWorker(workerData, stream, workerOptions, onTaskFinished);\n\t\t} else if (pool.length < maxWorkers) {\n\t\t\tconst workerData = { indexWorker };\n\t\t\tindexWorker++;\n\t\t\tpool.push(workerData);\n\t\t\treturn new CodecWorker(workerData, stream, workerOptions, onTaskFinished);\n\t\t} else {\n\t\t\treturn new Promise(resolve => pendingRequests.push({ resolve, stream, workerOptions }));\n\t\t}\n\t}\n\n\tfunction onTaskFinished(workerData) {\n\t\tif (pendingRequests.length) {\n\t\t\tconst [{ resolve, stream, workerOptions }] = pendingRequests.splice(0, 1);\n\t\t\tresolve(new CodecWorker(workerData, stream, workerOptions, onTaskFinished));\n\t\t} else if (workerData.worker) {\n\t\t\tclearTerminateTimeout(workerData);\n\t\t\tterminateWorker(workerData, workerOptions);\n\t\t} else {\n\t\t\tpool = pool.filter(data => data != workerData);\n\t\t}\n\t}\n}\n\nfunction terminateWorker(workerData, workerOptions) {\n\tconst { config } = workerOptions;\n\tconst { terminateWorkerTimeout } = config;\n\tif (Number.isFinite(terminateWorkerTimeout) && terminateWorkerTimeout >= 0) {\n\t\tif (workerData.terminated) {\n\t\t\tworkerData.terminated = false;\n\t\t} else {\n\t\t\tworkerData.terminateTimeout = setTimeout(async () => {\n\t\t\t\tpool = pool.filter(data => data != workerData);\n\t\t\t\ttry {\n\t\t\t\t\tawait workerData.terminate();\n\t\t\t\t} catch {\n\t\t\t\t\t// ignored\n\t\t\t\t}\n\t\t\t}, terminateWorkerTimeout);\n\t\t}\n\t}\n}\n\nfunction clearTerminateTimeout(workerData) {\n\tconst { terminateTimeout } = workerData;\n\tif (terminateTimeout) {\n\t\tclearTimeout(terminateTimeout);\n\t\tworkerData.terminateTimeout = null;\n\t}\n}\n\nasync function terminateWorkers() {\n\tawait Promise.allSettled(pool.map(workerData => {\n\t\tclearTerminateTimeout(workerData);\n\t\treturn workerData.terminate();\n\t}));\n}","/*\n Copyright (c) 2025 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global Blob, atob, btoa, XMLHttpRequest, URL, fetch, ReadableStream, WritableStream, FileReader, TransformStream, Response */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tUNDEFINED_VALUE,\n\tFUNCTION_TYPE,\n\tEND_OF_CENTRAL_DIR_LENGTH\n} from \"./constants.js\";\nimport { getConfiguration } from \"./configuration.js\";\n\nconst ERR_HTTP_STATUS = \"HTTP error \";\nconst ERR_HTTP_RANGE = \"HTTP Range not supported\";\nconst ERR_ITERATOR_COMPLETED_TOO_SOON = \"Writer iterator completed too soon\";\nconst ERR_WRITER_NOT_INITIALIZED = \"Writer not initialized\";\n\nconst CONTENT_TYPE_TEXT_PLAIN = \"text/plain\";\nconst HTTP_HEADER_CONTENT_LENGTH = \"Content-Length\";\nconst HTTP_HEADER_CONTENT_RANGE = \"Content-Range\";\nconst HTTP_HEADER_ACCEPT_RANGES = \"Accept-Ranges\";\nconst HTTP_HEADER_RANGE = \"Range\";\nconst HTTP_HEADER_CONTENT_TYPE = \"Content-Type\";\nconst HTTP_METHOD_HEAD = \"HEAD\";\nconst HTTP_METHOD_GET = \"GET\";\nconst HTTP_RANGE_UNIT = \"bytes\";\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\nconst DEFAULT_BUFFER_SIZE = 256 * 1024;\n\nconst PROPERTY_NAME_WRITABLE = \"writable\";\n\nclass Stream {\n\n\tconstructor() {\n\t\tthis.size = 0;\n\t}\n\n\tinit() {\n\t\tthis.initialized = true;\n\t}\n}\n\nclass Reader extends Stream {\n\n\tget readable() {\n\t\tconst reader = this;\n\t\tconst { chunkSize = DEFAULT_CHUNK_SIZE } = reader;\n\t\tconst readable = new ReadableStream({\n\t\t\tstart() {\n\t\t\t\tthis.chunkOffset = 0;\n\t\t\t},\n\t\t\tasync pull(controller) {\n\t\t\t\tconst { offset = 0, size, diskNumberStart } = readable;\n\t\t\t\tconst { chunkOffset } = this;\n\t\t\t\tconst dataSize = size === UNDEFINED_VALUE ? chunkSize : Math.min(chunkSize, size - chunkOffset);\n\t\t\t\tconst data = await readUint8Array(reader, offset + chunkOffset, dataSize, diskNumberStart);\n\t\t\t\tcontroller.enqueue(data);\n\t\t\t\tif ((chunkOffset + chunkSize > size) || (size === UNDEFINED_VALUE && !data.length && dataSize)) {\n\t\t\t\t\tcontroller.close();\n\t\t\t\t} else {\n\t\t\t\t\tthis.chunkOffset += chunkSize;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn readable;\n\t}\n}\n\nclass Writer extends Stream {\n\n\tconstructor() {\n\t\tsuper();\n\t\tconst writer = this;\n\t\tconst writable = new WritableStream({\n\t\t\twrite(chunk) {\n\t\t\t\tif (!writer.initialized) {\n\t\t\t\t\tthrow new Error(ERR_WRITER_NOT_INITIALIZED);\n\t\t\t\t}\n\t\t\t\treturn writer.writeUint8Array(chunk);\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(writer, PROPERTY_NAME_WRITABLE, {\n\t\t\tget() {\n\t\t\t\treturn writable;\n\t\t\t}\n\t\t});\n\t}\n\n\twriteUint8Array() {\n\t\t// abstract\n\t}\n}\n\nclass Data64URIReader extends Reader {\n\n\tconstructor(dataURI) {\n\t\tsuper();\n\t\tlet dataEnd = dataURI.length;\n\t\twhile (dataURI.charAt(dataEnd - 1) == \"=\") {\n\t\t\tdataEnd--;\n\t\t}\n\t\tconst dataStart = dataURI.indexOf(\",\") + 1;\n\t\tObject.assign(this, {\n\t\t\tdataURI,\n\t\t\tdataStart,\n\t\t\tsize: Math.floor((dataEnd - dataStart) * 0.75)\n\t\t});\n\t}\n\n\treadUint8Array(offset, length) {\n\t\tconst {\n\t\t\tdataStart,\n\t\t\tdataURI\n\t\t} = this;\n\t\tconst dataArray = new Uint8Array(length);\n\t\tconst start = Math.floor(offset / 3) * 4;\n\t\tconst bytes = atob(dataURI.substring(start + dataStart, Math.ceil((offset + length) / 3) * 4 + dataStart));\n\t\tconst delta = offset - Math.floor(start / 4) * 3;\n\t\tlet effectiveLength = 0;\n\t\tfor (let indexByte = delta; indexByte < delta + length && indexByte < bytes.length; indexByte++) {\n\t\t\tdataArray[indexByte - delta] = bytes.charCodeAt(indexByte);\n\t\t\teffectiveLength++;\n\t\t}\n\t\tif (effectiveLength < dataArray.length) {\n\t\t\treturn dataArray.subarray(0, effectiveLength);\n\t\t} else {\n\t\t\treturn dataArray;\n\t\t}\n\t}\n}\n\nclass Data64URIWriter extends Writer {\n\n\tconstructor(contentType) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\tdata: \"data:\" + (contentType || \"\") + \";base64,\",\n\t\t\tpending: []\n\t\t});\n\t}\n\n\twriteUint8Array(array) {\n\t\tconst writer = this;\n\t\tlet indexArray = 0;\n\t\tlet dataString = writer.pending;\n\t\tconst delta = writer.pending.length;\n\t\twriter.pending = \"\";\n\t\tfor (indexArray = 0; indexArray < (Math.floor((delta + array.length) / 3) * 3) - delta; indexArray++) {\n\t\t\tdataString += String.fromCharCode(array[indexArray]);\n\t\t}\n\t\tfor (; indexArray < array.length; indexArray++) {\n\t\t\twriter.pending += String.fromCharCode(array[indexArray]);\n\t\t}\n\t\tif (dataString.length) {\n\t\t\tif (dataString.length > 2) {\n\t\t\t\twriter.data += btoa(dataString);\n\t\t\t} else {\n\t\t\t\twriter.pending += dataString;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetData() {\n\t\treturn this.data + btoa(this.pending);\n\t}\n}\n\nclass BlobReader extends Reader {\n\n\tconstructor(blob) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\tblob,\n\t\t\tsize: blob.size\n\t\t});\n\t}\n\n\tasync readUint8Array(offset, length) {\n\t\tconst reader = this;\n\t\tconst offsetEnd = offset + length;\n\t\tconst blob = offset || offsetEnd < reader.size ? reader.blob.slice(offset, offsetEnd) : reader.blob;\n\t\tlet arrayBuffer = await blob.arrayBuffer();\n\t\tif (arrayBuffer.byteLength > length) {\n\t\t\tarrayBuffer = arrayBuffer.slice(offset, offsetEnd);\n\t\t}\n\t\treturn new Uint8Array(arrayBuffer);\n\t}\n}\n\nclass BlobWriter extends Stream {\n\n\tconstructor(contentType) {\n\t\tsuper();\n\t\tconst writer = this;\n\t\tconst transformStream = new TransformStream();\n\t\tconst headers = [];\n\t\tif (contentType) {\n\t\t\theaders.push([HTTP_HEADER_CONTENT_TYPE, contentType]);\n\t\t}\n\t\tObject.defineProperty(writer, PROPERTY_NAME_WRITABLE, {\n\t\t\tget() {\n\t\t\t\treturn transformStream.writable;\n\t\t\t}\n\t\t});\n\t\twriter.blob = new Response(transformStream.readable, { headers }).blob();\n\t}\n\n\tgetData() {\n\t\treturn this.blob;\n\t}\n}\n\nclass TextReader extends BlobReader {\n\n\tconstructor(text) {\n\t\tsuper(new Blob([text], { type: CONTENT_TYPE_TEXT_PLAIN }));\n\t}\n}\n\nclass TextWriter extends BlobWriter {\n\n\tconstructor(encoding) {\n\t\tsuper(encoding);\n\t\tObject.assign(this, {\n\t\t\tencoding,\n\t\t\tutf8: !encoding || encoding.toLowerCase() == \"utf-8\"\n\t\t});\n\t}\n\n\tasync getData() {\n\t\tconst {\n\t\t\tencoding,\n\t\t\tutf8\n\t\t} = this;\n\t\tconst blob = await super.getData();\n\t\tif (blob.text && utf8) {\n\t\t\treturn blob.text();\n\t\t} else {\n\t\t\tconst reader = new FileReader();\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tObject.assign(reader, {\n\t\t\t\t\tonload: ({ target }) => resolve(target.result),\n\t\t\t\t\tonerror: () => reject(reader.error)\n\t\t\t\t});\n\t\t\t\treader.readAsText(blob, encoding);\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass FetchReader extends Reader {\n\n\tconstructor(url, options) {\n\t\tsuper();\n\t\tcreateHttpReader(this, url, options);\n\t}\n\n\tasync init() {\n\t\tawait initHttpReader(this, sendFetchRequest, getFetchRequestData);\n\t\tsuper.init();\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn readUint8ArrayHttpReader(this, index, length, sendFetchRequest, getFetchRequestData);\n\t}\n}\n\nclass XHRReader extends Reader {\n\n\tconstructor(url, options) {\n\t\tsuper();\n\t\tcreateHttpReader(this, url, options);\n\t}\n\n\tasync init() {\n\t\tawait initHttpReader(this, sendXMLHttpRequest, getXMLHttpRequestData);\n\t\tsuper.init();\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn readUint8ArrayHttpReader(this, index, length, sendXMLHttpRequest, getXMLHttpRequestData);\n\t}\n}\n\nfunction createHttpReader(httpReader, url, options) {\n\tconst {\n\t\tpreventHeadRequest,\n\t\tuseRangeHeader,\n\t\tforceRangeRequests,\n\t\tcombineSizeEocd\n\t} = options;\n\toptions = Object.assign({}, options);\n\tdelete options.preventHeadRequest;\n\tdelete options.useRangeHeader;\n\tdelete options.forceRangeRequests;\n\tdelete options.combineSizeEocd;\n\tdelete options.useXHR;\n\tObject.assign(httpReader, {\n\t\turl,\n\t\toptions,\n\t\tpreventHeadRequest,\n\t\tuseRangeHeader,\n\t\tforceRangeRequests,\n\t\tcombineSizeEocd\n\t});\n}\n\nasync function initHttpReader(httpReader, sendRequest, getRequestData) {\n\tconst {\n\t\turl,\n\t\tpreventHeadRequest,\n\t\tuseRangeHeader,\n\t\tforceRangeRequests,\n\t\tcombineSizeEocd\n\t} = httpReader;\n\tif (isHttpFamily(url) && (useRangeHeader || forceRangeRequests) && (typeof preventHeadRequest == \"undefined\" || preventHeadRequest)) {\n\t\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getRangeHeaders(httpReader, combineSizeEocd ? -END_OF_CENTRAL_DIR_LENGTH : undefined));\n\t\tconst acceptRanges = response.headers.get(HTTP_HEADER_ACCEPT_RANGES);\n\t\tif (!forceRangeRequests && (!acceptRanges || acceptRanges.toLowerCase() != HTTP_RANGE_UNIT)) {\n\t\t\tthrow new Error(ERR_HTTP_RANGE);\n\t\t} else {\n\t\t\tif (combineSizeEocd) {\n\t\t\t\thttpReader.eocdCache = new Uint8Array(await response.arrayBuffer());\n\t\t\t}\n\t\t\tlet contentSize;\n\t\t\tconst contentRangeHeader = response.headers.get(HTTP_HEADER_CONTENT_RANGE);\n\t\t\tif (contentRangeHeader) {\n\t\t\t\tconst splitHeader = contentRangeHeader.trim().split(/\\s*\\/\\s*/);\n\t\t\t\tif (splitHeader.length) {\n\t\t\t\t\tconst headerValue = splitHeader[1];\n\t\t\t\t\tif (headerValue && headerValue != \"*\") {\n\t\t\t\t\t\tcontentSize = Number(headerValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (contentSize === UNDEFINED_VALUE) {\n\t\t\t\tawait getContentLength(httpReader, sendRequest, getRequestData);\n\t\t\t} else {\n\t\t\t\thttpReader.size = contentSize;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tawait getContentLength(httpReader, sendRequest, getRequestData);\n\t}\n}\n\nasync function readUint8ArrayHttpReader(httpReader, index, length, sendRequest, getRequestData) {\n\tconst {\n\t\tuseRangeHeader,\n\t\tforceRangeRequests,\n\t\teocdCache,\n\t\tsize,\n\t\toptions\n\t} = httpReader;\n\tif (useRangeHeader || forceRangeRequests) {\n\t\tif (eocdCache && index == size - END_OF_CENTRAL_DIR_LENGTH && length == END_OF_CENTRAL_DIR_LENGTH) {\n\t\t\treturn eocdCache;\n\t\t}\n\t\tif (index >= size) {\n\t\t\treturn new Uint8Array();\n\t\t} else {\n\t\t\tif (index + length > size) {\n\t\t\t\tlength = size - index;\n\t\t\t}\n\t\t\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getRangeHeaders(httpReader, index, length));\n\t\t\tif (response.status != 206) {\n\t\t\t\tthrow new Error(ERR_HTTP_RANGE);\n\t\t\t}\n\t\t\treturn new Uint8Array(await response.arrayBuffer());\n\t\t}\n\t} else {\n\t\tconst { data } = httpReader;\n\t\tif (!data) {\n\t\t\tawait getRequestData(httpReader, options);\n\t\t}\n\t\treturn new Uint8Array(httpReader.data.subarray(index, index + length));\n\t}\n}\n\nfunction getRangeHeaders(httpReader, index = 0, length = 1) {\n\treturn Object.assign({}, getHeaders(httpReader), { [HTTP_HEADER_RANGE]: HTTP_RANGE_UNIT + \"=\" + (index < 0 ? index : index + \"-\" + (index + length - 1)) });\n}\n\nfunction getHeaders({ options }) {\n\tconst { headers } = options;\n\tif (headers) {\n\t\tif (Symbol.iterator in headers) {\n\t\t\treturn Object.fromEntries(headers);\n\t\t} else {\n\t\t\treturn headers;\n\t\t}\n\t}\n}\n\nasync function getFetchRequestData(httpReader) {\n\tawait getRequestData(httpReader, sendFetchRequest);\n}\n\nasync function getXMLHttpRequestData(httpReader) {\n\tawait getRequestData(httpReader, sendXMLHttpRequest);\n}\n\nasync function getRequestData(httpReader, sendRequest) {\n\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getHeaders(httpReader));\n\thttpReader.data = new Uint8Array(await response.arrayBuffer());\n\tif (!httpReader.size) {\n\t\thttpReader.size = httpReader.data.length;\n\t}\n}\n\nasync function getContentLength(httpReader, sendRequest, getRequestData) {\n\tif (httpReader.preventHeadRequest) {\n\t\tawait getRequestData(httpReader, httpReader.options);\n\t} else {\n\t\tconst response = await sendRequest(HTTP_METHOD_HEAD, httpReader, getHeaders(httpReader));\n\t\tconst contentLength = response.headers.get(HTTP_HEADER_CONTENT_LENGTH);\n\t\tif (contentLength) {\n\t\t\thttpReader.size = Number(contentLength);\n\t\t} else {\n\t\t\tawait getRequestData(httpReader, httpReader.options);\n\t\t}\n\t}\n}\n\nasync function sendFetchRequest(method, { options, url }, headers) {\n\tconst response = await fetch(url, Object.assign({}, options, { method, headers }));\n\tif (response.status < 400) {\n\t\treturn response;\n\t} else {\n\t\tthrow response.status == 416 ? new Error(ERR_HTTP_RANGE) : new Error(ERR_HTTP_STATUS + (response.statusText || response.status));\n\t}\n}\n\nfunction sendXMLHttpRequest(method, { url }, headers) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\trequest.addEventListener(\"load\", () => {\n\t\t\tif (request.status < 400) {\n\t\t\t\tconst headers = [];\n\t\t\t\trequest.getAllResponseHeaders().trim().split(/[\\r\\n]+/).forEach(header => {\n\t\t\t\t\tconst splitHeader = header.trim().split(/\\s*:\\s*/);\n\t\t\t\t\tsplitHeader[0] = splitHeader[0].trim().replace(/^[a-z]|-[a-z]/g, value => value.toUpperCase());\n\t\t\t\t\theaders.push(splitHeader);\n\t\t\t\t});\n\t\t\t\tresolve({\n\t\t\t\t\tstatus: request.status,\n\t\t\t\t\tarrayBuffer: () => request.response,\n\t\t\t\t\theaders: new Map(headers)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treject(request.status == 416 ? new Error(ERR_HTTP_RANGE) : new Error(ERR_HTTP_STATUS + (request.statusText || request.status)));\n\t\t\t}\n\t\t}, false);\n\t\trequest.addEventListener(\"error\", event => reject(event.detail ? event.detail.error : new Error(\"Network error\")), false);\n\t\trequest.open(method, url);\n\t\tif (headers) {\n\t\t\tfor (const entry of Object.entries(headers)) {\n\t\t\t\trequest.setRequestHeader(entry[0], entry[1]);\n\t\t\t}\n\t\t}\n\t\trequest.responseType = \"arraybuffer\";\n\t\trequest.send();\n\t});\n}\n\nclass HttpReader extends Reader {\n\n\tconstructor(url, options = {}) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\turl,\n\t\t\treader: options.useXHR ? new XHRReader(url, options) : new FetchReader(url, options)\n\t\t});\n\t}\n\n\tset size(value) {\n\t\t// ignored\n\t}\n\n\tget size() {\n\t\treturn this.reader.size;\n\t}\n\n\tasync init() {\n\t\tawait this.reader.init();\n\t\tsuper.init();\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn this.reader.readUint8Array(index, length);\n\t}\n}\n\nclass HttpRangeReader extends HttpReader {\n\n\tconstructor(url, options = {}) {\n\t\toptions.useRangeHeader = true;\n\t\tsuper(url, options);\n\t}\n}\n\n\nclass Uint8ArrayReader extends Reader {\n\n\tconstructor(array) {\n\t\tsuper();\n\t\tarray = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n\t\tObject.assign(this, {\n\t\t\tarray,\n\t\t\tsize: array.length\n\t\t});\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn this.array.slice(index, index + length);\n\t}\n}\n\nclass Uint8ArrayWriter extends Writer {\n\n\tconstructor(defaultBufferSize) {\n\t\tsuper();\n\t\tthis.defaultBufferSize = defaultBufferSize || DEFAULT_BUFFER_SIZE;\n\t}\n\n\tinit(initSize = 0) {\n\t\tObject.assign(this, {\n\t\t\toffset: 0,\n\t\t\tarray: new Uint8Array(initSize > 0 ? initSize : this.defaultBufferSize)\n\t\t});\n\t\tsuper.init();\n\t}\n\n\twriteUint8Array(array) {\n\t\tconst writer = this;\n\t\tconst requiredLength = writer.offset + array.length;\n\t\tif (requiredLength > writer.array.length) {\n\t\t\tlet newLength = writer.array.length ? writer.array.length * 2 : writer.defaultBufferSize;\n\t\t\twhile (newLength < requiredLength) {\n\t\t\t\tnewLength *= 2;\n\t\t\t}\n\t\t\tconst previousArray = writer.array;\n\t\t\twriter.array = new Uint8Array(newLength);\n\t\t\twriter.array.set(previousArray);\n\t\t}\n\t\twriter.array.set(array, writer.offset);\n\t\twriter.offset += array.length;\n\t}\n\n\tgetData() {\n\t\tif (this.offset === this.array.length) {\n\t\t\treturn this.array;\n\t\t} else {\n\t\t\treturn this.array.slice(0, this.offset);\n\t\t}\n\t}\n}\n\nclass SplitDataReader extends Reader {\n\n\tconstructor(readers) {\n\t\tsuper();\n\t\tthis.readers = readers;\n\t}\n\n\tasync init() {\n\t\tconst reader = this;\n\t\tconst { readers } = reader;\n\t\treader.lastDiskNumber = 0;\n\t\treader.lastDiskOffset = 0;\n\t\tawait Promise.all(readers.map(async (diskReader, indexDiskReader) => {\n\t\t\tawait diskReader.init();\n\t\t\tif (indexDiskReader != readers.length - 1) {\n\t\t\t\treader.lastDiskOffset += diskReader.size;\n\t\t\t}\n\t\t\treader.size += diskReader.size;\n\t\t}));\n\t\tsuper.init();\n\t}\n\n\tasync readUint8Array(offset, length, diskNumber = 0) {\n\t\tconst reader = this;\n\t\tconst { readers } = this;\n\t\tlet result;\n\t\tlet currentDiskNumber = diskNumber;\n\t\tif (currentDiskNumber == -1) {\n\t\t\tcurrentDiskNumber = readers.length - 1;\n\t\t}\n\t\tlet currentReaderOffset = offset;\n\t\twhile (readers[currentDiskNumber] && currentReaderOffset >= readers[currentDiskNumber].size) {\n\t\t\tcurrentReaderOffset -= readers[currentDiskNumber].size;\n\t\t\tcurrentDiskNumber++;\n\t\t}\n\t\tconst currentReader = readers[currentDiskNumber];\n\t\tif (currentReader) {\n\t\t\tconst currentReaderSize = currentReader.size;\n\t\t\tif (currentReaderOffset + length <= currentReaderSize) {\n\t\t\t\tresult = await readUint8Array(currentReader, currentReaderOffset, length);\n\t\t\t} else {\n\t\t\t\tconst chunkLength = currentReaderSize - currentReaderOffset;\n\t\t\t\tresult = new Uint8Array(length);\n\t\t\t\tconst firstPart = await readUint8Array(currentReader, currentReaderOffset, chunkLength);\n\t\t\t\tresult.set(firstPart, 0);\n\t\t\t\tconst secondPart = await reader.readUint8Array(offset + chunkLength, length - chunkLength, diskNumber);\n\t\t\t\tresult.set(secondPart, chunkLength);\n\t\t\t\tif (firstPart.length + secondPart.length < length) {\n\t\t\t\t\tresult = result.subarray(0, firstPart.length + secondPart.length);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tresult = new Uint8Array();\n\t\t}\n\t\treader.lastDiskNumber = Math.max(currentDiskNumber, reader.lastDiskNumber);\n\t\treturn result;\n\t}\n}\n\nclass SplitDataWriter extends Stream {\n\n\tconstructor(writerGenerator, maxSize = 4294967295) {\n\t\tsuper();\n\t\tconst writer = this;\n\t\tObject.assign(writer, {\n\t\t\tdiskNumber: 0,\n\t\t\tdiskOffset: 0,\n\t\t\tsize: 0,\n\t\t\tmaxSize,\n\t\t\tavailableSize: maxSize\n\t\t});\n\t\tlet diskSourceWriter, diskWritable, diskWriter;\n\t\tconst writable = new WritableStream({\n\t\t\tasync write(chunk) {\n\t\t\t\tconst { availableSize } = writer;\n\t\t\t\tif (!diskWriter) {\n\t\t\t\t\tconst { value, done } = await writerGenerator.next();\n\t\t\t\t\tif (done && !value) {\n\t\t\t\t\t\tthrow new Error(ERR_ITERATOR_COMPLETED_TOO_SOON);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdiskSourceWriter = value;\n\t\t\t\t\t\tdiskSourceWriter.size = 0;\n\t\t\t\t\t\tif (diskSourceWriter.maxSize) {\n\t\t\t\t\t\t\twriter.maxSize = diskSourceWriter.maxSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twriter.availableSize = writer.maxSize;\n\t\t\t\t\t\tawait initStream(diskSourceWriter);\n\t\t\t\t\t\tdiskWritable = value.writable;\n\t\t\t\t\t\tdiskWriter = diskWritable.getWriter();\n\t\t\t\t\t}\n\t\t\t\t\tawait this.write(chunk);\n\t\t\t\t} else if (chunk.length >= availableSize) {\n\t\t\t\t\tawait writeChunk(chunk.subarray(0, availableSize));\n\t\t\t\t\tawait closeDisk();\n\t\t\t\t\twriter.diskOffset += diskSourceWriter.size;\n\t\t\t\t\twriter.diskNumber++;\n\t\t\t\t\tdiskWriter = null;\n\t\t\t\t\tawait this.write(chunk.subarray(availableSize));\n\t\t\t\t} else {\n\t\t\t\t\tawait writeChunk(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync close() {\n\t\t\t\tawait diskWriter.ready;\n\t\t\t\tawait closeDisk();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(writer, PROPERTY_NAME_WRITABLE, {\n\t\t\tget() {\n\t\t\t\treturn writable;\n\t\t\t}\n\t\t});\n\n\t\tasync function writeChunk(chunk) {\n\t\t\tconst chunkLength = chunk.length;\n\t\t\tif (chunkLength) {\n\t\t\t\tawait diskWriter.ready;\n\t\t\t\tawait diskWriter.write(chunk);\n\t\t\t\tdiskSourceWriter.size += chunkLength;\n\t\t\t\twriter.size += chunkLength;\n\t\t\t\twriter.availableSize -= chunkLength;\n\t\t\t}\n\t\t}\n\n\t\tasync function closeDisk() {\n\t\t\tawait diskWriter.close();\n\t\t}\n\t}\n}\n\nclass GenericReader {\n\n\tconstructor(reader) {\n\t\tif (Array.isArray(reader)) {\n\t\t\treader = new SplitDataReader(reader);\n\t\t}\n\t\tif (reader instanceof ReadableStream) {\n\t\t\treader = {\n\t\t\t\treadable: reader\n\t\t\t};\n\t\t}\n\t\treturn reader;\n\t}\n}\n\nclass GenericWriter {\n\n\tconstructor(writer) {\n\t\tif (writer.writable === UNDEFINED_VALUE && typeof writer.next == FUNCTION_TYPE) {\n\t\t\twriter = new SplitDataWriter(writer);\n\t\t}\n\t\tif (writer instanceof WritableStream) {\n\t\t\twriter = {\n\t\t\t\twritable: writer\n\t\t\t};\n\t\t}\n\t\tif (writer.size === UNDEFINED_VALUE) {\n\t\t\twriter.size = 0;\n\t\t}\n\t\tif (!(writer instanceof SplitDataWriter)) {\n\t\t\tObject.assign(writer, {\n\t\t\t\tdiskNumber: 0,\n\t\t\t\tdiskOffset: 0,\n\t\t\t\tavailableSize: Infinity,\n\t\t\t\tmaxSize: Infinity\n\t\t\t});\n\t\t}\n\t\treturn writer;\n\t}\n}\n\nfunction isHttpFamily(url) {\n\tconst { baseURI } = getConfiguration();\n\tconst { protocol } = new URL(url, baseURI);\n\treturn protocol == \"http:\" || protocol == \"https:\";\n}\n\nasync function initStream(stream, initSize) {\n\tif (stream.init && !stream.initialized) {\n\t\tawait stream.init(initSize);\n\t} else {\n\t\treturn Promise.resolve();\n\t}\n}\n\nfunction readUint8Array(reader, offset, size, diskNumber) {\n\treturn reader.readUint8Array(offset, size, diskNumber);\n}\n\nexport {\n\tinitStream,\n\tGenericReader,\n\tGenericWriter,\n\treadUint8Array,\n\tReader,\n\tWriter,\n\tTextReader,\n\tTextWriter,\n\tData64URIReader,\n\tData64URIWriter,\n\tBlobReader,\n\tBlobWriter,\n\tUint8ArrayReader,\n\tUint8ArrayWriter,\n\tHttpReader,\n\tHttpRangeReader,\n\tSplitDataReader,\n\tSplitDataWriter,\n\tERR_HTTP_RANGE,\n\tERR_ITERATOR_COMPLETED_TOO_SOON,\n\tERR_WRITER_NOT_INITIALIZED\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextDecoder */\n\nconst CP437 = \"\\0☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \".split(\"\");\nconst VALID_CP437 = CP437.length == 256;\n\nexport {\n\tdecodeCP437\n};\n\nfunction decodeCP437(stringValue) {\n\tif (VALID_CP437) {\n\t\tlet result = \"\";\n\t\tfor (let indexCharacter = 0; indexCharacter < stringValue.length; indexCharacter++) {\n\t\t\tresult += CP437[stringValue[indexCharacter]];\n\t\t}\n\t\treturn result;\n\t} else {\n\t\treturn new TextDecoder().decode(stringValue);\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextDecoder */\n\nimport { decodeCP437 } from \"./decode-cp437.js\";\n\nexport {\n\tdecodeText\n};\n\nfunction decodeText(value, encoding) {\n\tif (encoding && encoding.trim().toLowerCase() == \"cp437\") {\n\t\treturn decodeCP437(value);\n\t} else {\n\t\treturn new TextDecoder(encoding).decode(value);\n\t}\n}","/*\n Copyright (c) 2025 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst PROPERTY_NAME_FILENAME = \"filename\";\nconst PROPERTY_NAME_RAW_FILENAME = \"rawFilename\";\nconst PROPERTY_NAME_COMMENT = \"comment\";\nconst PROPERTY_NAME_RAW_COMMENT = \"rawComment\";\nconst PROPERTY_NAME_UNCOMPRESSED_SIZE = \"uncompressedSize\";\nconst PROPERTY_NAME_COMPRESSED_SIZE = \"compressedSize\";\nconst PROPERTY_NAME_OFFSET = \"offset\";\nconst PROPERTY_NAME_DISK_NUMBER_START = \"diskNumberStart\";\nconst PROPERTY_NAME_LAST_MODIFICATION_DATE = \"lastModDate\";\nconst PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE = \"rawLastModDate\";\nconst PROPERTY_NAME_LAST_ACCESS_DATE = \"lastAccessDate\";\nconst PROPERTY_NAME_RAW_LAST_ACCESS_DATE = \"rawLastAccessDate\";\nconst PROPERTY_NAME_CREATION_DATE = \"creationDate\";\nconst PROPERTY_NAME_RAW_CREATION_DATE = \"rawCreationDate\";\nconst PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTES = \"internalFileAttributes\";\nconst PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTES = \"externalFileAttributes\";\nconst PROPERTY_NAME_MSDOS_ATTRIBUTES_RAW = \"msdosAttributesRaw\";\nconst PROPERTY_NAME_MSDOS_ATTRIBUTES = \"msdosAttributes\";\nconst PROPERTY_NAME_MS_DOS_COMPATIBLE = \"msDosCompatible\";\nconst PROPERTY_NAME_ZIP64 = \"zip64\";\nconst PROPERTY_NAME_ENCRYPTED = \"encrypted\";\nconst PROPERTY_NAME_VERSION = \"version\";\nconst PROPERTY_NAME_VERSION_MADE_BY = \"versionMadeBy\";\nconst PROPERTY_NAME_ZIPCRYPTO = \"zipCrypto\";\nconst PROPERTY_NAME_DIRECTORY = \"directory\";\nconst PROPERTY_NAME_EXECUTABLE = \"executable\";\nconst PROPERTY_NAME_COMPRESSION_METHOD = \"compressionMethod\";\nconst PROPERTY_NAME_SIGNATURE = \"signature\";\nconst PROPERTY_NAME_EXTRA_FIELD = \"extraField\";\nconst PROPERTY_NAME_EXTRA_FIELD_INFOZIP = \"extraFieldInfoZip\";\nconst PROPERTY_NAME_EXTRA_FIELD_UNIX = \"extraFieldUnix\";\nconst PROPERTY_NAME_UID = \"uid\";\nconst PROPERTY_NAME_GID = \"gid\";\nconst PROPERTY_NAME_UNIX_MODE = \"unixMode\";\nconst PROPERTY_NAME_SETUID = \"setuid\";\nconst PROPERTY_NAME_SETGID = \"setgid\";\nconst PROPERTY_NAME_STICKY = \"sticky\";\nconst PROPERTY_NAME_BITFLAG = \"bitFlag\";\nconst PROPERTY_NAME_FILENAME_UTF8 = \"filenameUTF8\";\nconst PROPERTY_NAME_COMMENT_UTF8 = \"commentUTF8\";\nconst PROPERTY_NAME_RAW_EXTRA_FIELD = \"rawExtraField\";\nconst PROPERTY_NAME_EXTRA_FIELD_ZIP64 = \"extraFieldZip64\";\nconst PROPERTY_NAME_EXTRA_FIELD_UNICODE_PATH = \"extraFieldUnicodePath\";\nconst PROPERTY_NAME_EXTRA_FIELD_UNICODE_COMMENT = \"extraFieldUnicodeComment\";\nconst PROPERTY_NAME_EXTRA_FIELD_AES = \"extraFieldAES\";\nconst PROPERTY_NAME_EXTRA_FIELD_NTFS = \"extraFieldNTFS\";\nconst PROPERTY_NAME_EXTRA_FIELD_EXTENDED_TIMESTAMP = \"extraFieldExtendedTimestamp\";\n\nconst PROPERTY_NAMES = [\n\tPROPERTY_NAME_FILENAME,\n\tPROPERTY_NAME_RAW_FILENAME,\n\tPROPERTY_NAME_UNCOMPRESSED_SIZE,\n\tPROPERTY_NAME_COMPRESSED_SIZE,\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_RAW_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_COMMENT,\n\tPROPERTY_NAME_RAW_COMMENT,\n\tPROPERTY_NAME_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_CREATION_DATE,\n\tPROPERTY_NAME_RAW_CREATION_DATE,\n\tPROPERTY_NAME_OFFSET,\n\tPROPERTY_NAME_DISK_NUMBER_START,\n\tPROPERTY_NAME_INTERNAL_FILE_ATTRIBUTES,\n\tPROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTES,\n\tPROPERTY_NAME_MSDOS_ATTRIBUTES_RAW,\n\tPROPERTY_NAME_MSDOS_ATTRIBUTES,\n\tPROPERTY_NAME_MS_DOS_COMPATIBLE,\n\tPROPERTY_NAME_ZIP64,\n\tPROPERTY_NAME_ENCRYPTED,\n\tPROPERTY_NAME_VERSION,\n\tPROPERTY_NAME_VERSION_MADE_BY,\n\tPROPERTY_NAME_ZIPCRYPTO,\n\tPROPERTY_NAME_DIRECTORY,\n\tPROPERTY_NAME_EXECUTABLE,\n\tPROPERTY_NAME_COMPRESSION_METHOD,\n\tPROPERTY_NAME_SIGNATURE,\n\tPROPERTY_NAME_EXTRA_FIELD,\n\tPROPERTY_NAME_EXTRA_FIELD_UNIX,\n\tPROPERTY_NAME_EXTRA_FIELD_INFOZIP,\n\tPROPERTY_NAME_UID,\n\tPROPERTY_NAME_GID,\n\tPROPERTY_NAME_UNIX_MODE,\n\tPROPERTY_NAME_SETUID,\n\tPROPERTY_NAME_SETGID,\n\tPROPERTY_NAME_STICKY,\n\tPROPERTY_NAME_BITFLAG,\n\tPROPERTY_NAME_FILENAME_UTF8,\n\tPROPERTY_NAME_COMMENT_UTF8,\n\tPROPERTY_NAME_RAW_EXTRA_FIELD,\n\tPROPERTY_NAME_EXTRA_FIELD_ZIP64,\n\tPROPERTY_NAME_EXTRA_FIELD_UNICODE_PATH,\n\tPROPERTY_NAME_EXTRA_FIELD_UNICODE_COMMENT,\n\tPROPERTY_NAME_EXTRA_FIELD_AES,\n\tPROPERTY_NAME_EXTRA_FIELD_NTFS,\n\tPROPERTY_NAME_EXTRA_FIELD_EXTENDED_TIMESTAMP\n];\n\nclass Entry {\n\n\tconstructor(data) {\n\t\tPROPERTY_NAMES.forEach(name => this[name] = data[name]);\n\t}\n\n}\n\nexport {\n\tPROPERTY_NAME_FILENAME,\n\tPROPERTY_NAME_RAW_FILENAME,\n\tPROPERTY_NAME_COMMENT,\n\tPROPERTY_NAME_RAW_COMMENT,\n\tPROPERTY_NAME_UNCOMPRESSED_SIZE,\n\tPROPERTY_NAME_COMPRESSED_SIZE,\n\tPROPERTY_NAME_OFFSET,\n\tPROPERTY_NAME_DISK_NUMBER_START,\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_RAW_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_RAW_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_CREATION_DATE,\n\tPROPERTY_NAME_RAW_CREATION_DATE,\n\tPROPERTY_NAME_INTERNAL_FILE_ATTRIBUTES,\n\tPROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTES,\n\tPROPERTY_NAME_MSDOS_ATTRIBUTES_RAW,\n\tPROPERTY_NAME_MSDOS_ATTRIBUTES,\n\tPROPERTY_NAME_MS_DOS_COMPATIBLE,\n\tPROPERTY_NAME_ZIP64,\n\tPROPERTY_NAME_ENCRYPTED,\n\tPROPERTY_NAME_VERSION,\n\tPROPERTY_NAME_VERSION_MADE_BY,\n\tPROPERTY_NAME_ZIPCRYPTO,\n\tPROPERTY_NAME_DIRECTORY,\n\tPROPERTY_NAME_EXECUTABLE,\n\tPROPERTY_NAME_COMPRESSION_METHOD,\n\tPROPERTY_NAME_SIGNATURE,\n\tPROPERTY_NAME_EXTRA_FIELD,\n\tPROPERTY_NAME_GID,\n\tPROPERTY_NAME_UID,\n\tPROPERTY_NAME_UNIX_MODE,\n\tPROPERTY_NAME_SETUID,\n\tPROPERTY_NAME_SETGID,\n\tPROPERTY_NAME_STICKY,\n\tEntry\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst OPTION_FILENAME_ENCODING = \"filenameEncoding\";\nconst OPTION_COMMENT_ENCODING = \"commentEncoding\";\nconst OPTION_DECODE_TEXT = \"decodeText\";\nconst OPTION_EXTRACT_PREPENDED_DATA = \"extractPrependedData\";\nconst OPTION_EXTRACT_APPENDED_DATA = \"extractAppendedData\";\nconst OPTION_PASSWORD = \"password\";\nconst OPTION_RAW_PASSWORD = \"rawPassword\";\nconst OPTION_PASS_THROUGH = \"passThrough\";\nconst OPTION_SIGNAL = \"signal\";\nconst OPTION_CHECK_PASSWORD_ONLY = \"checkPasswordOnly\";\nconst OPTION_CHECK_OVERLAPPING_ENTRY_ONLY = \"checkOverlappingEntryOnly\";\nconst OPTION_CHECK_OVERLAPPING_ENTRY = \"checkOverlappingEntry\";\nconst OPTION_CHECK_SIGNATURE = \"checkSignature\";\nconst OPTION_USE_WEB_WORKERS = \"useWebWorkers\";\nconst OPTION_USE_COMPRESSION_STREAM = \"useCompressionStream\";\nconst OPTION_TRANSFER_STREAMS = \"transferStreams\";\nconst OPTION_PREVENT_CLOSE = \"preventClose\";\nconst OPTION_ENCRYPTION_STRENGTH = \"encryptionStrength\";\nconst OPTION_EXTENDED_TIMESTAMP = \"extendedTimestamp\";\nconst OPTION_KEEP_ORDER = \"keepOrder\";\nconst OPTION_LEVEL = \"level\";\nconst OPTION_BUFFERED_WRITE = \"bufferedWrite\";\nconst OPTION_DATA_DESCRIPTOR_SIGNATURE = \"dataDescriptorSignature\";\nconst OPTION_USE_UNICODE_FILE_NAMES = \"useUnicodeFileNames\";\nconst OPTION_DATA_DESCRIPTOR = \"dataDescriptor\";\nconst OPTION_SUPPORT_ZIP64_SPLIT_FILE = \"supportZip64SplitFile\";\nconst OPTION_ENCODE_TEXT = \"encodeText\";\nconst OPTION_OFFSET = \"offset\";\nconst OPTION_USDZ = \"usdz\";\nconst OPTION_UNIX_EXTRA_FIELD_TYPE = \"unixExtraFieldType\";\n\nexport {\n\tOPTION_FILENAME_ENCODING,\n\tOPTION_COMMENT_ENCODING,\n\tOPTION_DECODE_TEXT,\n\tOPTION_EXTRACT_PREPENDED_DATA,\n\tOPTION_EXTRACT_APPENDED_DATA,\n\tOPTION_PASSWORD,\n\tOPTION_RAW_PASSWORD,\n\tOPTION_PASS_THROUGH,\n\tOPTION_SIGNAL,\n\tOPTION_CHECK_PASSWORD_ONLY,\n\tOPTION_CHECK_OVERLAPPING_ENTRY_ONLY,\n\tOPTION_CHECK_OVERLAPPING_ENTRY,\n\tOPTION_CHECK_SIGNATURE,\n\tOPTION_USE_WEB_WORKERS,\n\tOPTION_USE_COMPRESSION_STREAM,\n\tOPTION_TRANSFER_STREAMS,\n\tOPTION_PREVENT_CLOSE,\n\tOPTION_ENCRYPTION_STRENGTH,\n\tOPTION_EXTENDED_TIMESTAMP,\n\tOPTION_KEEP_ORDER,\n\tOPTION_LEVEL,\n\tOPTION_BUFFERED_WRITE,\n\tOPTION_DATA_DESCRIPTOR_SIGNATURE,\n\tOPTION_USE_UNICODE_FILE_NAMES,\n\tOPTION_DATA_DESCRIPTOR,\n\tOPTION_SUPPORT_ZIP64_SPLIT_FILE,\n\tOPTION_ENCODE_TEXT,\n\tOPTION_OFFSET,\n\tOPTION_USDZ,\n\tOPTION_UNIX_EXTRA_FIELD_TYPE\n};","/*\n Copyright (c) 2025 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright\n notice, this list of conditions and the following disclaimer in\n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global Response, WritableStream, ReadableStream, TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tMAX_32_BITS,\n\tMAX_16_BITS,\n\tMAX_8_BITS,\n\tCOMPRESSION_METHOD_DEFLATE,\n\tCOMPRESSION_METHOD_STORE,\n\tCOMPRESSION_METHOD_AES,\n\tSPLIT_ZIP_FILE_SIGNATURE,\n\tDATA_DESCRIPTOR_RECORD_SIGNATURE,\n\tDATA_DESCRIPTOR_RECORD_LENGTH,\n\tDATA_DESCRIPTOR_RECORD_ZIP_64_LENGTH,\n\tDATA_DESCRIPTOR_RECORD_SIGNATURE_LENGTH,\n\tLOCAL_FILE_HEADER_SIGNATURE,\n\tCENTRAL_FILE_HEADER_SIGNATURE,\n\tEND_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_SIGNATURE,\n\tEXTRAFIELD_TYPE_ZIP64,\n\tEXTRAFIELD_TYPE_UNICODE_PATH,\n\tEXTRAFIELD_TYPE_UNICODE_COMMENT,\n\tEXTRAFIELD_TYPE_AES,\n\tEXTRAFIELD_TYPE_NTFS,\n\tEXTRAFIELD_TYPE_NTFS_TAG1,\n\tEXTRAFIELD_TYPE_EXTENDED_TIMESTAMP,\n\tEXTRAFIELD_TYPE_INFOZIP,\n\tEXTRAFIELD_TYPE_UNIX,\n\tEXTRAFIELD_TYPE_USDZ,\n\tEND_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LENGTH,\n\tBITFLAG_ENCRYPTED,\n\tBITFLAG_LEVEL,\n\tBITFLAG_DATA_DESCRIPTOR,\n\tBITFLAG_LANG_ENCODING_FLAG,\n\tFILE_ATTR_MSDOS_DIR_MASK,\n\tFILE_ATTR_MSDOS_READONLY_MASK,\n\tFILE_ATTR_MSDOS_HIDDEN_MASK,\n\tFILE_ATTR_MSDOS_SYSTEM_MASK,\n\tFILE_ATTR_MSDOS_ARCHIVE_MASK,\n\tFILE_ATTR_UNIX_TYPE_MASK,\n\tFILE_ATTR_UNIX_TYPE_DIR,\n\tFILE_ATTR_UNIX_EXECUTABLE_MASK,\n\tFILE_ATTR_UNIX_DEFAULT_MASK,\n\tDIRECTORY_SIGNATURE,\n\tHEADER_SIZE,\n\tHEADER_OFFSET_SIGNATURE,\n\tHEADER_OFFSET_COMPRESSED_SIZE,\n\tHEADER_OFFSET_UNCOMPRESSED_SIZE,\n\tUNDEFINED_VALUE,\n\tCOMPRESSION_METHOD_DEFLATE_64,\n\tFILE_ATTR_UNIX_SETUID_MASK,\n\tFILE_ATTR_UNIX_SETGID_MASK,\n\tFILE_ATTR_UNIX_STICKY_MASK\n} from \"./constants.js\";\nimport {\n\tgetConfiguration,\n\tgetChunkSize\n} from \"./configuration.js\";\nimport {\n\trunWorker,\n\tCODEC_INFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_UNCOMPRESSED_SIZE,\n\tERR_ABORT_CHECK_PASSWORD\n} from \"./codec-pool.js\";\nimport {\n\tinitStream,\n\treadUint8Array,\n\tBlobReader,\n\tGenericReader,\n\tGenericWriter\n} from \"./io.js\";\nimport { decodeText } from \"./util/decode-text.js\";\nimport { Crc32 } from \"./streams/codecs/crc32.js\";\nimport {\n\tPROPERTY_NAME_RAW_FILENAME,\n\tPROPERTY_NAME_FILENAME,\n\tPROPERTY_NAME_RAW_COMMENT,\n\tPROPERTY_NAME_COMMENT,\n\tPROPERTY_NAME_UNCOMPRESSED_SIZE,\n\tPROPERTY_NAME_COMPRESSED_SIZE,\n\tPROPERTY_NAME_OFFSET,\n\tPROPERTY_NAME_DISK_NUMBER_START,\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_RAW_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_RAW_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_CREATION_DATE,\n\tPROPERTY_NAME_RAW_CREATION_DATE,\n\tEntry\n} from \"./zip-entry.js\";\nimport {\n\tOPTION_FILENAME_ENCODING,\n\tOPTION_COMMENT_ENCODING,\n\tOPTION_DECODE_TEXT,\n\tOPTION_EXTRACT_PREPENDED_DATA,\n\tOPTION_EXTRACT_APPENDED_DATA,\n\tOPTION_PASSWORD,\n\tOPTION_RAW_PASSWORD,\n\tOPTION_PASS_THROUGH,\n\tOPTION_SIGNAL,\n\tOPTION_CHECK_PASSWORD_ONLY,\n\tOPTION_CHECK_OVERLAPPING_ENTRY_ONLY,\n\tOPTION_CHECK_OVERLAPPING_ENTRY,\n\tOPTION_CHECK_SIGNATURE,\n\tOPTION_USE_WEB_WORKERS,\n\tOPTION_USE_COMPRESSION_STREAM,\n\tOPTION_TRANSFER_STREAMS,\n\tOPTION_PREVENT_CLOSE\n} from \"./options.js\";\n\nconst ERR_BAD_FORMAT = \"File format is not recognized\";\nconst ERR_EOCDR_NOT_FOUND = \"End of central directory not found\";\nconst ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND = \"End of Zip64 central directory locator not found\";\nconst ERR_CENTRAL_DIRECTORY_NOT_FOUND = \"Central directory header not found\";\nconst ERR_LOCAL_FILE_HEADER_NOT_FOUND = \"Local file header not found\";\nconst ERR_EXTRAFIELD_ZIP64_NOT_FOUND = \"Zip64 extra field not found\";\nconst ERR_ENCRYPTED = \"File contains encrypted entry\";\nconst ERR_UNSUPPORTED_ENCRYPTION = \"Encryption method not supported\";\nconst ERR_UNSUPPORTED_COMPRESSION = \"Compression method not supported\";\nconst ERR_SPLIT_ZIP_FILE = \"Split zip file\";\nconst ERR_OVERLAPPING_ENTRY = \"Overlapping entry found\";\nconst CHARSET_UTF8 = \"utf-8\";\nconst PROPERTY_NAME_UTF8_SUFFIX = \"UTF8\";\nconst CHARSET_CP437 = \"cp437\";\nconst ZIP64_PROPERTIES = [\n\t[PROPERTY_NAME_UNCOMPRESSED_SIZE, MAX_32_BITS],\n\t[PROPERTY_NAME_COMPRESSED_SIZE, MAX_32_BITS],\n\t[PROPERTY_NAME_OFFSET, MAX_32_BITS],\n\t[PROPERTY_NAME_DISK_NUMBER_START, MAX_16_BITS]\n];\nconst ZIP64_EXTRACTION = {\n\t[MAX_16_BITS]: {\n\t\tgetValue: getUint32,\n\t\tbytes: 4\n\t},\n\t[MAX_32_BITS]: {\n\t\tgetValue: getBigUint64,\n\t\tbytes: 8\n\t}\n};\n\nclass ZipReader {\n\n\tconstructor(reader, options = {}) {\n\t\tObject.assign(this, {\n\t\t\treader: new GenericReader(reader),\n\t\t\toptions,\n\t\t\tconfig: getConfiguration(),\n\t\t\treadRanges: []\n\t\t});\n\t}\n\n\tasync* getEntriesGenerator(options = {}) {\n\t\tconst zipReader = this;\n\t\tlet { reader } = zipReader;\n\t\tconst { config } = zipReader;\n\t\tawait initStream(reader);\n\t\tif (reader.size === UNDEFINED_VALUE || !reader.readUint8Array) {\n\t\t\treader = new BlobReader(await new Response(reader.readable).blob());\n\t\t\tawait initStream(reader);\n\t\t}\n\t\tif (reader.size < END_OF_CENTRAL_DIR_LENGTH) {\n\t\t\tthrow new Error(ERR_BAD_FORMAT);\n\t\t}\n\t\treader.chunkSize = getChunkSize(config);\n\t\tconst endOfDirectoryInfo = await seekSignature(reader, END_OF_CENTRAL_DIR_SIGNATURE, reader.size, END_OF_CENTRAL_DIR_LENGTH, MAX_16_BITS * 16);\n\t\tif (!endOfDirectoryInfo) {\n\t\t\tconst signatureArray = await readUint8Array(reader, 0, 4);\n\t\t\tconst signatureView = getDataView(signatureArray);\n\t\t\tif (getUint32(signatureView) == SPLIT_ZIP_FILE_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_SPLIT_ZIP_FILE);\n\t\t\t} else {\n\t\t\t\tthrow new Error(ERR_EOCDR_NOT_FOUND);\n\t\t\t}\n\t\t}\n\t\tconst endOfDirectoryView = getDataView(endOfDirectoryInfo);\n\t\tlet directoryDataLength = getUint32(endOfDirectoryView, 12);\n\t\tlet directoryDataOffset = getUint32(endOfDirectoryView, 16);\n\t\tconst commentOffset = endOfDirectoryInfo.offset;\n\t\tconst commentLength = getUint16(endOfDirectoryView, 20);\n\t\tconst appendedDataOffset = commentOffset + END_OF_CENTRAL_DIR_LENGTH + commentLength;\n\t\tlet lastDiskNumber = getUint16(endOfDirectoryView, 4);\n\t\tconst expectedLastDiskNumber = reader.lastDiskNumber || 0;\n\t\tlet diskNumber = getUint16(endOfDirectoryView, 6);\n\t\tlet filesLength = getUint16(endOfDirectoryView, 8);\n\t\tlet prependedDataLength = 0;\n\t\tlet startOffset = 0;\n\t\tif (directoryDataOffset == MAX_32_BITS || directoryDataLength == MAX_32_BITS || filesLength == MAX_16_BITS || diskNumber == MAX_16_BITS) {\n\t\t\tconst endOfDirectoryLocatorArray = await readUint8Array(reader, endOfDirectoryInfo.offset - ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH, ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH);\n\t\t\tconst endOfDirectoryLocatorView = getDataView(endOfDirectoryLocatorArray);\n\t\t\tif (getUint32(endOfDirectoryLocatorView, 0) == ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE) {\n\t\t\t\tdirectoryDataOffset = getBigUint64(endOfDirectoryLocatorView, 8);\n\t\t\t\tlet endOfDirectoryArray = await readUint8Array(reader, directoryDataOffset, ZIP64_END_OF_CENTRAL_DIR_LENGTH, -1);\n\t\t\t\tlet endOfDirectoryView = getDataView(endOfDirectoryArray);\n\t\t\t\tconst expectedDirectoryDataOffset = endOfDirectoryInfo.offset - ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH - ZIP64_END_OF_CENTRAL_DIR_LENGTH;\n\t\t\t\tif (getUint32(endOfDirectoryView, 0) != ZIP64_END_OF_CENTRAL_DIR_SIGNATURE && directoryDataOffset != expectedDirectoryDataOffset) {\n\t\t\t\t\tconst originalDirectoryDataOffset = directoryDataOffset;\n\t\t\t\t\tdirectoryDataOffset = expectedDirectoryDataOffset;\n\t\t\t\t\tif (directoryDataOffset > originalDirectoryDataOffset) {\n\t\t\t\t\t\tprependedDataLength = directoryDataOffset - originalDirectoryDataOffset;\n\t\t\t\t\t}\n\t\t\t\t\tendOfDirectoryArray = await readUint8Array(reader, directoryDataOffset, ZIP64_END_OF_CENTRAL_DIR_LENGTH, -1);\n\t\t\t\t\tendOfDirectoryView = getDataView(endOfDirectoryArray);\n\t\t\t\t}\n\t\t\t\tif (getUint32(endOfDirectoryView, 0) != ZIP64_END_OF_CENTRAL_DIR_SIGNATURE) {\n\t\t\t\t\tthrow new Error(ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND);\n\t\t\t\t}\n\t\t\t\tif (lastDiskNumber == MAX_16_BITS) {\n\t\t\t\t\tlastDiskNumber = getUint32(endOfDirectoryView, 16);\n\t\t\t\t}\n\t\t\t\tif (diskNumber == MAX_16_BITS) {\n\t\t\t\t\tdiskNumber = getUint32(endOfDirectoryView, 20);\n\t\t\t\t}\n\t\t\t\tif (filesLength == MAX_16_BITS) {\n\t\t\t\t\tfilesLength = getBigUint64(endOfDirectoryView, 32);\n\t\t\t\t}\n\t\t\t\tif (directoryDataLength == MAX_32_BITS) {\n\t\t\t\t\tdirectoryDataLength = getBigUint64(endOfDirectoryView, 40);\n\t\t\t\t}\n\t\t\t\tdirectoryDataOffset -= directoryDataLength;\n\t\t\t}\n\t\t}\n\t\tif (directoryDataOffset >= reader.size) {\n\t\t\tprependedDataLength = reader.size - directoryDataOffset - directoryDataLength - END_OF_CENTRAL_DIR_LENGTH;\n\t\t\tdirectoryDataOffset = reader.size - directoryDataLength - END_OF_CENTRAL_DIR_LENGTH;\n\t\t}\n\t\tif (expectedLastDiskNumber != lastDiskNumber) {\n\t\t\tthrow new Error(ERR_SPLIT_ZIP_FILE);\n\t\t}\n\t\tif (directoryDataOffset < 0) {\n\t\t\tthrow new Error(ERR_BAD_FORMAT);\n\t\t}\n\t\tlet offset = 0;\n\t\tlet directoryArray = await readUint8Array(reader, directoryDataOffset, directoryDataLength, diskNumber);\n\t\tlet directoryView = getDataView(directoryArray);\n\t\tif (directoryDataLength) {\n\t\t\tconst expectedDirectoryDataOffset = endOfDirectoryInfo.offset - directoryDataLength;\n\t\t\tif (getUint32(directoryView, offset) != CENTRAL_FILE_HEADER_SIGNATURE && directoryDataOffset != expectedDirectoryDataOffset) {\n\t\t\t\tconst originalDirectoryDataOffset = directoryDataOffset;\n\t\t\t\tdirectoryDataOffset = expectedDirectoryDataOffset;\n\t\t\t\tif (directoryDataOffset > originalDirectoryDataOffset) {\n\t\t\t\t\tprependedDataLength += directoryDataOffset - originalDirectoryDataOffset;\n\t\t\t\t}\n\t\t\t\tdirectoryArray = await readUint8Array(reader, directoryDataOffset, directoryDataLength, diskNumber);\n\t\t\t\tdirectoryView = getDataView(directoryArray);\n\t\t\t}\n\t\t}\n\t\tconst expectedDirectoryDataLength = endOfDirectoryInfo.offset - directoryDataOffset - (reader.lastDiskOffset || 0);\n\t\tif (directoryDataLength != expectedDirectoryDataLength && expectedDirectoryDataLength >= 0) {\n\t\t\tdirectoryDataLength = expectedDirectoryDataLength;\n\t\t\tdirectoryArray = await readUint8Array(reader, directoryDataOffset, directoryDataLength, diskNumber);\n\t\t\tdirectoryView = getDataView(directoryArray);\n\t\t}\n\t\tif (directoryDataOffset < 0 || directoryDataOffset >= reader.size) {\n\t\t\tthrow new Error(ERR_BAD_FORMAT);\n\t\t}\n\t\tconst filenameEncoding = getOptionValue(zipReader, options, OPTION_FILENAME_ENCODING);\n\t\tconst commentEncoding = getOptionValue(zipReader, options, OPTION_COMMENT_ENCODING);\n\t\tfor (let indexFile = 0; indexFile < filesLength; indexFile++) {\n\t\t\tconst fileEntry = new ZipEntry(reader, config, zipReader.options);\n\t\t\tif (getUint32(directoryView, offset) != CENTRAL_FILE_HEADER_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_CENTRAL_DIRECTORY_NOT_FOUND);\n\t\t\t}\n\t\t\treadCommonHeader(fileEntry, directoryView, offset + 6);\n\t\t\tconst languageEncodingFlag = Boolean(fileEntry.bitFlag.languageEncodingFlag);\n\t\t\tconst filenameOffset = offset + 46;\n\t\t\tconst extraFieldOffset = filenameOffset + fileEntry.filenameLength;\n\t\t\tconst commentOffset = extraFieldOffset + fileEntry.extraFieldLength;\n\t\t\tconst versionMadeBy = getUint16(directoryView, offset + 4);\n\t\t\tconst msDosCompatible = versionMadeBy >> 8 == 0;\n\t\t\tconst unixCompatible = versionMadeBy >> 8 == 3;\n\t\t\tconst rawFilename = directoryArray.subarray(filenameOffset, extraFieldOffset);\n\t\t\tconst commentLength = getUint16(directoryView, offset + 32);\n\t\t\tconst endOffset = commentOffset + commentLength;\n\t\t\tconst rawComment = directoryArray.subarray(commentOffset, endOffset);\n\t\t\tconst filenameUTF8 = languageEncodingFlag;\n\t\t\tconst commentUTF8 = languageEncodingFlag;\n\t\t\tconst externalFileAttributes = getUint32(directoryView, offset + 38);\n\t\t\tconst msdosAttributesRaw = externalFileAttributes & MAX_8_BITS;\n\t\t\tconst msdosAttributes = {\n\t\t\t\treadOnly: Boolean(msdosAttributesRaw & FILE_ATTR_MSDOS_READONLY_MASK),\n\t\t\t\thidden: Boolean(msdosAttributesRaw & FILE_ATTR_MSDOS_HIDDEN_MASK),\n\t\t\t\tsystem: Boolean(msdosAttributesRaw & FILE_ATTR_MSDOS_SYSTEM_MASK),\n\t\t\t\tdirectory: Boolean(msdosAttributesRaw & FILE_ATTR_MSDOS_DIR_MASK),\n\t\t\t\tarchive: Boolean(msdosAttributesRaw & FILE_ATTR_MSDOS_ARCHIVE_MASK)\n\t\t\t};\n\t\t\tconst offsetFileEntry = getUint32(directoryView, offset + 42) + prependedDataLength;\n\t\t\tconst decode = getOptionValue(zipReader, options, OPTION_DECODE_TEXT) || decodeText;\n\t\t\tconst rawFilenameEncoding = filenameUTF8 ? CHARSET_UTF8 : filenameEncoding || CHARSET_CP437;\n\t\t\tconst rawCommentEncoding = commentUTF8 ? CHARSET_UTF8 : commentEncoding || CHARSET_CP437;\n\t\t\tlet filename = decode(rawFilename, rawFilenameEncoding);\n\t\t\tif (filename === UNDEFINED_VALUE) {\n\t\t\t\tfilename = decodeText(rawFilename, rawFilenameEncoding);\n\t\t\t}\n\t\t\tlet comment = decode(rawComment, rawCommentEncoding);\n\t\t\tif (comment === UNDEFINED_VALUE) {\n\t\t\t\tcomment = decodeText(rawComment, rawCommentEncoding);\n\t\t\t}\n\t\t\tObject.assign(fileEntry, {\n\t\t\t\tversionMadeBy,\n\t\t\t\tmsDosCompatible,\n\t\t\t\tcompressedSize: 0,\n\t\t\t\tuncompressedSize: 0,\n\t\t\t\tcommentLength,\n\t\t\t\toffset: offsetFileEntry,\n\t\t\t\tdiskNumberStart: getUint16(directoryView, offset + 34),\n\t\t\t\tinternalFileAttributes: getUint16(directoryView, offset + 36),\n\t\t\t\texternalFileAttributes,\n\t\t\t\tmsdosAttributesRaw,\n\t\t\t\tmsdosAttributes,\n\t\t\t\trawFilename,\n\t\t\t\tfilenameUTF8,\n\t\t\t\tcommentUTF8,\n\t\t\t\trawExtraField: directoryArray.subarray(extraFieldOffset, commentOffset),\n\t\t\t\trawComment,\n\t\t\t\tfilename,\n\t\t\t\tcomment\n\t\t\t});\n\t\t\tstartOffset = Math.max(offsetFileEntry, startOffset);\n\t\t\treadCommonFooter(fileEntry, fileEntry, directoryView, offset + 6);\n\t\t\tconst unixExternalUpper = (fileEntry.externalFileAttributes >> 16) & MAX_16_BITS;\n\t\t\tif (fileEntry.unixMode === UNDEFINED_VALUE && (unixExternalUpper & (FILE_ATTR_UNIX_DEFAULT_MASK | FILE_ATTR_UNIX_EXECUTABLE_MASK | FILE_ATTR_UNIX_TYPE_DIR)) != 0) {\n\t\t\t\tfileEntry.unixMode = unixExternalUpper;\n\t\t\t}\n\t\t\tconst setuid = Boolean(fileEntry.unixMode & FILE_ATTR_UNIX_SETUID_MASK);\n\t\t\tconst setgid = Boolean(fileEntry.unixMode & FILE_ATTR_UNIX_SETGID_MASK);\n\t\t\tconst sticky = Boolean(fileEntry.unixMode & FILE_ATTR_UNIX_STICKY_MASK);\n\t\t\tconst executable = (fileEntry.unixMode !== UNDEFINED_VALUE)\n\t\t\t\t? ((fileEntry.unixMode & FILE_ATTR_UNIX_EXECUTABLE_MASK) != 0)\n\t\t\t\t: (unixCompatible && ((unixExternalUpper & FILE_ATTR_UNIX_EXECUTABLE_MASK) != 0));\n\t\t\tconst modeIsDir = fileEntry.unixMode !== UNDEFINED_VALUE && ((fileEntry.unixMode & FILE_ATTR_UNIX_TYPE_MASK) == FILE_ATTR_UNIX_TYPE_DIR);\n\t\t\tconst upperIsDir = ((unixExternalUpper & FILE_ATTR_UNIX_TYPE_MASK) == FILE_ATTR_UNIX_TYPE_DIR);\n\t\t\tObject.assign(fileEntry, {\n\t\t\t\tsetuid,\n\t\t\t\tsetgid,\n\t\t\t\tsticky,\n\t\t\t\tunixExternalUpper,\n\t\t\t\tinternalFileAttribute: fileEntry.internalFileAttributes,\n\t\t\t\texternalFileAttribute: fileEntry.externalFileAttributes,\n\t\t\t\texecutable,\n\t\t\t\tdirectory: modeIsDir || upperIsDir || (msDosCompatible && msdosAttributes.directory) || (filename.endsWith(DIRECTORY_SIGNATURE) && !fileEntry.uncompressedSize),\n\t\t\t\tzipCrypto: fileEntry.encrypted && !fileEntry.extraFieldAES\n\t\t\t});\n\t\t\tconst entry = new Entry(fileEntry);\n\t\t\tentry.getData = (writer, options) => fileEntry.getData(writer, entry, zipReader.readRanges, options);\n\t\t\tentry.arrayBuffer = async options => {\n\t\t\t\tconst writer = new TransformStream();\n\t\t\t\tconst [arrayBuffer] = await Promise.all([\n\t\t\t\t\tnew Response(writer.readable).arrayBuffer(),\n\t\t\t\t\tfileEntry.getData(writer, entry, zipReader.readRanges, options)]);\n\t\t\t\treturn arrayBuffer;\n\t\t\t};\n\t\t\toffset = endOffset;\n\t\t\tconst { onprogress } = options;\n\t\t\tif (onprogress) {\n\t\t\t\ttry {\n\t\t\t\t\tawait onprogress(indexFile + 1, filesLength, new Entry(fileEntry));\n\t\t\t\t} catch {\n\t\t\t\t\t// ignored\n\t\t\t\t}\n\t\t\t}\n\t\t\tyield entry;\n\t\t}\n\t\tconst extractPrependedData = getOptionValue(zipReader, options, OPTION_EXTRACT_PREPENDED_DATA);\n\t\tconst extractAppendedData = getOptionValue(zipReader, options, OPTION_EXTRACT_APPENDED_DATA);\n\t\tif (extractPrependedData) {\n\t\t\tzipReader.prependedData = startOffset > 0 ? await readUint8Array(reader, 0, startOffset) : new Uint8Array();\n\t\t}\n\t\tzipReader.comment = commentLength ? await readUint8Array(reader, commentOffset + END_OF_CENTRAL_DIR_LENGTH, commentLength) : new Uint8Array();\n\t\tif (extractAppendedData) {\n\t\t\tzipReader.appendedData = appendedDataOffset < reader.size ? await readUint8Array(reader, appendedDataOffset, reader.size - appendedDataOffset) : new Uint8Array();\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync getEntries(options = {}) {\n\t\tconst entries = [];\n\t\tfor await (const entry of this.getEntriesGenerator(options)) {\n\t\t\tentries.push(entry);\n\t\t}\n\t\treturn entries;\n\t}\n\n\tasync close() {\n\t}\n}\n\nclass ZipReaderStream {\n\n\tconstructor(options = {}) {\n\t\tconst { readable, writable } = new TransformStream();\n\t\tconst gen = new ZipReader(readable, options).getEntriesGenerator();\n\t\tthis.readable = new ReadableStream({\n\t\t\tasync pull(controller) {\n\t\t\t\tconst { done, value } = await gen.next();\n\t\t\t\tif (done)\n\t\t\t\t\treturn controller.close();\n\t\t\t\tconst chunk = {\n\t\t\t\t\t...value,\n\t\t\t\t\treadable: (function () {\n\t\t\t\t\t\tconst { readable, writable } = new TransformStream();\n\t\t\t\t\t\tif (value.getData) {\n\t\t\t\t\t\t\tvalue.getData(writable);\n\t\t\t\t\t\t\treturn readable;\n\t\t\t\t\t\t}\n\t\t\t\t\t})()\n\t\t\t\t};\n\t\t\t\tdelete chunk.getData;\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t}\n\t\t});\n\t\tthis.writable = writable;\n\t}\n}\n\nexport {\n\tZipReader,\n\tZipReaderStream,\n\tERR_BAD_FORMAT,\n\tERR_EOCDR_NOT_FOUND,\n\tERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND,\n\tERR_CENTRAL_DIRECTORY_NOT_FOUND,\n\tERR_LOCAL_FILE_HEADER_NOT_FOUND,\n\tERR_EXTRAFIELD_ZIP64_NOT_FOUND,\n\tERR_ENCRYPTED,\n\tERR_UNSUPPORTED_ENCRYPTION,\n\tERR_UNSUPPORTED_COMPRESSION,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_UNCOMPRESSED_SIZE,\n\tERR_SPLIT_ZIP_FILE,\n\tERR_OVERLAPPING_ENTRY\n};\n\nclass ZipEntry {\n\n\tconstructor(reader, config, options) {\n\t\tObject.assign(this, {\n\t\t\treader,\n\t\t\tconfig,\n\t\t\toptions\n\t\t});\n\t}\n\n\tasync getData(writer, fileEntry, readRanges, options = {}) {\n\t\tconst zipEntry = this;\n\t\tconst {\n\t\t\treader,\n\t\t\toffset,\n\t\t\tdiskNumberStart,\n\t\t\textraFieldAES,\n\t\t\textraFieldZip64,\n\t\t\tcompressionMethod,\n\t\t\tconfig,\n\t\t\tbitFlag,\n\t\t\tsignature,\n\t\t\trawLastModDate,\n\t\t\tuncompressedSize,\n\t\t\tcompressedSize\n\t\t} = zipEntry;\n\t\tconst {\n\t\t\tdataDescriptor\n\t\t} = bitFlag;\n\t\tconst localDirectory = fileEntry.localDirectory = {};\n\t\tconst dataArray = await readUint8Array(reader, offset, HEADER_SIZE, diskNumberStart);\n\t\tconst dataView = getDataView(dataArray);\n\t\tlet password = getOptionValue(zipEntry, options, OPTION_PASSWORD);\n\t\tlet rawPassword = getOptionValue(zipEntry, options, OPTION_RAW_PASSWORD);\n\t\tconst passThrough = getOptionValue(zipEntry, options, OPTION_PASS_THROUGH);\n\t\tpassword = password && password.length && password;\n\t\trawPassword = rawPassword && rawPassword.length && rawPassword;\n\t\tif (extraFieldAES) {\n\t\t\tif (extraFieldAES.originalCompressionMethod != COMPRESSION_METHOD_AES) {\n\t\t\t\tthrow new Error(ERR_UNSUPPORTED_COMPRESSION);\n\t\t\t}\n\t\t}\n\t\tif ((compressionMethod != COMPRESSION_METHOD_STORE && compressionMethod != COMPRESSION_METHOD_DEFLATE && compressionMethod != COMPRESSION_METHOD_DEFLATE_64) && !passThrough) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_COMPRESSION);\n\t\t}\n\t\tif (getUint32(dataView, 0) != LOCAL_FILE_HEADER_SIGNATURE) {\n\t\t\tthrow new Error(ERR_LOCAL_FILE_HEADER_NOT_FOUND);\n\t\t}\n\t\treadCommonHeader(localDirectory, dataView, 4);\n\t\tconst {\n\t\t\textraFieldLength,\n\t\t\tfilenameLength,\n\t\t\tlastAccessDate,\n\t\t\tcreationDate\n\t\t} = localDirectory;\n\t\tlocalDirectory.rawExtraField = extraFieldLength ?\n\t\t\tawait readUint8Array(reader, offset + HEADER_SIZE + filenameLength, extraFieldLength, diskNumberStart) :\n\t\t\tnew Uint8Array();\n\t\treadCommonFooter(zipEntry, localDirectory, dataView, 4, true);\n\t\tObject.assign(fileEntry, { lastAccessDate, creationDate });\n\t\tconst encrypted = zipEntry.encrypted && localDirectory.encrypted && !passThrough;\n\t\tconst zipCrypto = encrypted && !extraFieldAES;\n\t\tif (!passThrough) {\n\t\t\tfileEntry.zipCrypto = zipCrypto;\n\t\t}\n\t\tif (encrypted) {\n\t\t\tif (!zipCrypto && extraFieldAES.strength === UNDEFINED_VALUE) {\n\t\t\t\tthrow new Error(ERR_UNSUPPORTED_ENCRYPTION);\n\t\t\t} else if (!password && !rawPassword) {\n\t\t\t\tthrow new Error(ERR_ENCRYPTED);\n\t\t\t}\n\t\t}\n\t\tconst dataOffset = offset + HEADER_SIZE + filenameLength + extraFieldLength;\n\t\tconst size = compressedSize;\n\t\tconst readable = reader.readable;\n\t\tObject.assign(readable, {\n\t\t\tdiskNumberStart,\n\t\t\toffset: dataOffset,\n\t\t\tsize\n\t\t});\n\t\tconst signal = getOptionValue(zipEntry, options, OPTION_SIGNAL);\n\t\tconst checkPasswordOnly = getOptionValue(zipEntry, options, OPTION_CHECK_PASSWORD_ONLY);\n\t\tlet checkOverlappingEntry = getOptionValue(zipEntry, options, OPTION_CHECK_OVERLAPPING_ENTRY);\n\t\tconst checkOverlappingEntryOnly = getOptionValue(zipEntry, options, OPTION_CHECK_OVERLAPPING_ENTRY_ONLY);\n\t\tif (checkOverlappingEntryOnly) {\n\t\t\tcheckOverlappingEntry = true;\n\t\t}\n\t\tconst { onstart, onprogress, onend } = options;\n\t\tconst deflate64 = compressionMethod == COMPRESSION_METHOD_DEFLATE_64;\n\t\tlet useCompressionStream = getOptionValue(zipEntry, options, OPTION_USE_COMPRESSION_STREAM);\n\t\tif (deflate64) {\n\t\t\tuseCompressionStream = false;\n\t\t}\n\t\tconst workerOptions = {\n\t\t\toptions: {\n\t\t\t\tcodecType: CODEC_INFLATE,\n\t\t\t\tpassword,\n\t\t\t\trawPassword,\n\t\t\t\tzipCrypto,\n\t\t\t\tencryptionStrength: extraFieldAES && extraFieldAES.strength,\n\t\t\t\tsigned: getOptionValue(zipEntry, options, OPTION_CHECK_SIGNATURE) && !passThrough,\n\t\t\t\tpasswordVerification: zipCrypto && (dataDescriptor ? ((rawLastModDate >>> 8) & MAX_8_BITS) : ((signature >>> 24) & MAX_8_BITS)),\n\t\t\t\toutputSize: passThrough ? compressedSize : uncompressedSize,\n\t\t\t\tsignature,\n\t\t\t\tcompressed: compressionMethod != 0 && !passThrough,\n\t\t\t\tencrypted: zipEntry.encrypted && !passThrough,\n\t\t\t\tuseWebWorkers: getOptionValue(zipEntry, options, OPTION_USE_WEB_WORKERS),\n\t\t\t\tuseCompressionStream,\n\t\t\t\ttransferStreams: getOptionValue(zipEntry, options, OPTION_TRANSFER_STREAMS),\n\t\t\t\tdeflate64,\n\t\t\t\tcheckPasswordOnly\n\t\t\t},\n\t\t\tconfig,\n\t\t\tstreamOptions: { signal, size, onstart, onprogress, onend }\n\t\t};\n\t\tif (checkOverlappingEntry) {\n\t\t\tawait detectOverlappingEntry({\n\t\t\t\treader,\n\t\t\t\tfileEntry,\n\t\t\t\toffset,\n\t\t\t\tdiskNumberStart,\n\t\t\t\tsignature,\n\t\t\t\tcompressedSize,\n\t\t\t\tuncompressedSize,\n\t\t\t\tdataOffset,\n\t\t\t\tdataDescriptor: dataDescriptor || localDirectory.bitFlag.dataDescriptor,\n\t\t\t\textraFieldZip64: extraFieldZip64 || localDirectory.extraFieldZip64,\n\t\t\t\treadRanges\n\t\t\t});\n\t\t}\n\t\tlet writable;\n\t\ttry {\n\t\t\tif (!checkOverlappingEntryOnly) {\n\t\t\t\tif (checkPasswordOnly) {\n\t\t\t\t\twriter = new WritableStream();\n\t\t\t\t}\n\t\t\t\twriter = new GenericWriter(writer);\n\t\t\t\tawait initStream(writer, passThrough ? compressedSize : uncompressedSize);\n\t\t\t\t({ writable } = writer);\n\t\t\t\tconst { outputSize } = await runWorker({ readable, writable }, workerOptions);\n\t\t\t\twriter.size += outputSize;\n\t\t\t\tif (outputSize != (passThrough ? compressedSize : uncompressedSize)) {\n\t\t\t\t\tthrow new Error(ERR_INVALID_UNCOMPRESSED_SIZE);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.outputSize !== UNDEFINED_VALUE) {\n\t\t\t\twriter.size += error.outputSize;\n\t\t\t}\n\t\t\tif (!checkPasswordOnly || error.message != ERR_ABORT_CHECK_PASSWORD) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t} finally {\n\t\t\tconst preventClose = getOptionValue(zipEntry, options, OPTION_PREVENT_CLOSE);\n\t\t\tif (!preventClose && writable && !writable.locked) {\n\t\t\t\tawait writable.getWriter().close();\n\t\t\t}\n\t\t}\n\t\treturn checkPasswordOnly || checkOverlappingEntryOnly ? UNDEFINED_VALUE : writer.getData ? writer.getData() : writable;\n\t}\n}\n\nfunction readCommonHeader(directory, dataView, offset) {\n\tconst rawBitFlag = directory.rawBitFlag = getUint16(dataView, offset + 2);\n\tconst encrypted = (rawBitFlag & BITFLAG_ENCRYPTED) == BITFLAG_ENCRYPTED;\n\tconst rawLastModDate = getUint32(dataView, offset + 6);\n\tObject.assign(directory, {\n\t\tencrypted,\n\t\tversion: getUint16(dataView, offset),\n\t\tbitFlag: {\n\t\t\tlevel: (rawBitFlag & BITFLAG_LEVEL) >> 1,\n\t\t\tdataDescriptor: (rawBitFlag & BITFLAG_DATA_DESCRIPTOR) == BITFLAG_DATA_DESCRIPTOR,\n\t\t\tlanguageEncodingFlag: (rawBitFlag & BITFLAG_LANG_ENCODING_FLAG) == BITFLAG_LANG_ENCODING_FLAG\n\t\t},\n\t\trawLastModDate,\n\t\tlastModDate: getDate(rawLastModDate),\n\t\tfilenameLength: getUint16(dataView, offset + 22),\n\t\textraFieldLength: getUint16(dataView, offset + 24)\n\t});\n}\n\nfunction readCommonFooter(fileEntry, directory, dataView, offset, localDirectory) {\n\tconst { rawExtraField } = directory;\n\tconst extraField = directory.extraField = new Map();\n\tconst rawExtraFieldView = getDataView(new Uint8Array(rawExtraField));\n\tlet offsetExtraField = 0;\n\ttry {\n\t\twhile (offsetExtraField < rawExtraField.length) {\n\t\t\tconst type = getUint16(rawExtraFieldView, offsetExtraField);\n\t\t\tconst size = getUint16(rawExtraFieldView, offsetExtraField + 2);\n\t\t\textraField.set(type, {\n\t\t\t\ttype,\n\t\t\t\tdata: rawExtraField.slice(offsetExtraField + 4, offsetExtraField + 4 + size)\n\t\t\t});\n\t\t\toffsetExtraField += 4 + size;\n\t\t}\n\t} catch {\n\t\t// ignored\n\t}\n\tconst compressionMethod = getUint16(dataView, offset + 4);\n\tObject.assign(directory, {\n\t\tsignature: getUint32(dataView, offset + HEADER_OFFSET_SIGNATURE),\n\t\tcompressedSize: getUint32(dataView, offset + HEADER_OFFSET_COMPRESSED_SIZE),\n\t\tuncompressedSize: getUint32(dataView, offset + HEADER_OFFSET_UNCOMPRESSED_SIZE)\n\t});\n\tconst extraFieldZip64 = extraField.get(EXTRAFIELD_TYPE_ZIP64);\n\tif (extraFieldZip64) {\n\t\treadExtraFieldZip64(extraFieldZip64, directory);\n\t\tdirectory.extraFieldZip64 = extraFieldZip64;\n\t}\n\tconst extraFieldUnicodePath = extraField.get(EXTRAFIELD_TYPE_UNICODE_PATH);\n\tif (extraFieldUnicodePath) {\n\t\treadExtraFieldUnicode(extraFieldUnicodePath, PROPERTY_NAME_FILENAME, PROPERTY_NAME_RAW_FILENAME, directory, fileEntry);\n\t\tdirectory.extraFieldUnicodePath = extraFieldUnicodePath;\n\t}\n\tconst extraFieldUnicodeComment = extraField.get(EXTRAFIELD_TYPE_UNICODE_COMMENT);\n\tif (extraFieldUnicodeComment) {\n\t\treadExtraFieldUnicode(extraFieldUnicodeComment, PROPERTY_NAME_COMMENT, PROPERTY_NAME_RAW_COMMENT, directory, fileEntry);\n\t\tdirectory.extraFieldUnicodeComment = extraFieldUnicodeComment;\n\t}\n\tconst extraFieldAES = extraField.get(EXTRAFIELD_TYPE_AES);\n\tif (extraFieldAES) {\n\t\treadExtraFieldAES(extraFieldAES, directory, compressionMethod);\n\t\tdirectory.extraFieldAES = extraFieldAES;\n\t} else {\n\t\tdirectory.compressionMethod = compressionMethod;\n\t}\n\tconst extraFieldNTFS = extraField.get(EXTRAFIELD_TYPE_NTFS);\n\tif (extraFieldNTFS) {\n\t\treadExtraFieldNTFS(extraFieldNTFS, directory);\n\t\tdirectory.extraFieldNTFS = extraFieldNTFS;\n\t}\n\tconst extraFieldUnix = extraField.get(EXTRAFIELD_TYPE_UNIX);\n\tif (extraFieldUnix) {\n\t\treadExtraFieldUnix(extraFieldUnix, directory, false);\n\t\tdirectory.extraFieldUnix = extraFieldUnix;\n\t} else {\n\t\tconst extraFieldInfoZip = extraField.get(EXTRAFIELD_TYPE_INFOZIP);\n\t\tif (extraFieldInfoZip) {\n\t\t\treadExtraFieldUnix(extraFieldInfoZip, directory, true);\n\t\t\tdirectory.extraFieldInfoZip = extraFieldInfoZip;\n\t\t}\n\t}\n\tconst extraFieldExtendedTimestamp = extraField.get(EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\n\tif (extraFieldExtendedTimestamp) {\n\t\treadExtraFieldExtendedTimestamp(extraFieldExtendedTimestamp, directory, localDirectory);\n\t\tdirectory.extraFieldExtendedTimestamp = extraFieldExtendedTimestamp;\n\t}\n\tconst extraFieldUSDZ = extraField.get(EXTRAFIELD_TYPE_USDZ);\n\tif (extraFieldUSDZ) {\n\t\tdirectory.extraFieldUSDZ = extraFieldUSDZ;\n\t}\n}\n\nfunction readExtraFieldZip64(extraFieldZip64, directory) {\n\tdirectory.zip64 = true;\n\tconst extraFieldView = getDataView(extraFieldZip64.data);\n\tconst missingProperties = ZIP64_PROPERTIES.filter(([propertyName, max]) => directory[propertyName] == max);\n\tfor (let indexMissingProperty = 0, offset = 0; indexMissingProperty < missingProperties.length; indexMissingProperty++) {\n\t\tconst [propertyName, max] = missingProperties[indexMissingProperty];\n\t\tif (directory[propertyName] == max) {\n\t\t\tconst extraction = ZIP64_EXTRACTION[max];\n\t\t\tdirectory[propertyName] = extraFieldZip64[propertyName] = extraction.getValue(extraFieldView, offset);\n\t\t\toffset += extraction.bytes;\n\t\t} else if (extraFieldZip64[propertyName]) {\n\t\t\tthrow new Error(ERR_EXTRAFIELD_ZIP64_NOT_FOUND);\n\t\t}\n\t}\n}\n\nfunction readExtraFieldUnicode(extraFieldUnicode, propertyName, rawPropertyName, directory, fileEntry) {\n\tconst extraFieldView = getDataView(extraFieldUnicode.data);\n\tconst crc32 = new Crc32();\n\tcrc32.append(fileEntry[rawPropertyName]);\n\tconst dataViewSignature = getDataView(new Uint8Array(4));\n\tdataViewSignature.setUint32(0, crc32.get(), true);\n\tconst signature = getUint32(extraFieldView, 1);\n\tObject.assign(extraFieldUnicode, {\n\t\tversion: getUint8(extraFieldView, 0),\n\t\t[propertyName]: decodeText(extraFieldUnicode.data.subarray(5)),\n\t\tvalid: !fileEntry.bitFlag.languageEncodingFlag && signature == getUint32(dataViewSignature, 0)\n\t});\n\tif (extraFieldUnicode.valid) {\n\t\tdirectory[propertyName] = extraFieldUnicode[propertyName];\n\t\tdirectory[propertyName + PROPERTY_NAME_UTF8_SUFFIX] = true;\n\t}\n}\n\nfunction readExtraFieldAES(extraFieldAES, directory, compressionMethod) {\n\tconst extraFieldView = getDataView(extraFieldAES.data);\n\tconst strength = getUint8(extraFieldView, 4);\n\tObject.assign(extraFieldAES, {\n\t\tvendorVersion: getUint8(extraFieldView, 0),\n\t\tvendorId: getUint8(extraFieldView, 2),\n\t\tstrength,\n\t\toriginalCompressionMethod: compressionMethod,\n\t\tcompressionMethod: getUint16(extraFieldView, 5)\n\t});\n\tdirectory.compressionMethod = extraFieldAES.compressionMethod;\n}\n\nfunction readExtraFieldNTFS(extraFieldNTFS, directory) {\n\tconst extraFieldView = getDataView(extraFieldNTFS.data);\n\tlet offsetExtraField = 4;\n\tlet tag1Data;\n\ttry {\n\t\twhile (offsetExtraField < extraFieldNTFS.data.length && !tag1Data) {\n\t\t\tconst tagValue = getUint16(extraFieldView, offsetExtraField);\n\t\t\tconst attributeSize = getUint16(extraFieldView, offsetExtraField + 2);\n\t\t\tif (tagValue == EXTRAFIELD_TYPE_NTFS_TAG1) {\n\t\t\t\ttag1Data = extraFieldNTFS.data.slice(offsetExtraField + 4, offsetExtraField + 4 + attributeSize);\n\t\t\t}\n\t\t\toffsetExtraField += 4 + attributeSize;\n\t\t}\n\t} catch {\n\t\t// ignored\n\t}\n\ttry {\n\t\tif (tag1Data && tag1Data.length == 24) {\n\t\t\tconst tag1View = getDataView(tag1Data);\n\t\t\tconst rawLastModDate = tag1View.getBigUint64(0, true);\n\t\t\tconst rawLastAccessDate = tag1View.getBigUint64(8, true);\n\t\t\tconst rawCreationDate = tag1View.getBigUint64(16, true);\n\t\t\tObject.assign(extraFieldNTFS, {\n\t\t\t\trawLastModDate,\n\t\t\t\trawLastAccessDate,\n\t\t\t\trawCreationDate\n\t\t\t});\n\t\t\tconst lastModDate = getDateNTFS(rawLastModDate);\n\t\t\tconst lastAccessDate = getDateNTFS(rawLastAccessDate);\n\t\t\tconst creationDate = getDateNTFS(rawCreationDate);\n\t\t\tconst extraFieldData = { lastModDate, lastAccessDate, creationDate };\n\t\t\tObject.assign(extraFieldNTFS, extraFieldData);\n\t\t\tObject.assign(directory, extraFieldData);\n\t\t}\n\t} catch {\n\t\t// ignored\n\t}\n}\n\nfunction readExtraFieldUnix(extraField, directory, isInfoZip) {\n\ttry {\n\t\tconst view = getDataView(new Uint8Array(extraField.data));\n\t\tlet offset = 0;\n\t\tconst version = getUint8(view, offset++);\n\t\tconst uidSize = getUint8(view, offset++);\n\t\tconst uidBytes = extraField.data.subarray(offset, offset + uidSize);\n\t\toffset += uidSize;\n\t\tconst uid = unpackUnixId(uidBytes);\n\t\tconst gidSize = getUint8(view, offset++);\n\t\tconst gidBytes = extraField.data.subarray(offset, offset + gidSize);\n\t\toffset += gidSize;\n\t\tconst gid = unpackUnixId(gidBytes);\n\t\tlet unixMode = UNDEFINED_VALUE;\n\t\tif (!isInfoZip && offset + 2 <= extraField.data.length) {\n\t\t\tconst base = extraField.data;\n\t\t\tconst modeView = new DataView(base.buffer, base.byteOffset + offset, 2);\n\t\t\tunixMode = modeView.getUint16(0, true);\n\t\t}\n\t\tObject.assign(extraField, { version, uid, gid, unixMode });\n\t\tif (uid !== UNDEFINED_VALUE) {\n\t\t\tdirectory.uid = uid;\n\t\t}\n\t\tif (gid !== UNDEFINED_VALUE) {\n\t\t\tdirectory.gid = gid;\n\t\t}\n\t\tif (unixMode !== UNDEFINED_VALUE) {\n\t\t\tdirectory.unixMode = unixMode;\n\t\t}\n\t} catch {\n\t\t// ignored\n\t}\n}\n\nfunction unpackUnixId(bytes) {\n\tconst buffer = new Uint8Array(4);\n\tbuffer.set(bytes, 0);\n\tconst view = new DataView(buffer.buffer, buffer.byteOffset, 4);\n\treturn view.getUint32(0, true);\n}\n\nfunction readExtraFieldExtendedTimestamp(extraFieldExtendedTimestamp, directory, localDirectory) {\n\tconst extraFieldView = getDataView(extraFieldExtendedTimestamp.data);\n\tconst flags = getUint8(extraFieldView, 0);\n\tconst timeProperties = [];\n\tconst timeRawProperties = [];\n\tif (localDirectory) {\n\t\tif ((flags & 0x1) == 0x1) {\n\t\t\ttimeProperties.push(PROPERTY_NAME_LAST_MODIFICATION_DATE);\n\t\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE);\n\t\t}\n\t\tif ((flags & 0x2) == 0x2) {\n\t\t\ttimeProperties.push(PROPERTY_NAME_LAST_ACCESS_DATE);\n\t\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_LAST_ACCESS_DATE);\n\t\t}\n\t\tif ((flags & 0x4) == 0x4) {\n\t\t\ttimeProperties.push(PROPERTY_NAME_CREATION_DATE);\n\t\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_CREATION_DATE);\n\t\t}\n\t} else if (extraFieldExtendedTimestamp.data.length >= 5) {\n\t\ttimeProperties.push(PROPERTY_NAME_LAST_MODIFICATION_DATE);\n\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE);\n\t}\n\tlet offset = 1;\n\ttimeProperties.forEach((propertyName, indexProperty) => {\n\t\tif (extraFieldExtendedTimestamp.data.length >= offset + 4) {\n\t\t\tconst time = getUint32(extraFieldView, offset);\n\t\t\tdirectory[propertyName] = extraFieldExtendedTimestamp[propertyName] = new Date(time * 1000);\n\t\t\tconst rawPropertyName = timeRawProperties[indexProperty];\n\t\t\textraFieldExtendedTimestamp[rawPropertyName] = time;\n\t\t}\n\t\toffset += 4;\n\t});\n}\n\nasync function detectOverlappingEntry({\n\treader,\n\tfileEntry,\n\toffset,\n\tdiskNumberStart,\n\tsignature,\n\tcompressedSize,\n\tuncompressedSize,\n\tdataOffset,\n\tdataDescriptor,\n\textraFieldZip64,\n\treadRanges\n}) {\n\tlet diskOffset = 0;\n\tif (diskNumberStart) {\n\t\tfor (let indexReader = 0; indexReader < diskNumberStart; indexReader++) {\n\t\t\tconst diskReader = reader.readers[indexReader];\n\t\t\tdiskOffset += diskReader.size;\n\t\t}\n\t}\n\tlet dataDescriptorLength = 0;\n\tif (dataDescriptor) {\n\t\tif (extraFieldZip64) {\n\t\t\tdataDescriptorLength = DATA_DESCRIPTOR_RECORD_ZIP_64_LENGTH;\n\t\t} else {\n\t\t\tdataDescriptorLength = DATA_DESCRIPTOR_RECORD_LENGTH;\n\t\t}\n\t}\n\tif (dataDescriptorLength) {\n\t\tconst dataDescriptorArray = await readUint8Array(reader, dataOffset + compressedSize, dataDescriptorLength + DATA_DESCRIPTOR_RECORD_SIGNATURE_LENGTH, diskNumberStart);\n\t\tconst dataDescriptorSignature = getUint32(getDataView(dataDescriptorArray), 0) == DATA_DESCRIPTOR_RECORD_SIGNATURE;\n\t\tif (dataDescriptorSignature) {\n\t\t\tconst readSignature = getUint32(getDataView(dataDescriptorArray), 4);\n\t\t\tlet readCompressedSize;\n\t\t\tlet readUncompressedSize;\n\t\t\tif (extraFieldZip64) {\n\t\t\t\treadCompressedSize = getBigUint64(getDataView(dataDescriptorArray), 8);\n\t\t\t\treadUncompressedSize = getBigUint64(getDataView(dataDescriptorArray), 16);\n\t\t\t} else {\n\t\t\t\treadCompressedSize = getUint32(getDataView(dataDescriptorArray), 8);\n\t\t\t\treadUncompressedSize = getUint32(getDataView(dataDescriptorArray), 12);\n\t\t\t}\n\t\t\tconst matchSignature = (fileEntry.encrypted && !fileEntry.zipCrypto) || readSignature == signature;\n\t\t\tif (matchSignature &&\n\t\t\t\treadCompressedSize == compressedSize &&\n\t\t\t\treadUncompressedSize == uncompressedSize) {\n\t\t\t\tdataDescriptorLength += DATA_DESCRIPTOR_RECORD_SIGNATURE_LENGTH;\n\t\t\t}\n\t\t}\n\t}\n\tconst range = {\n\t\tstart: diskOffset + offset,\n\t\tend: diskOffset + dataOffset + compressedSize + dataDescriptorLength,\n\t\tfileEntry\n\t};\n\tfor (const otherRange of readRanges) {\n\t\tif (otherRange.fileEntry != fileEntry && range.start >= otherRange.start && range.start < otherRange.end) {\n\t\t\tconst error = new Error(ERR_OVERLAPPING_ENTRY);\n\t\t\terror.overlappingEntry = otherRange.fileEntry;\n\t\t\tthrow error;\n\t\t}\n\t}\n\treadRanges.push(range);\n}\n\nasync function seekSignature(reader, signature, startOffset, minimumBytes, maximumLength) {\n\tconst signatureArray = new Uint8Array(4);\n\tconst signatureView = getDataView(signatureArray);\n\tsetUint32(signatureView, 0, signature);\n\tconst maximumBytes = minimumBytes + maximumLength;\n\treturn (await seek(minimumBytes)) || await seek(Math.min(maximumBytes, startOffset));\n\n\tasync function seek(length) {\n\t\tconst offset = startOffset - length;\n\t\tconst bytes = await readUint8Array(reader, offset, length);\n\t\tfor (let indexByte = bytes.length - minimumBytes; indexByte >= 0; indexByte--) {\n\t\t\tif (bytes[indexByte] == signatureArray[0] && bytes[indexByte + 1] == signatureArray[1] &&\n\t\t\t\tbytes[indexByte + 2] == signatureArray[2] && bytes[indexByte + 3] == signatureArray[3]) {\n\t\t\t\treturn {\n\t\t\t\t\toffset: offset + indexByte,\n\t\t\t\t\tbuffer: bytes.slice(indexByte, indexByte + minimumBytes).buffer\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction getOptionValue(zipReader, options, name) {\n\treturn options[name] === UNDEFINED_VALUE ? zipReader.options[name] : options[name];\n}\n\nfunction getDate(timeRaw) {\n\tconst date = (timeRaw & 0xffff0000) >> 16, time = timeRaw & MAX_16_BITS;\n\ttry {\n\t\treturn new Date(1980 + ((date & 0xFE00) >> 9), ((date & 0x01E0) >> 5) - 1, date & 0x001F, (time & 0xF800) >> 11, (time & 0x07E0) >> 5, (time & 0x001F) * 2, 0);\n\t} catch {\n\t\t// ignored\n\t}\n}\n\nfunction getDateNTFS(timeRaw) {\n\treturn new Date((Number((timeRaw / BigInt(10000)) - BigInt(11644473600000))));\n}\n\nfunction getUint8(view, offset) {\n\treturn view.getUint8(offset);\n}\n\nfunction getUint16(view, offset) {\n\treturn view.getUint16(offset, true);\n}\n\nfunction getUint32(view, offset) {\n\treturn view.getUint32(offset, true);\n}\n\nfunction getBigUint64(view, offset) {\n\treturn Number(view.getBigUint64(offset, true));\n}\n\nfunction setUint32(view, offset, value) {\n\tview.setUint32(offset, value, true);\n}\n\nfunction getDataView(array) {\n\treturn new DataView(array.buffer);\n}\n","/*\n Copyright (c) 2025 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright\n notice, this list of conditions and the following disclaimer in\n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { configure } from \"./core/configuration.js\";\n\ntry {\n\tconfigure({ baseURI: import.meta.url });\n} catch {\n\t// ignored\n}\n\nexport * from \"./zip-core-reader.js\";\nexport * from \"./zip-core-writer.js\";\nexport {\n\tReader,\n\tWriter,\n\tTextReader,\n\tTextWriter,\n\tData64URIReader,\n\tData64URIWriter,\n\tBlobReader,\n\tBlobWriter,\n\tHttpReader,\n\tHttpRangeReader,\n\tUint8ArrayWriter,\n\tUint8ArrayReader,\n\tSplitDataReader,\n\tSplitDataWriter,\n\tERR_HTTP_RANGE\n} from \"./core/io.js\";\nexport {\n\tgetMimeType\n} from \"./core/util/default-mime-type.js\";\nexport {\n\tconfigure\n} from \"./core/configuration.js\";","const A=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";function g(g){let B;g({wasmURI:()=>(B||(B=\"data:application/wasm;base64,\"+(g=>{g=(g=>{const B=(g=(g+\"\").replace(/[^A-Za-z0-9+/=]/g,\"\")).length,E=[];for(let I=0;B>I;I+=4){const B=A.indexOf(g[I])<<18|A.indexOf(g[I+1])<<12|(63&A.indexOf(g[I+2]))<<6|63&A.indexOf(g[I+3]);E.push(B>>16&255),\"=\"!==g[I+2]&&E.push(B>>8&255),\"=\"!==g[I+3]&&E.push(255&B)}return new Uint8Array(E)})(g);let B=new Uint8Array(1024),E=0;for(let A=0;A<g.length;){const C=g[A++];if(128&C){const Q=3+(127&C),Y=g[A++]<<8|g[A++],D=E-Y;I(E+Q);for(let A=0;Q>A;A++)B[E++]=B[D+A]}else{const Q=C;I(E+Q);for(let I=0;Q>I&&A<g.length;I++)B[E++]=g[A++]}}return(g=>{let B=\"\";const E=g.length;let I=0;for(;E>I+2;I+=3){const E=g[I]<<16|g[I+1]<<8|g[I+2];B+=A[E>>18&63]+A[E>>12&63]+A[E>>6&63]+A[63&E]}const C=E-I;if(1===C){const E=g[I]<<16;B+=A[E>>18&63]+A[E>>12&63]+\"==\"}else if(2===C){const E=g[I]<<16|g[I+1]<<8;B+=A[E>>18&63]+A[E>>12&63]+A[E>>6&63]+\"=\"}return B})(new Uint8Array(B.buffer.slice(0,E)));function I(A){if(B.length<A){let g=2*B.length;for(;A>g;)g*=2;const I=new Uint8Array(g);I.set(B.subarray(0,E)),B=I}}})(\"\")),B)})}export{g as configureZlibModule};\n","/*\n Copyright (c) 2025 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n\nlet wasm, malloc, free, memory;\n\nexport function setWasmExports(wasmAPI) {\n\twasm = wasmAPI;\n\t({ malloc, free, memory } = wasm);\n\tif (typeof malloc !== \"function\" || typeof free !== \"function\" || !memory) {\n\t\twasm = malloc = free = memory = null;\n\t\tthrow new Error(\"Invalid WASM module\");\n\t}\n}\n\nfunction _make(isCompress, type, options = {}) {\n\tconst level = (typeof options.level === \"number\") ? options.level : -1;\n\tconst outBufferSize = (typeof options.outBuffer === \"number\") ? options.outBuffer : 64 * 1024;\n\tconst inBufferSize = (typeof options.inBufferSize === \"number\") ? options.inBufferSize : 64 * 1024;\n\n\treturn new TransformStream({\n\t\tstart() {\n\t\t\tlet result;\n\t\t\tthis.out = malloc(outBufferSize);\n\t\t\tthis.in = malloc(inBufferSize);\n\t\t\tthis.inBufferSize = inBufferSize;\n\t\t\tthis._scratch = new Uint8Array(outBufferSize);\n\t\t\tif (isCompress) {\n\t\t\t\tthis._process = wasm.deflate_process;\n\t\t\t\tthis._last_consumed = wasm.deflate_last_consumed;\n\t\t\t\tthis._end = wasm.deflate_end;\n\t\t\t\tthis.streamHandle = wasm.deflate_new();\n\t\t\t\tif (type === \"gzip\") {\n\t\t\t\t\tresult = wasm.deflate_init_gzip(this.streamHandle, level);\n\t\t\t\t} else if (type === \"deflate-raw\") {\n\t\t\t\t\tresult = wasm.deflate_init_raw(this.streamHandle, level);\n\t\t\t\t} else {\n\t\t\t\t\tresult = wasm.deflate_init(this.streamHandle, level);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (type === \"deflate64-raw\") {\n\t\t\t\t\tthis._process = wasm.inflate9_process;\n\t\t\t\t\tthis._last_consumed = wasm.inflate9_last_consumed;\n\t\t\t\t\tthis._end = wasm.inflate9_end;\n\t\t\t\t\tthis.streamHandle = wasm.inflate9_new();\n\t\t\t\t\tresult = wasm.inflate9_init_raw(this.streamHandle);\n\t\t\t\t} else {\n\t\t\t\t\tthis._process = wasm.inflate_process;\n\t\t\t\t\tthis._last_consumed = wasm.inflate_last_consumed;\n\t\t\t\t\tthis._end = wasm.inflate_end;\n\t\t\t\t\tthis.streamHandle = wasm.inflate_new();\n\t\t\t\t\tif (type === \"deflate-raw\") {\n\t\t\t\t\t\tresult = wasm.inflate_init_raw(this.streamHandle);\n\t\t\t\t\t} else if (type === \"gzip\") {\n\t\t\t\t\t\tresult = wasm.inflate_init_gzip(this.streamHandle);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = wasm.inflate_init(this.streamHandle);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (result !== 0) {\n\t\t\t\tthrow new Error(\"init failed:\" + result);\n\t\t\t}\n\t\t},\n\t\ttransform(chunk, controller) {\n\t\t\ttry {\n\t\t\t\tconst buffer = chunk;\n\t\t\t\tconst heap = new Uint8Array(memory.buffer);\n\t\t\t\tconst process = this._process;\n\t\t\t\tconst last_consumed = this._last_consumed;\n\t\t\t\tconst out = this.out;\n\t\t\t\tconst scratch = this._scratch;\n\t\t\t\tlet offset = 0;\n\t\t\t\twhile (offset < buffer.length) {\n\t\t\t\t\tconst toRead = Math.min(buffer.length - offset, 32 * 1024);\n\t\t\t\t\tif (!this.in || this.inBufferSize < toRead) {\n\t\t\t\t\t\tif (this.in && free) {\n\t\t\t\t\t\t\tfree(this.in);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.in = malloc(toRead);\n\t\t\t\t\t\tthis.inBufferSize = toRead;\n\t\t\t\t\t}\n\t\t\t\t\theap.set(buffer.subarray(offset, offset + toRead), this.in);\n\t\t\t\t\tconst result = process(this.streamHandle, this.in, toRead, out, outBufferSize, 0);\n\t\t\t\t\tif (!isCompress && result < 0) {\n\t\t\t\t\t\tthrow new Error(\"process error:\" + result);\n\t\t\t\t\t}\n\t\t\t\t\tconst prod = result & 0x00ffffff;\n\t\t\t\t\tif (prod) {\n\t\t\t\t\t\tscratch.set(heap.subarray(out, out + prod), 0);\n\t\t\t\t\t\tcontroller.enqueue(scratch.slice(0, prod));\n\t\t\t\t\t}\n\t\t\t\t\tconst consumed = last_consumed(this.streamHandle);\n\t\t\t\t\tif (consumed === 0) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\toffset += consumed;\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this._end && this.streamHandle) {\n\t\t\t\t\tthis._end(this.streamHandle);\n\t\t\t\t}\n\t\t\t\tif (this.in && free) {\n\t\t\t\t\tfree(this.in);\n\t\t\t\t}\n\t\t\t\tif (this.out && free) {\n\t\t\t\t\tfree(this.out);\n\t\t\t\t}\n\t\t\t\tcontroller.error(error);\n\t\t\t}\n\t\t},\n\t\tflush(controller) {\n\t\t\ttry {\n\t\t\t\tconst heap = new Uint8Array(memory.buffer);\n\t\t\t\tconst process = this._process;\n\t\t\t\tconst out = this.out;\n\t\t\t\tconst scratch = this._scratch;\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst result = process(this.streamHandle, 0, 0, out, outBufferSize, 4);\n\t\t\t\t\tif (!isCompress && result < 0) {\n\t\t\t\t\t\tthrow new Error(\"process error:\" + result);\n\t\t\t\t\t}\n\t\t\t\t\tconst produced = result & 0x00ffffff;\n\t\t\t\t\tconst code = (result >> 24) & 0xff;\n\t\t\t\t\tif (produced) {\n\t\t\t\t\t\tscratch.set(heap.subarray(out, out + produced), 0);\n\t\t\t\t\t\tcontroller.enqueue(scratch.slice(0, produced));\n\t\t\t\t\t}\n\t\t\t\t\tif (code === 1 || produced === 0) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tcontroller.error(error);\n\t\t\t} finally {\n\t\t\t\tif (this._end && this.streamHandle) {\n\t\t\t\t\tconst result = this._end(this.streamHandle);\n\t\t\t\t\tif (result !== 0) {\n\t\t\t\t\t\tcontroller.error(new Error(\"end error:\" + result));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.in && free) {\n\t\t\t\t\tfree(this.in);\n\t\t\t\t}\n\t\t\t\tif (this.out && free) {\n\t\t\t\t\tfree(this.out);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport class CompressionStreamZlib {\n\tconstructor(type = \"deflate\", options) {\n\t\treturn _make(true, type, options);\n\t}\n}\nexport class DecompressionStreamZlib {\n\tconstructor(type = \"deflate\", options) {\n\t\treturn _make(false, type, options);\n\t}\n}","/*\n Copyright (c) 2025 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global WebAssembly, URL, fetch, atob */\n\nimport { setWasmExports } from \"./zlib-streams.js\";\n\nlet initializedModule = false;\n\nasync function initModule(wasmURI, { baseURI }) {\n\tif (!initializedModule) {\n\t\tlet arrayBuffer, uri;\n\t\ttry {\n\t\t\ttry {\n\t\t\t\turi = new URL(wasmURI, baseURI);\n\t\t\t} catch {\n\t\t\t\t// ignored\n\t\t\t}\n\t\t\tconst response = await fetch(uri);\n\t\t\tarrayBuffer = await response.arrayBuffer();\n\t\t} catch (error) {\n\t\t\tif (wasmURI.startsWith(\"data:application/wasm;base64,\")) {\n\t\t\t\tarrayBuffer = arrayBufferFromDataURI(wasmURI);\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\tconst wasmInstance = await WebAssembly.instantiate(arrayBuffer);\n\t\tsetWasmExports(wasmInstance.instance.exports);\n\t\tinitializedModule = true;\n\t}\n}\n\nfunction resetWasmModule() {\n\tinitializedModule = false;\n}\n\nfunction arrayBufferFromDataURI(dataURI) {\n\tconst base64 = dataURI.split(\",\")[1];\n\tconst binary = atob(base64);\n\tconst len = binary.length;\n\tconst bytes = new Uint8Array(len);\n\tfor (let i = 0; i < len; ++i) {\n\t\tbytes[i] = binary.charCodeAt(i);\n\t}\n\treturn bytes.buffer;\n}\n\nexport {\n\tsetWasmExports,\n\tCompressionStreamZlib,\n\tDecompressionStreamZlib\n} from \"./zlib-streams.js\";\nexport {\n\tinitModule,\n\tresetWasmModule,\n\tinitializedModule\n};","/*\n Copyright (c) 2025 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright\n notice, this list of conditions and the following disclaimer in\n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { FUNCTION_TYPE } from \"./core/constants.js\";\nimport { configure } from \"./core/configuration.js\";\nimport { configureZlibModule } from \"./core/zlib-streams-inline.js\";\nimport { configureWorker } from \"./core/codec-worker.js\";\nimport { terminateWorkers } from \"./core/codec-pool.js\";\nimport { initModule, resetWasmModule, CompressionStreamZlib, DecompressionStreamZlib } from \"./core/streams/zlib-wasm/zlib-streams-loader.js\";\n\nlet modulePromise;\n\nconfigureZlibModule(configure);\nconfigureWorker({\n\tinitModule: config => {\n\t\tif (!modulePromise) {\n\t\t\tlet { wasmURI } = config;\n\t\t\t// deno-lint-ignore valid-typeof\n\t\t\tif (typeof wasmURI == FUNCTION_TYPE) {\n\t\t\t\twasmURI = wasmURI();\n\t\t\t}\n\t\t\tmodulePromise = initModule(wasmURI, config);\n\n\t\t}\n\t\treturn modulePromise;\n\t}\n});\nconfigure({\n\tCompressionStreamZlib,\n\tDecompressionStreamZlib\n});\n\nexport { terminateWorkersAndModule as terminateWorkers };\n\nfunction terminateWorkersAndModule() {\n\tmodulePromise = null;\n\tterminateWorkers();\n\tresetWasmModule();\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { getMimeType as getDefaultMimeType } from \"./default-mime-type.js\";\n\nconst table = {\n\t\"application\": {\n\t\t\"andrew-inset\": \"ez\",\n\t\t\"annodex\": \"anx\",\n\t\t\"atom+xml\": \"atom\",\n\t\t\"atomcat+xml\": \"atomcat\",\n\t\t\"atomserv+xml\": \"atomsrv\",\n\t\t\"bbolin\": \"lin\",\n\t\t\"cu-seeme\": \"cu\",\n\t\t\"davmount+xml\": \"davmount\",\n\t\t\"dsptype\": \"tsp\",\n\t\t\"ecmascript\": [\n\t\t\t\"es\",\n\t\t\t\"ecma\"\n\t\t],\n\t\t\"futuresplash\": \"spl\",\n\t\t\"hta\": \"hta\",\n\t\t\"java-archive\": \"jar\",\n\t\t\"java-serialized-object\": \"ser\",\n\t\t\"java-vm\": \"class\",\n\t\t\"m3g\": \"m3g\",\n\t\t\"mac-binhex40\": \"hqx\",\n\t\t\"mathematica\": [\n\t\t\t\"nb\",\n\t\t\t\"ma\",\n\t\t\t\"mb\"\n\t\t],\n\t\t\"msaccess\": \"mdb\",\n\t\t\"msword\": [\n\t\t\t\"doc\",\n\t\t\t\"dot\",\n\t\t\t\"wiz\"\n\t\t],\n\t\t\"mxf\": \"mxf\",\n\t\t\"oda\": \"oda\",\n\t\t\"ogg\": \"ogx\",\n\t\t\"pdf\": \"pdf\",\n\t\t\"pgp-keys\": \"key\",\n\t\t\"pgp-signature\": [\n\t\t\t\"asc\",\n\t\t\t\"sig\"\n\t\t],\n\t\t\"pics-rules\": \"prf\",\n\t\t\"postscript\": [\n\t\t\t\"ps\",\n\t\t\t\"ai\",\n\t\t\t\"eps\",\n\t\t\t\"epsi\",\n\t\t\t\"epsf\",\n\t\t\t\"eps2\",\n\t\t\t\"eps3\"\n\t\t],\n\t\t\"rar\": \"rar\",\n\t\t\"rdf+xml\": \"rdf\",\n\t\t\"rss+xml\": \"rss\",\n\t\t\"rtf\": \"rtf\",\n\t\t\"xhtml+xml\": [\n\t\t\t\"xhtml\",\n\t\t\t\"xht\"\n\t\t],\n\t\t\"xml\": [\n\t\t\t\"xml\",\n\t\t\t\"xsl\",\n\t\t\t\"xsd\",\n\t\t\t\"xpdl\"\n\t\t],\n\t\t\"xspf+xml\": \"xspf\",\n\t\t\"zip\": \"zip\",\n\t\t\"vnd.android.package-archive\": \"apk\",\n\t\t\"vnd.cinderella\": \"cdy\",\n\t\t\"vnd.google-earth.kml+xml\": \"kml\",\n\t\t\"vnd.google-earth.kmz\": \"kmz\",\n\t\t\"vnd.mozilla.xul+xml\": \"xul\",\n\t\t\"vnd.ms-excel\": [\n\t\t\t\"xls\",\n\t\t\t\"xlb\",\n\t\t\t\"xlt\",\n\t\t\t\"xlm\",\n\t\t\t\"xla\",\n\t\t\t\"xlc\",\n\t\t\t\"xlw\"\n\t\t],\n\t\t\"vnd.ms-pki.seccat\": \"cat\",\n\t\t\"vnd.ms-pki.stl\": \"stl\",\n\t\t\"vnd.ms-powerpoint\": [\n\t\t\t\"ppt\",\n\t\t\t\"pps\",\n\t\t\t\"pot\",\n\t\t\t\"ppa\",\n\t\t\t\"pwz\"\n\t\t],\n\t\t\"vnd.oasis.opendocument.chart\": \"odc\",\n\t\t\"vnd.oasis.opendocument.database\": \"odb\",\n\t\t\"vnd.oasis.opendocument.formula\": \"odf\",\n\t\t\"vnd.oasis.opendocument.graphics\": \"odg\",\n\t\t\"vnd.oasis.opendocument.graphics-template\": \"otg\",\n\t\t\"vnd.oasis.opendocument.image\": \"odi\",\n\t\t\"vnd.oasis.opendocument.presentation\": \"odp\",\n\t\t\"vnd.oasis.opendocument.presentation-template\": \"otp\",\n\t\t\"vnd.oasis.opendocument.spreadsheet\": \"ods\",\n\t\t\"vnd.oasis.opendocument.spreadsheet-template\": \"ots\",\n\t\t\"vnd.oasis.opendocument.text\": \"odt\",\n\t\t\"vnd.oasis.opendocument.text-master\": [\n\t\t\t\"odm\",\n\t\t\t\"otm\"\n\t\t],\n\t\t\"vnd.oasis.opendocument.text-template\": \"ott\",\n\t\t\"vnd.oasis.opendocument.text-web\": \"oth\",\n\t\t\"vnd.openxmlformats-officedocument.spreadsheetml.sheet\": \"xlsx\",\n\t\t\"vnd.openxmlformats-officedocument.spreadsheetml.template\": \"xltx\",\n\t\t\"vnd.openxmlformats-officedocument.presentationml.presentation\": \"pptx\",\n\t\t\"vnd.openxmlformats-officedocument.presentationml.slideshow\": \"ppsx\",\n\t\t\"vnd.openxmlformats-officedocument.presentationml.template\": \"potx\",\n\t\t\"vnd.openxmlformats-officedocument.wordprocessingml.document\": \"docx\",\n\t\t\"vnd.openxmlformats-officedocument.wordprocessingml.template\": \"dotx\",\n\t\t\"vnd.smaf\": \"mmf\",\n\t\t\"vnd.stardivision.calc\": \"sdc\",\n\t\t\"vnd.stardivision.chart\": \"sds\",\n\t\t\"vnd.stardivision.draw\": \"sda\",\n\t\t\"vnd.stardivision.impress\": \"sdd\",\n\t\t\"vnd.stardivision.math\": [\n\t\t\t\"sdf\",\n\t\t\t\"smf\"\n\t\t],\n\t\t\"vnd.stardivision.writer\": [\n\t\t\t\"sdw\",\n\t\t\t\"vor\"\n\t\t],\n\t\t\"vnd.stardivision.writer-global\": \"sgl\",\n\t\t\"vnd.sun.xml.calc\": \"sxc\",\n\t\t\"vnd.sun.xml.calc.template\": \"stc\",\n\t\t\"vnd.sun.xml.draw\": \"sxd\",\n\t\t\"vnd.sun.xml.draw.template\": \"std\",\n\t\t\"vnd.sun.xml.impress\": \"sxi\",\n\t\t\"vnd.sun.xml.impress.template\": \"sti\",\n\t\t\"vnd.sun.xml.math\": \"sxm\",\n\t\t\"vnd.sun.xml.writer\": \"sxw\",\n\t\t\"vnd.sun.xml.writer.global\": \"sxg\",\n\t\t\"vnd.sun.xml.writer.template\": \"stw\",\n\t\t\"vnd.symbian.install\": [\n\t\t\t\"sis\",\n\t\t\t\"sisx\"\n\t\t],\n\t\t\"vnd.visio\": [\n\t\t\t\"vsd\",\n\t\t\t\"vst\",\n\t\t\t\"vss\",\n\t\t\t\"vsw\",\n\t\t\t\"vsdx\",\n\t\t\t\"vssx\",\n\t\t\t\"vstx\",\n\t\t\t\"vssm\",\n\t\t\t\"vstm\"\n\t\t],\n\t\t\"vnd.wap.wbxml\": \"wbxml\",\n\t\t\"vnd.wap.wmlc\": \"wmlc\",\n\t\t\"vnd.wap.wmlscriptc\": \"wmlsc\",\n\t\t\"vnd.wordperfect\": \"wpd\",\n\t\t\"vnd.wordperfect5.1\": \"wp5\",\n\t\t\"x-123\": \"wk\",\n\t\t\"x-7z-compressed\": \"7z\",\n\t\t\"x-abiword\": \"abw\",\n\t\t\"x-apple-diskimage\": \"dmg\",\n\t\t\"x-bcpio\": \"bcpio\",\n\t\t\"x-bittorrent\": \"torrent\",\n\t\t\"x-cbr\": [\n\t\t\t\"cbr\",\n\t\t\t\"cba\",\n\t\t\t\"cbt\",\n\t\t\t\"cb7\"\n\t\t],\n\t\t\"x-cbz\": \"cbz\",\n\t\t\"x-cdf\": [\n\t\t\t\"cdf\",\n\t\t\t\"cda\"\n\t\t],\n\t\t\"x-cdlink\": \"vcd\",\n\t\t\"x-chess-pgn\": \"pgn\",\n\t\t\"x-cpio\": \"cpio\",\n\t\t\"x-csh\": \"csh\",\n\t\t\"x-director\": [\n\t\t\t\"dir\",\n\t\t\t\"dxr\",\n\t\t\t\"cst\",\n\t\t\t\"cct\",\n\t\t\t\"cxt\",\n\t\t\t\"w3d\",\n\t\t\t\"fgd\",\n\t\t\t\"swa\"\n\t\t],\n\t\t\"x-dms\": \"dms\",\n\t\t\"x-doom\": \"wad\",\n\t\t\"x-dvi\": \"dvi\",\n\t\t\"x-httpd-eruby\": \"rhtml\",\n\t\t\"x-font\": \"pcf.Z\",\n\t\t\"x-freemind\": \"mm\",\n\t\t\"x-gnumeric\": \"gnumeric\",\n\t\t\"x-go-sgf\": \"sgf\",\n\t\t\"x-graphing-calculator\": \"gcf\",\n\t\t\"x-gtar\": [\n\t\t\t\"gtar\",\n\t\t\t\"taz\"\n\t\t],\n\t\t\"x-hdf\": \"hdf\",\n\t\t\"x-httpd-php\": [\n\t\t\t\"phtml\",\n\t\t\t\"pht\",\n\t\t\t\"php\"\n\t\t],\n\t\t\"x-httpd-php-source\": \"phps\",\n\t\t\"x-httpd-php3\": \"php3\",\n\t\t\"x-httpd-php3-preprocessed\": \"php3p\",\n\t\t\"x-httpd-php4\": \"php4\",\n\t\t\"x-httpd-php5\": \"php5\",\n\t\t\"x-ica\": \"ica\",\n\t\t\"x-info\": \"info\",\n\t\t\"x-internet-signup\": [\n\t\t\t\"ins\",\n\t\t\t\"isp\"\n\t\t],\n\t\t\"x-iphone\": \"iii\",\n\t\t\"x-iso9660-image\": \"iso\",\n\t\t\"x-java-jnlp-file\": \"jnlp\",\n\t\t\"x-jmol\": \"jmz\",\n\t\t\"x-killustrator\": \"kil\",\n\t\t\"x-latex\": \"latex\",\n\t\t\"x-lyx\": \"lyx\",\n\t\t\"x-lzx\": \"lzx\",\n\t\t\"x-maker\": [\n\t\t\t\"frm\",\n\t\t\t\"fb\",\n\t\t\t\"fbdoc\"\n\t\t],\n\t\t\"x-ms-wmd\": \"wmd\",\n\t\t\"x-msdos-program\": [\n\t\t\t\"com\",\n\t\t\t\"exe\",\n\t\t\t\"bat\",\n\t\t\t\"dll\"\n\t\t],\n\t\t\"x-netcdf\": [\n\t\t\t\"nc\"\n\t\t],\n\t\t\"x-ns-proxy-autoconfig\": [\n\t\t\t\"pac\",\n\t\t\t\"dat\"\n\t\t],\n\t\t\"x-nwc\": \"nwc\",\n\t\t\"x-object\": \"o\",\n\t\t\"x-oz-application\": \"oza\",\n\t\t\"x-pkcs7-certreqresp\": \"p7r\",\n\t\t\"x-python-code\": [\n\t\t\t\"pyc\",\n\t\t\t\"pyo\"\n\t\t],\n\t\t\"x-qgis\": [\n\t\t\t\"qgs\",\n\t\t\t\"shp\",\n\t\t\t\"shx\"\n\t\t],\n\t\t\"x-quicktimeplayer\": \"qtl\",\n\t\t\"x-redhat-package-manager\": [\n\t\t\t\"rpm\",\n\t\t\t\"rpa\"\n\t\t],\n\t\t\"x-ruby\": \"rb\",\n\t\t\"x-sh\": \"sh\",\n\t\t\"x-shar\": \"shar\",\n\t\t\"x-shockwave-flash\": [\n\t\t\t\"swf\",\n\t\t\t\"swfl\"\n\t\t],\n\t\t\"x-silverlight\": \"scr\",\n\t\t\"x-stuffit\": \"sit\",\n\t\t\"x-sv4cpio\": \"sv4cpio\",\n\t\t\"x-sv4crc\": \"sv4crc\",\n\t\t\"x-tar\": \"tar\",\n\t\t\"x-tex-gf\": \"gf\",\n\t\t\"x-tex-pk\": \"pk\",\n\t\t\"x-texinfo\": [\n\t\t\t\"texinfo\",\n\t\t\t\"texi\"\n\t\t],\n\t\t\"x-trash\": [\n\t\t\t\"~\",\n\t\t\t\"%\",\n\t\t\t\"bak\",\n\t\t\t\"old\",\n\t\t\t\"sik\"\n\t\t],\n\t\t\"x-ustar\": \"ustar\",\n\t\t\"x-wais-source\": \"src\",\n\t\t\"x-wingz\": \"wz\",\n\t\t\"x-x509-ca-cert\": [\n\t\t\t\"crt\",\n\t\t\t\"der\",\n\t\t\t\"cer\"\n\t\t],\n\t\t\"x-xcf\": \"xcf\",\n\t\t\"x-xfig\": \"fig\",\n\t\t\"x-xpinstall\": \"xpi\",\n\t\t\"applixware\": \"aw\",\n\t\t\"atomsvc+xml\": \"atomsvc\",\n\t\t\"ccxml+xml\": \"ccxml\",\n\t\t\"cdmi-capability\": \"cdmia\",\n\t\t\"cdmi-container\": \"cdmic\",\n\t\t\"cdmi-domain\": \"cdmid\",\n\t\t\"cdmi-object\": \"cdmio\",\n\t\t\"cdmi-queue\": \"cdmiq\",\n\t\t\"docbook+xml\": \"dbk\",\n\t\t\"dssc+der\": \"dssc\",\n\t\t\"dssc+xml\": \"xdssc\",\n\t\t\"emma+xml\": \"emma\",\n\t\t\"epub+zip\": \"epub\",\n\t\t\"exi\": \"exi\",\n\t\t\"font-tdpfr\": \"pfr\",\n\t\t\"gml+xml\": \"gml\",\n\t\t\"gpx+xml\": \"gpx\",\n\t\t\"gxf\": \"gxf\",\n\t\t\"hyperstudio\": \"stk\",\n\t\t\"inkml+xml\": [\n\t\t\t\"ink\",\n\t\t\t\"inkml\"\n\t\t],\n\t\t\"ipfix\": \"ipfix\",\n\t\t\"jsonml+json\": \"jsonml\",\n\t\t\"lost+xml\": \"lostxml\",\n\t\t\"mads+xml\": \"mads\",\n\t\t\"marc\": \"mrc\",\n\t\t\"marcxml+xml\": \"mrcx\",\n\t\t\"mathml+xml\": [\n\t\t\t\"mathml\",\n\t\t\t\"mml\"\n\t\t],\n\t\t\"mbox\": \"mbox\",\n\t\t\"mediaservercontrol+xml\": \"mscml\",\n\t\t\"metalink+xml\": \"metalink\",\n\t\t\"metalink4+xml\": \"meta4\",\n\t\t\"mets+xml\": \"mets\",\n\t\t\"mods+xml\": \"mods\",\n\t\t\"mp21\": [\n\t\t\t\"m21\",\n\t\t\t\"mp21\"\n\t\t],\n\t\t\"mp4\": \"mp4s\",\n\t\t\"oebps-package+xml\": \"opf\",\n\t\t\"omdoc+xml\": \"omdoc\",\n\t\t\"onenote\": [\n\t\t\t\"onetoc\",\n\t\t\t\"onetoc2\",\n\t\t\t\"onetmp\",\n\t\t\t\"onepkg\"\n\t\t],\n\t\t\"oxps\": \"oxps\",\n\t\t\"patch-ops-error+xml\": \"xer\",\n\t\t\"pgp-encrypted\": \"pgp\",\n\t\t\"pkcs10\": \"p10\",\n\t\t\"pkcs7-mime\": [\n\t\t\t\"p7m\",\n\t\t\t\"p7c\"\n\t\t],\n\t\t\"pkcs7-signature\": \"p7s\",\n\t\t\"pkcs8\": \"p8\",\n\t\t\"pkix-attr-cert\": \"ac\",\n\t\t\"pkix-crl\": \"crl\",\n\t\t\"pkix-pkipath\": \"pkipath\",\n\t\t\"pkixcmp\": \"pki\",\n\t\t\"pls+xml\": \"pls\",\n\t\t\"prs.cww\": \"cww\",\n\t\t\"pskc+xml\": \"pskcxml\",\n\t\t\"reginfo+xml\": \"rif\",\n\t\t\"relax-ng-compact-syntax\": \"rnc\",\n\t\t\"resource-lists+xml\": \"rl\",\n\t\t\"resource-lists-diff+xml\": \"rld\",\n\t\t\"rls-services+xml\": \"rs\",\n\t\t\"rpki-ghostbusters\": \"gbr\",\n\t\t\"rpki-manifest\": \"mft\",\n\t\t\"rpki-roa\": \"roa\",\n\t\t\"rsd+xml\": \"rsd\",\n\t\t\"sbml+xml\": \"sbml\",\n\t\t\"scvp-cv-request\": \"scq\",\n\t\t\"scvp-cv-response\": \"scs\",\n\t\t\"scvp-vp-request\": \"spq\",\n\t\t\"scvp-vp-response\": \"spp\",\n\t\t\"sdp\": \"sdp\",\n\t\t\"set-payment-initiation\": \"setpay\",\n\t\t\"set-registration-initiation\": \"setreg\",\n\t\t\"shf+xml\": \"shf\",\n\t\t\"sparql-query\": \"rq\",\n\t\t\"sparql-results+xml\": \"srx\",\n\t\t\"srgs\": \"gram\",\n\t\t\"srgs+xml\": \"grxml\",\n\t\t\"sru+xml\": \"sru\",\n\t\t\"ssdl+xml\": \"ssdl\",\n\t\t\"ssml+xml\": \"ssml\",\n\t\t\"tei+xml\": [\n\t\t\t\"tei\",\n\t\t\t\"teicorpus\"\n\t\t],\n\t\t\"thraud+xml\": \"tfi\",\n\t\t\"timestamped-data\": \"tsd\",\n\t\t\"vnd.3gpp.pic-bw-large\": \"plb\",\n\t\t\"vnd.3gpp.pic-bw-small\": \"psb\",\n\t\t\"vnd.3gpp.pic-bw-var\": \"pvb\",\n\t\t\"vnd.3gpp2.tcap\": \"tcap\",\n\t\t\"vnd.3m.post-it-notes\": \"pwn\",\n\t\t\"vnd.accpac.simply.aso\": \"aso\",\n\t\t\"vnd.accpac.simply.imp\": \"imp\",\n\t\t\"vnd.acucobol\": \"acu\",\n\t\t\"vnd.acucorp\": [\n\t\t\t\"atc\",\n\t\t\t\"acutc\"\n\t\t],\n\t\t\"vnd.adobe.air-application-installer-package+zip\": \"air\",\n\t\t\"vnd.adobe.formscentral.fcdt\": \"fcdt\",\n\t\t\"vnd.adobe.fxp\": [\n\t\t\t\"fxp\",\n\t\t\t\"fxpl\"\n\t\t],\n\t\t\"vnd.adobe.xdp+xml\": \"xdp\",\n\t\t\"vnd.adobe.xfdf\": \"xfdf\",\n\t\t\"vnd.ahead.space\": \"ahead\",\n\t\t\"vnd.airzip.filesecure.azf\": \"azf\",\n\t\t\"vnd.airzip.filesecure.azs\": \"azs\",\n\t\t\"vnd.amazon.ebook\": \"azw\",\n\t\t\"vnd.americandynamics.acc\": \"acc\",\n\t\t\"vnd.amiga.ami\": \"ami\",\n\t\t\"vnd.anser-web-certificate-issue-initiation\": \"cii\",\n\t\t\"vnd.anser-web-funds-transfer-initiation\": \"fti\",\n\t\t\"vnd.antix.game-component\": \"atx\",\n\t\t\"vnd.apple.installer+xml\": \"mpkg\",\n\t\t\"vnd.apple.mpegurl\": \"m3u8\",\n\t\t\"vnd.aristanetworks.swi\": \"swi\",\n\t\t\"vnd.astraea-software.iota\": \"iota\",\n\t\t\"vnd.audiograph\": \"aep\",\n\t\t\"vnd.blueice.multipass\": \"mpm\",\n\t\t\"vnd.bmi\": \"bmi\",\n\t\t\"vnd.businessobjects\": \"rep\",\n\t\t\"vnd.chemdraw+xml\": \"cdxml\",\n\t\t\"vnd.chipnuts.karaoke-mmd\": \"mmd\",\n\t\t\"vnd.claymore\": \"cla\",\n\t\t\"vnd.cloanto.rp9\": \"rp9\",\n\t\t\"vnd.clonk.c4group\": [\n\t\t\t\"c4g\",\n\t\t\t\"c4d\",\n\t\t\t\"c4f\",\n\t\t\t\"c4p\",\n\t\t\t\"c4u\"\n\t\t],\n\t\t\"vnd.cluetrust.cartomobile-config\": \"c11amc\",\n\t\t\"vnd.cluetrust.cartomobile-config-pkg\": \"c11amz\",\n\t\t\"vnd.commonspace\": \"csp\",\n\t\t\"vnd.contact.cmsg\": \"cdbcmsg\",\n\t\t\"vnd.cosmocaller\": \"cmc\",\n\t\t\"vnd.crick.clicker\": \"clkx\",\n\t\t\"vnd.crick.clicker.keyboard\": \"clkk\",\n\t\t\"vnd.crick.clicker.palette\": \"clkp\",\n\t\t\"vnd.crick.clicker.template\": \"clkt\",\n\t\t\"vnd.crick.clicker.wordbank\": \"clkw\",\n\t\t\"vnd.criticaltools.wbs+xml\": \"wbs\",\n\t\t\"vnd.ctc-posml\": \"pml\",\n\t\t\"vnd.cups-ppd\": \"ppd\",\n\t\t\"vnd.curl.car\": \"car\",\n\t\t\"vnd.curl.pcurl\": \"pcurl\",\n\t\t\"vnd.dart\": \"dart\",\n\t\t\"vnd.data-vision.rdz\": \"rdz\",\n\t\t\"vnd.dece.data\": [\n\t\t\t\"uvf\",\n\t\t\t\"uvvf\",\n\t\t\t\"uvd\",\n\t\t\t\"uvvd\"\n\t\t],\n\t\t\"vnd.dece.ttml+xml\": [\n\t\t\t\"uvt\",\n\t\t\t\"uvvt\"\n\t\t],\n\t\t\"vnd.dece.unspecified\": [\n\t\t\t\"uvx\",\n\t\t\t\"uvvx\"\n\t\t],\n\t\t\"vnd.dece.zip\": [\n\t\t\t\"uvz\",\n\t\t\t\"uvvz\"\n\t\t],\n\t\t\"vnd.denovo.fcselayout-link\": \"fe_launch\",\n\t\t\"vnd.dna\": \"dna\",\n\t\t\"vnd.dolby.mlp\": \"mlp\",\n\t\t\"vnd.dpgraph\": \"dpg\",\n\t\t\"vnd.dreamfactory\": \"dfac\",\n\t\t\"vnd.ds-keypoint\": \"kpxx\",\n\t\t\"vnd.dvb.ait\": \"ait\",\n\t\t\"vnd.dvb.service\": \"svc\",\n\t\t\"vnd.dynageo\": \"geo\",\n\t\t\"vnd.ecowin.chart\": \"mag\",\n\t\t\"vnd.enliven\": \"nml\",\n\t\t\"vnd.epson.esf\": \"esf\",\n\t\t\"vnd.epson.msf\": \"msf\",\n\t\t\"vnd.epson.quickanime\": \"qam\",\n\t\t\"vnd.epson.salt\": \"slt\",\n\t\t\"vnd.epson.ssf\": \"ssf\",\n\t\t\"vnd.eszigno3+xml\": [\n\t\t\t\"es3\",\n\t\t\t\"et3\"\n\t\t],\n\t\t\"vnd.ezpix-album\": \"ez2\",\n\t\t\"vnd.ezpix-package\": \"ez3\",\n\t\t\"vnd.fdf\": \"fdf\",\n\t\t\"vnd.fdsn.mseed\": \"mseed\",\n\t\t\"vnd.fdsn.seed\": [\n\t\t\t\"seed\",\n\t\t\t\"dataless\"\n\t\t],\n\t\t\"vnd.flographit\": \"gph\",\n\t\t\"vnd.fluxtime.clip\": \"ftc\",\n\t\t\"vnd.framemaker\": [\n\t\t\t\"fm\",\n\t\t\t\"frame\",\n\t\t\t\"maker\",\n\t\t\t\"book\"\n\t\t],\n\t\t\"vnd.frogans.fnc\": \"fnc\",\n\t\t\"vnd.frogans.ltf\": \"ltf\",\n\t\t\"vnd.fsc.weblaunch\": \"fsc\",\n\t\t\"vnd.fujitsu.oasys\": \"oas\",\n\t\t\"vnd.fujitsu.oasys2\": \"oa2\",\n\t\t\"vnd.fujitsu.oasys3\": \"oa3\",\n\t\t\"vnd.fujitsu.oasysgp\": \"fg5\",\n\t\t\"vnd.fujitsu.oasysprs\": \"bh2\",\n\t\t\"vnd.fujixerox.ddd\": \"ddd\",\n\t\t\"vnd.fujixerox.docuworks\": \"xdw\",\n\t\t\"vnd.fujixerox.docuworks.binder\": \"xbd\",\n\t\t\"vnd.fuzzysheet\": \"fzs\",\n\t\t\"vnd.genomatix.tuxedo\": \"txd\",\n\t\t\"vnd.geogebra.file\": \"ggb\",\n\t\t\"vnd.geogebra.tool\": \"ggt\",\n\t\t\"vnd.geometry-explorer\": [\n\t\t\t\"gex\",\n\t\t\t\"gre\"\n\t\t],\n\t\t\"vnd.geonext\": \"gxt\",\n\t\t\"vnd.geoplan\": \"g2w\",\n\t\t\"vnd.geospace\": \"g3w\",\n\t\t\"vnd.gmx\": \"gmx\",\n\t\t\"vnd.grafeq\": [\n\t\t\t\"gqf\",\n\t\t\t\"gqs\"\n\t\t],\n\t\t\"vnd.groove-account\": \"gac\",\n\t\t\"vnd.groove-help\": \"ghf\",\n\t\t\"vnd.groove-identity-message\": \"gim\",\n\t\t\"vnd.groove-injector\": \"grv\",\n\t\t\"vnd.groove-tool-message\": \"gtm\",\n\t\t\"vnd.groove-tool-template\": \"tpl\",\n\t\t\"vnd.groove-vcard\": \"vcg\",\n\t\t\"vnd.hal+xml\": \"hal\",\n\t\t\"vnd.handheld-entertainment+xml\": \"zmm\",\n\t\t\"vnd.hbci\": \"hbci\",\n\t\t\"vnd.hhe.lesson-player\": \"les\",\n\t\t\"vnd.hp-hpgl\": \"hpgl\",\n\t\t\"vnd.hp-hpid\": \"hpid\",\n\t\t\"vnd.hp-hps\": \"hps\",\n\t\t\"vnd.hp-jlyt\": \"jlt\",\n\t\t\"vnd.hp-pcl\": \"pcl\",\n\t\t\"vnd.hp-pclxl\": \"pclxl\",\n\t\t\"vnd.hydrostatix.sof-data\": \"sfd-hdstx\",\n\t\t\"vnd.ibm.minipay\": \"mpy\",\n\t\t\"vnd.ibm.modcap\": [\n\t\t\t\"afp\",\n\t\t\t\"listafp\",\n\t\t\t\"list3820\"\n\t\t],\n\t\t\"vnd.ibm.rights-management\": \"irm\",\n\t\t\"vnd.ibm.secure-container\": \"sc\",\n\t\t\"vnd.iccprofile\": [\n\t\t\t\"icc\",\n\t\t\t\"icm\"\n\t\t],\n\t\t\"vnd.igloader\": \"igl\",\n\t\t\"vnd.immervision-ivp\": \"ivp\",\n\t\t\"vnd.immervision-ivu\": \"ivu\",\n\t\t\"vnd.insors.igm\": \"igm\",\n\t\t\"vnd.intercon.formnet\": [\n\t\t\t\"xpw\",\n\t\t\t\"xpx\"\n\t\t],\n\t\t\"vnd.intergeo\": \"i2g\",\n\t\t\"vnd.intu.qbo\": \"qbo\",\n\t\t\"vnd.intu.qfx\": \"qfx\",\n\t\t\"vnd.ipunplugged.rcprofile\": \"rcprofile\",\n\t\t\"vnd.irepository.package+xml\": \"irp\",\n\t\t\"vnd.is-xpr\": \"xpr\",\n\t\t\"vnd.isac.fcs\": \"fcs\",\n\t\t\"vnd.jam\": \"jam\",\n\t\t\"vnd.jcp.javame.midlet-rms\": \"rms\",\n\t\t\"vnd.jisp\": \"jisp\",\n\t\t\"vnd.joost.joda-archive\": \"joda\",\n\t\t\"vnd.kahootz\": [\n\t\t\t\"ktz\",\n\t\t\t\"ktr\"\n\t\t],\n\t\t\"vnd.kde.karbon\": \"karbon\",\n\t\t\"vnd.kde.kchart\": \"chrt\",\n\t\t\"vnd.kde.kformula\": \"kfo\",\n\t\t\"vnd.kde.kivio\": \"flw\",\n\t\t\"vnd.kde.kontour\": \"kon\",\n\t\t\"vnd.kde.kpresenter\": [\n\t\t\t\"kpr\",\n\t\t\t\"kpt\"\n\t\t],\n\t\t\"vnd.kde.kspread\": \"ksp\",\n\t\t\"vnd.kde.kword\": [\n\t\t\t\"kwd\",\n\t\t\t\"kwt\"\n\t\t],\n\t\t\"vnd.kenameaapp\": \"htke\",\n\t\t\"vnd.kidspiration\": \"kia\",\n\t\t\"vnd.kinar\": [\n\t\t\t\"kne\",\n\t\t\t\"knp\"\n\t\t],\n\t\t\"vnd.koan\": [\n\t\t\t\"skp\",\n\t\t\t\"skd\",\n\t\t\t\"skt\",\n\t\t\t\"skm\"\n\t\t],\n\t\t\"vnd.kodak-descriptor\": \"sse\",\n\t\t\"vnd.las.las+xml\": \"lasxml\",\n\t\t\"vnd.llamagraphics.life-balance.desktop\": \"lbd\",\n\t\t\"vnd.llamagraphics.life-balance.exchange+xml\": \"lbe\",\n\t\t\"vnd.lotus-1-2-3\": \"123\",\n\t\t\"vnd.lotus-approach\": \"apr\",\n\t\t\"vnd.lotus-freelance\": \"pre\",\n\t\t\"vnd.lotus-notes\": \"nsf\",\n\t\t\"vnd.lotus-organizer\": \"org\",\n\t\t\"vnd.lotus-screencam\": \"scm\",\n\t\t\"vnd.lotus-wordpro\": \"lwp\",\n\t\t\"vnd.macports.portpkg\": \"portpkg\",\n\t\t\"vnd.mcd\": \"mcd\",\n\t\t\"vnd.medcalcdata\": \"mc1\",\n\t\t\"vnd.mediastation.cdkey\": \"cdkey\",\n\t\t\"vnd.mfer\": \"mwf\",\n\t\t\"vnd.mfmp\": \"mfm\",\n\t\t\"vnd.micrografx.flo\": \"flo\",\n\t\t\"vnd.micrografx.igx\": \"igx\",\n\t\t\"vnd.mif\": \"mif\",\n\t\t\"vnd.mobius.daf\": \"daf\",\n\t\t\"vnd.mobius.dis\": \"dis\",\n\t\t\"vnd.mobius.mbk\": \"mbk\",\n\t\t\"vnd.mobius.mqy\": \"mqy\",\n\t\t\"vnd.mobius.msl\": \"msl\",\n\t\t\"vnd.mobius.plc\": \"plc\",\n\t\t\"vnd.mobius.txf\": \"txf\",\n\t\t\"vnd.mophun.application\": \"mpn\",\n\t\t\"vnd.mophun.certificate\": \"mpc\",\n\t\t\"vnd.ms-artgalry\": \"cil\",\n\t\t\"vnd.ms-cab-compressed\": \"cab\",\n\t\t\"vnd.ms-excel.addin.macroenabled.12\": \"xlam\",\n\t\t\"vnd.ms-excel.sheet.binary.macroenabled.12\": \"xlsb\",\n\t\t\"vnd.ms-excel.sheet.macroenabled.12\": \"xlsm\",\n\t\t\"vnd.ms-excel.template.macroenabled.12\": \"xltm\",\n\t\t\"vnd.ms-fontobject\": \"eot\",\n\t\t\"vnd.ms-htmlhelp\": \"chm\",\n\t\t\"vnd.ms-ims\": \"ims\",\n\t\t\"vnd.ms-lrm\": \"lrm\",\n\t\t\"vnd.ms-officetheme\": \"thmx\",\n\t\t\"vnd.ms-powerpoint.addin.macroenabled.12\": \"ppam\",\n\t\t\"vnd.ms-powerpoint.presentation.macroenabled.12\": \"pptm\",\n\t\t\"vnd.ms-powerpoint.slide.macroenabled.12\": \"sldm\",\n\t\t\"vnd.ms-powerpoint.slideshow.macroenabled.12\": \"ppsm\",\n\t\t\"vnd.ms-powerpoint.template.macroenabled.12\": \"potm\",\n\t\t\"vnd.ms-project\": [\n\t\t\t\"mpp\",\n\t\t\t\"mpt\"\n\t\t],\n\t\t\"vnd.ms-word.document.macroenabled.12\": \"docm\",\n\t\t\"vnd.ms-word.template.macroenabled.12\": \"dotm\",\n\t\t\"vnd.ms-works\": [\n\t\t\t\"wps\",\n\t\t\t\"wks\",\n\t\t\t\"wcm\",\n\t\t\t\"wdb\"\n\t\t],\n\t\t\"vnd.ms-wpl\": \"wpl\",\n\t\t\"vnd.ms-xpsdocument\": \"xps\",\n\t\t\"vnd.mseq\": \"mseq\",\n\t\t\"vnd.musician\": \"mus\",\n\t\t\"vnd.muvee.style\": \"msty\",\n\t\t\"vnd.mynfc\": \"taglet\",\n\t\t\"vnd.neurolanguage.nlu\": \"nlu\",\n\t\t\"vnd.nitf\": [\n\t\t\t\"ntf\",\n\t\t\t\"nitf\"\n\t\t],\n\t\t\"vnd.noblenet-directory\": \"nnd\",\n\t\t\"vnd.noblenet-sealer\": \"nns\",\n\t\t\"vnd.noblenet-web\": \"nnw\",\n\t\t\"vnd.nokia.n-gage.data\": \"ngdat\",\n\t\t\"vnd.nokia.n-gage.symbian.install\": \"n-gage\",\n\t\t\"vnd.nokia.radio-preset\": \"rpst\",\n\t\t\"vnd.nokia.radio-presets\": \"rpss\",\n\t\t\"vnd.novadigm.edm\": \"edm\",\n\t\t\"vnd.novadigm.edx\": \"edx\",\n\t\t\"vnd.novadigm.ext\": \"ext\",\n\t\t\"vnd.oasis.opendocument.chart-template\": \"otc\",\n\t\t\"vnd.oasis.opendocument.formula-template\": \"odft\",\n\t\t\"vnd.oasis.opendocument.image-template\": \"oti\",\n\t\t\"vnd.olpc-sugar\": \"xo\",\n\t\t\"vnd.oma.dd2+xml\": \"dd2\",\n\t\t\"vnd.openofficeorg.extension\": \"oxt\",\n\t\t\"vnd.openxmlformats-officedocument.presentationml.slide\": \"sldx\",\n\t\t\"vnd.osgeo.mapguide.package\": \"mgp\",\n\t\t\"vnd.osgi.dp\": \"dp\",\n\t\t\"vnd.osgi.subsystem\": \"esa\",\n\t\t\"vnd.palm\": [\n\t\t\t\"pdb\",\n\t\t\t\"pqa\",\n\t\t\t\"oprc\"\n\t\t],\n\t\t\"vnd.pawaafile\": \"paw\",\n\t\t\"vnd.pg.format\": \"str\",\n\t\t\"vnd.pg.osasli\": \"ei6\",\n\t\t\"vnd.picsel\": \"efif\",\n\t\t\"vnd.pmi.widget\": \"wg\",\n\t\t\"vnd.pocketlearn\": \"plf\",\n\t\t\"vnd.powerbuilder6\": \"pbd\",\n\t\t\"vnd.previewsystems.box\": \"box\",\n\t\t\"vnd.proteus.magazine\": \"mgz\",\n\t\t\"vnd.publishare-delta-tree\": \"qps\",\n\t\t\"vnd.pvi.ptid1\": \"ptid\",\n\t\t\"vnd.quark.quarkxpress\": [\n\t\t\t\"qxd\",\n\t\t\t\"qxt\",\n\t\t\t\"qwd\",\n\t\t\t\"qwt\",\n\t\t\t\"qxl\",\n\t\t\t\"qxb\"\n\t\t],\n\t\t\"vnd.realvnc.bed\": \"bed\",\n\t\t\"vnd.recordare.musicxml\": \"mxl\",\n\t\t\"vnd.recordare.musicxml+xml\": \"musicxml\",\n\t\t\"vnd.rig.cryptonote\": \"cryptonote\",\n\t\t\"vnd.rn-realmedia\": \"rm\",\n\t\t\"vnd.rn-realmedia-vbr\": \"rmvb\",\n\t\t\"vnd.route66.link66+xml\": \"link66\",\n\t\t\"vnd.sailingtracker.track\": \"st\",\n\t\t\"vnd.seemail\": \"see\",\n\t\t\"vnd.sema\": \"sema\",\n\t\t\"vnd.semd\": \"semd\",\n\t\t\"vnd.semf\": \"semf\",\n\t\t\"vnd.shana.informed.formdata\": \"ifm\",\n\t\t\"vnd.shana.informed.formtemplate\": \"itp\",\n\t\t\"vnd.shana.informed.interchange\": \"iif\",\n\t\t\"vnd.shana.informed.package\": \"ipk\",\n\t\t\"vnd.simtech-mindmapper\": [\n\t\t\t\"twd\",\n\t\t\t\"twds\"\n\t\t],\n\t\t\"vnd.smart.teacher\": \"teacher\",\n\t\t\"vnd.solent.sdkm+xml\": [\n\t\t\t\"sdkm\",\n\t\t\t\"sdkd\"\n\t\t],\n\t\t\"vnd.spotfire.dxp\": \"dxp\",\n\t\t\"vnd.spotfire.sfs\": \"sfs\",\n\t\t\"vnd.stepmania.package\": \"smzip\",\n\t\t\"vnd.stepmania.stepchart\": \"sm\",\n\t\t\"vnd.sus-calendar\": [\n\t\t\t\"sus\",\n\t\t\t\"susp\"\n\t\t],\n\t\t\"vnd.svd\": \"svd\",\n\t\t\"vnd.syncml+xml\": \"xsm\",\n\t\t\"vnd.syncml.dm+wbxml\": \"bdm\",\n\t\t\"vnd.syncml.dm+xml\": \"xdm\",\n\t\t\"vnd.tao.intent-module-archive\": \"tao\",\n\t\t\"vnd.tcpdump.pcap\": [\n\t\t\t\"pcap\",\n\t\t\t\"cap\",\n\t\t\t\"dmp\"\n\t\t],\n\t\t\"vnd.tmobile-livetv\": \"tmo\",\n\t\t\"vnd.trid.tpt\": \"tpt\",\n\t\t\"vnd.triscape.mxs\": \"mxs\",\n\t\t\"vnd.trueapp\": \"tra\",\n\t\t\"vnd.ufdl\": [\n\t\t\t\"ufd\",\n\t\t\t\"ufdl\"\n\t\t],\n\t\t\"vnd.uiq.theme\": \"utz\",\n\t\t\"vnd.umajin\": \"umj\",\n\t\t\"vnd.unity\": \"unityweb\",\n\t\t\"vnd.uoml+xml\": \"uoml\",\n\t\t\"vnd.vcx\": \"vcx\",\n\t\t\"vnd.visionary\": \"vis\",\n\t\t\"vnd.vsf\": \"vsf\",\n\t\t\"vnd.webturbo\": \"wtb\",\n\t\t\"vnd.wolfram.player\": \"nbp\",\n\t\t\"vnd.wqd\": \"wqd\",\n\t\t\"vnd.wt.stf\": \"stf\",\n\t\t\"vnd.xara\": \"xar\",\n\t\t\"vnd.xfdl\": \"xfdl\",\n\t\t\"vnd.yamaha.hv-dic\": \"hvd\",\n\t\t\"vnd.yamaha.hv-script\": \"hvs\",\n\t\t\"vnd.yamaha.hv-voice\": \"hvp\",\n\t\t\"vnd.yamaha.openscoreformat\": \"osf\",\n\t\t\"vnd.yamaha.openscoreformat.osfpvg+xml\": \"osfpvg\",\n\t\t\"vnd.yamaha.smaf-audio\": \"saf\",\n\t\t\"vnd.yamaha.smaf-phrase\": \"spf\",\n\t\t\"vnd.yellowriver-custom-menu\": \"cmp\",\n\t\t\"vnd.zul\": [\n\t\t\t\"zir\",\n\t\t\t\"zirz\"\n\t\t],\n\t\t\"vnd.zzazz.deck+xml\": \"zaz\",\n\t\t\"voicexml+xml\": \"vxml\",\n\t\t\"widget\": \"wgt\",\n\t\t\"winhlp\": \"hlp\",\n\t\t\"wsdl+xml\": \"wsdl\",\n\t\t\"wspolicy+xml\": \"wspolicy\",\n\t\t\"x-ace-compressed\": \"ace\",\n\t\t\"x-authorware-bin\": [\n\t\t\t\"aab\",\n\t\t\t\"x32\",\n\t\t\t\"u32\",\n\t\t\t\"vox\"\n\t\t],\n\t\t\"x-authorware-map\": \"aam\",\n\t\t\"x-authorware-seg\": \"aas\",\n\t\t\"x-blorb\": [\n\t\t\t\"blb\",\n\t\t\t\"blorb\"\n\t\t],\n\t\t\"x-bzip\": \"bz\",\n\t\t\"x-bzip2\": [\n\t\t\t\"bz2\",\n\t\t\t\"boz\"\n\t\t],\n\t\t\"x-cfs-compressed\": \"cfs\",\n\t\t\"x-chat\": \"chat\",\n\t\t\"x-conference\": \"nsc\",\n\t\t\"x-dgc-compressed\": \"dgc\",\n\t\t\"x-dtbncx+xml\": \"ncx\",\n\t\t\"x-dtbook+xml\": \"dtb\",\n\t\t\"x-dtbresource+xml\": \"res\",\n\t\t\"x-eva\": \"eva\",\n\t\t\"x-font-bdf\": \"bdf\",\n\t\t\"x-font-ghostscript\": \"gsf\",\n\t\t\"x-font-linux-psf\": \"psf\",\n\t\t\"x-font-pcf\": \"pcf\",\n\t\t\"x-font-snf\": \"snf\",\n\t\t\"x-font-ttf\": [\n\t\t\t\"ttf\",\n\t\t\t\"ttc\"\n\t\t],\n\t\t\"x-font-type1\": [\n\t\t\t\"pfa\",\n\t\t\t\"pfb\",\n\t\t\t\"pfm\",\n\t\t\t\"afm\"\n\t\t],\n\t\t\"x-freearc\": \"arc\",\n\t\t\"x-gca-compressed\": \"gca\",\n\t\t\"x-glulx\": \"ulx\",\n\t\t\"x-gramps-xml\": \"gramps\",\n\t\t\"x-install-instructions\": \"install\",\n\t\t\"x-lzh-compressed\": [\n\t\t\t\"lzh\",\n\t\t\t\"lha\"\n\t\t],\n\t\t\"x-mie\": \"mie\",\n\t\t\"x-mobipocket-ebook\": [\n\t\t\t\"prc\",\n\t\t\t\"mobi\"\n\t\t],\n\t\t\"x-ms-application\": \"application\",\n\t\t\"x-ms-shortcut\": \"lnk\",\n\t\t\"x-ms-xbap\": \"xbap\",\n\t\t\"x-msbinder\": \"obd\",\n\t\t\"x-mscardfile\": \"crd\",\n\t\t\"x-msclip\": \"clp\",\n\t\t\"application/x-ms-installer\": \"msi\",\n\t\t\"x-msmediaview\": [\n\t\t\t\"mvb\",\n\t\t\t\"m13\",\n\t\t\t\"m14\"\n\t\t],\n\t\t\"x-msmetafile\": [\n\t\t\t\"wmf\",\n\t\t\t\"wmz\",\n\t\t\t\"emf\",\n\t\t\t\"emz\"\n\t\t],\n\t\t\"x-msmoney\": \"mny\",\n\t\t\"x-mspublisher\": \"pub\",\n\t\t\"x-msschedule\": \"scd\",\n\t\t\"x-msterminal\": \"trm\",\n\t\t\"x-mswrite\": \"wri\",\n\t\t\"x-nzb\": \"nzb\",\n\t\t\"x-pkcs12\": [\n\t\t\t\"p12\",\n\t\t\t\"pfx\"\n\t\t],\n\t\t\"x-pkcs7-certificates\": [\n\t\t\t\"p7b\",\n\t\t\t\"spc\"\n\t\t],\n\t\t\"x-research-info-systems\": \"ris\",\n\t\t\"x-silverlight-app\": \"xap\",\n\t\t\"x-sql\": \"sql\",\n\t\t\"x-stuffitx\": \"sitx\",\n\t\t\"x-subrip\": \"srt\",\n\t\t\"x-t3vm-image\": \"t3\",\n\t\t\"x-tex-tfm\": \"tfm\",\n\t\t\"x-tgif\": \"obj\",\n\t\t\"x-xliff+xml\": \"xlf\",\n\t\t\"x-xz\": \"xz\",\n\t\t\"x-zmachine\": [\n\t\t\t\"z1\",\n\t\t\t\"z2\",\n\t\t\t\"z3\",\n\t\t\t\"z4\",\n\t\t\t\"z5\",\n\t\t\t\"z6\",\n\t\t\t\"z7\",\n\t\t\t\"z8\"\n\t\t],\n\t\t\"xaml+xml\": \"xaml\",\n\t\t\"xcap-diff+xml\": \"xdf\",\n\t\t\"xenc+xml\": \"xenc\",\n\t\t\"xml-dtd\": \"dtd\",\n\t\t\"xop+xml\": \"xop\",\n\t\t\"xproc+xml\": \"xpl\",\n\t\t\"xslt+xml\": \"xslt\",\n\t\t\"xv+xml\": [\n\t\t\t\"mxml\",\n\t\t\t\"xhvml\",\n\t\t\t\"xvml\",\n\t\t\t\"xvm\"\n\t\t],\n\t\t\"yang\": \"yang\",\n\t\t\"yin+xml\": \"yin\",\n\t\t\"envoy\": \"evy\",\n\t\t\"fractals\": \"fif\",\n\t\t\"internet-property-stream\": \"acx\",\n\t\t\"olescript\": \"axs\",\n\t\t\"vnd.ms-outlook\": \"msg\",\n\t\t\"vnd.ms-pkicertstore\": \"sst\",\n\t\t\"x-compress\": \"z\",\n\t\t\"x-perfmon\": [\n\t\t\t\"pma\",\n\t\t\t\"pmc\",\n\t\t\t\"pmr\",\n\t\t\t\"pmw\"\n\t\t],\n\t\t\"ynd.ms-pkipko\": \"pko\",\n\t\t\"gzip\": [\n\t\t\t\"gz\",\n\t\t\t\"tgz\"\n\t\t],\n\t\t\"smil+xml\": [\n\t\t\t\"smi\",\n\t\t\t\"smil\"\n\t\t],\n\t\t\"vnd.debian.binary-package\": [\n\t\t\t\"deb\",\n\t\t\t\"udeb\"\n\t\t],\n\t\t\"vnd.hzn-3d-crossword\": \"x3d\",\n\t\t\"vnd.sqlite3\": [\n\t\t\t\"db\",\n\t\t\t\"sqlite\",\n\t\t\t\"sqlite3\",\n\t\t\t\"db-wal\",\n\t\t\t\"sqlite-wal\",\n\t\t\t\"db-shm\",\n\t\t\t\"sqlite-shm\"\n\t\t],\n\t\t\"vnd.wap.sic\": \"sic\",\n\t\t\"vnd.wap.slc\": \"slc\",\n\t\t\"x-krita\": [\n\t\t\t\"kra\",\n\t\t\t\"krz\"\n\t\t],\n\t\t\"x-perl\": [\n\t\t\t\"pm\",\n\t\t\t\"pl\"\n\t\t],\n\t\t\"yaml\": [\n\t\t\t\"yaml\",\n\t\t\t\"yml\"\n\t\t]\n\t},\n\t\"audio\": {\n\t\t\"amr\": \"amr\",\n\t\t\"amr-wb\": \"awb\",\n\t\t\"annodex\": \"axa\",\n\t\t\"basic\": [\n\t\t\t\"au\",\n\t\t\t\"snd\"\n\t\t],\n\t\t\"flac\": \"flac\",\n\t\t\"midi\": [\n\t\t\t\"mid\",\n\t\t\t\"midi\",\n\t\t\t\"kar\",\n\t\t\t\"rmi\"\n\t\t],\n\t\t\"mpeg\": [\n\t\t\t\"mpga\",\n\t\t\t\"mpega\",\n\t\t\t\"mp3\",\n\t\t\t\"m4a\",\n\t\t\t\"mp2a\",\n\t\t\t\"m2a\",\n\t\t\t\"m3a\"\n\t\t],\n\t\t\"mpegurl\": \"m3u\",\n\t\t\"ogg\": [\n\t\t\t\"oga\",\n\t\t\t\"ogg\",\n\t\t\t\"spx\"\n\t\t],\n\t\t\"prs.sid\": \"sid\",\n\t\t\"x-aiff\": \"aifc\",\n\t\t\"x-gsm\": \"gsm\",\n\t\t\"x-ms-wma\": \"wma\",\n\t\t\"x-ms-wax\": \"wax\",\n\t\t\"x-pn-realaudio\": \"ram\",\n\t\t\"x-realaudio\": \"ra\",\n\t\t\"x-sd2\": \"sd2\",\n\t\t\"adpcm\": \"adp\",\n\t\t\"mp4\": \"mp4a\",\n\t\t\"s3m\": \"s3m\",\n\t\t\"silk\": \"sil\",\n\t\t\"vnd.dece.audio\": [\n\t\t\t\"uva\",\n\t\t\t\"uvva\"\n\t\t],\n\t\t\"vnd.digital-winds\": \"eol\",\n\t\t\"vnd.dra\": \"dra\",\n\t\t\"vnd.dts\": \"dts\",\n\t\t\"vnd.dts.hd\": \"dtshd\",\n\t\t\"vnd.lucent.voice\": \"lvp\",\n\t\t\"vnd.ms-playready.media.pya\": \"pya\",\n\t\t\"vnd.nuera.ecelp4800\": \"ecelp4800\",\n\t\t\"vnd.nuera.ecelp7470\": \"ecelp7470\",\n\t\t\"vnd.nuera.ecelp9600\": \"ecelp9600\",\n\t\t\"vnd.rip\": \"rip\",\n\t\t\"webm\": \"weba\",\n\t\t\"x-caf\": \"caf\",\n\t\t\"x-matroska\": \"mka\",\n\t\t\"x-pn-realaudio-plugin\": \"rmp\",\n\t\t\"xm\": \"xm\",\n\t\t\"aac\": \"aac\",\n\t\t\"aiff\": [\n\t\t\t\"aiff\",\n\t\t\t\"aif\",\n\t\t\t\"aff\"\n\t\t],\n\t\t\"opus\": \"opus\",\n\t\t\"wav\": \"wav\"\n\t},\n\t\"chemical\": {\n\t\t\"x-alchemy\": \"alc\",\n\t\t\"x-cache\": [\n\t\t\t\"cac\",\n\t\t\t\"cache\"\n\t\t],\n\t\t\"x-cache-csf\": \"csf\",\n\t\t\"x-cactvs-binary\": [\n\t\t\t\"cbin\",\n\t\t\t\"cascii\",\n\t\t\t\"ctab\"\n\t\t],\n\t\t\"x-cdx\": \"cdx\",\n\t\t\"x-chem3d\": \"c3d\",\n\t\t\"x-cif\": \"cif\",\n\t\t\"x-cmdf\": \"cmdf\",\n\t\t\"x-cml\": \"cml\",\n\t\t\"x-compass\": \"cpa\",\n\t\t\"x-crossfire\": \"bsd\",\n\t\t\"x-csml\": [\n\t\t\t\"csml\",\n\t\t\t\"csm\"\n\t\t],\n\t\t\"x-ctx\": \"ctx\",\n\t\t\"x-cxf\": [\n\t\t\t\"cxf\",\n\t\t\t\"cef\"\n\t\t],\n\t\t\"x-embl-dl-nucleotide\": [\n\t\t\t\"emb\",\n\t\t\t\"embl\"\n\t\t],\n\t\t\"x-gamess-input\": [\n\t\t\t\"inp\",\n\t\t\t\"gam\",\n\t\t\t\"gamin\"\n\t\t],\n\t\t\"x-gaussian-checkpoint\": [\n\t\t\t\"fch\",\n\t\t\t\"fchk\"\n\t\t],\n\t\t\"x-gaussian-cube\": \"cub\",\n\t\t\"x-gaussian-input\": [\n\t\t\t\"gau\",\n\t\t\t\"gjc\",\n\t\t\t\"gjf\"\n\t\t],\n\t\t\"x-gaussian-log\": \"gal\",\n\t\t\"x-gcg8-sequence\": \"gcg\",\n\t\t\"x-genbank\": \"gen\",\n\t\t\"x-hin\": \"hin\",\n\t\t\"x-isostar\": [\n\t\t\t\"istr\",\n\t\t\t\"ist\"\n\t\t],\n\t\t\"x-jcamp-dx\": [\n\t\t\t\"jdx\",\n\t\t\t\"dx\"\n\t\t],\n\t\t\"x-kinemage\": \"kin\",\n\t\t\"x-macmolecule\": \"mcm\",\n\t\t\"x-macromodel-input\": \"mmod\",\n\t\t\"x-mdl-molfile\": \"mol\",\n\t\t\"x-mdl-rdfile\": \"rd\",\n\t\t\"x-mdl-rxnfile\": \"rxn\",\n\t\t\"x-mdl-sdfile\": \"sd\",\n\t\t\"x-mdl-tgf\": \"tgf\",\n\t\t\"x-mmcif\": \"mcif\",\n\t\t\"x-mol2\": \"mol2\",\n\t\t\"x-molconn-Z\": \"b\",\n\t\t\"x-mopac-graph\": \"gpt\",\n\t\t\"x-mopac-input\": [\n\t\t\t\"mop\",\n\t\t\t\"mopcrt\",\n\t\t\t\"zmt\"\n\t\t],\n\t\t\"x-mopac-out\": \"moo\",\n\t\t\"x-ncbi-asn1\": \"asn\",\n\t\t\"x-ncbi-asn1-ascii\": [\n\t\t\t\"prt\",\n\t\t\t\"ent\"\n\t\t],\n\t\t\"x-ncbi-asn1-binary\": \"val\",\n\t\t\"x-rosdal\": \"ros\",\n\t\t\"x-swissprot\": \"sw\",\n\t\t\"x-vamas-iso14976\": \"vms\",\n\t\t\"x-vmd\": \"vmd\",\n\t\t\"x-xtel\": \"xtel\",\n\t\t\"x-xyz\": \"xyz\"\n\t},\n\t\"font\": {\n\t\t\"otf\": \"otf\",\n\t\t\"woff\": \"woff\",\n\t\t\"woff2\": \"woff2\"\n\t},\n\t\"image\": {\n\t\t\"gif\": \"gif\",\n\t\t\"ief\": \"ief\",\n\t\t\"jpeg\": [\n\t\t\t\"jpeg\",\n\t\t\t\"jpg\",\n\t\t\t\"jpe\",\n\t\t\t\"jfif\",\n\t\t\t\"jfif-tbnl\",\n\t\t\t\"jif\"\n\t\t],\n\t\t\"pcx\": \"pcx\",\n\t\t\"png\": \"png\",\n\t\t\"svg+xml\": [\n\t\t\t\"svg\",\n\t\t\t\"svgz\"\n\t\t],\n\t\t\"tiff\": [\n\t\t\t\"tiff\",\n\t\t\t\"tif\"\n\t\t],\n\t\t\"vnd.djvu\": [\n\t\t\t\"djvu\",\n\t\t\t\"djv\"\n\t\t],\n\t\t\"vnd.wap.wbmp\": \"wbmp\",\n\t\t\"x-canon-cr2\": \"cr2\",\n\t\t\"x-canon-crw\": \"crw\",\n\t\t\"x-cmu-raster\": \"ras\",\n\t\t\"x-coreldraw\": \"cdr\",\n\t\t\"x-coreldrawpattern\": \"pat\",\n\t\t\"x-coreldrawtemplate\": \"cdt\",\n\t\t\"x-corelphotopaint\": \"cpt\",\n\t\t\"x-epson-erf\": \"erf\",\n\t\t\"x-icon\": \"ico\",\n\t\t\"x-jg\": \"art\",\n\t\t\"x-jng\": \"jng\",\n\t\t\"x-nikon-nef\": \"nef\",\n\t\t\"x-olympus-orf\": \"orf\",\n\t\t\"x-portable-anymap\": \"pnm\",\n\t\t\"x-portable-bitmap\": \"pbm\",\n\t\t\"x-portable-graymap\": \"pgm\",\n\t\t\"x-portable-pixmap\": \"ppm\",\n\t\t\"x-rgb\": \"rgb\",\n\t\t\"x-xbitmap\": \"xbm\",\n\t\t\"x-xpixmap\": \"xpm\",\n\t\t\"x-xwindowdump\": \"xwd\",\n\t\t\"bmp\": \"bmp\",\n\t\t\"cgm\": \"cgm\",\n\t\t\"g3fax\": \"g3\",\n\t\t\"ktx\": \"ktx\",\n\t\t\"prs.btif\": \"btif\",\n\t\t\"sgi\": \"sgi\",\n\t\t\"vnd.dece.graphic\": [\n\t\t\t\"uvi\",\n\t\t\t\"uvvi\",\n\t\t\t\"uvg\",\n\t\t\t\"uvvg\"\n\t\t],\n\t\t\"vnd.dwg\": \"dwg\",\n\t\t\"vnd.dxf\": \"dxf\",\n\t\t\"vnd.fastbidsheet\": \"fbs\",\n\t\t\"vnd.fpx\": \"fpx\",\n\t\t\"vnd.fst\": \"fst\",\n\t\t\"vnd.fujixerox.edmics-mmr\": \"mmr\",\n\t\t\"vnd.fujixerox.edmics-rlc\": \"rlc\",\n\t\t\"vnd.ms-modi\": \"mdi\",\n\t\t\"vnd.ms-photo\": \"wdp\",\n\t\t\"vnd.net-fpx\": \"npx\",\n\t\t\"vnd.xiff\": \"xif\",\n\t\t\"webp\": \"webp\",\n\t\t\"x-3ds\": \"3ds\",\n\t\t\"x-cmx\": \"cmx\",\n\t\t\"x-freehand\": [\n\t\t\t\"fh\",\n\t\t\t\"fhc\",\n\t\t\t\"fh4\",\n\t\t\t\"fh5\",\n\t\t\t\"fh7\"\n\t\t],\n\t\t\"x-pict\": [\n\t\t\t\"pic\",\n\t\t\t\"pct\"\n\t\t],\n\t\t\"x-tga\": \"tga\",\n\t\t\"cis-cod\": \"cod\",\n\t\t\"avif\": \"avifs\",\n\t\t\"heic\": [\n\t\t\t\"heif\",\n\t\t\t\"heic\"\n\t\t],\n\t\t\"pjpeg\": [\n\t\t\t\"pjpg\"\n\t\t],\n\t\t\"vnd.adobe.photoshop\": \"psd\",\n\t\t\"x-adobe-dng\": \"dng\",\n\t\t\"x-fuji-raf\": \"raf\",\n\t\t\"x-icns\": \"icns\",\n\t\t\"x-kodak-dcr\": \"dcr\",\n\t\t\"x-kodak-k25\": \"k25\",\n\t\t\"x-kodak-kdc\": \"kdc\",\n\t\t\"x-minolta-mrw\": \"mrw\",\n\t\t\"x-panasonic-raw\": [\n\t\t\t\"raw\",\n\t\t\t\"rw2\",\n\t\t\t\"rwl\"\n\t\t],\n\t\t\"x-pentax-pef\": [\n\t\t\t\"pef\",\n\t\t\t\"ptx\"\n\t\t],\n\t\t\"x-sigma-x3f\": \"x3f\",\n\t\t\"x-sony-arw\": \"arw\",\n\t\t\"x-sony-sr2\": \"sr2\",\n\t\t\"x-sony-srf\": \"srf\"\n\t},\n\t\"message\": {\n\t\t\"rfc822\": [\n\t\t\t\"eml\",\n\t\t\t\"mime\",\n\t\t\t\"mht\",\n\t\t\t\"mhtml\",\n\t\t\t\"nws\"\n\t\t]\n\t},\n\t\"model\": {\n\t\t\"iges\": [\n\t\t\t\"igs\",\n\t\t\t\"iges\"\n\t\t],\n\t\t\"mesh\": [\n\t\t\t\"msh\",\n\t\t\t\"mesh\",\n\t\t\t\"silo\"\n\t\t],\n\t\t\"vrml\": [\n\t\t\t\"wrl\",\n\t\t\t\"vrml\"\n\t\t],\n\t\t\"x3d+vrml\": [\n\t\t\t\"x3dv\",\n\t\t\t\"x3dvz\"\n\t\t],\n\t\t\"x3d+xml\": \"x3dz\",\n\t\t\"x3d+binary\": [\n\t\t\t\"x3db\",\n\t\t\t\"x3dbz\"\n\t\t],\n\t\t\"vnd.collada+xml\": \"dae\",\n\t\t\"vnd.dwf\": \"dwf\",\n\t\t\"vnd.gdl\": \"gdl\",\n\t\t\"vnd.gtw\": \"gtw\",\n\t\t\"vnd.mts\": \"mts\",\n\t\t\"vnd.usdz+zip\": \"usdz\",\n\t\t\"vnd.vtu\": \"vtu\"\n\t},\n\t\"text\": {\n\t\t\"cache-manifest\": [\n\t\t\t\"manifest\",\n\t\t\t\"appcache\"\n\t\t],\n\t\t\"calendar\": [\n\t\t\t\"ics\",\n\t\t\t\"icz\",\n\t\t\t\"ifb\"\n\t\t],\n\t\t\"css\": \"css\",\n\t\t\"csv\": \"csv\",\n\t\t\"h323\": \"323\",\n\t\t\"html\": [\n\t\t\t\"html\",\n\t\t\t\"htm\",\n\t\t\t\"shtml\",\n\t\t\t\"stm\"\n\t\t],\n\t\t\"iuls\": \"uls\",\n\t\t\"plain\": [\n\t\t\t\"txt\",\n\t\t\t\"text\",\n\t\t\t\"brf\",\n\t\t\t\"conf\",\n\t\t\t\"def\",\n\t\t\t\"list\",\n\t\t\t\"log\",\n\t\t\t\"in\",\n\t\t\t\"bas\",\n\t\t\t\"diff\",\n\t\t\t\"ksh\"\n\t\t],\n\t\t\"richtext\": \"rtx\",\n\t\t\"scriptlet\": [\n\t\t\t\"sct\",\n\t\t\t\"wsc\"\n\t\t],\n\t\t\"texmacs\": \"tm\",\n\t\t\"tab-separated-values\": \"tsv\",\n\t\t\"vnd.sun.j2me.app-descriptor\": \"jad\",\n\t\t\"vnd.wap.wml\": \"wml\",\n\t\t\"vnd.wap.wmlscript\": \"wmls\",\n\t\t\"x-bibtex\": \"bib\",\n\t\t\"x-boo\": \"boo\",\n\t\t\"x-c++hdr\": [\n\t\t\t\"h++\",\n\t\t\t\"hpp\",\n\t\t\t\"hxx\",\n\t\t\t\"hh\"\n\t\t],\n\t\t\"x-c++src\": [\n\t\t\t\"c++\",\n\t\t\t\"cpp\",\n\t\t\t\"cxx\",\n\t\t\t\"cc\"\n\t\t],\n\t\t\"x-component\": \"htc\",\n\t\t\"x-dsrc\": \"d\",\n\t\t\"x-diff\": \"patch\",\n\t\t\"x-haskell\": \"hs\",\n\t\t\"x-java\": \"java\",\n\t\t\"x-literate-haskell\": \"lhs\",\n\t\t\"x-moc\": \"moc\",\n\t\t\"x-pascal\": [\n\t\t\t\"p\",\n\t\t\t\"pas\",\n\t\t\t\"pp\",\n\t\t\t\"inc\"\n\t\t],\n\t\t\"x-pcs-gcd\": \"gcd\",\n\t\t\"x-python\": \"py\",\n\t\t\"x-scala\": \"scala\",\n\t\t\"x-setext\": \"etx\",\n\t\t\"x-tcl\": [\n\t\t\t\"tcl\",\n\t\t\t\"tk\"\n\t\t],\n\t\t\"x-tex\": [\n\t\t\t\"tex\",\n\t\t\t\"ltx\",\n\t\t\t\"sty\",\n\t\t\t\"cls\"\n\t\t],\n\t\t\"x-vcalendar\": \"vcs\",\n\t\t\"x-vcard\": \"vcf\",\n\t\t\"n3\": \"n3\",\n\t\t\"prs.lines.tag\": \"dsc\",\n\t\t\"sgml\": [\n\t\t\t\"sgml\",\n\t\t\t\"sgm\"\n\t\t],\n\t\t\"troff\": [\n\t\t\t\"t\",\n\t\t\t\"tr\",\n\t\t\t\"roff\",\n\t\t\t\"man\",\n\t\t\t\"me\",\n\t\t\t\"ms\"\n\t\t],\n\t\t\"turtle\": \"ttl\",\n\t\t\"uri-list\": [\n\t\t\t\"uri\",\n\t\t\t\"uris\",\n\t\t\t\"urls\"\n\t\t],\n\t\t\"vcard\": \"vcard\",\n\t\t\"vnd.curl\": \"curl\",\n\t\t\"vnd.curl.dcurl\": \"dcurl\",\n\t\t\"vnd.curl.scurl\": \"scurl\",\n\t\t\"vnd.curl.mcurl\": \"mcurl\",\n\t\t\"vnd.dvb.subtitle\": \"sub\",\n\t\t\"vnd.fly\": \"fly\",\n\t\t\"vnd.fmi.flexstor\": \"flx\",\n\t\t\"vnd.graphviz\": \"gv\",\n\t\t\"vnd.in3d.3dml\": \"3dml\",\n\t\t\"vnd.in3d.spot\": \"spot\",\n\t\t\"x-asm\": [\n\t\t\t\"s\",\n\t\t\t\"asm\"\n\t\t],\n\t\t\"x-c\": [\n\t\t\t\"c\",\n\t\t\t\"h\",\n\t\t\t\"dic\"\n\t\t],\n\t\t\"x-fortran\": [\n\t\t\t\"f\",\n\t\t\t\"for\",\n\t\t\t\"f77\",\n\t\t\t\"f90\"\n\t\t],\n\t\t\"x-opml\": \"opml\",\n\t\t\"x-nfo\": \"nfo\",\n\t\t\"x-sfv\": \"sfv\",\n\t\t\"x-uuencode\": \"uu\",\n\t\t\"webviewhtml\": \"htt\",\n\t\t\"javascript\": \"js\",\n\t\t\"json\": \"json\",\n\t\t\"markdown\": [\n\t\t\t\"md\",\n\t\t\t\"markdown\",\n\t\t\t\"mdown\",\n\t\t\t\"markdn\"\n\t\t],\n\t\t\"vnd.wap.si\": \"si\",\n\t\t\"vnd.wap.sl\": \"sl\"\n\t},\n\t\"video\": {\n\t\t\"avif\": \"avif\",\n\t\t\"3gpp\": \"3gp\",\n\t\t\"annodex\": \"axv\",\n\t\t\"dl\": \"dl\",\n\t\t\"dv\": [\n\t\t\t\"dif\",\n\t\t\t\"dv\"\n\t\t],\n\t\t\"fli\": \"fli\",\n\t\t\"gl\": \"gl\",\n\t\t\"mpeg\": [\n\t\t\t\"mpeg\",\n\t\t\t\"mpg\",\n\t\t\t\"mpe\",\n\t\t\t\"m1v\",\n\t\t\t\"m2v\",\n\t\t\t\"mp2\",\n\t\t\t\"mpa\",\n\t\t\t\"mpv2\"\n\t\t],\n\t\t\"mp4\": [\n\t\t\t\"mp4\",\n\t\t\t\"mp4v\",\n\t\t\t\"mpg4\"\n\t\t],\n\t\t\"quicktime\": [\n\t\t\t\"qt\",\n\t\t\t\"mov\"\n\t\t],\n\t\t\"ogg\": \"ogv\",\n\t\t\"vnd.mpegurl\": [\n\t\t\t\"mxu\",\n\t\t\t\"m4u\"\n\t\t],\n\t\t\"x-flv\": \"flv\",\n\t\t\"x-la-asf\": [\n\t\t\t\"lsf\",\n\t\t\t\"lsx\"\n\t\t],\n\t\t\"x-mng\": \"mng\",\n\t\t\"x-ms-asf\": [\n\t\t\t\"asf\",\n\t\t\t\"asx\",\n\t\t\t\"asr\"\n\t\t],\n\t\t\"x-ms-wm\": \"wm\",\n\t\t\"x-ms-wmv\": \"wmv\",\n\t\t\"x-ms-wmx\": \"wmx\",\n\t\t\"x-ms-wvx\": \"wvx\",\n\t\t\"x-msvideo\": \"avi\",\n\t\t\"x-sgi-movie\": \"movie\",\n\t\t\"x-matroska\": [\n\t\t\t\"mpv\",\n\t\t\t\"mkv\",\n\t\t\t\"mk3d\",\n\t\t\t\"mks\"\n\t\t],\n\t\t\"3gpp2\": \"3g2\",\n\t\t\"h261\": \"h261\",\n\t\t\"h263\": \"h263\",\n\t\t\"h264\": \"h264\",\n\t\t\"jpeg\": \"jpgv\",\n\t\t\"jpm\": [\n\t\t\t\"jpm\",\n\t\t\t\"jpgm\"\n\t\t],\n\t\t\"mj2\": [\n\t\t\t\"mj2\",\n\t\t\t\"mjp2\"\n\t\t],\n\t\t\"vnd.dece.hd\": [\n\t\t\t\"uvh\",\n\t\t\t\"uvvh\"\n\t\t],\n\t\t\"vnd.dece.mobile\": [\n\t\t\t\"uvm\",\n\t\t\t\"uvvm\"\n\t\t],\n\t\t\"vnd.dece.pd\": [\n\t\t\t\"uvp\",\n\t\t\t\"uvvp\"\n\t\t],\n\t\t\"vnd.dece.sd\": [\n\t\t\t\"uvs\",\n\t\t\t\"uvvs\"\n\t\t],\n\t\t\"vnd.dece.video\": [\n\t\t\t\"uvv\",\n\t\t\t\"uvvv\"\n\t\t],\n\t\t\"vnd.dvb.file\": \"dvb\",\n\t\t\"vnd.fvt\": \"fvt\",\n\t\t\"vnd.ms-playready.media.pyv\": \"pyv\",\n\t\t\"vnd.uvvu.mp4\": [\n\t\t\t\"uvu\",\n\t\t\t\"uvvu\"\n\t\t],\n\t\t\"vnd.vivo\": \"viv\",\n\t\t\"webm\": \"webm\",\n\t\t\"x-f4v\": \"f4v\",\n\t\t\"x-m4v\": \"m4v\",\n\t\t\"x-ms-vob\": \"vob\",\n\t\t\"x-smv\": \"smv\",\n\t\t\"mp2t\": \"ts\"\n\t},\n\t\"x-conference\": {\n\t\t\"x-cooltalk\": \"ice\"\n\t},\n\t\"x-world\": {\n\t\t\"x-vrml\": [\n\t\t\t\"vrm\",\n\t\t\t\"flr\",\n\t\t\t\"wrz\",\n\t\t\t\"xaf\",\n\t\t\t\"xof\"\n\t\t]\n\t}\n};\n\nconst mimeTypes = (() => {\n\tconst mimeTypes = {};\n\tfor (const type of Object.keys(table)) {\n\t\tfor (const subtype of Object.keys(table[type])) {\n\t\t\tconst value = table[type][subtype];\n\t\t\tif (typeof value == \"string\") {\n\t\t\t\tmimeTypes[value] = type + \"/\" + subtype;\n\t\t\t} else {\n\t\t\t\tfor (let indexMimeType = 0; indexMimeType < value.length; indexMimeType++) {\n\t\t\t\t\tmimeTypes[value[indexMimeType]] = type + \"/\" + subtype;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn mimeTypes;\n})();\n\nexport {\n\tmimeTypes,\n\tgetMimeType\n};\n\nfunction getMimeType(filename) {\n\treturn filename && mimeTypes[filename.split(\".\").pop().toLowerCase()] || getDefaultMimeType();\n}","/*\n Copyright (c) 2025 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright\n notice, this list of conditions and the following disclaimer in\n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { configure } from \"./core/configuration.js\";\nimport { configureWebWorker } from \"./core/web-worker-inline-wasm.js\";\n\nconfigureWebWorker(configure);\n\nexport * from \"./zip-fs-core-wasm.js\";\nexport { getMimeType } from \"./core/util/mime-type.js\";","import { VirtualFileSystem } from './VirtualFileSystem'\nimport { Entry, FileEntry, Uint8ArrayReader, ZipReader } from '@zip.js/zip.js'\nimport { VirtualFile } from './VirtualFile'\nimport { cachePutData } from '../AssetCacheHelper'\nimport { SelectFilesProgress } from '../selectfiles/SelectFilesProgress'\n\nexport class ZipFileParser {\n    constructor(readonly progress: SelectFilesProgress) {\n    }\n\n    async readZipFile(vfs: VirtualFileSystem, zipFileContent: Uint8Array): Promise<VirtualFileSystem> {\n        console.log('Reading ZIP file...')\n        const zipReader = new ZipReader(new Uint8ArrayReader(zipFileContent))\n        try {\n            const zipEntries = await zipReader.getEntries({\n                onprogress: (progress: number, total: number): undefined => {\n                    this.progress.setProgress(`Reading ZIP file entries...`, progress, total)\n                }\n            })\n            const wadEntries = zipEntries.filter(ZipFileParser.isWadFileEntry)\n            await Promise.all(wadEntries.map(async (e) => {\n                const lFileName = e.filename.replace('Rock Raiders/', '').toLowerCase()\n                const buffer = await e.arrayBuffer({\n                    onprogress: (progress: number, total: number): undefined => {\n                        this.progress.setProgress(`Extracting \"${e.filename}\"...`, progress, total)\n                    }\n                })\n                if (!buffer) throw new Error(`Could not read file buffer for ${lFileName}`)\n                vfs.registerFile(VirtualFile.fromBuffer(lFileName, buffer))\n                await cachePutData(lFileName, buffer)\n            }))\n            const dataEntries = zipEntries.filter(ZipFileParser.isDataFileEntry)\n            let progress = 0\n            await Promise.all(dataEntries.map(async (e) => {\n                const lFileName = e.filename.replace('Rock Raiders/', '').toLowerCase()\n                const buffer = await e.arrayBuffer()\n                if (!buffer) throw new Error(`Could not read file buffer for ${lFileName}`)\n                vfs.registerFile(VirtualFile.fromBuffer(lFileName, buffer))\n                await cachePutData(lFileName, buffer)\n                progress++\n                this.progress.setProgress(`Extracting files...`, progress, dataEntries.length)\n            }))\n            console.log('ZIP file content processed')\n            return vfs\n        } finally {\n            await zipReader.close()\n        }\n    }\n\n    private static isWadFileEntry(entry: Entry): entry is FileEntry {\n        return !entry.directory && !!entry.filename.match(/.+\\.wad/i)\n    }\n\n    private static isDataFileEntry(entry: Entry): entry is FileEntry {\n        return !entry.directory && !!entry.filename.match(/Rock Raiders\\/Data/i)\n    }\n}\n","import './SelectFilesModal.css'\nimport { VFSEncoding, VirtualFileSystem } from '../fileparser/VirtualFileSystem'\nimport { SelectFilesAccordion } from './SelectFilesAccordion'\nimport { SelectFilesForm } from './SelectFilesForm'\nimport { CabFile } from '../fileparser/CabFile'\nimport { cachePutData } from '../AssetCacheHelper'\nimport { VirtualFile } from '../fileparser/VirtualFile'\nimport { IsoFileParser } from '../fileparser/IsoFileParser'\nimport { CueFileParser } from '../fileparser/CueFileParser'\nimport { SelectFilesProgress } from './SelectFilesProgress'\nimport { ZipFileParser } from '../fileparser/ZipFileParser'\n\ninterface ZipPackConf {\n    flag: string\n    name: string\n    encoding: VFSEncoding\n}\n\ninterface WadFilesConf {\n    flag: string\n    code: string\n    name: string\n    encoding: VFSEncoding\n}\n\nexport class SelectFilesModal {\n    static readonly zipPacks: ZipPackConf[] = [\n        {flag: '🏴󠁧󠁢󠁥󠁮󠁧󠁿 / 🇺🇸', name: 'English', encoding: 'default'},\n        {flag: '🇩🇪', name: 'German', encoding: 'default'},\n        {flag: '🇩🇰', name: 'Danish', encoding: 'default'},\n        {flag: '🇳🇱', name: 'Dutch', encoding: 'default'},\n        {flag: '🇮🇱', name: 'Hebrew', encoding: 'windows-1255'},\n        {flag: '🇮🇹', name: 'Italian', encoding: 'default'},\n        {flag: '🇳🇴', name: 'Norwegian', encoding: 'default'},\n        {flag: '🇵🇱', name: 'Polish', encoding: 'windows-1250'},\n        {flag: '🇷🇺', name: 'Russian', encoding: 'windows-1251'},\n        {flag: '🇪🇸', name: 'Spanish', encoding: 'default'},\n        {flag: '🇸🇪', name: 'Swedish', encoding: 'default'},\n        {flag: '🇫🇷', name: 'French', encoding: 'default'},\n    ]\n\n    static readonly wadFiles: WadFilesConf[] = [\n        {flag: '🇨🇿', code: 'CZ', name: 'Czech', encoding: 'windows-1250'},\n        {flag: '🇭🇺', code: 'HR', name: 'Hungarian', encoding: 'windows-1250'},\n        {flag: '🇵🇹', code: 'PT', name: 'Portuguese', encoding: 'windows-1252'}, // TODO letter not found issue with ü (252) while bitmap font image has only 190 chars\n        {flag: '🇷🇸', code: 'RS', name: 'Serbian', encoding: 'windows-1251'},\n        {flag: '🇸🇮', code: 'SL', name: 'Slovenian', encoding: 'windows-1250'},\n    ]\n\n    // TODO Add OS font rendering and colors for Japanese and Korean\n\n    readonly rootElement: HTMLElement\n    readonly optionList: SelectFilesAccordion\n\n    readonly zipFilesPanel: HTMLElement\n    readonly zipFilesProgress: SelectFilesProgress = new SelectFilesProgress()\n    readonly btnContainer: HTMLElement\n    readonly buttons: HTMLButtonElement[] = []\n\n    constructor(parent: HTMLElement, readonly onFilesLoaded: (vfs: VirtualFileSystem) => void) {\n        this.rootElement = parent.appendChild(document.createElement('div'))\n        this.rootElement.classList.add('select-files-modal')\n        this.rootElement.style.visibility = 'hidden'\n        const heading = this.rootElement.appendChild(document.createElement('h5'))\n        heading.classList.add('select-files-heading')\n        heading.innerText = 'Rock Raiders Web'\n        const content = this.rootElement.appendChild(document.createElement('div'))\n        content.classList.add('select-files-content')\n        const hints = content.appendChild(document.createElement('div'))\n        hints.appendChild(document.createElement('b')).innerText = 'Game resources not included!'\n        hints.appendChild(document.createElement('div')).innerText = 'Select an option below to start:'\n        this.optionList = new SelectFilesAccordion()\n        content.appendChild(this.optionList.root)\n        this.zipFilesPanel = document.createElement('div')\n        this.zipFilesProgress = new SelectFilesProgress()\n        this.btnContainer = this.zipFilesPanel.appendChild(document.createElement('div'))\n        this.btnContainer.classList.add('select-button-container')\n        SelectFilesModal.zipPacks.forEach((f) => {\n            const btn = this.btnContainer.appendChild(document.createElement('button'))\n            this.buttons.push(btn)\n            btn.innerText = f.flag\n            btn.title = f.name\n            btn.setAttribute('download-name', f.name)\n            btn.addEventListener('click', async () => {\n                try {\n                    this.buttons.forEach((btn) => btn.disabled = true)\n                    this.zipFilesPanel.replaceChildren(this.zipFilesProgress.root)\n                    const buffers = await Promise.all([0, 1].map((n) => {\n                        const url = `https://scarabol.github.io/wad-editor/mirror-archive.org/Rock%20Raiders%20%28${f.name}%29%20small.zip.part${n}`\n                        const urlFileName = url.split('/').last()\n                        if (!urlFileName) return new ArrayBuffer()\n                        const fileName = decodeURIComponent(urlFileName)\n                        this.zipFilesProgress.setProgress(fileName, 0, 100)\n                        return SelectFilesModal.loadFileFromUrl(url, this.zipFilesProgress)\n                    }))\n                    const zipFileLength = buffers.reduce((prev, file) => prev + file.byteLength, 0)\n                    const zipFileContent = new Uint8Array(zipFileLength)\n                    let offset = 0\n                    buffers.forEach((b) => {\n                        zipFileContent.set(new Uint8Array(b), offset)\n                        offset += b.byteLength\n                    })\n                    console.log('ZIP download complete')\n                    const vfs = new VirtualFileSystem(f.encoding)\n                    await new ZipFileParser(this.zipFilesProgress).readZipFile(vfs, zipFileContent)\n                    this.onFilesLoaded(vfs)\n                } finally {\n                    this.buttons.forEach((btn) => btn.disabled = false)\n                    this.zipFilesPanel.replaceChildren(this.btnContainer)\n                    this.zipFilesProgress.reset()\n                }\n            })\n        })\n        const hintWadFiles = this.zipFilesPanel.appendChild(document.createElement('div'))\n        hintWadFiles.innerHTML = 'Use WAD game files hosted on <a href=\"https://archive.org/details/lego-rr-0_20250425\">archive.org</a> <b>(one-click-setup, no music/videos, no streamed voice lines)</b>:'\n        hintWadFiles.style.padding = '10px 0'\n        const wadContainer = this.zipFilesPanel.appendChild(document.createElement('div'))\n        wadContainer.classList.add('select-button-container')\n        SelectFilesModal.wadFiles.forEach((f) => {\n            const btn = wadContainer.appendChild(document.createElement('button'))\n            this.buttons.push(btn)\n            btn.innerText = f.flag || f.code\n            btn.title = f.name\n            btn.setAttribute('download-name', f.name)\n            btn.addEventListener('click', async () => {\n                try {\n                    this.buttons.forEach((btn) => btn.disabled = true)\n                    this.zipFilesPanel.replaceChildren(this.zipFilesProgress.root)\n                    const vfs = new VirtualFileSystem(f.encoding)\n                    await Promise.all([0, 1].map(async (n) => {\n                        const url = `https://scarabol.github.io/wad-editor/mirror-archive.org/${f.code}/RR${n}.wad`\n                        const urlFileName = url.split('/').last()\n                        if (!urlFileName) return\n                        const fileName = decodeURIComponent(urlFileName)\n                        this.zipFilesProgress.setProgress(fileName, 0, 100)\n                        const buffer = await SelectFilesModal.loadFileFromUrl(url, this.zipFilesProgress)\n                        const lFileName = fileName.toLowerCase()\n                        vfs.registerFile(VirtualFile.fromBuffer(lFileName, buffer))\n                        await cachePutData(lFileName, buffer)\n                    }))\n                    console.log('WAD download complete')\n                    this.onFilesLoaded(vfs)\n                } finally {\n                    this.buttons.forEach((btn) => btn.disabled = false)\n                    this.zipFilesPanel.replaceChildren(wadContainer)\n                    this.zipFilesProgress.reset()\n                }\n            })\n        })\n        this.optionList.addOption('Use repacked game files hosted on <a href=\"https://archive.org/details/LEGORockRaiders-gamefiles-Eng\">archive.org</a> <b>(one-click-setup, no music/videos)</b>:', this.zipFilesPanel)\n        const cueBinFilesPanel = document.createElement('div')\n        const cueBinFilesProgress = new SelectFilesProgress()\n        const cueBinFilesForm = new SelectFilesForm('Start with CUE/BIN files', ['Rock Raiders.cue', 'Rock Raiders.bin'], async (files: File[]) => {\n            if (files.length !== 2) throw new Error(`Unexpected number of files (${files.length}) given`)\n            try {\n                cueBinFilesPanel.replaceChildren(cueBinFilesProgress.root)\n                const cueFileBuffer = await files[0].arrayBuffer()\n                const binFileBuffer = await files[1].arrayBuffer()\n                const cueFile = await new CueFileParser(cueFileBuffer, binFileBuffer).parse()\n                // Parse files from ISO image\n                const isoFile = new IsoFileParser(cueFile.isoFile)\n                const allFiles = await isoFile.loadAllFiles(cueBinFilesProgress)\n                const vfs = new VirtualFileSystem() // TODO Set encoding when starting from CUE/BIN\n                await Promise.all(allFiles.map(async (f) => {\n                    if (f.fileName.equalsIgnoreCase('data1.hdr') || f.fileName.equalsIgnoreCase('data1.cab')) return // only cache unpacked files\n                    await cachePutData(f.fileName.toLowerCase(), f.toBuffer())\n                    vfs.registerFile(f)\n                }))\n                await Promise.all(cueFile.audioTracks.map(async (audioBuffer, c) => {\n                    return await cachePutData(`musictrack${c}`, audioBuffer)\n                }))\n                this.onFilesLoaded(vfs)\n            } finally {\n                cueBinFilesPanel.replaceChildren(cueBinFilesForm.root)\n                cueBinFilesProgress.reset()\n            }\n        })\n        cueBinFilesPanel.appendChild(cueBinFilesForm.root)\n        this.optionList.addOption('Use local CUE/BIN files, usually seen as CD image <b>(recommended, all features)</b>:', cueBinFilesPanel)\n        const isoFilesPanel = document.createElement('div')\n        const isoFilesProgress = new SelectFilesProgress()\n        const isoFilesForm = new SelectFilesForm('Start with ISO file', ['Rock Raiders.iso'], async (files: File[]) => {\n            if (files.length !== 1) throw new Error(`Unexpected number of files (${files.length}) given`)\n            try {\n                isoFilesPanel.replaceChildren(isoFilesProgress.root)\n                const isoFileBuffer = await files[0].arrayBuffer()\n                const isoFile = new IsoFileParser(isoFileBuffer)\n                const allFiles = await isoFile.loadAllFiles(isoFilesProgress)\n                const vfs = new VirtualFileSystem() // TODO Set encoding when starting from ISO\n                await Promise.all(allFiles.map(async (f) => {\n                    if (f.fileName.equalsIgnoreCase('data1.hdr') || f.fileName.equalsIgnoreCase('data1.cab')) return // only cache unpacked files\n                    await cachePutData(f.fileName.toLowerCase(), f.toBuffer())\n                    vfs.registerFile(f)\n                }))\n                this.onFilesLoaded(vfs)\n            } finally {\n                isoFilesPanel.replaceChildren(isoFilesForm.root)\n                isoFilesProgress.reset()\n            }\n        })\n        isoFilesPanel.appendChild(isoFilesForm.root)\n        this.optionList.addOption('Use local ISO file, usually seen as CD image <b>(no music)</b>:', isoFilesPanel)\n        const wadFilesForm = new SelectFilesForm('Start with WAD files', ['RR0.wad', 'RR1.wad'], async (files: File[]) => {\n            if (files.length !== 2) throw new Error(`Unexpected number of files (${files.length}) given`)\n            const vfs = new VirtualFileSystem() // TODO Set encoding when starting from WAD\n            await Promise.all(files.map(async (file) => {\n                const lFileName = file.name.toLowerCase()\n                const buffer = await file.arrayBuffer()\n                vfs.registerFile(VirtualFile.fromBuffer(lFileName, buffer))\n                await cachePutData(lFileName, buffer)\n            }))\n            this.onFilesLoaded(vfs)\n        })\n        this.optionList.addOption('Use local WAD files, usually seen with mods:', wadFilesForm.root)\n        const cabFilesPanel = document.createElement('div')\n        const cabFilesProgress = new SelectFilesProgress()\n        const cabFilesForm = new SelectFilesForm('Start with CAB files', ['data1.hdr', 'data1.cab'], async (files: File[]) => {\n            if (files.length !== 2) throw new Error(`Unexpected number of files (${files.length}) given`)\n            try {\n                cabFilesPanel.replaceChildren(cabFilesProgress.root)\n                const cabHeader = await files[0].arrayBuffer()\n                const cabVolume = await files[1].arrayBuffer()\n                console.time('Parsing CAB files')\n                const cabFile = new CabFile(cabHeader, cabVolume).parse()\n                console.timeEnd('Parsing CAB files')\n                console.time('Unpack CAB files')\n                const allFiles = await cabFile.loadAllFiles(cabFilesProgress)\n                console.timeEnd('Unpack CAB files')\n                const vfs = new VirtualFileSystem() // TODO Set encoding when starting from CAB\n                await Promise.all(allFiles.map(async (f) => {\n                    await cachePutData(f.fileName.toLowerCase(), f.toBuffer())\n                    vfs.registerFile(f)\n                }))\n                this.onFilesLoaded(vfs)\n            } finally {\n                cabFilesPanel.replaceChildren(cabFilesForm.root)\n                cabFilesProgress.reset()\n            }\n        })\n        cabFilesPanel.appendChild(cabFilesForm.root)\n        this.optionList.addOption('Use local CAB files, usually seen on CD with installer:', cabFilesPanel)\n    }\n\n    static async loadFileFromUrl(url: string, progress: SelectFilesProgress): Promise<ArrayBuffer> {\n        return new Promise<ArrayBuffer>((resolve, reject) => {\n            const urlFileName = url.split('/').last()\n            if (!urlFileName) {\n                reject(new Error('No file name given'))\n                return\n            }\n            const fileName = decodeURIComponent(urlFileName)\n            console.log(`Loading file from ${url}`)\n            const xhr = new XMLHttpRequest()\n            xhr.open('GET', url)\n            xhr.responseType = 'arraybuffer'\n            xhr.onprogress = (event) => progress.setProgress(fileName, event.loaded, event.total)\n            xhr.onerror = (event) => reject(event)\n            xhr.onload = () => {\n                if (xhr.status !== 200) {\n                    reject(new Error(`Could not fetch file from \"${url}\"! Got status ${xhr.status} - ${xhr.statusText}`))\n                } else if (!xhr.response) {\n                    reject(new Error(`No response content for request received, please restart browser`))\n                } else {\n                    resolve(xhr.response)\n                }\n            }\n            xhr.send()\n        })\n    }\n\n    show(): void {\n        this.rootElement.style.visibility = 'visible'\n    }\n\n    hide(): void {\n        this.rootElement.style.visibility = 'hidden'\n    }\n}\n","export class ObjectListEntryCfg {\n    type?: string\n    xPos?: number\n    yPos?: number\n    heading?: number\n    driving?: string\n}\n","import { ObjectListEntryCfg } from '../../cfg/ObjectListEntryCfg'\nimport { VirtualFile } from './VirtualFile'\nimport { TerrainMapData } from '../../game/terrain/TerrainMapData'\n\nexport class WadParser {\n    static parseFileList(dataView: DataView<ArrayBuffer>): VirtualFile[] {\n        const textDecoder = new TextDecoder()\n        let pos = dataView.byteOffset\n        if (textDecoder.decode(new Uint8Array(dataView.buffer, pos, 4)) !== 'WWAD') {\n            throw new Error('Invalid WAD file provided')\n        }\n        pos += 4\n        const numberOfEntries = dataView.getInt32(pos, true)\n        const lEntryNames: string[] = []\n        pos += 4\n        let bufferStart = pos\n        for (let entryIndex = 0; entryIndex < numberOfEntries; pos++) {\n            if (dataView.getUint8(pos) !== 0) continue\n            const len = pos - bufferStart\n            const array = new Uint8Array(dataView.buffer, bufferStart, len)\n            lEntryNames[entryIndex] = textDecoder.decode(array).replace(/\\\\/g, '/').toLowerCase()\n            bufferStart = pos + 1\n            entryIndex++\n        }\n        for (let entryIndex = 0; entryIndex < numberOfEntries; pos++) {\n            if (dataView.getUint8(pos) !== 0) continue\n            entryIndex++\n        }\n        const result: VirtualFile[] = []\n        for (let entryIndex = 0; entryIndex < numberOfEntries; entryIndex++) {\n            const fileLength = dataView.getInt32(pos + 8, true)\n            const fileStartOffset = dataView.getInt32(pos + 12, true)\n            const fileName = lEntryNames[entryIndex]\n            const view = new DataView(dataView.buffer, fileStartOffset, fileLength)\n            result.push(VirtualFile.fromView(fileName, view))\n            pos += 16\n        }\n        return result\n    }\n\n    static parseMap(buffer: Uint8Array): TerrainMapData {\n        const map: { width: number, height: number, level: number[][] } = {width: buffer[8], height: buffer[12], level: []}\n        let row: number[] = []\n        for (let seek = 16; seek < buffer.length; seek += 2) {\n            row.push(buffer[seek])\n            if (row.length >= map.width) {\n                map.level.push(row)\n                row = []\n            }\n        }\n        return map\n    }\n\n    static parseObjectList(data: string): Map<string, ObjectListEntryCfg> {\n        const lines = data.split('\\n')\n        const objectList = new Map<string, ObjectListEntryCfg>()\n        let currentObject: ObjectListEntryCfg | undefined\n        for (let c = 0; c < lines.length; c++) {\n            const line = lines[c].trim()\n            const objectStartMatch = line.match(/(.+)\\s+{/)\n            const drivingMatch = line.match(/driving\\s+(.+)/i)\n            if (line.length < 1 || line.startsWith(';') || line.match(/\\S\\*\\s*\\{/)) {\n                // ignore empty lines, comments and the root object\n            } else if (objectStartMatch) {\n                currentObject = new ObjectListEntryCfg()\n                objectList.set(objectStartMatch[1].toLowerCase(), currentObject)\n            } else if (line === '}') {\n                currentObject = undefined\n            } else if (drivingMatch) {\n                if (!currentObject) {\n                    console.error('Unexpected driver specification outside of object')\n                } else {\n                    currentObject.driving = drivingMatch[1].toLowerCase()\n                }\n            } else {\n                const split = line.split(/\\s+/)\n                if (split.length !== 2 || !currentObject) throw new Error(`Unexpected key value entry: ${line}`)\n                const key = split[0]\n                let val = split[1]\n                if (key === 'xPos' || key === 'yPos' || key === 'heading') {\n                    if (!currentObject) {\n                        console.error(`Unexpected \"${key}\" specification outside of object`)\n                    } else {\n                        currentObject[key] = Number(val)\n                    }\n                } else if (key === 'type') {\n                    if (!currentObject) {\n                        console.error(`Unexpected \"${key}\" specification outside of object`)\n                    } else {\n                        currentObject[key] = val\n                    }\n                } else {\n                    throw new Error(`Unexpected key value entry: ${line}`)\n                }\n            }\n        }\n        return objectList\n    }\n}\n","import { VFSEncoding } from './VirtualFileSystem'\n\nexport class EncodingHelper {\n    private static currentEncoding: VFSEncoding = 'default'\n\n    static setEncoding(encoding: VFSEncoding) {\n        console.log(`Changing character encoding to \"${encoding}\"`)\n        this.currentEncoding = encoding\n    }\n\n    static decodeString(encoded: string): string {\n        return this.decode([...encoded].map((s) => s.charCodeAt(0)))\n    }\n\n    static decode(charCodes: number[]): string {\n        if (this.currentEncoding !== 'default') {\n            return new TextDecoder(this.currentEncoding).decode(new Uint8Array(charCodes))\n        } else {\n            return String.fromCharCode(...charCodes.map((c) => encodeChar[c]))\n        }\n    }\n}\n\nexport const encodeChar: number[] = []\n\nfor (let c = 0; c < 256; c++) {\n    encodeChar[c] = c\n}\nencodeChar[123] = 'Ä'.charCodeAt(0)\nencodeChar[124] = 'Å'.charCodeAt(0)\nencodeChar[125] = 'Á'.charCodeAt(0)\nencodeChar[126] = 'À'.charCodeAt(0)\nencodeChar[127] = 'Â'.charCodeAt(0)\nencodeChar[128] = 'Ã'.charCodeAt(0)\nencodeChar[129] = 'Ą'.charCodeAt(0)\nencodeChar[130] = 'ä'.charCodeAt(0)\nencodeChar[131] = 'å'.charCodeAt(0)\nencodeChar[132] = 'á'.charCodeAt(0)\nencodeChar[133] = 'à'.charCodeAt(0)\nencodeChar[134] = 'â'.charCodeAt(0)\nencodeChar[135] = 'ã'.charCodeAt(0)\nencodeChar[136] = 'ą'.charCodeAt(0)\nencodeChar[137] = 'Ë'.charCodeAt(0)\nencodeChar[138] = 'E̊'.charCodeAt(0)\nencodeChar[139] = 'É'.charCodeAt(0)\nencodeChar[140] = 'È'.charCodeAt(0)\nencodeChar[141] = 'Ê'.charCodeAt(0)\nencodeChar[142] = 'Ę'.charCodeAt(0)\nencodeChar[143] = 'ë'.charCodeAt(0)\nencodeChar[144] = 'e̊'.charCodeAt(0)\nencodeChar[145] = 'é'.charCodeAt(0)\nencodeChar[146] = 'è'.charCodeAt(0)\nencodeChar[147] = 'ê'.charCodeAt(0)\nencodeChar[148] = 'ę'.charCodeAt(0)\nencodeChar[149] = 'Ï'.charCodeAt(0)\nencodeChar[150] = 'Í'.charCodeAt(0)\nencodeChar[151] = 'Ì'.charCodeAt(0)\nencodeChar[152] = 'Î'.charCodeAt(0)\nencodeChar[153] = 'ï'.charCodeAt(0)\nencodeChar[154] = 'í'.charCodeAt(0)\nencodeChar[155] = 'ì'.charCodeAt(0)\nencodeChar[156] = 'î'.charCodeAt(0)\nencodeChar[157] = 'Ö'.charCodeAt(0)\nencodeChar[158] = 'Ó'.charCodeAt(0)\nencodeChar[159] = 'Ò'.charCodeAt(0)\nencodeChar[160] = 'Ô'.charCodeAt(0)\nencodeChar[161] = 'Õ'.charCodeAt(0)\nencodeChar[162] = 'ö'.charCodeAt(0)\nencodeChar[163] = 'ó'.charCodeAt(0)\nencodeChar[164] = 'ò'.charCodeAt(0)\nencodeChar[165] = 'ô'.charCodeAt(0)\nencodeChar[166] = 'õ'.charCodeAt(0)\nencodeChar[167] = 'Ü'.charCodeAt(0)\nencodeChar[168] = 'Ú'.charCodeAt(0)\nencodeChar[169] = 'Ù'.charCodeAt(0)\nencodeChar[170] = 'Û'.charCodeAt(0)\nencodeChar[171] = 'ü'.charCodeAt(0)\nencodeChar[172] = 'ú'.charCodeAt(0)\nencodeChar[173] = 'ù'.charCodeAt(0)\nencodeChar[174] = 'û'.charCodeAt(0)\nencodeChar[175] = 'Ç'.charCodeAt(0)\nencodeChar[176] = 'Ć'.charCodeAt(0)\nencodeChar[177] = 'ç'.charCodeAt(0)\nencodeChar[178] = 'ć'.charCodeAt(0)\nencodeChar[179] = 'Æ'.charCodeAt(0)\nencodeChar[180] = 'æ'.charCodeAt(0)\nencodeChar[181] = 'Ø'.charCodeAt(0)\nencodeChar[182] = 'ø'.charCodeAt(0)\nencodeChar[183] = 'Ł'.charCodeAt(0)\nencodeChar[184] = 'ł'.charCodeAt(0)\nencodeChar[185] = 'Œ'.charCodeAt(0)\nencodeChar[186] = 'œ'.charCodeAt(0)\nencodeChar[187] = '¿'.charCodeAt(0)\nencodeChar[188] = '¡'.charCodeAt(0)\nencodeChar[189] = 'Ź'.charCodeAt(0)\nencodeChar[190] = 'Ż'.charCodeAt(0)\nencodeChar[191] = 'ź'.charCodeAt(0)\nencodeChar[192] = 'ż'.charCodeAt(0)\nencodeChar[193] = 'Ś'.charCodeAt(0)\nencodeChar[194] = 'ś'.charCodeAt(0)\nencodeChar[195] = 'ß'.charCodeAt(0)\nencodeChar[196] = ''.charCodeAt(0)\nencodeChar[197] = '°'.charCodeAt(0)\nencodeChar[198] = 'ᵃ'.charCodeAt(0)\nencodeChar[199] = 'Ñ'.charCodeAt(0)\nencodeChar[200] = 'Ń'.charCodeAt(0)\nencodeChar[201] = 'ñ'.charCodeAt(0)\nencodeChar[202] = 'ń'.charCodeAt(0)\n","import { LoadingLayer } from '../screen/layer/LoadingLayer'\nimport { cacheGetData, cachePutData } from './AssetCacheHelper'\nimport { SelectFilesModal } from './selectfiles/SelectFilesModal'\nimport { VFSEncoding, VirtualFileSystem } from './fileparser/VirtualFileSystem'\nimport { VirtualFile } from './fileparser/VirtualFile'\nimport { WadParser } from './fileparser/WadParser'\nimport { HTML_GAME_CONTAINER } from '../core'\nimport { EncodingHelper } from './fileparser/EncodingHelper'\n\nexport class GameFilesLoader {\n    readonly modal: SelectFilesModal\n    readonly onDonePromise: Promise<VirtualFileSystem>\n    onDoneCallback?: (vfs: VirtualFileSystem) => void\n\n    constructor(readonly loadingLayer: LoadingLayer) {\n        this.modal = new SelectFilesModal(HTML_GAME_CONTAINER, async (vfs) => {\n            await cachePutData('vfs', vfs.fileNames)\n            await cachePutData('encoding', vfs.encoding)\n            this.onGameFilesLoaded(vfs).then()\n        })\n        this.onDonePromise = new Promise<VirtualFileSystem>((resolve) => {\n            this.onDoneCallback = resolve\n        })\n    }\n\n    async loadGameFiles(): Promise<VirtualFileSystem> {\n        this.loadingLayer.setLoadingMessage('Try loading files from cache...')\n        console.time('Files loaded from cache')\n        try {\n            const vfsFileNames: string[] | undefined = await cacheGetData('vfs')\n            if (vfsFileNames) {\n                const encoding = (await cacheGetData('encoding')) as VFSEncoding || 'default'\n                const vfs = new VirtualFileSystem(encoding)\n                await Promise.all(vfsFileNames.map(async (fileName) => {\n                    const buffer = await cacheGetData(fileName)\n                    vfs.registerFile(VirtualFile.fromBuffer(fileName, buffer))\n                }))\n                console.timeEnd('Files loaded from cache')\n                this.onGameFilesLoaded(vfs).then()\n            } else {\n                console.log('Files not found in cache')\n                this.loadingLayer.setLoadingMessage('Files not found in cache')\n                this.modal.show()\n            }\n        } catch (e) {\n            console.error('Error reading files from cache', e)\n            this.loadingLayer.setLoadingMessage('Error reading files from cache')\n            this.modal.show()\n        }\n        return this.onDonePromise\n    }\n\n    async onGameFilesLoaded(vfs: VirtualFileSystem) {\n        console.time('Total asset loading time')\n        vfs.filterEntryNames('.+\\\\.wad').sort()\n            .forEach((f) => WadParser.parseFileList(vfs.getFile(f).toDataView()).forEach((f) => vfs.registerFile(f)))\n        EncodingHelper.setEncoding(vfs.encoding)\n        this.modal.hide()\n        this.onDoneCallback?.(vfs)\n    }\n}\n","export type SpriteImage = HTMLCanvasElement | OffscreenCanvas\n\nexport type SpriteContext = CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n\nexport function getSpriteContext(canvas: SpriteImage | undefined, contextAttributes?: CanvasRenderingContext2DSettings): SpriteContext {\n    if (!canvas) throw new Error('No canvas given')\n    const context = canvas.getContext('2d', contextAttributes)\n    if (!context) throw new Error('Could not get context')\n    return context as SpriteContext\n}\n","import { getSpriteContext, SpriteContext, SpriteImage } from './Sprite'\n\nexport function createCanvas(width: number, height: number): HTMLCanvasElement {\n    const canvas = document.createElement('canvas')\n    canvas.width = width\n    canvas.height = height\n    return canvas\n}\n\nexport function createContext(width: number, height: number): SpriteContext {\n    if (width < 1 || height < 1) {\n        console.error(`Can't create context with size ${width} x ${height}`)\n        return createDummyContext(64, 64)\n    }\n    let canvas: SpriteImage\n    if (typeof document !== 'undefined') {\n        canvas = createCanvas(width, height)\n    } else {\n        canvas = new OffscreenCanvas(width, height)\n    }\n    return getSpriteContext(canvas)\n}\n\n/**\n * This method is intended to increase stability by providing an (ugly) placeholder image in case the right one is missing\n * @param width expected width of the original image\n * @param height expected height of the original image\n */\nexport function createDummyContext(width: number, height: number): SpriteContext {\n    const result = createContext(width, height)\n    for (let y = 0; y < height; y += 16) {\n        for (let x = 0; x < width; x += 16) {\n            if (x / 16 % 2 === y / 16 % 2) {\n                result.fillStyle = 'rgb(0,255,255)'\n            } else {\n                result.fillStyle = 'rgb(255,0,255)'\n            }\n            result.fillRect(x, y, 16, 16)\n        }\n    }\n    return result\n}\n\nexport function createDummyImgData(width: number, height: number): ImageData {\n    const result = new ImageData(width, height)\n    for (let y = 0; y < height; y += 16) {\n        for (let x = 0; x < width; x += 16) {\n            const e = x / 16 % 2 === y / 16 % 2\n            for (let px = x; px < x + 16; px++) {\n                for (let py = y; py < y + 16; py++) {\n                    setPixel(result, px, py, e ? 0 : 255, e ? 255 : 0, 255)\n                }\n            }\n        }\n    }\n    return result\n}\n\nexport function setPixel(imgData: ImageData, x: number, y: number, r: number, g: number, b: number, a: number = 255): void {\n    const n = (y * imgData.width + x) * 4\n    imgData.data[n] = r\n    imgData.data[n + 1] = g\n    imgData.data[n + 2] = b\n    imgData.data[n + 3] = a\n}\n\nexport function getPixel(imgData: ImageData, x: number, y: number): { r: number; g: number; b: number; a: number } {\n    const n = (y * imgData.width + x) * 4\n    return {r: imgData.data[n], g: imgData.data[n + 1], b: imgData.data[n + 2], a: imgData.data[n + 3]}\n}\n\nexport function imgDataToCanvas(imgData: ImageData): SpriteImage {\n    const context = createContext(imgData.width, imgData.height)\n    context.putImageData(imgData, 0, 0)\n    return context.canvas\n}\n","import { getSpriteContext, SpriteContext, SpriteImage } from '../core/Sprite'\nimport { cancelAnimationFrameSafe } from '../core/Util'\n\ntype AnimationFrameRedrawCallback = (context: SpriteContext) => void\n\nexport class AnimationFrame {\n    readonly context: SpriteContext\n    readonly readbackContext: SpriteContext\n    private lastAnimationRequest?: number\n    private onRedrawCallback?: AnimationFrameRedrawCallback\n    scaleX: number = 1\n    scaleY: number = 1\n\n    constructor(canvas: SpriteImage, readbackCanvas: SpriteImage) {\n        this.context = getSpriteContext(canvas)\n        this.readbackContext = getSpriteContext(readbackCanvas, {willReadFrequently: true})\n    }\n\n    set onRedraw(callback: AnimationFrameRedrawCallback) {\n        this.onRedrawCallback = callback\n    }\n\n    notifyRedraw() {\n        const onRedraw = this.onRedrawCallback\n        if (!onRedraw) return\n        this.lastAnimationRequest = cancelAnimationFrameSafe(this.lastAnimationRequest)\n        this.lastAnimationRequest = requestAnimationFrame(() => {\n            AnimationFrame.clearAndRedrawContext(onRedraw, this.context)\n            AnimationFrame.clearAndRedrawContext(onRedraw, this.readbackContext)\n        })\n    }\n\n    private static clearAndRedrawContext(onRedraw: AnimationFrameRedrawCallback, context: SpriteContext): void {\n        context.save()\n        context.setTransform(1, 0, 0, 1, 0, 0)\n        context.clearRect(0, 0, context.canvas.width, context.canvas.height)\n        context.restore()\n        onRedraw(context)\n    }\n\n    scale(scaleX: number, scaleY: number) {\n        this.scaleX = scaleX\n        this.scaleY = scaleY\n        this.context.scale(this.scaleX, this.scaleY)\n        this.readbackContext.scale(this.scaleX, this.scaleY)\n    }\n\n    isOpaque(canvasX: number, canvasY: number): boolean {\n        return this.readbackContext.getImageData(canvasX * this.scaleX, canvasY * this.scaleY, 1, 1).data[3] > 0\n    }\n}\n","import { ScreenMaster } from '../ScreenMaster'\nimport { NATIVE_SCREEN_HEIGHT, NATIVE_SCREEN_WIDTH } from '../../params'\nimport { SpriteImage } from '../../core/Sprite'\n\nexport abstract class AbstractLayer {\n    readonly eventListener: Set<string> = new Set()\n    screenMaster?: ScreenMaster\n    zIndex: number = 0\n    active: boolean = false\n    ratio: number = NATIVE_SCREEN_WIDTH / NATIVE_SCREEN_HEIGHT\n\n    abstract get element(): HTMLElement\n\n    addEventListener<K extends keyof HTMLElementEventMap>(eventType: K, listener: (event: HTMLElementEventMap[K]) => boolean) {\n        this.eventListener.add(eventType)\n        this.element.addEventListener(eventType, (event) => {\n            event.stopPropagation()\n            if (!this.screenMaster) return\n            const consumed = this.active && listener(event)\n            if (!consumed) this.screenMaster.dispatchEvent(event, this.zIndex)\n            if (eventType === 'mousemove') this.screenMaster.onGlobalMouseMoveEvent(event as PointerEvent)\n            else if (eventType === 'mouseleave') this.screenMaster.onGlobalMouseLeaveEvent(event as PointerEvent)\n        })\n    }\n\n    reset() {\n    }\n\n    setZIndex(zIndex: number) {\n        this.zIndex = zIndex\n        this.element.style.zIndex = String(zIndex)\n        this.element.tabIndex = zIndex // enable keyboard input for canvas element\n    }\n\n    abstract resize(width: number, height: number): void\n\n    show() {\n        this.active = true\n        this.element.style.visibility = 'visible'\n    }\n\n    hide() {\n        this.active = false\n        this.element.style.visibility = 'hidden'\n    }\n\n    abstract takeScreenshotFromLayer(): Promise<SpriteImage | undefined>\n}\n","import { AbstractLayer } from './AbstractLayer'\nimport { SpriteImage } from '../../core/Sprite'\n\nexport class ScreenLayer extends AbstractLayer {\n    canvas: HTMLCanvasElement\n    readbackCanvas: HTMLCanvasElement\n\n    constructor(layerName?: string) {\n        super()\n        this.canvas = this.createCanvas(layerName || this.constructor.name)\n        this.readbackCanvas = this.createCanvas(`${layerName || this.constructor.name}-fastread`)\n    }\n\n    createCanvas(layerName: string): HTMLCanvasElement {\n        const canvas = document.createElement('canvas')\n        canvas.setAttribute('data-layer-class', layerName)\n        canvas.style.visibility = 'hidden'\n        return canvas\n    }\n\n    get element(): HTMLElement {\n        return this.canvas\n    }\n\n    resize(width: number, height: number): void {\n        if (this.ratio > 0) {\n            const idealHeight = Math.round(width / this.ratio)\n            if (idealHeight > height) {\n                width = Math.round(height * this.ratio)\n            } else {\n                height = idealHeight\n            }\n        }\n        this.canvas.width = width\n        this.canvas.height = height\n        this.readbackCanvas.width = this.canvas.width\n        this.readbackCanvas.height = this.canvas.height\n    }\n\n    transformCoords(clientX: number, clientY: number) {\n        const clientRect = this.canvas.getBoundingClientRect()\n        return [clientX - clientRect.left, clientY - clientRect.top]\n    }\n\n    takeScreenshotFromLayer(): Promise<SpriteImage | undefined> {\n        return Promise.resolve(this.canvas)\n    }\n}\n","import { AnimationFrame } from '../AnimationFrame'\nimport { NATIVE_SCREEN_HEIGHT, NATIVE_SCREEN_WIDTH } from '../../params'\nimport { ScreenLayer } from './ScreenLayer'\n\nexport class ScaledLayer extends ScreenLayer {\n    readonly animationFrame: AnimationFrame\n    fixedWidth: number = NATIVE_SCREEN_WIDTH\n    fixedHeight: number = NATIVE_SCREEN_HEIGHT\n    scaleX: number = 1\n    scaleY: number = 1\n\n    constructor(layerName?: string) {\n        super(layerName)\n        this.updateScale()\n        this.animationFrame = new AnimationFrame(this.canvas, this.readbackCanvas)\n    }\n\n    private updateScale() {\n        this.scaleX = this.canvas.width / this.fixedWidth\n        this.scaleY = this.canvas.height / this.fixedHeight\n    }\n\n    transformCoords(clientX: number, clientY: number) {\n        const [cx, cy] = super.transformCoords(clientX, clientY)\n        return [cx / this.scaleX, cy / this.scaleY].map((c) => Math.round(c))\n    }\n\n    resize(width: number, height: number) {\n        super.resize(width, height)\n        this.updateScale()\n        this.animationFrame.scale(this.scaleX, this.scaleY)\n        this.animationFrame.notifyRedraw()\n    }\n\n    show() {\n        super.show()\n        this.animationFrame.notifyRedraw()\n    }\n}\n","import { ConfigSetFromEntryValue, ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry, CfgEntryValue } from './CfgEntry'\n\nexport class InfoMessagesCfg implements ConfigSetFromRecord {\n    readonly infoGenericDeath: InfoMessagesEntryConfig = new InfoMessagesEntryConfig()\n    readonly infoGenericMonster: InfoMessagesEntryConfig = new InfoMessagesEntryConfig()\n    readonly infoCrystalFound: InfoMessagesEntryConfig = new InfoMessagesEntryConfig()\n    readonly infoUnderAttack: InfoMessagesEntryConfig = new InfoMessagesEntryConfig()\n    readonly infoLandslide: InfoMessagesEntryConfig = new InfoMessagesEntryConfig()\n    readonly infoPowerDrain: InfoMessagesEntryConfig = new InfoMessagesEntryConfig()\n    readonly infoSlugEmerge: InfoMessagesEntryConfig = new InfoMessagesEntryConfig()\n    readonly infoFoundMiniFigure: InfoMessagesEntryConfig = new InfoMessagesEntryConfig()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.infoGenericDeath.setFromValue(cfgValue.getValue('Info_GenericDeath'))\n        this.infoGenericMonster.setFromValue(cfgValue.getValue('Info_GenericMonster'))\n        this.infoCrystalFound.setFromValue(cfgValue.getValue('Info_CrystalFound'))\n        this.infoUnderAttack.setFromValue(cfgValue.getValue('Info_UnderAttack'))\n        this.infoLandslide.setFromValue(cfgValue.getValue('Info_Landslide'))\n        this.infoPowerDrain.setFromValue(cfgValue.getValue('Info_PowerDrain'))\n        this.infoSlugEmerge.setFromValue(cfgValue.getValue('Info_SlugEmerge'))\n        this.infoFoundMiniFigure.setFromValue(cfgValue.getValue('Info_FoundMiniFigure'))\n        return this\n    }\n}\n\nexport class InfoMessagesEntryConfig implements ConfigSetFromEntryValue {\n    message: string = ''\n    buttonImageFilename: string = ''\n    sfxName: string = ''\n    timing: string = ''\n    flag: string = ''\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const array = cfgValue.toArray(':', undefined)\n        if (array.length !== 4 && array.length !== 5) throw new Error(`Invalid array value (${array}) given; expected length of 4 or 5`)\n        this.message = array[0].toLabel()\n        this.buttonImageFilename = array[1].toFileName()\n        this.sfxName = array[2].toString()\n        this.timing = array[3].toString()\n        this.flag = (array[4] || '').toString()\n        return this\n    }\n}\n","import {ConfigSetFromEntryValue, ConfigSetFromRecord} from './Configurable'\nimport {CfgEntry, CfgEntryValue} from './CfgEntry'\n\nexport class TextInfoMessageCfg implements ConfigSetFromRecord {\n    textCrystalFound: TextInfoMessageEntryCfg = new TextInfoMessageEntryCfg()\n    textSpaceToContinue: TextInfoMessageEntryCfg = new TextInfoMessageEntryCfg()\n    textCavernDiscovered: TextInfoMessageEntryCfg = new TextInfoMessageEntryCfg()\n    textOreFound: TextInfoMessageEntryCfg = new TextInfoMessageEntryCfg()\n    textAirSupplyLow: TextInfoMessageEntryCfg = new TextInfoMessageEntryCfg()\n    textAirSupplyRunningOut: TextInfoMessageEntryCfg = new TextInfoMessageEntryCfg()\n    textGameCompleted: TextInfoMessageEntryCfg = new TextInfoMessageEntryCfg()\n    textManTrained: TextInfoMessageEntryCfg = new TextInfoMessageEntryCfg()\n    textUnitUpgraded: TextInfoMessageEntryCfg = new TextInfoMessageEntryCfg()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.textCrystalFound.setFromValue(cfgValue.getValue('Text_CrystalFound'))\n        this.textSpaceToContinue.setFromValue(cfgValue.getValue('Text_SpaceToContinue'))\n        this.textCavernDiscovered.setFromValue(cfgValue.getValue('Text_CavernDiscovered'))\n        this.textOreFound.setFromValue(cfgValue.getValue('Text_OreFound'))\n        this.textAirSupplyLow.setFromValue(cfgValue.getValue('Text_AirSupplyLow'))\n        this.textAirSupplyRunningOut.setFromValue(cfgValue.getValue('Text_AirSupplyRunningOut'))\n        this.textGameCompleted.setFromValue(cfgValue.getValue('Text_GameCompleted'))\n        this.textManTrained.setFromValue(cfgValue.getValue('Text_ManTrained'))\n        this.textUnitUpgraded.setFromValue(cfgValue.getValue('Text_UnitUpgraded'))\n        return this\n    }\n}\n\nexport class TextInfoMessageEntryCfg implements ConfigSetFromEntryValue {\n    text: string = ''\n    imageFilename: string = ''\n    sfxName: string = ''\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const array = cfgValue.toArray(':', 3)\n        this.text = array[0].toLabel()\n        this.imageFilename = array[1].toFileName()\n        this.sfxName = array[2].toString()\n        return this\n    }\n}\n","export class BubblesCfg implements Record<string, string> {\n    [x: string]: string\n\n    bubbleCantDo: string = ''\n    bubbleIdle: string = ''\n    bubbleCollectCrystal: string = ''\n    bubbleCollectOre: string = ''\n    bubbleCollectStud: string = ''\n    bubbleCollectDynamite: string = ''\n    bubbleCollectBarrier: string = ''\n    bubbleCollectElecFence: string = ''\n    bubbleCollectDrill: string = ''\n    bubbleCollectSpade: string = ''\n    bubbleCollectHammer: string = ''\n    bubbleCollectSpanner: string = ''\n    bubbleCollectLaser: string = ''\n    bubbleCollectPusher: string = ''\n    bubbleCollectFreezer: string = ''\n    bubbleCollectBirdScarer: string = ''\n    bubbleCarryCrystal: string = ''\n    bubbleCarryOre: string = ''\n    bubbleCarryStud: string = ''\n    bubbleCarryDynamite: string = ''\n    bubbleCarryBarrier: string = ''\n    bubbleCarryElecFence: string = ''\n    bubbleGoto: string = ''\n    bubbleDynamite: string = ''\n    bubbleReinforce: string = ''\n    bubbleDrill: string = ''\n    bubbleRepair: string = ''\n    bubbleDig: string = ''\n    bubbleFlee: string = ''\n    bubblePowerOff: string = ''\n    bubbleCallToArms: string = ''\n    bubbleElecFence: string = ''\n    bubbleEat: string = ''\n    bubbleDrive: string = ''\n    bubbleUpgrade: string = ''\n    bubbleBuildPath: string = ''\n    bubbleTrain: string = ''\n    bubbleRecharge: string = ''\n    bubbleRequest: string = ''\n}\n","import { ConfigSetFromEntryValue } from './Configurable'\nimport { CfgEntryValue } from './CfgEntry'\n\nexport class BaseButtonCfg {\n    buttonType: string = ''\n    normalFile: string = ''\n    highlightFile: string = ''\n    pressedFile: string = ''\n    disabledFile: string = ''\n    relX: number = 0\n    relY: number = 0\n    width: number = 0\n    height: number = 0\n    tooltipKey: string = ''\n    tooltipText: string = ''\n    tooltipSfx: string = ''\n}\n\nexport class ButtonCfg extends BaseButtonCfg implements ConfigSetFromEntryValue {\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const value = cfgValue.toArray(',', 9)\n        this.buttonType = value[0].toString()\n        this.normalFile = value[1].toFileName()\n        this.highlightFile = value[2].toFileName()\n        this.pressedFile = value[3].toFileName()\n        this.relX = value[4].toNumber()\n        this.relY = value[5].toNumber()\n        this.width = value[6].toNumber()\n        this.height = value[7].toNumber()\n        this.tooltipKey = value[8].toString()\n        return this\n    }\n}\n\nexport class InfoButtonCfg extends BaseButtonCfg {\n    constructor(buttonImageFilename: string) {\n        super()\n        this.normalFile = buttonImageFilename\n        this.highlightFile = buttonImageFilename\n        this.pressedFile = buttonImageFilename\n        this.disabledFile = buttonImageFilename\n        this.relX = 0\n        this.relY = 0\n    }\n}\n\nexport class IconPanelBackButtonCfg extends BaseButtonCfg implements ConfigSetFromEntryValue {\n    constructor() {\n        super()\n        this.buttonType = 'InterfaceBackButton'\n        this.relX = 4\n        this.relY = 14\n    }\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const value = cfgValue.toArray(':', 5)\n        this.width = value[0].toNumber()\n        this.height = value[1].toNumber()\n        this.highlightFile = value[2].toFileName()\n        this.pressedFile = value[3].toFileName()\n        this.tooltipText = value[4].toLabel()\n        return this\n    }\n}\n","import { ButtonCfg } from './ButtonCfg'\nimport { ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry } from './CfgEntry'\n\nexport class ButtonsCfg implements ConfigSetFromRecord {\n    panelRadar: ButtonRadarCfg = new ButtonRadarCfg()\n    panelCrystalSideBar: ButtonCrystalSideBarCfg = new ButtonCrystalSideBarCfg()\n    panelTopPanel: ButtonTopCfg = new ButtonTopCfg()\n    panelInformation: ButtonInformationCfg = new ButtonInformationCfg()\n    panelPriorityList: ButtonPriorityListCfg = new ButtonPriorityListCfg()\n    panelCameraControl: ButtonCameraControlCfg = new ButtonCameraControlCfg()\n    panelInfoDock: ButtonInfoDockCfg = new ButtonInfoDockCfg()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.panelRadar.setFromRecord(cfgValue)\n        this.panelCrystalSideBar.setFromRecord(cfgValue)\n        this.panelTopPanel.setFromRecord(cfgValue)\n        this.panelInformation.setFromRecord(cfgValue)\n        this.panelPriorityList.setFromRecord(cfgValue)\n        this.panelCameraControl.setFromRecord(cfgValue)\n        this.panelInfoDock.setFromRecord(cfgValue)\n        return this\n    }\n}\n\nexport class ButtonRadarCfg implements ConfigSetFromRecord {\n    panelButtonRadarToggle: ButtonCfg = new ButtonCfg()\n    panelButtonRadarTaggedObjectView: ButtonCfg = new ButtonCfg()\n    panelButtonRadarZoomIn: ButtonCfg = new ButtonCfg()\n    panelButtonRadarZoomOut: ButtonCfg = new ButtonCfg()\n    panelButtonRadarMapView: ButtonCfg = new ButtonCfg()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.panelButtonRadarToggle.setFromValue(cfgValue.findValueByPrefix('PanelButton_Radar_Toggle'))\n        this.panelButtonRadarTaggedObjectView.setFromValue(cfgValue.findValueByPrefix('PanelButton_Radar_TaggedObjectView'))\n        this.panelButtonRadarZoomIn.setFromValue(cfgValue.findValueByPrefix('PanelButton_Radar_ZoomIn'))\n        this.panelButtonRadarZoomOut.setFromValue(cfgValue.findValueByPrefix('PanelButton_Radar_ZoomOut'))\n        this.panelButtonRadarMapView.setFromValue(cfgValue.findValueByPrefix('PanelButton_Radar_MapView'))\n        return this\n    }\n}\n\nexport class ButtonCrystalSideBarCfg implements ConfigSetFromRecord {\n    panelButtonCrystalSideBarOre: ButtonCfg = new ButtonCfg()\n    panelButtonCrystalSideBarCrystals: ButtonCfg = new ButtonCfg()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.panelButtonCrystalSideBarOre.setFromValue(cfgValue.findValueByPrefix('PanelButton_CrystalSideBar_Ore'))\n        this.panelButtonCrystalSideBarCrystals.setFromValue(cfgValue.findValueByPrefix('PanelButton_CrystalSideBar_Crystals'))\n        return this\n    }\n}\n\nexport class ButtonTopCfg implements ConfigSetFromRecord {\n    panelButtonTopPanelCallToArms: ButtonCfg = new ButtonCfg()\n    panelButtonTopPanelOptions: ButtonCfg = new ButtonCfg()\n    panelButtonTopPanelPriorities: ButtonCfg = new ButtonCfg()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.panelButtonTopPanelCallToArms.setFromValue(cfgValue.findValueByPrefix('PanelButton_TopPanel_CallToArms'))\n        this.panelButtonTopPanelOptions.setFromValue(cfgValue.findValueByPrefix('PanelButton_TopPanel_Options'))\n        this.panelButtonTopPanelPriorities.setFromValue(cfgValue.findValueByPrefix('PanelButton_TopPanel_Priorities'))\n        return this\n    }\n}\n\nexport class ButtonInformationCfg implements ConfigSetFromRecord {\n    panelButtonInformationToggle: ButtonCfg = new ButtonCfg()\n    panelButtonInformationFunction: ButtonCfg = new ButtonCfg()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.panelButtonInformationToggle.setFromValue(cfgValue.findValueByPrefix('PanelButton_Information_Toggle'))\n        this.panelButtonInformationFunction.setFromValue(cfgValue.findValueByPrefix('PanelButton_Information_Function'))\n        return this\n    }\n}\n\nexport class ButtonPriorityListCfg implements ConfigSetFromRecord {\n    panelButtonPriorityListDisable: ButtonCfg[] = []\n    panelButtonPriorityListUpOne: ButtonCfg[] = []\n    panelButtonPriorityListClose: ButtonCfg = new ButtonCfg() // not used in the game\n    panelButtonPriorityListReset: ButtonCfg = new ButtonCfg()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        cfgValue.forEachCfgEntryValue((value) => {\n            if (value.toArray(',', undefined)[0].toString().match(/PanelButton_PriorityList_Disable\\d+/i)) {\n                this.panelButtonPriorityListDisable.push(new ButtonCfg().setFromValue(value))\n            }\n        })\n        cfgValue.forEachCfgEntryValue((value) => {\n            if (value.toArray(',', undefined)[0].toString().match(/PanelButton_PriorityList_UpOne\\d+/i)) {\n                this.panelButtonPriorityListUpOne.push(new ButtonCfg().setFromValue(value))\n            }\n        })\n        this.panelButtonPriorityListClose.setFromValue(cfgValue.findValueByPrefix('PanelButton_PriorityList_Close'))\n        this.panelButtonPriorityListReset.setFromValue(cfgValue.findValueByPrefix('PanelButton_PriorityList_Reset'))\n        return this\n    }\n}\n\nexport class ButtonCameraControlCfg implements ConfigSetFromRecord {\n    panelButtonCameraControlZoomIn: ButtonCfg = new ButtonCfg()\n    panelButtonCameraControlZoomOut: ButtonCfg = new ButtonCfg()\n    panelButtonCameraControlCycleBuildings: ButtonCfg = new ButtonCfg()\n    panelButtonCameraControlRotate: ButtonCfg = new ButtonCfg()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.panelButtonCameraControlZoomIn.setFromValue(cfgValue.findValueByPrefix('PanelButton_CameraControl_ZoomIn'))\n        this.panelButtonCameraControlZoomOut.setFromValue(cfgValue.findValueByPrefix('PanelButton_CameraControl_ZoomOut'))\n        this.panelButtonCameraControlCycleBuildings.setFromValue(cfgValue.findValueByPrefix('PanelButton_CameraControl_CycleBuildings'))\n        this.panelButtonCameraControlRotate.setFromValue(cfgValue.findValueByPrefix('PanelButton_CameraControl_Rotate'))\n        return this\n    }\n}\n\nexport class ButtonInfoDockCfg implements ConfigSetFromRecord {\n    panelButtonInfoDockGoto: ButtonCfg = new ButtonCfg()\n    panelButtonInfoDockClose: ButtonCfg = new ButtonCfg()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.panelButtonInfoDockGoto.setFromValue(cfgValue.findValueByPrefix('PanelButton_InfoDock_Goto'))\n        this.panelButtonInfoDockClose.setFromValue(cfgValue.findValueByPrefix('PanelButton_InfoDock_Close'))\n        return this\n    }\n}\n","export class Rect {\n    constructor(\n        public x: number = 0,\n        public y: number = 0,\n        public w: number = 0,\n        public h: number = 0,\n    ) {\n    }\n\n    public static fromArray(arr: number[]) {\n        if (arr.length !== 4) throw new Error(`Invalid number of args (${arr}) given for rect`)\n        if (arr.some((n) => isNaN(n))) throw new Error(`Invalid arg (${arr}) given for rect`)\n        return new Rect(...arr)\n    }\n}\n","import { Rect } from '../core/Rect'\nimport { ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry } from './CfgEntry'\n\nexport class DialogCfg implements ConfigSetFromRecord {\n    image: string = ''\n    titleWindow: Rect = new Rect()\n    textWindow: Rect = new Rect()\n    okWindow: Rect = new Rect()\n    cancelWindow: Rect = new Rect()\n    contrastOverlay: string = ''\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.image = cfgValue.getValue('Image').toFileName()\n        this.titleWindow = Rect.fromArray(cfgValue.getValue('TitleWindow').toArray('|', 4).map((v) => v.toNumber()))\n        this.textWindow = Rect.fromArray(cfgValue.getValue('TextWindow').toArray('|', 4).map((v) => v.toNumber()))\n        this.okWindow = Rect.fromArray(cfgValue.getValue('OkWindow').toArray('|', 4).map((v) => v.toNumber()))\n        this.cancelWindow = Rect.fromArray(cfgValue.getValue('CancelWindow').toArray('|', 4).map((v) => v.toNumber()))\n        this.contrastOverlay = cfgValue.getValue('ContrastOverlay').toFileName()\n        return this\n    }\n}\n","// noinspection JSUnusedGlobalSymbols\n\nimport { RaiderTrainingStats } from '../game/model/raider/RaiderTraining'\nimport { ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry } from './CfgEntry'\n\nexport interface PickSphereStats {\n    pickSphere: number\n    collRadius: number\n    collHeight: number\n}\n\nexport interface DoubleSelectStats {\n    canDoubleSelect: boolean\n}\n\nexport interface MovableEntityStats extends PickSphereStats {\n    routeSpeed: number[]\n    crossLand: boolean\n    crossWater: boolean\n    crossLava: boolean\n    rubbleCoef: number\n    pathCoef: number\n    randomEnterWall: boolean\n}\n\nexport class VehicleEntityStats implements MovableEntityStats, DoubleSelectStats, PickSphereStats, ConfigSetFromRecord {\n    pickSphere: number = 0\n    collRadius: number = 0\n    collHeight: number = 0\n    canDoubleSelect: boolean = false\n    costOre: number = 0\n    costCrystal: number = 0\n    invisibleDriver: boolean = false\n    engineSound: string = ''\n    canClearRubble: boolean = false\n    routeSpeed: number[] = []\n    soilDrillTime: number[] = []\n    looseDrillTime: number[] = []\n    medDrillTime: number[] = []\n    hardDrillTime: number[] = []\n    seamDrillTime: number[] = []\n    surveyRadius: number[] = []\n    oxygenCoef: number = 0\n    pathCoef: number = 1\n    rubbleCoef: number = 1\n    randomEnterWall: boolean = false\n    crossLand: boolean = false\n    crossWater: boolean = false\n    crossLava: boolean = false\n    maxCarry: number[] = []\n    carryVehicles: boolean = false\n    vehicleCanBeCarried: boolean = false\n    upgradeCostOre: number[] = []\n    upgradeCostStuds: number[] = []\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.pickSphere = cfgValue.getValue('PickSphere').toNumber()\n        this.collRadius = cfgValue.getValue('CollRadius').toNumber()\n        this.collHeight = cfgValue.getValue('CollHeight').toNumber()\n        this.canDoubleSelect = cfgValue.getValue('CanDoubleSelect').toBoolean()\n        this.costOre = cfgValue.getValue('CostOre').toNumber()\n        this.costCrystal = cfgValue.getValue('CostCrystal').toNumber()\n        this.invisibleDriver = cfgValue.getValue('InvisibleDriver').toBoolean()\n        this.engineSound = cfgValue.getValue('EngineSound').toString()\n        this.canClearRubble = cfgValue.getValue('CanClearRubble').toBoolean()\n        this.routeSpeed = cfgValue.getValue('RouteSpeed').toArray(':', undefined).map((v) => v.toNumber())\n        this.soilDrillTime = cfgValue.getValue('SoilDrillTime').toArray(':', undefined).map((v) => v.toNumber())\n        this.looseDrillTime = cfgValue.getValue('LooseDrillTime').toArray(':', undefined).map((v) => v.toNumber())\n        this.medDrillTime = cfgValue.getValue('MedDrillTime').toArray(':', undefined).map((v) => v.toNumber())\n        this.hardDrillTime = cfgValue.getValue('HardDrillTime').toArray(':', undefined).map((v) => v.toNumber())\n        this.seamDrillTime = cfgValue.getValue('SeamDrillTime').toArray(':', undefined).map((v) => v.toNumber())\n        this.surveyRadius = cfgValue.getValue('SurveyRadius').toArray(':', undefined).map((v) => v.toNumber())\n        this.oxygenCoef = cfgValue.getValue('OxygenCoef').toNumber(this.oxygenCoef)\n        this.pathCoef = cfgValue.getValue('PathCoef').toNumber(this.pathCoef)\n        this.rubbleCoef = cfgValue.getValue('RubbleCoef').toNumber(this.rubbleCoef)\n        this.randomEnterWall = cfgValue.getValue('RandomEnterWall').toBoolean()\n        this.crossLand = cfgValue.getValue('CrossLand').toBoolean()\n        this.crossWater = cfgValue.getValue('CrossWater').toBoolean()\n        this.crossLava = cfgValue.getValue('CrossLava').toBoolean()\n        this.maxCarry = cfgValue.getValue('MaxCarry').toArray(':', undefined).map((v) => v.toNumber())\n        this.carryVehicles = cfgValue.getValue('CarryVehicles').toBoolean()\n        this.vehicleCanBeCarried = cfgValue.getValue('VehicleCanBeCarried').toBoolean()\n        this.upgradeCostOre = cfgValue.getValue('UpgradeCostOre').toArray(':', undefined).map((v) => v.toNumber())\n        this.upgradeCostStuds = cfgValue.getValue('UpgradeCostStuds').toArray(':', undefined).map((v) => v.toNumber())\n        return this\n    }\n}\n\nexport class BuildingEntityStats implements DoubleSelectStats, RaiderTrainingStats, ConfigSetFromRecord {\n    levels: number = 0\n    selfPowered: boolean = false\n    powerBuilding: boolean = false\n    pickSphere: number = 0\n    collRadius: number = 0\n    collHeight: number = 0\n    toolStore: boolean = false\n    trainDriver: boolean[] = []\n    trainRepair: boolean[] = []\n    trainScanner: boolean[] = []\n    trainPilot: boolean[] = []\n    trainSailor: boolean[] = []\n    trainDynamite: boolean[] = []\n    costOre: number = 0\n    costRefinedOre: number = 0\n    costCrystal: number = 0\n    upgradeBuilding: boolean = false\n    snaxULike: boolean = false\n    surveyRadius: number[] = []\n    crystalDrain: number | number[] = 0\n    oxygenCoef: number = 0\n    engineSound: string = ''\n    canDoubleSelect: boolean = false\n    maxCarry: number[] = []\n    damageCausesCallToArms: boolean = false\n    functionCoef: number[] = []\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.levels = cfgValue.getValue('Levels').toNumber()\n        this.selfPowered = cfgValue.getValue('SelfPowered').toBoolean()\n        this.powerBuilding = cfgValue.getValue('PowerBuilding').toBoolean()\n        this.pickSphere = cfgValue.getValue('PickSphere').toNumber()\n        this.collRadius = cfgValue.getValue('CollRadius').toNumber()\n        this.collHeight = cfgValue.getValue('CollHeight').toNumber()\n        this.toolStore = cfgValue.getValue('ToolStore').toBoolean()\n        this.trainDriver = cfgValue.getValue('TrainDriver').toArray(':', undefined).map((v) => v.toBoolean())\n        this.trainRepair = cfgValue.getValue('TrainRepair').toArray(':', undefined).map((v) => v.toBoolean())\n        this.trainScanner = cfgValue.getValue('TrainScanner').toArray(':', undefined).map((v) => v.toBoolean())\n        this.trainPilot = cfgValue.getValue('TrainPilot').toArray(':', undefined).map((v) => v.toBoolean())\n        this.trainSailor = cfgValue.getValue('TrainSailor').toArray(':', undefined).map((v) => v.toBoolean())\n        this.trainDynamite = cfgValue.getValue('TrainDynamite').toArray(':', undefined).map((v) => v.toBoolean())\n        this.costOre = cfgValue.getValue('CostOre').toNumber()\n        this.costRefinedOre = cfgValue.getValue('CostRefinedOre').toNumber()\n        this.costCrystal = cfgValue.getValue('CostCrystal').toNumber()\n        this.upgradeBuilding = cfgValue.getValue('UpgradeBuilding').toBoolean()\n        this.snaxULike = cfgValue.getValue('SnaxULike').toBoolean()\n        this.surveyRadius = cfgValue.getValue('SurveyRadius').toArray(':', undefined).map((v) => v.toNumber())\n        this.crystalDrain = cfgValue.getValue('CrystalDrain').toArray(':', undefined).map((v) => v.toNumber())\n        this.oxygenCoef = cfgValue.getValue('OxygenCoef').toNumber()\n        this.engineSound = cfgValue.getValue('EngineSound').toString()\n        this.canDoubleSelect = cfgValue.getValue('CanDoubleSelect').toBoolean()\n        this.maxCarry = cfgValue.getValue('MaxCarry').toArray(':', undefined).map((v) => v.toNumber())\n        this.damageCausesCallToArms = cfgValue.getValue('DamageCausesCallToArms').toBoolean()\n        this.functionCoef = cfgValue.getValue('FunctionCoef').toArray(':', undefined).map((v) => v.toNumber())\n        return this\n    }\n\n    get maxLevel(): number {\n        return this.levels - 1\n    }\n}\n\nexport class MonsterEntityStats implements MovableEntityStats, ConfigSetFromRecord {\n    pickSphere: number = 0\n    restPercent: number = 100.0\n    collRadius: number = 0\n    collHeight: number = 0\n    routeSpeed: number[] = []\n    pathCoef: number = 1\n    rubbleCoef: number = 1\n    randomEnterWall: boolean = false\n    randomMove: boolean = false\n    randomMoveTime: number = 0\n    crossLand: boolean = false\n    crossLava: boolean = false\n    crossWater: boolean = false\n    canBeHitByFence: boolean = false\n    canBeShotAt: boolean = false\n    canFreeze: boolean = false\n    freezerTime: number = 0\n    freezerDamage: number = 0\n    canLaser: boolean = false\n    laserDamage: number = 0\n    canPush: boolean = false\n    pusherDist: number = 0\n    pusherDamage: number = 0\n    wakeRadius: number = 0\n    capacity: number = 0\n    repairValue: number = 0\n    attackRadius: number = 0\n    alertRadius: number = 0\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.pickSphere = cfgValue.getValue('PickSphere').toNumber()\n        this.restPercent = cfgValue.getValue('RestPercent').toNumber(this.restPercent) / 100\n        this.collRadius = cfgValue.getValue('CollRadius').toNumber()\n        this.collHeight = cfgValue.getValue('CollHeight').toNumber()\n        this.routeSpeed = cfgValue.getValue('RouteSpeed').toArray(':', undefined).map((v) => v.toNumber())\n        this.pathCoef = cfgValue.getValue('PathCoef').toNumber(this.pathCoef)\n        this.rubbleCoef = cfgValue.getValue('RubbleCoef').toNumber(this.rubbleCoef)\n        this.randomEnterWall = cfgValue.getValue('RandomEnterWall').toBoolean()\n        this.randomMove = cfgValue.getValue('RandomMove').toBoolean()\n        this.randomMoveTime = cfgValue.getValue('RandomMoveTime').toNumber()\n        this.crossLand = cfgValue.getValue('CrossLand').toBoolean()\n        this.crossLava = cfgValue.getValue('CrossLava').toBoolean()\n        this.crossWater = cfgValue.getValue('CrossWater').toBoolean()\n        this.canBeHitByFence = cfgValue.getValue('CanBeHitByFence').toBoolean()\n        this.canBeShotAt = cfgValue.getValue('CanBeShotAt').toBoolean()\n        this.canFreeze = cfgValue.getValue('CanFreeze').toBoolean()\n        this.freezerTime = cfgValue.getValue('FreezerTime').toNumber()\n        this.freezerDamage = cfgValue.getValue('FreezerDamage').toNumber()\n        this.canLaser = cfgValue.getValue('CanLaser').toBoolean()\n        this.laserDamage = cfgValue.getValue('LaserDamage').toNumber()\n        this.canPush = cfgValue.getValue('CanPush').toBoolean()\n        this.pusherDist = cfgValue.getValue('PusherDist').toNumber()\n        this.pusherDamage = cfgValue.getValue('PusherDamage').toNumber()\n        this.wakeRadius = cfgValue.getValue('WakeRadius').toNumber()\n        this.capacity = cfgValue.getValue('Capacity').toNumber()\n        this.repairValue = cfgValue.getValue('RepairValue').toNumber()\n        this.attackRadius = cfgValue.getValue('AttackRadius').toNumber()\n        this.alertRadius = cfgValue.getValue('AlertRadius').toNumber()\n        return this\n    }\n\n    get freezerTimeMs(): number {\n        return this.freezerTime * 1000 / 25 // given as 25 per second\n    }\n}\n\nexport class PilotStats implements MovableEntityStats, PickSphereStats, ConfigSetFromRecord {\n    levels: number = 4\n    routeSpeed: number[] = [1.10, 1.10, 1.10, 1.10]\n    soilDrillTime: number[] = [4.0, 4.0, 4.0, 4.0] // Time in seconds to drill through the rock.\n    looseDrillTime: number[] = [4.0, 4.0, 4.0, 4.0]\n    medDrillTime: number[] = [8.0, 8.0, 8.0, 8.0]\n    hardDrillTime: number[] = [0.0, 0.0, 0.0, 0.0] // Zero means the object cannot drill the rock type\n    seamDrillTime: number[] = [10.0, 10.0, 10.0, 10.0] // Either or both ore or crystal.\n    upgradeTime: number[] = [30.0, 45.0, 60.0, 60.0] // Last entry is ignored as it can never upgrade from that.\n    collRadius: number = 5.0\n    collHeight: number = 12.0\n    trackDist: number = 40.0\n    pickSphere: number = 10.0\n    repairValue: number[] = [10.0, 15.0, 20.0, 25.0]\n    surveyRadius: number[] = [3, 3, 3, 3]\n    drillSound: string = 'SND_pilotdrill'\n    drillFadeSound: string = 'SND_pilotdrillfade'\n    restPercent: number = 60.0\n    energyDecayRate: number = 0.25\n    canClearRubble: boolean = true\n    numOfToolsCanCarry: number[] = [2, 3, 4, 5]\n    randomEnterWall: boolean = false\n    crossLand: boolean = true\n    crossWater: boolean = false\n    crossLava: boolean = false\n    rubbleCoef: number = 0.5\n    pathCoef: number = 2.0\n    routeAvoidance: boolean = true\n    useManTeleporter: boolean = true\n    awarenessRange: number = 10.0\n    oxygenCoef: number = -1.0\n    canStrafe: boolean = true\n    enterToolStore: boolean = true\n    showHealthBar: boolean = true\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.levels = cfgValue.getValue('Levels').toNumber()\n        this.routeSpeed = cfgValue.getValue('RouteSpeed').toArray(':', undefined).map((v) => v.toNumber())\n        this.soilDrillTime = cfgValue.getValue('SoilDrillTime').toArray(':', undefined).map((v) => v.toNumber())\n        this.looseDrillTime = cfgValue.getValue('LooseDrillTime').toArray(':', undefined).map((v) => v.toNumber())\n        this.medDrillTime = cfgValue.getValue('MedDrillTime').toArray(':', undefined).map((v) => v.toNumber())\n        this.hardDrillTime = cfgValue.getValue('HardDrillTime').toArray(':', undefined).map((v) => v.toNumber())\n        this.seamDrillTime = cfgValue.getValue('SeamDrillTime').toArray(':', undefined).map((v) => v.toNumber())\n        this.upgradeTime = cfgValue.getValue('UpgradeTime').toArray(':', undefined).map((v) => v.toNumber())\n        this.collRadius = cfgValue.getValue('CollRadius').toNumber()\n        this.collHeight = cfgValue.getValue('CollHeight').toNumber()\n        this.trackDist = cfgValue.getValue('TrackDist').toNumber()\n        this.pickSphere = cfgValue.getValue('PickSphere').toNumber()\n        this.repairValue = cfgValue.getValue('RepairValue').toArray(':', undefined).map((v) => v.toNumber())\n        this.surveyRadius = cfgValue.getValue('SurveyRadius').toArray(':', undefined).map((v) => v.toNumber())\n        this.drillSound = cfgValue.getValue('DrillSound').toString()\n        this.drillFadeSound = cfgValue.getValue('DrillFadeSound').toString()\n        this.restPercent = cfgValue.getValue('RestPercent').toNumber() / 100\n        this.energyDecayRate = cfgValue.getValue('EnergyDecayRate').toNumber()\n        this.canClearRubble = cfgValue.getValue('CanClearRubble').toBoolean()\n        this.numOfToolsCanCarry = cfgValue.getValue('NumOfToolsCanCarry').toArray(':', undefined).map((v) => v.toNumber())\n        this.randomEnterWall = cfgValue.getValue('RandomEnterWall').toBoolean()\n        this.crossLand = cfgValue.getValue('CrossLand').toBoolean()\n        this.crossWater = cfgValue.getValue('CrossWater').toBoolean()\n        this.crossLava = cfgValue.getValue('CrossLava').toBoolean()\n        this.rubbleCoef = cfgValue.getValue('RubbleCoef').toNumber()\n        this.pathCoef = cfgValue.getValue('PathCoef').toNumber()\n        this.routeAvoidance = cfgValue.getValue('RouteAvoidance').toBoolean()\n        this.useManTeleporter = cfgValue.getValue('UseLegoManTeleporter').toBoolean()\n        this.awarenessRange = cfgValue.getValue('AwarenessRange').toNumber()\n        this.oxygenCoef = cfgValue.getValue('OxygenCoef').toNumber()\n        this.canStrafe = cfgValue.getValue('CanStrafe').toBoolean()\n        this.enterToolStore = cfgValue.getValue('EnterToolStore').toBoolean()\n        this.showHealthBar = cfgValue.getValue('ShowHealthBar').toBoolean()\n        return this\n    }\n\n    get maxLevel(): number {\n        return this.levels - 1\n    }\n}\n\nexport class RockMonsterStats extends MonsterEntityStats {\n    routeSpeed: number[] = [0.8]\n    trackDist: number = 50.0\n    collRadius: number = 10.0\n    collHeight: number = 22.0\n    alertRadius: number = 60.0\n    healthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n    pickSphere: number = 22.0\n    repairValue: number = -10.0\n    canScare: boolean = true\n    restPercent: number = 20.0\n    carryMinHealth: number = 15.0\n    painThreshold: number = 20.0\n    stampRadius: number = 80.0\n    attackRadius: number = 160.0\n    canSteal: boolean = true\n    crossLand: boolean = true\n    rubbleCoef: number = 1.5\n    grabMinifigure: boolean = true\n    routeAvoidance: boolean = true\n    bumpDamage: boolean = true\n    attackPaths: boolean = true\n    splitOnZeroHealth: boolean = true\n    canBeHitByFence: boolean = true\n    capacity: number = 6 // How many crystals it can eat\n    pathCoef: number = 0.5\n    // Statistics about the weapons\n    canBeShotAt: boolean = true // Can this monster be shot at\n    canFreeze: boolean = true // Can this object be frozen\n    freezerTime: number = 25.0 // Time this object is frozen for\n    freezerDamage: number = 5.0 // Damage that freezing causes\n    canLaser: boolean = true // Can this object be lasered\n    laserDamage: number = 110.0 // Damage sustained by a laser\n    canPush: boolean = true // Can this object be pusher'ed\n    pusherDist: number = 20.0 // Distance the object is pushed 40=1 block\n    pusherDamage: number = 2.0 // Damage that the pusher gun causes\n    wakeRadius: number = 25.0\n    scaredByBigBangs: boolean = true\n    removeReinforcement: boolean = true\n    showHealthBar: boolean = true\n}\n\nexport class SmallSpiderStats extends MonsterEntityStats {\n    routeSpeed: number[] = [2.0]\n    trackDist: number = 10.0\n    collRadius: number = 0.0\n    collHeight: number = 0.0\n    pickSphere: number = 6.0\n    alertRadius: number = 40.0\n    randomMove: boolean = true\n    randomEnterWall: boolean = true\n    causeSlip: boolean = true\n    crossLand: boolean = true\n    rubbleCoef: number = 0.2\n    dontShowDamage: boolean = true\n    dontShowOnRadar: boolean = true\n    scaredByBigBangs: boolean = true\n}\n\nexport class BatStats extends MonsterEntityStats {\n    routeSpeed: number[] = [1.0]\n    trackDist: number = 10.0\n    collRadius: number = 10.0\n    alertRadius: number = 10.0 // Alert radius (causes attack mode)\n    randomMove: boolean = true // Random movement\n    randomMoveTime: number = 10\n    canScare: boolean = true // Scare away the player\n    scaredByBigBangs: boolean = true\n    // Flock parameters.\n    flocks: boolean = true // Set this to create a flock for this object.\n    flocksDebug: boolean = false // If this is set the actual objects animation is displayed at the debug position.\n    flocksSmooth: boolean = true // Smooths out the orientation of the flocks elements.\n    flocksSize: number = 8 // Number of the given item in the flock.  (Default 5)\n    flocksTurn: number = 0.06 // Turning speed of the bat. (0.06 default)\n    flocksSpeed: number = 1.5 // Velocity of the flock. (2.0 default)\n    flocksTightness: number = 0.8 // Tightness of the flock. (2.0 default)\n    flocksGoalUpdate: number = 2.0 // How often the flocks goal is updated (25 per second).  (2.0 default)\n    flocksRandomness: number = 6.0 // Randomness of goals. (2.0 default)\n    flocksHeight: number = 22.0 // Height above the ground of the flock elements.  (30.0 default)\n    crossLand: boolean = true\n    crossWater: boolean = true\n    crossLava: boolean = true\n    dontShowDamage: boolean = true\n}\n\nexport class TinyRMStats extends MonsterEntityStats {\n    routeSpeed: number[] = [1.2]\n    trackDist: number = 10.0\n    collRadius: number = 0.0\n    collHeight: number = 5.0\n    pickSphere: number = 6.0\n    alertRadius: number = 40.0\n    crossLand: boolean = true\n    rubbleCoef: number = 1.5\n    dontShowDamage: boolean = true\n    dontShowOnRadar: boolean = true\n    scaredByPlayer: boolean = true\n    scaredByBigBangs: boolean = true\n}\n\nexport class TinyIMStats extends MonsterEntityStats {\n    routeSpeed: number[] = [1.2]\n    trackDist: number = 10.0\n    collRadius: number = 0.0\n    collHeight: number = 5.0\n    pickSphere: number = 6.0\n    alertRadius: number = 40.0\n    crossLand: boolean = true\n    rubbleCoef: number = 1.5\n    dontShowDamage: boolean = true\n    dontShowOnRadar: boolean = true\n    scaredByPlayer: boolean = true\n    scaredByBigBangs: boolean = true\n}\n\nexport class SlugStats extends MonsterEntityStats {\n    routeSpeed: number[] = [0.3]\n    trackDist: number = 10.0\n    collRadius: number = 3.0\n    collHeight: number = 7.0\n    pickSphere: number = 12.0\n    alertRadius: number = 40.0\n    crossLand: boolean = true\n    rubbleCoef: number = 0.3\n    useHoles: boolean = true\n    drainPower: boolean = true\n    attackRadius: number = 280.0\n    painThreshold: number = 50.0\n    canBeShotAt: boolean = true\n    canLaser: boolean = true\n    laserDamage: number = 5.0\n    canPush: boolean = true // Can this object be pusher'ed\n    pusherDist: number = 60.0 // Distance the object is pushed\n    pusherDamage: number = 5.0 // Damage that the pusher gun causes\n    showHealthBar: boolean = true\n    scaredByBigBangs: boolean = true\n}\n\nexport class LavaMonsterStats extends MonsterEntityStats {\n    routeSpeed: number[] = [0.8]\n    trackDist: number = 50.0\n    collRadius: number = 10.0\n    collHeight: number = 22.0\n    alertRadius: number = 60.0\n    healthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n    pickSphere: number = 22.0\n    repairValue: number = -10.0\n    canScare: boolean = true\n    restPercent: number = 20.0\n    carryMinHealth: number = 15.0\n    painThreshold: number = 20.0\n    stampRadius: number = 80.0\n    attackRadius: number = 160.0\n    canSteal: boolean = true\n    crossLand: boolean = true\n    rubbleCoef: number = 1.5\n    grabMinifigure: boolean = true\n    capacity: number = 7 // How many crystals it can eat\n    routeAvoidance: boolean = true\n    bumpDamage: boolean = true\n    attackPaths: boolean = true\n    splitOnZeroHealth: boolean = true\n    canBeHitByFence: boolean = true\n    pathCoef: number = 0.5\n    crossLava: boolean = true\n    // Statistics about the weapons\n    canBeShotAt: boolean = true // Can this monster be shot at\n    canFreeze: boolean = true // Can this object be frozen\n    freezerTime: number = 75.0 // Time this object is frozen for\n    freezerDamage: number = 40.0 // Damage that freezing causes\n    canLaser: boolean = true // Can this object be lasered\n    laserDamage: number = 1.0 // Damage sustained by a laser\n    canPush: boolean = true // Can this object be pusher'ed\n    pusherDist: number = 60.0 // Distance the object is pushed\n    pusherDamage: number = 5.0 // Damage that the pusher gun causes\n    wakeRadius: number = 25.0\n    scaredByBigBangs: boolean = true\n    removeReinforcement: boolean = true\n    showHealthBar: boolean = true\n}\n\nexport class IceMonsterStats extends MonsterEntityStats {\n    routeSpeed: number[] = [0.8]\n    trackDist: number = 50.0\n    collRadius: number = 10.0\n    collHeight: number = 22.0\n    alertRadius: number = 60.0\n    healthDecayRate: number = 0.6 // Reduce health by 'n' every second.\n    pickSphere: number = 22.0\n    repairValue: number = -10.0\n    canScare: boolean = true\n    restPercent: number = 20.0\n    carryMinHealth: number = 15.0\n    painThreshold: number = 20.0\n    stampRadius: number = 80.0\n    attackRadius: number = 120.0\n    canSteal: boolean = true\n    crossLand: boolean = true\n    rubbleCoef: number = 1.5\n    grabMinifigure: boolean = true\n    capacity: number = 5 // How many crystals it can eat\n    routeAvoidance: boolean = true\n    bumpDamage: boolean = true\n    attackPaths: boolean = true\n    splitOnZeroHealth: boolean = true\n    canBeHitByFence: boolean = true\n    pathCoef: number = 0.5\n    // Statistics about the weapons\n    canBeShotAt: boolean = true // Can this monster be shot at\n    canFreeze: boolean = false // Can this object be frozen\n    freezerTime: number = 0.0 // Time this object is frozen for\n    freezerDamage: number = 0.0 // Damage that freezing causes\n    canLaser: boolean = true // Can this object be lasered\n    laserDamage: number = 110.0 // Damage sustained by a laser\n    canPush: boolean = true // Can this object be pusher'ed\n    pusherDist: number = 60.0 // Distance the object is pushed\n    pusherDamage: number = 2.0 // Damage that the pusher gun causes\n    wakeRadius: number = 25.0\n    scaredByBigBangs: boolean = true\n    removeReinforcement: boolean = true\n    showHealthBar: boolean = true\n}\n\nexport class HoverboardStats extends VehicleEntityStats { // [Carry][Scan][Speed][Drill]    (No drill or carry)\n    routeSpeed: number[] = [3.0, 3.0, 5.0, 5.0, 3.0, 3.0, 5.0, 5.0]\n    surveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4]\n    trackDist: number = 50.0\n    collRadius: number = 8.0\n    collHeight: number = 12.0\n    pickSphere: number = 16.0\n    canBeDriven: boolean = true\n    crossLand: boolean = true\n    useSmallTeleporter: boolean = true\n    canStrafe: boolean = true\n    costCrystal: number = 1\n    upgradeCostOre: number[] = [0, 5, 10, 0]\n    upgradeCostStuds: number[] = [0, 1, 2, 0]\n    showHealthBar: boolean = true\n    engineSound: string = 'SND_SmallEngine'\n}\n\nexport class SmallHeliStats extends VehicleEntityStats {\n    routeSpeed: number[] = [2.50]\n    trackDist: number = 50.0\n    collRadius: number = 10.0\n    collHeight: number = 12.0\n    pickSphere: number = 20.0\n    canBeDriven: boolean = true\n    crossLand: boolean = true\n    crossWater: boolean = true\n    crossLava: boolean = true\n    useSmallTeleporter: boolean = true\n    canStrafe: boolean = true\n    costCrystal: number = 3\n    showHealthBar: boolean = true\n    engineSound: string = 'SND_HeliEngine'\n}\n\nexport class SmallMlpStats extends VehicleEntityStats {\n    routeSpeed: number[] = [0.50, 0.50, 0.50, 0.50]\n    trackDist: number = 50.0\n    collRadius: number = 12.0\n    collHeight: number = 22.0\n    pickSphere: number = 26.0\n    canBeDriven: boolean = true\n    crossLand: boolean = true\n    useSmallTeleporter: boolean = true\n    tracker: boolean = true\n    canDoubleSelect: boolean = true\n    costCrystal: number = 3\n    upgradeCostOre: number[] = [0, 0, 0, 10]\n    upgradeCostStuds: number[] = [0, 0, 0, 2]\n    showHealthBar: boolean = true\n    engineSound: string = 'SND_MediumEngine'\n}\n\nexport class SmallCatStats extends VehicleEntityStats {\n    routeSpeed: number[] = [2.0, 3.0, 4.0]\n    trackDist: number = 50.0\n    collRadius: number = 12.0\n    collHeight: number = 12.0\n    pickSphere: number = 26.0\n    crossWater: boolean = true\n    canBeDriven: boolean = true\n    useWaterTeleporter: boolean = true\n    costCrystal: number = 2\n    maxCarry: number[] = [1, 1, 1]\n    getInAtLand: boolean = true\n    getOutAtLand: boolean = true\n    takeCarryingDrivers: boolean = true\n    showHealthBar: boolean = true\n    engineSound: string = 'SND_Catamaran'\n}\n\nexport class SmallDiggerStats extends VehicleEntityStats {\n    routeSpeed: number[] = [2.0, 2.0, 4.0, 4.0, 2.0, 2.0, 4.0, 4.0]\n    soilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n    looseDrillTime: number[] = [2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0]\n    medDrillTime: number[] = [4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0]\n    hardDrillTime: number[] = [180.0, 150.0, 180.0, 150.0, 180.0, 150.0, 180.0, 150.0]\n    seamDrillTime: number[] = [8.0, 4.0, 8.0, 4.0, 8.0, 4.0, 8.0, 4.0]\n    maxCarry: number[] = [0, 0, 0, 0, 0, 0, 0, 0]\n    surveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4]\n    trackDist: number = 50.0\n    collRadius: number = 10.0\n    collHeight: number = 12.0\n    pickSphere: number = 20.0\n    canBeDriven: boolean = true\n    crossLand: boolean = true\n    routeAvoidance: boolean = true\n    useSmallTeleporter: boolean = true\n    vehicleCanBeCarried: boolean = true\n    costCrystal: number = 1\n    upgradeCostOre: number[] = [0, 5, 10, 10]\n    upgradeCostStuds: number[] = [0, 1, 2, 2]\n    showHealthBar: boolean = true\n    engineSound: string = 'SND_SmallEngine'\n}\n\nexport class SmallTruckStats extends VehicleEntityStats { // [Carry][Scan][Speed][Drill]    (No drill)\n    routeSpeed: number[] = [2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0]\n    maxCarry: number[] = [3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6]\n    carryStart: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3]\n    surveyRadius: number[] = [0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4]\n    trackDist: number = 50.0\n    collRadius: number = 10.0\n    collHeight: number = 12.0\n    pickSphere: number = 20.0\n    canBeDriven: boolean = true\n    crossLand: boolean = true\n    useSmallTeleporter: boolean = true\n    vehicleCanBeCarried: boolean = true\n    costCrystal: number = 2\n    enterToolStore: boolean = true\n    upgradeCostOre: number[] = [5, 5, 10, 0]\n    upgradeCostStuds: number[] = [1, 1, 2, 0]\n    showHealthBar: boolean = true\n    engineSound: string = 'SND_SmallEngine'\n}\n\nexport class BulldozerStats extends VehicleEntityStats { // [Carry][Scan][Speed][Drill]    (No drill)\n    routeSpeed: number[] = [0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8]\n    maxCarry: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]\n    surveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 5, 5, 5, 5]\n    trackDist: number = 80.0\n    collRadius: number = 18.0\n    collHeight: number = 26.0\n    pickSphere: number = 40.0\n    crossLand: boolean = true\n    canClearRubble: boolean = true\n    useBigTeleporter: boolean = true\n    canBeDriven: boolean = true\n    costCrystal: number = 4\n    invisibleDriver: boolean = true\n    upgradeCostOre: number[] = [5, 5, 20, 0]\n    upgradeCostStuds: number[] = [1, 1, 4, 0]\n    showHealthBar: boolean = true\n    engineSound: string = 'SND_MediumEngine'\n}\n\nexport class WalkerDiggerStats extends VehicleEntityStats { // [Carry][Scan][Speed][Drill]    (No carry)\n    routeSpeed: number[] = [0.50, 0.50, 0.80, 0.80, 0.50, 0.50, 0.80, 0.80]\n    soilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n    looseDrillTime: number[] = [0.80, 0.40, 0.80, 0.40, 0.80, 0.40, 0.80, 0.40]\n    medDrillTime: number[] = [2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0]\n    hardDrillTime: number[] = [180.0, 150.0, 180.0, 150.0, 180.0, 150.0, 180.0, 150.0]\n    seamDrillTime: number[] = [4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0]\n    surveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5]\n    trackDist: number = 80.0\n    collRadius: number = 15.0\n    collHeight: number = 33.0\n    pickSphere: number = 35.0\n    crossLand: boolean = true\n    useBigTeleporter: boolean = true\n    costCrystal: number = 3\n    canBeDriven: boolean = true\n    invisibleDriver: boolean = true\n    canStrafe: boolean = true\n    drillSound: string = 'DrillSFX_Grinder'\n    drillFadeSound: string = 'DrillSFX_GrinderFade'\n    upgradeCostOre: number[] = [0, 5, 20, 20]\n    upgradeCostStuds: number[] = [0, 1, 4, 4]\n    showHealthBar: boolean = true\n    engineSound: string = 'SND_MediumEngine'\n}\n\nexport class LargeDiggerStats extends VehicleEntityStats { // [Carry][Scan][Speed][Drill]    (No carry or scan)\n    routeSpeed: number[] = [0.30, 0.30, 0.60, 0.60]\n    soilDrillTime: number[] = [1.0, 1.0, 1.0, 1.0]\n    looseDrillTime: number[] = [0.40, 0.20, 0.40, 0.20]\n    medDrillTime: number[] = [0.80, 0.40, 0.80, 0.40]\n    hardDrillTime: number[] = [1.0, 0.50, 1.0, 0.50]\n    seamDrillTime: number[] = [1.0, 0.50, 1.0, 0.50]\n    trackDist: number = 80.0\n    collRadius: number = 22.0\n    collHeight: number = 30.0\n    pickSphere: number = 50.0\n    crossLand: boolean = true\n    useBigTeleporter: boolean = true\n    tracker: boolean = true\n    canDoubleSelect: boolean = true\n    canBeDriven: boolean = true\n    costCrystal: number = 5\n    invisibleDriver: boolean = true\n    drillSound: string = 'DrillSFX_Grinder'\n    drillFadeSound: string = 'DrillSFX_GrinderFade'\n    upgradeCostOre: number[] = [0, 0, 15, 20]\n    upgradeCostStuds: number[] = [0, 0, 3, 4]\n    showHealthBar: boolean = true\n    engineSound: string = 'SND_LargeEngine'\n}\n\nexport class LargeCatStats extends VehicleEntityStats { // [Carry][Scan][Speed][Drill] (No carry) (Drill???)\n    routeSpeed: number[] = [1.50]\n    surveyRadius: number[] = []\n    trackDist: number = 80.0\n    collRadius: number = 22.0\n    collHeight: number = 25.0\n    pickSphere: number = 50.0\n    canBeDriven: boolean = true\n    crossWater: boolean = true\n    useWaterTeleporter: boolean = true\n    classAsLarge: boolean = true\n    carryVehicles: boolean = true\n    costCrystal: number = 4\n    engineSound: string = 'SND_Catamaran'\n    showHealthBar: boolean = true\n}\n\nexport class LargeHeliStats extends VehicleEntityStats {\n    routeSpeed: number[] = [0.30, 0.40, 0.50]\n    trackDist: number = 80.0\n    collRadius: number = 0.0\n    collHeight: number = 0.0\n    pickSphere: number = 20.0\n    showHealthBar: boolean = true\n    engineSound: string = 'SND_HeliEngine'\n}\n\nexport class LargeMlpStats extends VehicleEntityStats { // [Carry][Scan][Speed][Drill]    (No carry or speed) (Doesn't have drills, just lasers)\n    routeSpeed: number[] = [0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40]\n    surveyRadius: number[] = [0, 0, 0, 0, 5, 5, 5, 5]\n    trackDist: number = 80.0\n    collRadius: number = 20.0\n    collHeight: number = 24.0\n    pickSphere: number = 47.0\n    crossLand: boolean = true\n    useBigTeleporter: boolean = true\n    tracker: boolean = true\n    canDoubleSelect: boolean = true\n    costCrystal: number = 4\n    canBeDriven: boolean = true\n    invisibleDriver: boolean = true\n    upgradeCostOre: number[] = [0, 5, 0, 25]\n    upgradeCostStuds: number[] = [0, 1, 0, 5]\n    showHealthBar: boolean = true\n    engineSound: string = 'SND_LargeEngine'\n}\n\nexport class BarracksStats extends BuildingEntityStats {\n    levels: number = 3\n    trackDist: number = 50.0\n    collHeight: number = 23.0\n    collRadius: number = 15.0\n    pickSphere: number = 30.0\n    costOre: number = 15\n    costRefinedOre: number = 3\n    costCrystal: number = 3\n    snaxULike: boolean = true\n    trainDriver: boolean[] = [true, true, true]\n    crystalDrain: number[] = [1, 1, 1]\n    damageCausesCallToArms: boolean = true\n    oxygenCoef: number = 10.0\n    engineSound: string = 'SND_BuildingHum'\n    showHealthBar: boolean = true\n}\n\nexport class PowerStationStats extends BuildingEntityStats {\n    levels: number = 2\n    trackDist: number = 80.0\n    processCrystal: boolean = true\n    collHeight: number = 31.0\n    collRadius: number = 15.0\n    pickSphere: number = 32.0\n    costOre: number = 12\n    costRefinedOre: number = 3\n    costCrystal: number = 2\n    powerBuilding: boolean = true\n    damageCausesCallToArms: boolean = true\n    engineSound: string = 'SND_PowerBuildingHum'\n    showHealthBar: boolean = true\n}\n\nexport class OreRefineryStats extends BuildingEntityStats {\n    levels: number = 4\n    trackDist: number = 60.0\n    processOre: boolean = true\n    collHeight: number = 16.0\n    collRadius: number = 15.0\n    pickSphere: number = 30.0\n    costOre: number = 20\n    costRefinedOre: number = 4\n    costCrystal: number = 3\n    crystalDrain: number[] = [1, 1, 1, 1]\n    damageCausesCallToArms: boolean = true\n    maxCarry: number[] = [5, 4, 3, 2]\n    engineSound: string = 'SND_BuildingHum'\n    showHealthBar: boolean = true\n}\n\nexport class TeleportPadStats extends BuildingEntityStats {\n    levels: number = 3\n    trackDist: number = 60.0\n    smallTeleporter: boolean = true\n    manTeleporter: boolean = true\n    collHeight: number = 20.0\n    collRadius: number = 15.0\n    pickSphere: number = 30.0\n    costOre: number = 8\n    costRefinedOre: number = 2\n    crystalDrain: number[] = [1, 1, 1]\n    damageCausesCallToArms: boolean = true\n    trainPilot: boolean[] = [true, true, true]\n    engineSound: string = 'SND_BuildingHum'\n    showHealthBar: boolean = true\n}\n\nexport class TeleportBigStats extends BuildingEntityStats {\n    levels: number = 2\n    trackDist: number = 50.0\n    bigTeleporter: boolean = true\n    collHeight: number = 17.0\n    collRadius: number = 15.0\n    pickSphere: number = 30.0\n    costOre: number = 20\n    costRefinedOre: number = 4\n    costCrystal: number = 2\n    crystalDrain: number[] = [1, 1]\n    damageCausesCallToArms: boolean = true\n    engineSound: string = 'SND_BuildingHum'\n    showHealthBar: boolean = true\n}\n\nexport class DocksStats extends BuildingEntityStats {\n    levels: number = 1\n    trackDist: number = 60.0\n    collHeight: number = 20.0\n    collRadius: number = 15.0\n    pickSphere: number = 30.0\n    costOre: number = 8\n    costRefinedOre: number = 2\n    costCrystal: number = 1\n    waterEntrances: number = 1\n    waterTeleporter: boolean = true\n    crystalDrain: number = 1\n    damageCausesCallToArms: boolean = true\n    trainSailor: boolean[] = [true]\n    engineSound: string = 'SND_BuildingHum'\n    showHealthBar: boolean = true\n}\n\nexport class ToolStationStats extends BuildingEntityStats {\n    levels: number = 3\n    trackDist: number = 50.0\n    manTeleporter: boolean = true\n    collHeight: number = 16.0\n    collRadius: number = 15.0\n    pickSphere: number = 30.0\n    toolStore: boolean = true\n    storeObjects: boolean = true\n    selfPowered: boolean = true\n    damageCausesCallToArms: boolean = true\n    trainDynamite: boolean[] = [false, false, true]\n    functionCoef: number[] = [1.0, 1.0, 1.0] // Function here is how long it takes to upgrade a minfigure\n    showHealthBar: boolean = true\n}\n\nexport class GunStationStats extends BuildingEntityStats {\n    levels: number = 2\n    trackDist: number = 60.0\n    collHeight: number = 33.0\n    collRadius: number = 15.0\n    pickSphere: number = 30.0\n    costOre: number = 15\n    costRefinedOre: number = 3\n    costCrystal: number = 1\n    tracker: boolean = true\n    canDoubleSelect: boolean = true\n    crystalDrain: number[] = [1, 1]\n    damageCausesCallToArms: boolean = true\n    functionCoef: number[] = [1.0, 0.5] // How much of a crystal it drains every time it fires...\n    engineSound: string = 'SND_BuildingHum'\n    showHealthBar: boolean = true\n}\n\nexport class GeodomeStats extends BuildingEntityStats {\n    levels: number = 3\n    trackDist: number = 50.0\n    collHeight: number = 20.0\n    collRadius: number = 15.0\n    pickSphere: number = 30.0\n    costOre: number = 15\n    costRefinedOre: number = 3\n    costCrystal: number = 3\n    surveyRadius: number[] = [6, 8, 12]\n    crystalDrain: number[] = [1, 1, 1]\n    damageCausesCallToArms: boolean = true\n    trainScanner: boolean[] = [true, true, true]\n    engineSound: string = 'SND_BuildingHum'\n    showHealthBar: boolean = true\n}\n\nexport class UpgradeStats extends BuildingEntityStats {\n    levels: number = 2\n    trackDist: number = 80.0\n    collHeight: number = 40.0\n    collRadius: number = 15.0\n    pickSphere: number = 32.0\n    costOre: number = 20\n    costRefinedOre: number = 4\n    costCrystal: number = 3\n    upgradeBuilding: boolean = true\n    crystalDrain: number[] = [1, 1]\n    damageCausesCallToArms: boolean = true\n    functionCoef: number[] = [0.8, 1.6] // Function is speed of upgrade animation.\n    trainRepair: boolean[] = [true, true]\n    engineSound: string = 'SND_BuildingHum'\n    showHealthBar: boolean = true\n}\n\nexport class PowerCrystalStats implements ConfigSetFromRecord {\n    trackDist: number = 20.0\n    collRadius: number = 0\n    collHeight: number = 2.0\n    pickSphere: number = 6.0\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.trackDist = cfgValue.getValue('TrackDist').toNumber()\n        this.collRadius = cfgValue.getValue('CollRadius').toNumber()\n        this.collHeight = cfgValue.getValue('CollHeight').toNumber()\n        this.pickSphere = cfgValue.getValue('PickSphere').toNumber()\n        return this\n    }\n}\n\nexport class ProcessedOreStats implements ConfigSetFromRecord {\n    trackDist: number = 20.0\n    collRadius: number = 0\n    collHeight: number = 2.0\n    pickSphere: number = 8.0\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.trackDist = cfgValue.getValue('TrackDist').toNumber()\n        this.collRadius = cfgValue.getValue('CollRadius').toNumber()\n        this.collHeight = cfgValue.getValue('CollHeight').toNumber()\n        this.pickSphere = cfgValue.getValue('PickSphere').toNumber()\n        return this\n    }\n}\n\nexport class OreStats implements ConfigSetFromRecord {\n    trackDist: number = 20.0\n    collRadius: number = 0\n    collHeight: number = 2.0\n    pickSphere: number = 6.0\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.trackDist = cfgValue.getValue('TrackDist').toNumber()\n        this.collRadius = cfgValue.getValue('CollRadius').toNumber()\n        this.collHeight = cfgValue.getValue('CollHeight').toNumber()\n        this.pickSphere = cfgValue.getValue('PickSphere').toNumber()\n        return this\n    }\n}\n\nexport class BoulderStats implements ConfigSetFromRecord {\n    collRadius: number = 2.0\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.collRadius = cfgValue.getValue('CollRadius').toNumber()\n        return this\n    }\n}\n\nexport class PusherStats implements ConfigSetFromRecord {\n    collRadius: number = 1.0\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.collRadius = cfgValue.getValue('CollRadius').toNumber()\n        return this\n    }\n}\n\nexport class FreezerStats implements ConfigSetFromRecord {\n    collRadius: number = 1.0\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.collRadius = cfgValue.getValue('CollRadius').toNumber()\n        return this\n    }\n}\n\nexport class LaserShotStats implements ConfigSetFromRecord {\n    collRadius: number = 1.0 // Original game has typo and specifies colRadius instead\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.collRadius = cfgValue.getValue('CollRadius').toNumber(this.collRadius) // typo in original config ColRadius instead of CollRadius\n        return this\n    }\n}\n\nexport class ElectricFenceStats implements ConfigSetFromRecord {\n    trackDist: number = 50.0\n    collRadius: number = 5.0\n    collHeight: number = 18.0\n    pickSphere: number = 20.0\n    damageCausesCallToArms: boolean = true\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.trackDist = cfgValue.getValue('TrackDist').toNumber()\n        this.collRadius = cfgValue.getValue('CollRadius').toNumber()\n        this.collHeight = cfgValue.getValue('CollHeight').toNumber()\n        this.pickSphere = cfgValue.getValue('PickSphere').toNumber()\n        this.damageCausesCallToArms = cfgValue.getValue('DamageCausesCallToArms').toBoolean()\n        return this\n    }\n}\n\nexport class PathStats implements ConfigSetFromRecord {\n    costOre: number = 2\n    costRefinedOre: number = 1\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.costOre = cfgValue.getValue('CostOre').toNumber()\n        this.costRefinedOre = cfgValue.getValue('CostRefinedOre').toNumber()\n        return this\n    }\n}\n\nexport class GameStatsCfg implements ConfigSetFromRecord {\n    pilot = new PilotStats()\n    rockMonster = new RockMonsterStats()\n    smallSpider = new SmallSpiderStats()\n    bat = new BatStats()\n    tinyRM = new TinyRMStats()\n    tinyIM = new TinyIMStats()\n    slug = new SlugStats()\n    lavaMonster = new LavaMonsterStats()\n    iceMonster = new IceMonsterStats()\n    hoverboard = new HoverboardStats()\n    smallHeli = new SmallHeliStats()\n    smallMlp = new SmallMlpStats()\n    smallCat = new SmallCatStats()\n    smallDigger = new SmallDiggerStats()\n    smallTruck = new SmallTruckStats()\n    bulldozer = new BulldozerStats()\n    walkerDigger = new WalkerDiggerStats()\n    largeDigger = new LargeDiggerStats()\n    largeCat = new LargeCatStats()\n    largeHeli = new LargeHeliStats()\n    largeMlp = new LargeMlpStats()\n    barracks = new BarracksStats()\n    powerStation = new PowerStationStats()\n    oreRefinery = new OreRefineryStats()\n    teleportPad = new TeleportPadStats()\n    teleportBig = new TeleportBigStats()\n    docks = new DocksStats()\n    toolStation = new ToolStationStats()\n    gunStation = new GunStationStats()\n    geoDome = new GeodomeStats()\n    upgrade = new UpgradeStats()\n    powerCrystal = new PowerCrystalStats()\n    processedOre = new ProcessedOreStats()\n    ore = new OreStats()\n    boulder = new BoulderStats()\n    pusher = new PusherStats()\n    freezer = new FreezerStats()\n    laserShot = new LaserShotStats()\n    electricFence = new ElectricFenceStats()\n    path = new PathStats()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.pilot.setFromRecord(cfgValue.getRecord('Pilot'))\n        this.rockMonster.setFromRecord(cfgValue.getRecord('RockMonster'))\n        this.smallSpider.setFromRecord(cfgValue.getRecord('SmallSpider'))\n        this.bat.setFromRecord(cfgValue.getRecord('Bat'))\n        this.tinyRM.setFromRecord(cfgValue.getRecord('TinyRM'))\n        this.tinyIM.setFromRecord(cfgValue.getRecord('TinyIM'))\n        this.slug.setFromRecord(cfgValue.getRecord('Slug'))\n        this.lavaMonster.setFromRecord(cfgValue.getRecord('LavaMonster'))\n        this.iceMonster.setFromRecord(cfgValue.getRecord('IceMonster'))\n        this.hoverboard.setFromRecord(cfgValue.getRecord('Hoverboard'))\n        this.smallHeli.setFromRecord(cfgValue.getRecord('SmallHeli'))\n        this.smallMlp.setFromRecord(cfgValue.getRecord('SmallMlp'))\n        this.smallCat.setFromRecord(cfgValue.getRecord('SmallCat'))\n        this.smallDigger.setFromRecord(cfgValue.getRecord('SmallDigger'))\n        this.smallTruck.setFromRecord(cfgValue.getRecord('SmallTruck'))\n        this.bulldozer.setFromRecord(cfgValue.getRecord('Bulldozer'))\n        this.walkerDigger.setFromRecord(cfgValue.getRecord('WalkerDigger'))\n        this.largeDigger.setFromRecord(cfgValue.getRecord('LargeDigger'))\n        this.largeCat.setFromRecord(cfgValue.getRecord('LargeCat'))\n        this.largeHeli.setFromRecord(cfgValue.getRecord('LargeHeli'))\n        this.largeMlp.setFromRecord(cfgValue.getRecord('LargeMlp'))\n        this.barracks.setFromRecord(cfgValue.getRecord('Barracks'))\n        this.powerStation.setFromRecord(cfgValue.getRecord('PowerStation'))\n        this.oreRefinery.setFromRecord(cfgValue.getRecord('OreRefinery'))\n        this.teleportPad.setFromRecord(cfgValue.getRecord('TeleportPad'))\n        this.teleportBig.setFromRecord(cfgValue.getRecord('TeleportBig'))\n        this.docks.setFromRecord(cfgValue.getRecord('Docks'))\n        this.toolStation.setFromRecord(cfgValue.getRecord('ToolStation'))\n        this.gunStation.setFromRecord(cfgValue.getRecord('GunStation'))\n        this.geoDome.setFromRecord(cfgValue.getRecord('Geo-Dome'))\n        this.upgrade.setFromRecord(cfgValue.getRecord('Upgrade'))\n        this.powerCrystal.setFromRecord(cfgValue.getRecord('PowerCrystal'))\n        this.processedOre.setFromRecord(cfgValue.getRecord('ProcessedOre'))\n        this.ore.setFromRecord(cfgValue.getRecord('Ore'))\n        this.boulder.setFromRecord(cfgValue.getRecord('Boulder'))\n        this.pusher.setFromRecord(cfgValue.getRecord('Pusher'))\n        this.freezer.setFromRecord(cfgValue.getRecord('Freezer'))\n        this.laserShot.setFromRecord(cfgValue.getRecord('LaserShot'))\n        this.electricFence.setFromRecord(cfgValue.getRecord('ElectricFence'))\n        this.path.setFromRecord(cfgValue.getRecord('Path'))\n        return this\n    }\n}\n","export const PRIORITY_IDENTIFIER = {\n    none: 0, // useful for truthiness checks\n    train: 1, // not shown in original game\n    getIn: 2,\n    crystal: 3,\n    ore: 4,\n    repair: 5,\n    clearing: 6,\n    destruction: 7,\n    construction: 8,\n    reinforce: 9,\n    recharge: 10,\n    getTool: 11, // not shown in original game\n    buildPath: 12, // not shown in original game\n} as const\nexport type PriorityIdentifier = typeof PRIORITY_IDENTIFIER[keyof typeof PRIORITY_IDENTIFIER]\n","import { DEFAULT_AUTO_GAME_SPEED, DEFAULT_GAME_BRIGHTNESS, DEFAULT_GAME_SPEED_MULTIPLIER, DEFAULT_MUSIC_TOGGLE, DEFAULT_MUSIC_VOLUME, DEFAULT_SCREEN_RATIO_FIXED, DEFAULT_SFX_TOGGLE, DEFAULT_SFX_VOLUME, DEFAULT_SHOW_HELP_WINDOW, DEFAULT_WALL_DETAILS, DEV_MODE, NUM_OF_LEVELS_TO_COMPLETE_GAME, SAVE_GAME_SCREENSHOT_HEIGHT, SAVE_GAME_SCREENSHOT_WIDTH, VERBOSE } from '../params'\nimport { LevelEntryCfg } from '../cfg/LevelsCfg'\n\nexport class SaveGamePreferences { // this gets serialized\n    // Vanilla game preferences\n    gameSpeed: number = DEFAULT_GAME_SPEED_MULTIPLIER\n    volumeSfx: number = DEFAULT_SFX_VOLUME\n    volumeMusic: number = DEFAULT_MUSIC_VOLUME\n    gameBrightness: number = DEFAULT_GAME_BRIGHTNESS\n    showHelpWindow: boolean = DEFAULT_SHOW_HELP_WINDOW\n    wallDetails: boolean = DEFAULT_WALL_DETAILS\n    toggleMusic: boolean = DEFAULT_MUSIC_TOGGLE\n    toggleSfx: boolean = DEFAULT_SFX_TOGGLE\n    autoGameSpeed: boolean = DEFAULT_AUTO_GAME_SPEED\n    // Additional game preferences\n    screenRatio: string = '4:3' // set to 0 for responsive screen ratio\n    testLevels: boolean = false\n    cameraUnlimited: boolean = DEV_MODE\n    skipBriefings: boolean = DEV_MODE\n    muteDevSounds: boolean = DEV_MODE\n    playVideos: boolean = !DEV_MODE\n    edgeScrolling: boolean = !DEV_MODE\n}\n\ntype DeepPartial<T> = {\n    [P in keyof T]?: T[P] extends object ? (T[P] extends Array<infer _> ? T[P] : DeepPartial<T[P]>) : T[P];\n}\n\nexport class SaveGameManager {\n    static preferences: SaveGamePreferences = new SaveGamePreferences()\n    static screenshots: Promise<HTMLCanvasElement | undefined>[] = []\n    static currentTeam: SaveGameRaider[] = []\n    private static saveGames: SaveGame[] = [] // this gets serialized\n    private static currentLevels: SaveGameLevel[] = []\n\n    static loadPreferences() {\n        try {\n            if (VERBOSE) console.log('Loading preferences...')\n            const preferences = localStorage.getItem('preferences')\n            if (preferences) {\n                this.preferences = {...this.preferences, ...JSON.parse(preferences)}\n                if (window?.rr) window.rr.preferences = this.preferences\n                console.log(`Preferences loaded`, this.preferences)\n            }\n        } catch (e) {\n            console.error('Could not load preferences', e)\n        }\n    }\n\n    static loadSaveGames() {\n        try {\n            if (VERBOSE) console.log('Loading save games...')\n            const saveGames: DeepPartial<SaveGame>[] = JSON.parse(localStorage.getItem('savegames') || '[]')\n            this.saveGames = saveGames.map((s): SaveGame => SaveGame.copy(s))\n            console.log('All save games loaded', this.saveGames)\n        } catch (e) {\n            console.error('Could not load save games', e)\n        }\n    }\n\n    static loadSaveGameScreenshots() {\n        if (VERBOSE) console.log('Loading save game screenshots...')\n        this.screenshots = this.saveGames.map((_, index) => new Promise<HTMLCanvasElement | undefined>((resolve) => {\n            try {\n                const screenshot = localStorage.getItem(`screenshot${index}`)\n                if (!screenshot) {\n                    resolve(undefined)\n                    return\n                }\n                const img = new Image()\n                img.onload = () => {\n                    const canvas = document.createElement('canvas')\n                    canvas.width = SAVE_GAME_SCREENSHOT_WIDTH\n                    canvas.height = SAVE_GAME_SCREENSHOT_HEIGHT\n                    const context = canvas.getContext('2d')\n                    if (!context) {\n                        console.warn('Missing context to draw save game thumbnail on canvas')\n                    } else {\n                        context.drawImage(img, 0, 0)\n                    }\n                    resolve(canvas)\n                }\n                img.src = screenshot\n            } catch (e) {\n                console.error('Could not load save game screenshot', e)\n                resolve(undefined)\n            }\n        }))\n    }\n\n    static hasSaveGame(index: number): boolean {\n        return !!this.saveGames[index]\n    }\n\n    static getOverallGameProgress(index: number): number {\n        const levels = this.saveGames[index]?.levels ?? []\n        const levelNameList = levels.map((l) => l.levelName).filter((levelName) => LevelEntryCfg.isLevel(levelName))\n        return new Set(levelNameList).size * 100 / NUM_OF_LEVELS_TO_COMPLETE_GAME\n    }\n\n    static startNewGame() {\n        console.log('Resetting game progress and starting new game')\n        this.currentLevels = []\n    }\n\n    static saveGame(index: number, screenshot: HTMLCanvasElement | undefined) {\n        this.saveGames[index] = this.saveGames[index] || new SaveGame()\n        this.saveGames[index].levels = this.currentLevels.map((l) => SaveGameLevel.copy(l)) // deep copy required, otherwise changes are reflected\n        this.saveGames[index].team = this.currentTeam.map((t) => SaveGameRaider.copy(t)) // deep copy required, otherwise changes are reflected\n        localStorage.setItem('savegames', JSON.stringify(this.saveGames))\n        this.screenshots[index] = Promise.resolve(screenshot)\n        localStorage.setItem(`screenshot${index}`, this.createSaveGameThumbnail(screenshot))\n        if (VERBOSE) console.log('game progress saved', this.saveGames)\n    }\n\n    private static createSaveGameThumbnail(screenshot: HTMLCanvasElement | undefined): string {\n        if (!screenshot) return ''\n        const canvas = document.createElement('canvas')\n        canvas.width = SAVE_GAME_SCREENSHOT_WIDTH\n        canvas.height = SAVE_GAME_SCREENSHOT_HEIGHT\n        const context = canvas.getContext('2d')\n        if (!context) {\n            console.warn('Missing context to draw save game thumbnail on canvas')\n        } else {\n            context.drawImage(screenshot, 0, 0, canvas.width, canvas.height)\n        }\n        return canvas.toDataURL()\n    }\n\n    static loadGame(index: number): boolean {\n        this.currentLevels = this.saveGames[index]?.levels ?? []\n        this.currentTeam = this.saveGames[index]?.team ?? []\n        if (VERBOSE) console.log('game progress loaded', this.currentLevels)\n        return true\n    }\n\n    static setLevelScore(levelName: string, score: number) {\n        const previousAttempt = this.currentLevels.find((l) => l.levelName?.equalsIgnoreCase(levelName))\n        if (previousAttempt) {\n            const prevScore = previousAttempt.levelScore || 0\n            if (prevScore < score) {\n                previousAttempt.levelScore = score\n            }\n        } else {\n            this.currentLevels.add(new SaveGameLevel(levelName, score))\n        }\n    }\n\n    static getLevelScoreString(levelName: string): string {\n        if (!LevelEntryCfg.isLevel(levelName)) return ''\n        const levelScore = this.currentLevels.find((l) => l.levelName?.equalsIgnoreCase(levelName))?.levelScore\n        if (!levelScore) return ''\n        return ` (${levelScore})`\n    }\n\n    static getLevelCompleted(levelName: string): boolean {\n        return !!this.currentLevels.find((l) => l.levelName?.equalsIgnoreCase(levelName))\n    }\n\n    static savePreferences(): void {\n        localStorage.setItem('preferences', JSON.stringify(this.preferences))\n        console.log('Preferences saved', this.preferences)\n    }\n\n    static getSfxVolume(): number {\n        return this.preferences.toggleSfx ? this.preferences.volumeSfx : 0\n    }\n\n    static getMusicVolume(): number {\n        return this.preferences.toggleMusic ? this.preferences.volumeMusic : 0\n    }\n\n    static calcScreenRatio(): number {\n        if (!this.preferences.screenRatio || this.preferences.screenRatio === 'responsive') return 0\n        const matched = this.preferences.screenRatio?.match('^\\d:\\d$')\n        if (matched?.length === 3) {\n            const w = Number(matched[1])\n            const h = Number(matched[2])\n            if (!isNaN(w) && !isNaN(h)) {\n                return w / h\n            }\n        }\n        return DEFAULT_SCREEN_RATIO_FIXED\n    }\n}\n\nclass SaveGame { // this gets serialized\n    levels: SaveGameLevel[] = []\n    team: SaveGameRaider[] = []\n\n    static copy(other: DeepPartial<SaveGame>): SaveGame {\n        const result = new SaveGame()\n        other.levels?.forEach((l) => {\n            if (l?.levelName && l?.levelScore) result.levels.push(new SaveGameLevel(l.levelName, l.levelScore))\n        })\n        result.team = other.team?.map((t) => SaveGameRaider.copy(t)) || []\n        return result\n    }\n}\n\nclass SaveGameLevel { // this gets serialized\n    readonly levelName: string\n    levelScore: number\n\n    constructor(levelName: string, levelScore: number) {\n        this.levelName = levelName\n        this.levelScore = levelScore\n    }\n\n    static copy(other: SaveGameLevel): SaveGameLevel {\n        return new SaveGameLevel(other.levelName, other.levelScore)\n    }\n}\n\nexport class SaveGameRaider { // this gets serialized\n    name: string\n    level: number\n    trainings: string[]\n\n    constructor(name: string, level: number, trainings: string[]) {\n        this.name = name\n        this.level = level\n        this.trainings = [...trainings]\n    }\n\n    static copy(other: DeepPartial<SaveGameRaider>): SaveGameRaider {\n        return new SaveGameRaider(other.name || '', other.level || 0, other.trainings || [])\n    }\n}\n","export const enum EntityType {\n    NONE = '',\n    // RAIDER\n    PILOT = 'Pilot', // start with 1 otherwise entity type may fail truthiness test\n\n    // BUILDING\n    TOOLSTATION = 'Toolstation',\n    TELEPORT_PAD = 'TeleportPad',\n    DOCKS = 'Docks',\n    POWER_STATION = 'PowerStation',\n    BARRACKS = 'Barracks',\n    UPGRADE = 'Upgrade',\n    GEODOME = 'Geo-Dome',\n    ORE_REFINERY = 'OreRefinery',\n    GUNSTATION = 'Gunstation',\n    TELEPORT_BIG = 'TeleportBIG',\n\n    POWER_PATH = 'Path',\n\n    // MONSTER\n    BAT = 'Bat',\n    SMALL_SPIDER = 'SmallSpider',\n    SLUG = 'Slug',\n    ROCK_MONSTER = 'RockMonster',\n    ICE_MONSTER = 'IceMonster',\n    LAVA_MONSTER = 'LavaMonster',\n\n    // MATERIAL\n    DYNAMITE = 'Dynamite',\n    ELECTRIC_FENCE = 'ElectricFence',\n    CRYSTAL = 'PowerCrystal',\n    ORE = 'Ore',\n    BRICK = 'ProcessedOre',\n    BARRIER = 'Barrier',\n    DEPLETED_CRYSTAL = 'DepletedCrystal',\n\n    // VEHICLE\n    HOVERBOARD = 'Hoverboard',\n    SMALL_DIGGER = 'SmallDigger',\n    SMALL_TRUCK = 'SmallTruck',\n    SMALL_CAT = 'SmallCat',\n    SMALL_MLP = 'SmallMlp',\n    SMALL_HELI = 'SmallHeli',\n    BULLDOZER = 'Bulldozer',\n    WALKER_DIGGER = 'WalkerDigger',\n    LARGE_MLP = 'LargeMlp',\n    LARGE_DIGGER = 'LargeDigger',\n    LARGE_CAT = 'LargeCat',\n    LARGE_HELI = 'LargeHeli',\n\n    // OTHERS\n    TV_CAMERA = 'TvCamera',\n    LASER_SHOT = 'LaserShot',\n    FREEZER_SHOT = 'FreezerShot',\n    PUSHER_SHOT = 'PusherShot',\n    BIRD_SCARER = 'BirdScarer',\n    BOULDER = 'Boulder',\n    BOULDER_ICE = 'BoulderIce',\n}\n\nexport type MaterialEntityType = EntityType.ORE | EntityType.CRYSTAL | EntityType.BRICK | EntityType.BARRIER | EntityType.DYNAMITE | EntityType.ELECTRIC_FENCE | EntityType.DEPLETED_CRYSTAL\n\nexport type VehicleEntityType = EntityType.HOVERBOARD | EntityType.SMALL_DIGGER | EntityType.SMALL_TRUCK | EntityType.SMALL_CAT | EntityType.SMALL_MLP | EntityType.SMALL_HELI | EntityType.BULLDOZER | EntityType.WALKER_DIGGER | EntityType.LARGE_MLP | EntityType.LARGE_DIGGER | EntityType.LARGE_CAT | EntityType.LARGE_HELI\n\nexport type MonsterEntityType = EntityType.NONE | EntityType.SMALL_SPIDER | EntityType.BAT | EntityType.SLUG | EntityType.ICE_MONSTER | EntityType.LAVA_MONSTER | EntityType.ROCK_MONSTER\n\nexport function getEntityTypeByName(type: string): EntityType {\n    if ('TVCamera'.equalsIgnoreCase(type)) {\n        return EntityType.TV_CAMERA\n    } else if ('Pilot'.equalsIgnoreCase(type)) {\n        return EntityType.PILOT\n    } else if ('Toolstation'.equalsIgnoreCase(type)) {\n        return EntityType.TOOLSTATION\n    } else if ('TeleportPad'.equalsIgnoreCase(type)) {\n        return EntityType.TELEPORT_PAD\n    } else if ('Docks'.equalsIgnoreCase(type)) {\n        return EntityType.DOCKS\n    } else if ('PowerStation'.equalsIgnoreCase(type)) {\n        return EntityType.POWER_STATION\n    } else if ('Barracks'.equalsIgnoreCase(type)) {\n        return EntityType.BARRACKS\n    } else if ('Upgrade'.equalsIgnoreCase(type)) {\n        return EntityType.UPGRADE\n    } else if ('GEO-Dome'.equalsIgnoreCase(type) || 'geodome'.equalsIgnoreCase(type)) {\n        return EntityType.GEODOME\n    } else if ('OreRefinery'.equalsIgnoreCase(type)) {\n        return EntityType.ORE_REFINERY\n    } else if ('GunStation'.equalsIgnoreCase(type)) {\n        return EntityType.GUNSTATION\n    } else if ('TeleportBIG'.equalsIgnoreCase(type)) {\n        return EntityType.TELEPORT_BIG\n    } else if ('Path'.equalsIgnoreCase(type)) {\n        return EntityType.POWER_PATH\n    } else if ('Bat'.equalsIgnoreCase(type)) {\n        return EntityType.BAT\n    } else if ('SmallSpider'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_SPIDER\n    } else if ('RockMonster'.equalsIgnoreCase(type)) {\n        return EntityType.ROCK_MONSTER\n    } else if ('IceMonster'.equalsIgnoreCase(type)) {\n        return EntityType.ICE_MONSTER\n    } else if ('LavaMonster'.equalsIgnoreCase(type)) {\n        return EntityType.LAVA_MONSTER\n    } else if ('Dynamite'.equalsIgnoreCase(type)) {\n        return EntityType.DYNAMITE\n    } else if ('ElectricFence'.equalsIgnoreCase(type)) {\n        return EntityType.ELECTRIC_FENCE\n    } else if ('PowerCrystal'.equalsIgnoreCase(type)) {\n        return EntityType.CRYSTAL\n    } else if ('Ore'.equalsIgnoreCase(type)) {\n        return EntityType.ORE\n    } else if ('Brick'.equalsIgnoreCase(type)) {\n        return EntityType.BRICK\n    } else if ('Barrier'.equalsIgnoreCase(type)) {\n        return EntityType.BARRIER\n    } else if ('DepletedCrystal'.equalsIgnoreCase(type)) {\n        return EntityType.DEPLETED_CRYSTAL\n    } else if ('Hoverboard'.equalsIgnoreCase(type)) {\n        return EntityType.HOVERBOARD\n    } else if ('SmallDigger'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_DIGGER\n    } else if ('SmallTruck'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_TRUCK\n    } else if ('SmallCat'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_CAT\n    } else if ('SmallMLP'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_MLP\n    } else if ('SmallHeli'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_HELI\n    } else if ('Bulldozer'.equalsIgnoreCase(type)) {\n        return EntityType.BULLDOZER\n    } else if ('WalkerDigger'.equalsIgnoreCase(type)) {\n        return EntityType.WALKER_DIGGER\n    } else if ('LargeMLP'.equalsIgnoreCase(type)) {\n        return EntityType.LARGE_MLP\n    } else if ('LargeDigger'.equalsIgnoreCase(type)) {\n        return EntityType.LARGE_DIGGER\n    } else if ('LargeCat'.equalsIgnoreCase(type)) {\n        return EntityType.LARGE_CAT\n    } else if ('LargeHeli'.equalsIgnoreCase(type)) {\n        return EntityType.LARGE_HELI\n    } else {\n        return EntityType.NONE\n    }\n}\n\nexport function getMonsterEntityTypeByName(type: string): MonsterEntityType | EntityType.NONE {\n    if ('Bat'.equalsIgnoreCase(type)) {\n        return EntityType.BAT\n    } else if ('SmallSpider'.equalsIgnoreCase(type)) {\n        return EntityType.SMALL_SPIDER\n    } else if ('RockMonster'.equalsIgnoreCase(type)) {\n        return EntityType.ROCK_MONSTER\n    } else if ('IceMonster'.equalsIgnoreCase(type)) {\n        return EntityType.ICE_MONSTER\n    } else if ('LavaMonster'.equalsIgnoreCase(type)) {\n        return EntityType.LAVA_MONSTER\n    } else {\n        console.warn(`Could not find monster entity type for given '${type}'`)\n        return EntityType.NONE\n    }\n}\n","import { PRIORITY_IDENTIFIER, PriorityIdentifier } from '../game/model/job/PriorityIdentifier'\nimport { GameConfig } from './GameConfig'\nimport { SaveGameManager } from '../resource/SaveGameManager'\nimport { DEV_MODE, VERBOSE } from '../params'\nimport { ConfigSetFromEntryValue, ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry, CfgEntryValue } from './CfgEntry'\nimport { EntityType, getMonsterEntityTypeByName, MonsterEntityType } from '../game/model/EntityType'\n\nexport class LevelEntryCfg implements ConfigSetFromRecord {\n    fullName: string = ''\n    endGameAvi1: string = ''\n    endGameAvi2: string = ''\n    allowRename: boolean = false\n    recallOLObjects: boolean = false\n    generateSpiders: boolean = false\n    video: string = ''\n    disableEndTeleport: boolean = false\n    disableStartTeleport: boolean = false\n    emergeTimeOutMs: number = 0\n    boulderAnimation: any = ''\n    noMultiSelect: boolean = false\n    noAutoEat: boolean = false\n    disableToolTipSound: boolean = false\n    blockSize: number = 40\n    digDepth: number = 40\n    roughLevel: number = 6\n    roofHeight: number = 40\n    useRoof: boolean = true\n    selBoxHeight: number = 10\n    fpRotLight: [r: number, g: number, b: number] = [0, 0, 0]\n    fogColour: [r: number, g: number, b: number] = [0, 0, 0]\n    highFogColour: [r: number, g: number, b: number] = [0, 0, 0]\n    fogRate: number = 0\n    fallinMultiplier: number = 0 // time in seconds that is multiplied with fall in map value to get time between fall ins\n    numberOfLandSlidesTillCaveIn: number = 0 // TODO after this number of fallins the area of effect is increased from 1 to 6\n    noFallins: boolean = false // this does not disable fallins, compare with level05\n    oxygenRate: number = 0 // 0 - 100 with the highest usage at 100 and lowest at 0\n    surfaceMap: string = ''\n    predugMap: string = ''\n    terrainMap: string = ''\n    emergeMap: string = ''\n    erodeMap: string = ''\n    fallinMap: string = ''\n    blockPointersMap: string = ''\n    cryOreMap: string = ''\n    pathMap: string = ''\n    noGather: boolean = false\n    textureSet: string = ''\n    rockFallStyle: string = ''\n    emergeCreature: MonsterEntityType = EntityType.NONE\n    safeCaverns: boolean = true\n    seeThroughWalls: boolean = false\n    oListFile: string = ''\n    ptlFile: string = ''\n    nerpFile: string = ''\n    nerpMessageFile: string = ''\n    objectiveText: string = ''\n    objectiveImage: ObjectiveImageCfg = new ObjectiveImageCfg()\n    erodeTriggerTimeMs: number = 0 // 1, 20, 40, 60, 120 time in seconds to trigger a new erosion\n    erodeErodeTimeMs: number = 0 // 1, 5, 7, 20, 30, 40, 60 time in seconds until next erosion level is reached\n    erodeLockTimeMs: number = 0 // 1, 300, 500, 600 grace time no erosion happens on surface with power path\n    nextLevel: any = ''\n    levelLinks: string[] = []\n    frontEndX: number = 0\n    frontEndY: number = 0\n    frontEndOpen: boolean = false\n    priorities: LevelPrioritiesEntryConfig[] = [] // priority order matters!\n    reward?: LevelRewardConfig\n    menuBMP: string[] = []\n\n    constructor(readonly levelName: string) {\n    }\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.fullName = cfgValue.getValue('FullName').toLabel()\n        this.endGameAvi1 = cfgValue.getValue('EndGameAvi1').toFileName()\n        this.endGameAvi2 = cfgValue.getValue('EndGameAvi2').toFileName()\n        this.allowRename = cfgValue.getValue('AllowRename').toBoolean()\n        this.recallOLObjects = cfgValue.getValue('RecallOLObjects').toBoolean()\n        this.generateSpiders = cfgValue.getValue('GenerateSpiders').toBoolean()\n        this.video = cfgValue.getValue('Video').toFileName()\n        this.disableEndTeleport = cfgValue.getValue('DisableEndTeleport').toBoolean() || DEV_MODE\n        this.disableStartTeleport = cfgValue.getValue('DisableStartTeleport').toBoolean() || DEV_MODE\n        this.emergeTimeOutMs = cfgValue.getValue('EmergeTimeOut').toNumber() / 1500 * 60 * 1000 // 1500 specifies 1 minute\n        this.boulderAnimation = cfgValue.getValue('BoulderAnimation').toFileName()\n        this.noMultiSelect = cfgValue.getValue('NoMultiSelect').toBoolean()\n        this.noAutoEat = cfgValue.getValue('NoAutoEat').toBoolean()\n        this.disableToolTipSound = cfgValue.getValue('DisableToolTipSound').toBoolean()\n        this.blockSize = cfgValue.getValue('BlockSize').toNumber()\n        this.digDepth = cfgValue.getValue('DigDepth').toNumber()\n        this.roughLevel = cfgValue.getValue('RoughLevel').toNumber()\n        this.roofHeight = cfgValue.getValue('RoofHeight').toNumber()\n        this.useRoof = cfgValue.getValue('UseRoof').toBoolean()\n        this.selBoxHeight = cfgValue.getValue('SelBoxHeight').toNumber()\n        this.fpRotLight = cfgValue.getValue('FpRotLightRGB').toRGB(this.fpRotLight)\n        this.fogColour = cfgValue.getValue('FogColourRGB').toRGB()\n        this.highFogColour = cfgValue.getValue('HighFogColourRGB').toRGB()\n        this.fogRate = cfgValue.getValue('FogRate').toNumber()\n        this.fallinMultiplier = cfgValue.getValue('FallinMultiplier').toNumber()\n        this.numberOfLandSlidesTillCaveIn = cfgValue.getValue('NumberOfLandSlidesTillCaveIn').toNumber()\n        this.noFallins = cfgValue.getValue('NoFallins').toBoolean()\n        this.oxygenRate = cfgValue.getValue('OxygenRate').toNumber()\n        this.surfaceMap = cfgValue.getValue('SurfaceMap').toFileName()\n        this.predugMap = cfgValue.getValue('PredugMap').toFileName()\n        this.terrainMap = cfgValue.getValue('TerrainMap').toFileName()\n        this.emergeMap = cfgValue.getValue('EmergeMap').toFileName()\n        this.erodeMap = cfgValue.getValue('ErodeMap').toFileName()\n        this.fallinMap = cfgValue.getValue('FallinMap').toFileName()\n        this.blockPointersMap = cfgValue.getValue('BlockPointersMap').toFileName()\n        this.cryOreMap = cfgValue.getValue('CryOreMap').toFileName()\n        this.pathMap = cfgValue.getValue('PathMap').toFileName()\n        this.noGather = cfgValue.getValue('NoGather').toBoolean()\n        this.textureSet = cfgValue.getValue('TextureSet').toTextureSet()\n        this.rockFallStyle = cfgValue.getValue('RockFallStyle').toString()\n        this.emergeCreature = getMonsterEntityTypeByName(cfgValue.getValue('EmergeCreature').toString())\n        this.safeCaverns = cfgValue.getValue('SafeCaverns').toBoolean()\n        this.seeThroughWalls = cfgValue.getValue('SeeThroughWalls').toBoolean()\n        this.oListFile = cfgValue.getValue('OListFile').toFileName()\n        this.ptlFile = cfgValue.getValue('PtlFile').toFileName()\n        this.nerpFile = cfgValue.getValue('NerpFile').toFileName()\n        if (this.nerpFile?.toLowerCase().endsWith('.npl')) {\n            this.nerpFile = this.nerpFile.replace('.npl', '.nrn')\n            if (VERBOSE) console.warn(`Binary NERP file (.npl) not supported, using NERP text script (.nrn) instead from \"${this.nerpFile}\"`)\n        }\n        this.nerpMessageFile = cfgValue.getValue('NerpMessageFile').toFileName()\n        this.objectiveText = cfgValue.getValue('ObjectiveText').toFileName()\n        this.objectiveImage.setFromValue(cfgValue.getValue('ObjectiveImage640x480'))\n        this.erodeTriggerTimeMs = cfgValue.getValue('ErodeTriggerTime').toNumber() * 1000\n        this.erodeErodeTimeMs = cfgValue.getValue('ErodeErodeTime').toNumber() * 1000\n        this.erodeLockTimeMs = cfgValue.getValue('ErodeLockTime').toNumber() * 1000\n        this.nextLevel = cfgValue.getValue('NextLevel').toLevelReference()\n        this.levelLinks = cfgValue.getValue('LevelLinks').toArray(',', undefined).map((v) => v.toLevelReference())\n        this.frontEndX = cfgValue.getValue('FrontEndX').toNumber()\n        this.frontEndY = cfgValue.getValue('FrontEndY').toNumber()\n        this.frontEndOpen = cfgValue.getValue('FrontEndOpen').toBoolean()\n        cfgValue.getRecord('Priorities').forEachCfgEntryValue((value, name) => {\n            const prio = new LevelPrioritiesEntryConfig(name, value.toBoolean())\n            // XXX Priority list should be open for mods, BUT original specifies AI_Priority_Train and does not show it in-game\n            const priorityWhitelist: PriorityIdentifier[] = [\n                PRIORITY_IDENTIFIER.getIn,\n                PRIORITY_IDENTIFIER.crystal,\n                PRIORITY_IDENTIFIER.ore,\n                PRIORITY_IDENTIFIER.repair,\n                PRIORITY_IDENTIFIER.clearing,\n                PRIORITY_IDENTIFIER.destruction,\n                PRIORITY_IDENTIFIER.construction,\n                PRIORITY_IDENTIFIER.reinforce,\n                PRIORITY_IDENTIFIER.recharge,\n            ]\n            if (priorityWhitelist.includes(prio.key)) this.priorities.push(prio)\n        })\n        const valReward = cfgValue.getRecordOptional('Reward')\n        if (valReward) this.reward = new LevelRewardConfig().setFromRecord(valReward)\n        this.menuBMP = cfgValue.getValue('MenuBMP').toArray(',', 3).map((v) => v.toFileName())\n        return this\n    }\n\n    isLocked(): boolean {\n        return !SaveGameManager.preferences.testLevels &&\n            !this.frontEndOpen &&\n            !this.levelName.equalsIgnoreCase(GameConfig.instance.main.startLevel) &&\n            !this.levelName.equalsIgnoreCase(GameConfig.instance.main.tutorialStartLevel) &&\n            !SaveGameManager.getLevelCompleted(this.levelName) &&\n            !this.isUnlockedByLevelLink()\n    }\n\n    private isUnlockedByLevelLink(): boolean {\n        return GameConfig.instance.levels.some((levelEntryCfg) =>\n            SaveGameManager.getLevelCompleted(levelEntryCfg.levelName) && levelEntryCfg.levelLinks.some((levelLink) => this.levelName.equalsIgnoreCase(levelLink))\n        )\n    }\n\n    public static isLevel(levelName: string | undefined): boolean {\n        return !!levelName?.toLowerCase().startsWith('level')\n    }\n\n    public static isTutorial(levelName: string | undefined): boolean {\n        return !!levelName?.toLowerCase().startsWith('tutorial')\n    }\n}\n\nexport class LevelPrioritiesEntryConfig {\n    key: PriorityIdentifier\n    enabled: boolean\n\n    constructor(name: string, enabled: boolean) {\n        this.key = LevelPrioritiesEntryConfig.priorityIdentifierFromString(name)\n        this.enabled = enabled\n    }\n\n    private static priorityIdentifierFromString(name: string) {\n        if (name.equalsIgnoreCase('AI_Priority_Train')) {\n            return PRIORITY_IDENTIFIER.train\n        } else if (name.equalsIgnoreCase('AI_Priority_GetIn')) {\n            return PRIORITY_IDENTIFIER.getIn\n        } else if (name.equalsIgnoreCase('AI_Priority_Crystal')) {\n            return PRIORITY_IDENTIFIER.crystal\n        } else if (name.equalsIgnoreCase('AI_Priority_Ore')) {\n            return PRIORITY_IDENTIFIER.ore\n        } else if (name.equalsIgnoreCase('AI_Priority_Repair')) {\n            return PRIORITY_IDENTIFIER.repair\n        } else if (name.equalsIgnoreCase('AI_Priority_Clearing')) {\n            return PRIORITY_IDENTIFIER.clearing\n        } else if (name.equalsIgnoreCase('AI_Priority_Destruction')) {\n            return PRIORITY_IDENTIFIER.destruction\n        } else if (name.equalsIgnoreCase('AI_Priority_Construction')) {\n            return PRIORITY_IDENTIFIER.construction\n        } else if (name.equalsIgnoreCase('AI_Priority_Reinforce')) {\n            return PRIORITY_IDENTIFIER.reinforce\n        } else if (name.equalsIgnoreCase('AI_Priority_Recharge')) {\n            return PRIORITY_IDENTIFIER.recharge\n        } else if (name.equalsIgnoreCase('AI_Priority_GetTool')) {\n            return PRIORITY_IDENTIFIER.getTool\n        } else if (name.equalsIgnoreCase('AI_Priority_BuildPath')) {\n            return PRIORITY_IDENTIFIER.buildPath\n        } else {\n            console.warn(`Unexpected priority identifier ${name}`)\n            return PRIORITY_IDENTIFIER.none\n        }\n    }\n}\n\nexport class LevelRewardConfig implements ConfigSetFromRecord {\n    enable: boolean = true\n    modifier: number = 0\n    importance: LevelRewardImportanceConfig = new LevelRewardImportanceConfig()\n    quota: LevelRewardQuotaConfig = new LevelRewardQuotaConfig()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.enable = cfgValue.getValue('Enable').toBoolean()\n        this.modifier = cfgValue.getValue('Modifier').toNumber()\n        this.importance.setFromRecord(cfgValue.getRecord('Importance'))\n        this.quota.setFromRecord(cfgValue.getRecord('Quota'))\n        return this\n    }\n}\n\nexport class LevelRewardImportanceConfig implements ConfigSetFromRecord {\n    crystals: number = 0\n    timer: number = 0\n    caverns: number = 0\n    constructions: number = 0\n    oxygen: number = 0\n    figures: number = 0\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.crystals = cfgValue.getValue('crystals').toNumber()\n        this.timer = cfgValue.getValue('timer').toNumber()\n        this.caverns = cfgValue.getValue('caverns').toNumber()\n        this.constructions = cfgValue.getValue('constructions').toNumber()\n        this.oxygen = cfgValue.getValue('oxygen').toNumber()\n        this.figures = cfgValue.getValue('figures').toNumber()\n        return this\n    }\n}\n\nexport class LevelRewardQuotaConfig implements ConfigSetFromRecord {\n    crystals: number = 0\n    timerMs: number = 0\n    caverns: number = 0\n    constructions: number = 0\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.crystals = cfgValue.getValue('crystals').toNumber()\n        this.timerMs = cfgValue.getValue('timer').toNumber() * 1000\n        this.caverns = cfgValue.getValue('caverns').toNumber()\n        this.constructions = cfgValue.getValue('constructions').toNumber()\n        return this\n    }\n}\n\nexport class ObjectiveImageCfg implements ConfigSetFromEntryValue {\n    filename: string = ''\n    x: number = 0\n    y: number = 0\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const array = cfgValue.toArray(',', 3)\n        this.filename = array[0].toFileName()\n        this.x = array[1].toNumber()\n        this.y = array[2].toNumber()\n        return this\n    }\n}\n","import { Rect } from '../core/Rect'\nimport { ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry } from './CfgEntry'\n\nexport class MainCfg implements ConfigSetFromRecord {\n    creditsTextFile: string = ''\n    creditsBackAVI: string = ''\n    loadScreen: string = ''\n    progressBar: string = ''\n    progressWindow: Rect = new Rect()\n    loadingText: string = ''\n    nextButton: string = ''\n    nextButtonPos: { x: number, y: number } = {x: 0, y: 0}\n    backButton: string = ''\n    backButtonPos: { x: number, y: number } = {x: 0, y: 0}\n    backArrow: string = ''\n    buildingUpgradeCostOre: number = 0\n    buildingUpgradeCostStuds: number = 0\n    textPauseTimeMs = 0 // Time in seconds that the Text_ messages last.\n    startLevel: string = ''\n    tutorialStartLevel: string = ''\n    ambientRGB: [r: number, g: number, b: number] = [0, 0, 0]\n    powerCrystalRGB: [r: number, g: number, b: number] = [0, 0, 0]\n    unpoweredCrystalRGB: [r: number, g: number, b: number] = [0, 0, 0]\n    minDist: number = 0.0 // minimum camera distance\n    maxDist: number = 0.0 // maximum camera distance\n    minTilt: number = 0.0\n    maxTilt: number = 0.0\n    CameraSpeed: number = 0.0\n    DynamiteDamageRadius: number = 0.0\n    DynamiteMaxDamage: number = 0.0\n    rrAvi = ''\n    missionBriefingText: string = ''\n    missionCompletedText: string = ''\n    missionFailedText: string = ''\n    tutorialIcon: string = ''\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.creditsTextFile = cfgValue.getValue('CreditsTextFile').toFileName()\n        this.creditsBackAVI = cfgValue.getValue('CreditsBackAVI').toFileName()\n        this.loadScreen = cfgValue.getValue('LoadScreen').toFileName()\n        this.progressBar = cfgValue.getValue('ProgressBar').toFileName()\n        // XXX Find better edge-case handling: \"ProgressWindow\" starts with \"R:\" instead of numbers\n        const rectVal = cfgValue.getValue('ProgressWindow').toArray(':', 2)[1]\n        this.progressWindow = Rect.fromArray(rectVal.toArray(',', 4).map((v) => v.toNumber()))\n        this.loadingText = cfgValue.getValue('LoadingText').toLabel()\n        this.nextButton = cfgValue.getValue('NextButton640x480').toFileName()\n        this.nextButtonPos = cfgValue.getValue('NextButtonPos640x480').toPos(',')\n        this.backButton = cfgValue.getValue('BackButton640x480').toFileName()\n        this.backButtonPos = cfgValue.getValue('BackButtonPos640x480').toPos(',')\n        this.backArrow = cfgValue.getValue('BackArrow').toFileName()\n        this.buildingUpgradeCostOre = cfgValue.getValue('BuildingUpgradeCostOre').toNumber()\n        this.buildingUpgradeCostStuds = cfgValue.getValue('BuildingUpgradeCostStuds').toNumber()\n        this.textPauseTimeMs = Math.round(cfgValue.getValue('TextPauseTime').toNumber() * 1000)\n        this.startLevel = cfgValue.getValue('StartLevel').toLevelReference()\n        this.tutorialStartLevel = cfgValue.getValue('TutorialStartLevel').toLevelReference()\n        this.ambientRGB = cfgValue.getValue('AmbientRGB').toRGB()\n        this.powerCrystalRGB = cfgValue.getValue('PowerCrystalRGB').toRGB()\n        this.unpoweredCrystalRGB = cfgValue.getValue('UnpoweredCrystalRGB').toRGB()\n        this.minDist = cfgValue.getValue('MinDist').toNumber()\n        this.maxDist = cfgValue.getValue('MaxDist').toNumber()\n        this.minTilt = cfgValue.getValue('MinTilt').toNumber()\n        this.maxTilt = cfgValue.getValue('MaxTilt').toNumber()\n        this.CameraSpeed = cfgValue.getValue('CameraSpeed').toNumber()\n        this.DynamiteDamageRadius = cfgValue.getValue('DynamiteDamageRadius').toNumber()\n        this.DynamiteMaxDamage = cfgValue.getValue('DynamiteMaxDamage').toNumber()\n        this.rrAvi = cfgValue.getValue('RrAvi').toFileName()\n        this.missionBriefingText = cfgValue.getValue('MissionBriefingText').toLabel()\n        this.missionCompletedText = cfgValue.getValue('MissionCompletedText').toLabel()\n        this.missionFailedText = cfgValue.getValue('MissionFailedText').toLabel()\n        this.tutorialIcon = cfgValue.getValue('TutorialIcon').toFileName()\n        return this\n    }\n}\n","import { ConfigSetFromEntryValue } from './Configurable'\nimport { CfgEntryValue } from './CfgEntry'\n\nexport class MenuCycleItemCfg implements ConfigSetFromEntryValue {\n    actionName: string = ''\n    x: number = 0\n    y: number = 0\n    width: number = 0\n    height: number = 0\n    description: string = ''\n    two: number = 2 // XXX usage unclear\n    labelOn: string = ''\n    labelOff: string = ''\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const array = cfgValue.toArray(':', 9)\n        this.actionName = array[0].toString()\n        this.x = array[1].toNumber()\n        this.y = array[2].toNumber()\n        this.width = array[3].toNumber()\n        this.height = array[4].toNumber()\n        this.description = array[5].toLabel()\n        this.two = array[6].toNumber()\n        this.labelOn = array[7].toLabel()\n        this.labelOff = array[8].toLabel()\n        return this\n    }\n}\n","import { ConfigSetFromEntryValue } from './Configurable'\nimport { CfgEntryValue } from './CfgEntry'\n\nexport class MenuLabelItemCfg implements ConfigSetFromEntryValue {\n    actionName: string = ''\n    x: number = 0\n    y: number = 0\n    label: string = ''\n    imgNormal: string = ''\n    imgHover: string = ''\n    imgPressed: string = ''\n    tooltipKey: string = ''\n    target: string = ''\n    flag: string = ''\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const array = cfgValue.toArray(':', undefined)\n        if (array.length === 5 || array.length === 6) {\n            this.actionName = array[0].toString()\n            this.x = array[1].toNumber()\n            this.y = array[2].toNumber()\n            this.label = array[3].toLabel()\n            if (this.actionName.toLowerCase() === 'next') {\n                this.target = array[4].toString()\n            }\n            this.flag = (array[5] || '').toString()\n            if (this.flag && this.flag !== 'NotInTuto') console.warn(`Unexpected menu label flag (${this.flag}) given`)\n        } else if (array.length === 8) {\n            this.actionName = array[0].toString()\n            this.x = array[1].toNumber()\n            this.y = array[2].toNumber()\n            this.imgNormal = array[3].toFileName()\n            this.imgHover = array[4].toFileName()\n            this.imgPressed = array[5].toFileName()\n            this.tooltipKey = array[6].toFileName()\n            if (this.actionName.toLowerCase() === 'next') {\n                this.target = array[7].toString()\n            }\n        } else {\n            throw new Error(`Unexpected cfg value length: ${array.length}`)\n        }\n        return this\n    }\n}\n","import { ConfigSetFromEntryValue } from './Configurable'\nimport { CfgEntryValue } from './CfgEntry'\n\nexport class MenuSliderItemCfg implements ConfigSetFromEntryValue {\n    actionName: string = ''\n    x: number = 0\n    y: number = 0\n    width: number = 0\n    height: number = 0\n    description: string = ''\n    min: number = 0\n    max: number = 0\n    imgOff: string = ''\n    imgOn: string = ''\n    imgLeft: string = ''\n    imgRight: string = ''\n    btnLeftNormal: string = ''\n    btnRightNormal: string = ''\n    btnLeftHover: string = ''\n    btnRightHover: string = ''\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const array = cfgValue.toArray(':', 16)\n        this.actionName = array[0].toString()\n        this.x = array[1].toNumber()\n        this.y = array[2].toNumber()\n        this.width = array[3].toNumber()\n        this.height = array[4].toNumber()\n        this.description = array[5].toLabel()\n        this.min = array[6].toNumber()\n        this.max = array[7].toNumber()\n        this.imgOff = array[8].toFileName()\n        this.imgOn = array[9].toFileName()\n        this.imgLeft = array[10].toFileName()\n        this.imgRight = array[11].toFileName()\n        this.btnRightNormal = array[12].toFileName()\n        this.btnLeftNormal = array[13].toFileName()\n        this.btnRightHover = array[14].toFileName()\n        this.btnLeftHover = array[15].toFileName()\n        return this\n    }\n}\n","import { MenuCycleItemCfg } from './MenuCycleItemCfg'\nimport { MenuLabelItemCfg } from './MenuLabelItemCfg'\nimport { MenuSliderItemCfg } from './MenuSliderItemCfg'\nimport { ConfigSetFromEntryValue, ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry, CfgEntryValue } from './CfgEntry'\n\nexport class MenuEntryCfg implements ConfigSetFromRecord {\n    fullName: string = ''\n    title: string = ''\n    position: { x: number, y: number } = {x: 0, y: 0}\n    menuFont: string = ''\n    loFont: string = ''\n    hiFont: string = ''\n    itemCount: number = 0\n    menuImage: string = ''\n    autoCenter: boolean = false\n    displayTitle: boolean = false\n    overlays: MenuEntryOverlayCfg[] = []\n    playRandom: boolean = false\n    itemsLabel: MenuLabelItemCfg[] = []\n    itemsSlider: MenuSliderItemCfg[] = []\n    itemsCycle: MenuCycleItemCfg[] = []\n    anchored: { x: number, y: number } = {x: 0, y: 0}\n    canScroll: boolean = false\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.fullName = cfgValue.getValue('FullName').toLabel()\n        this.title = cfgValue.getValue('Title').toLabel()\n        this.position = cfgValue.getValue('Position').toPos(':')\n        this.menuFont = cfgValue.getValue('MenuFont').toFileName()\n        this.loFont = cfgValue.getValue('LoFont').toFileName()\n        this.hiFont = cfgValue.getValue('HiFont').toFileName()\n        this.itemCount = cfgValue.getValue('ItemCount').toNumber()\n        const menuImgVal = cfgValue.getValue('MenuImage')\n        this.menuImage = menuImgVal.toArray(':', undefined)[0].toFileName()\n        this.autoCenter = cfgValue.getValue('AutoCenter').toBoolean()\n        this.displayTitle = cfgValue.getValue('DisplayTitle').toBoolean()\n        cfgValue.forEachCfgEntryValue((value, key) => {\n            if (key.match(/Overlay\\d+/i)) {\n                this.overlays.push(new MenuEntryOverlayCfg().setFromValue(value))\n            }\n        })\n        this.playRandom = cfgValue.getValue('PlayRandom').toBoolean()\n        cfgValue.forEachCfgEntryValue((value, key) => {\n            if (!key.match(/Item\\d+/i)) return\n            if (value.toArray(':', undefined)[0].toString().match(/Next|Trigger/i)) {\n                this.itemsLabel.push(new MenuLabelItemCfg().setFromValue(value))\n            } else if (value.toArray(':', undefined)[0].toString().match(/Slider/i)) {\n                this.itemsSlider.push(new MenuSliderItemCfg().setFromValue(value))\n            } else if (value.toArray(':', undefined)[0].toString().match(/Cycle/i)) {\n                this.itemsCycle.push(new MenuCycleItemCfg().setFromValue(value))\n            }\n        })\n        this.anchored = cfgValue.getValue('Anchored').toPos(':')\n        this.canScroll = cfgValue.getValue('CanScroll').toBoolean()\n        return this\n    }\n}\n\nexport class MenuEntryOverlayCfg implements ConfigSetFromEntryValue {\n    flhFilepath: string = ''\n    sfxName: string = ''\n    x: number = 0\n    y: number = 0\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const value = cfgValue.toArray(':', 4)\n        this.flhFilepath = `Data/${(value[0].toFileName())}`\n        this.sfxName = value[1].toString()\n        if (this.sfxName.equalsIgnoreCase('SFX_NULL')) this.sfxName = ''\n        this.x = value[2].toNumber()\n        this.y = value[3].toNumber()\n        return this\n    }\n}\n","import { ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry } from './CfgEntry'\n\nexport class OverwriteCfg implements ConfigSetFromRecord {\n    title: string = ''\n    text: string = ''\n    ok: string = ''\n    cancel: string = ''\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.title = cfgValue.getValue('title').toLabel()\n        this.text = cfgValue.getValue('text').toLabel()\n        this.ok = cfgValue.getValue('ok').toLabel()\n        this.cancel = cfgValue.getValue('cancel').toLabel()\n        return this\n    }\n}\n","import { Rect } from '../core/Rect'\nimport { MenuEntryCfg } from './MenuEntryCfg'\nimport { OverwriteCfg } from './OverwriteCfg'\nimport { ConfigSetFromEntryValue, ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry, CfgEntryValue } from './CfgEntry'\n\nexport class GameMenuCfg implements ConfigSetFromRecord {\n    levelText: LevelTextCfg = new LevelTextCfg()\n    pausedMenu: MenuCfg = new MenuCfg()\n    saveMenu: MenuCfg = new MenuCfg()\n    mainMenuFull: MenuCfg = new MenuCfg()\n    optionsMenu: MenuCfg = new MenuCfg()\n    saveGame: string = ''\n    loadGame: string = ''\n    overwrite: OverwriteCfg = new OverwriteCfg()\n    saveImage: SaveImageCfg = new SaveImageCfg()\n    saveText: SaveTextCfg = new SaveTextCfg()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.levelText.setFromRecord(cfgValue.getRecord('LevelText'))\n        this.pausedMenu.setFromRecord(cfgValue.getRecord('PausedMenu'))\n        this.saveMenu.setFromRecord(cfgValue.getRecord('SaveMenu'))\n        this.mainMenuFull.setFromRecord(cfgValue.getRecord('MainMenuFull'))\n        this.optionsMenu.setFromRecord(cfgValue.getRecord('OptionsMenu'))\n        this.saveGame = cfgValue.getValue('Save_Game').toLabel()\n        this.loadGame = cfgValue.getValue('Load_Game').toLabel()\n        this.overwrite.setFromRecord(cfgValue.getRecord('Overwrite'))\n        this.saveImage.setFromRecord(cfgValue.getRecord('SaveImage'))\n        this.saveText.setFromRecord(cfgValue.getRecord('SaveText'))\n        return this\n    }\n}\n\nexport class MenuCfg implements ConfigSetFromRecord {\n    // noinspection JSUnusedGlobalSymbols\n    menuCount: number = 0\n    menus: MenuEntryCfg[] = []\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.menuCount = cfgValue.getValue('MenuCount').toNumber()\n        cfgValue.forEachEntry((key, value) => {\n            if (key.match(/Menu\\d+/i)) {\n                this.menus.push(new MenuEntryCfg().setFromRecord(value))\n            }\n        })\n        return this\n    }\n}\n\nclass LevelTextCfg implements ConfigSetFromRecord {\n    window: Rect = new Rect()\n    panel: MenuPanelCfg = new MenuPanelCfg()\n    level: string = ''\n    tutorial: string = ''\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.window = Rect.fromArray(cfgValue.getValue('Window').toArray('|', 4).map((v) => v.toNumber()))\n        this.panel.setFromValue(cfgValue.getValue('Panel'))\n        this.level = cfgValue.getValue('Level').toLabel()\n        this.tutorial = cfgValue.getValue('Tutorial').toLabel()\n        return this\n    }\n}\n\nexport class MenuPanelCfg implements ConfigSetFromEntryValue {\n    imgBackground: string = ''\n    rect: Rect = new Rect()\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const value = cfgValue.toArray('|', 5)\n        this.imgBackground = value[0].toFileName()\n        this.rect.x = value[1].toNumber()\n        this.rect.y = value[2].toNumber()\n        this.rect.w = value[3].toNumber()\n        this.rect.h = value[4].toNumber()\n        return this\n    }\n}\n\nexport class SaveImageCfg implements ConfigSetFromRecord {\n    bigWidth: number = 0\n    bigHeight: number = 0\n    width: number = 0\n    height: number = 0\n    pos1: { x: number, y: number } = {x: 0, y: 0}\n    pos2: { x: number, y: number } = {x: 0, y: 0}\n    pos3: { x: number, y: number } = {x: 0, y: 0}\n    pos4: { x: number, y: number } = {x: 0, y: 0}\n    pos5: { x: number, y: number } = {x: 0, y: 0}\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.bigWidth = cfgValue.getValue('BigWidth').toNumber()\n        this.bigHeight = cfgValue.getValue('BigHeight').toNumber()\n        this.width = cfgValue.getValue('Width').toNumber()\n        this.height = cfgValue.getValue('Height').toNumber()\n        this.pos1 = cfgValue.getValue('Pos1').toPos('|')\n        this.pos2 = cfgValue.getValue('Pos2').toPos('|')\n        this.pos3 = cfgValue.getValue('Pos3').toPos('|')\n        this.pos4 = cfgValue.getValue('Pos4').toPos('|')\n        this.pos5 = cfgValue.getValue('Pos5').toPos('|')\n        return this\n    }\n}\n\nexport class SaveTextCfg implements ConfigSetFromRecord {\n    window: Rect = new Rect()\n    load: string = ''\n    save: string = ''\n    slot: string = ''\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.window = Rect.fromArray(cfgValue.getValue('Window').toArray('|', 4).map((v) => v.toNumber()))\n        this.load = cfgValue.getValue('Load').toLabel()\n        this.save = cfgValue.getValue('Save').toLabel()\n        this.slot = cfgValue.getValue('Slot').toLabel()\n        return this\n    }\n}\n","import { ConfigSetFromEntryValue, ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry, CfgEntryValue } from './CfgEntry'\n\nexport class PanelCfg implements ConfigSetFromEntryValue {\n    filename: string = ''\n    xOut: number = 0\n    yOut: number = 0\n    xIn: number = 0\n    yIn: number = 0\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const array = cfgValue.toArray(',', 5)\n        this.filename = array[0].toFileName()\n        this.xOut = array[1].toNumber()\n        this.yOut = array[2].toNumber()\n        this.xIn = array[3].toNumber()\n        this.yIn = array[4].toNumber()\n        if (!this.filename) throw new Error(`No filename given in ${array}`)\n        return this\n    }\n}\n\nexport class PanelsCfg implements ConfigSetFromRecord {\n    panelRadar: PanelCfg = new PanelCfg()\n    panelRadarFill: PanelCfg = new PanelCfg()\n    panelRadarOverlay: PanelCfg = new PanelCfg()\n    panelMessages: PanelCfg = new PanelCfg()\n    panelMessagesSide: PanelCfg = new PanelCfg()\n    panelCrystalSideBar: PanelCfg = new PanelCfg()\n    panelTopPanel: PanelCfg = new PanelCfg()\n    panelInformation: PanelCfg = new PanelCfg()\n    panelPriorityList: PanelCfg = new PanelCfg()\n    panelCameraControl: PanelCfg = new PanelCfg()\n    panelInfoDock: PanelCfg = new PanelCfg()\n    panelEncyclopedia: PanelCfg = new PanelCfg()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.panelRadar.setFromValue(cfgValue.getValue('Panel_Radar'))\n        this.panelRadarFill.setFromValue(cfgValue.getValue('Panel_RadarFill'))\n        this.panelRadarOverlay.setFromValue(cfgValue.getValue('Panel_RadarOverlay'))\n        this.panelMessages.setFromValue(cfgValue.getValue('Panel_Messages'))\n        this.panelMessagesSide.setFromValue(cfgValue.getValue('Panel_MessagesSide'))\n        this.panelCrystalSideBar.setFromValue(cfgValue.getValue('Panel_CrystalSideBar'))\n        this.panelTopPanel.setFromValue(cfgValue.getValue('Panel_TopPanel'))\n        this.panelInformation.setFromValue(cfgValue.getValue('Panel_Information'))\n        this.panelPriorityList.setFromValue(cfgValue.getValue('Panel_PriorityList'))\n        this.panelCameraControl.setFromValue(cfgValue.getValue('Panel_CameraControl'))\n        this.panelInfoDock.setFromValue(cfgValue.getValue('Panel_InfoDock'))\n        this.panelEncyclopedia.setFromValue(cfgValue.getValue('Panel_Encyclopedia'))\n        return this\n    }\n}\n","import { ConfigSetFromEntryValue, ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry, CfgEntryValue } from './CfgEntry'\n\nexport class PanelRotationControlCfg implements ConfigSetFromRecord {\n    leftImage: PanelRotationControlImageCfg = new PanelRotationControlImageCfg()\n    upImage: PanelRotationControlImageCfg = new PanelRotationControlImageCfg()\n    rightImage: PanelRotationControlImageCfg = new PanelRotationControlImageCfg()\n    downImage: PanelRotationControlImageCfg = new PanelRotationControlImageCfg()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.leftImage.setFromValue(cfgValue.getValue('LeftImage'))\n        this.upImage.setFromValue(cfgValue.getValue('UpImage'))\n        this.rightImage.setFromValue(cfgValue.getValue('RightImage'))\n        this.downImage.setFromValue(cfgValue.getValue('DownImage'))\n        return this\n    }\n}\n\nexport class PanelRotationControlImageCfg implements ConfigSetFromEntryValue {\n    imgHighlight: string = ''\n    x: number = 0\n    y: number = 0\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const value = cfgValue.toArray(',', 3)\n        this.imgHighlight = value[0].toFileName()\n        this.x = value[1].toNumber()\n        this.y = value[2].toNumber()\n        return this\n    }\n}\n","import { BaseButtonCfg } from './ButtonCfg'\nimport { ConfigSetFromEntryValue, ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry, CfgEntryValue } from './CfgEntry'\n\nexport class PriorityButtonListCfg implements ConfigSetFromRecord {\n    aiPriorityGetIn: PriorityButtonCfg = new PriorityButtonCfg()\n    aiPriorityCrystal: PriorityButtonCfg = new PriorityButtonCfg()\n    aiPriorityOre: PriorityButtonCfg = new PriorityButtonCfg()\n    aiPriorityRepair: PriorityButtonCfg = new PriorityButtonCfg()\n    aiPriorityClearing: PriorityButtonCfg = new PriorityButtonCfg()\n    aiPriorityDestruction: PriorityButtonCfg = new PriorityButtonCfg()\n    aiPriorityConstruction: PriorityButtonCfg = new PriorityButtonCfg()\n    aiPriorityReinforce: PriorityButtonCfg = new PriorityButtonCfg()\n    aiPriorityRecharge: PriorityButtonCfg = new PriorityButtonCfg()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.aiPriorityGetIn.setFromValue(cfgValue.getValue('AI_Priority_GetIn'))\n        this.aiPriorityCrystal.setFromValue(cfgValue.getValue('AI_Priority_Crystal'))\n        this.aiPriorityOre.setFromValue(cfgValue.getValue('AI_Priority_Ore'))\n        this.aiPriorityRepair.setFromValue(cfgValue.getValue('AI_Priority_Repair'))\n        this.aiPriorityClearing.setFromValue(cfgValue.getValue('AI_Priority_Clearing'))\n        this.aiPriorityDestruction.setFromValue(cfgValue.getValue('AI_Priority_Destruction'))\n        this.aiPriorityConstruction.setFromValue(cfgValue.getValue('AI_Priority_Construction'))\n        this.aiPriorityReinforce.setFromValue(cfgValue.getValue('AI_Priority_Reinforce'))\n        this.aiPriorityRecharge.setFromValue(cfgValue.getValue('AI_Priority_Recharge'))\n        return this\n    }\n}\n\nexport class PriorityButtonCfg extends BaseButtonCfg implements ConfigSetFromEntryValue {\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const value = cfgValue.toArray(':', 4)\n        const [tooltipText, tooltipSfx] = value[0].toArray('|', undefined)\n        this.normalFile = value[1].toFileName()\n        this.highlightFile = value[1].toFileName()\n        this.pressedFile = value[2].toFileName()\n        this.disabledFile = value[3].toFileName()\n        this.tooltipText = tooltipText?.toLabel() || ''\n        this.tooltipSfx = tooltipSfx?.toString() || ''\n        return this\n    }\n}\n\nexport class PrioritiesImagePositionsCfg implements ConfigSetFromRecord {\n    positionByIndex: PriorityPositionsEntry[] = []\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        cfgValue.forEachCfgEntryValue((value) => this.positionByIndex.push(new PriorityPositionsEntry().setFromValue(value)))\n        return this\n    }\n}\n\nexport class PriorityPositionsEntry implements ConfigSetFromEntryValue {\n    x: number = 0\n    y: number = 0\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const value = cfgValue.toPos(',')\n        this.x = value.x\n        this.y = value.y\n        return this\n    }\n}\n","import { Rect } from '../core/Rect'\nimport { DEV_MODE } from '../params'\nimport { ConfigSetFromEntryValue, ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry, CfgEntryValue } from './CfgEntry'\n\nexport class RewardCfg implements ConfigSetFromRecord {\n    display: boolean = true\n    wallpaper: string = ''\n    images: RewardImageCfg[] = []\n    text: RewardTextCfg[] = []\n    boxImages: RewardImageCfg[] = []\n    fonts: RewardFontsCfg = new RewardFontsCfg()\n    flics: Record<string, { flhFilepath: string, rect: Rect }> = {}\n    scrollSpeed: number = 0\n    centerText: boolean = false\n    vertSpacing: number = 0\n    backFont: string = ''\n    font: string = ''\n    titleFont: string = ''\n    timer: number = 0\n    saveButton: RewardButtonCfg = new RewardButtonCfg()\n    advanceButton: RewardButtonCfg = new RewardButtonCfg()\n    completeText: string = ''\n    failedText: string = ''\n    quitText: string = ''\n    textPos: { x: number, y: number } = {x: 0, y: 0}\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.display = cfgValue.getValue('Display').toBoolean()\n        this.wallpaper = cfgValue.getValue('Wallpaper').toFileName()\n        cfgValue.getRecord('Images').forEachCfgEntryValue((value) => ((imgConf) => {\n            this.images.push(new RewardImageCfg().setFromValue(imgConf))\n        })(value))\n        cfgValue.getRecord('Text').forEachCfgEntryValue((value) => ((imgConf) => {\n            this.text.push(new RewardTextCfg().setFromValue(imgConf))\n        })(value))\n        cfgValue.getRecord('BoxImages').forEachCfgEntryValue((value) => ((imgConf) => {\n            this.boxImages.push(new RewardImageCfg().setFromValue(imgConf))\n        })(value))\n        this.fonts.setFromRecord(cfgValue.getRecord('Fonts'))\n        cfgValue.getRecord('Flics').forEachCfgEntryValue((value, cfgKey) => {\n            const array = value.toArray('|', 5)\n            const nums = array.slice(1).map((v) => v.toNumber())\n            this.flics[cfgKey.toLowerCase()] = {flhFilepath: array[0].toFileName(), rect: Rect.fromArray(nums)}\n        })\n        this.scrollSpeed = cfgValue.getValue('ScrollSpeed').toNumber()\n        this.centerText = cfgValue.getValue('CenterText').toBoolean() // typo \"centre\" in original config with value false\n        this.vertSpacing = cfgValue.getValue('VertSpacing').toNumber()\n        this.backFont = cfgValue.getValue('BackFont').toFileName()\n        this.font = cfgValue.getValue('Font').toFileName()\n        this.titleFont = cfgValue.getValue('TitleFont').toFileName()\n        this.timer = cfgValue.getValue('Timer').toNumber()\n        this.saveButton.setFromValue(cfgValue.getValue('SaveButton'))\n        this.advanceButton.setFromValue(cfgValue.getValue('AdvanceButton'))\n        this.completeText = cfgValue.getValue('CompleteText').toLabel()\n        this.failedText = cfgValue.getValue('FailedText').toLabel()\n        this.quitText = cfgValue.getValue('QuitText').toLabel()\n        this.textPos = cfgValue.getValue('TextPos').toPos('|')\n        return this\n    }\n\n    get timerMs(): number {\n        return Math.round(this.timer * (DEV_MODE ? 100 : 1000))\n    }\n}\n\nexport class RewardImageCfg implements ConfigSetFromEntryValue {\n    filePath: string = ''\n    x: number = 0\n    y: number = 0\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const array = cfgValue.toArray('|', 3)\n        this.filePath = array[0].toFileName()\n        this.x = array[1].toNumber()\n        this.y = array[2].toNumber()\n        return this\n    }\n}\n\nexport class RewardTextCfg implements ConfigSetFromEntryValue {\n    text: string = ''\n    x: number = 0\n    y: number = 0\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const array = cfgValue.toArray('|{', 3) // Czech translation uses | and { as separator in same value // XXX Endianness issue?\n        this.text = array[0].toLabel()\n        this.x = array[1].toNumber()\n        this.y = array[2].toNumber()\n        return this\n    }\n}\n\nexport class RewardFontsCfg implements ConfigSetFromRecord {\n    crystals: string = ''\n    ore: string = ''\n    diggable: string = ''\n    constructions: string = ''\n    caverns: string = ''\n    figures: string = ''\n    rockMonsters: string = ''\n    oxygen: string = ''\n    timer: string = ''\n    score: string = ''\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.crystals = cfgValue.getValue('Crystals').toFileName()\n        this.ore = cfgValue.getValue('Ore').toFileName()\n        this.diggable = cfgValue.getValue('Diggable').toFileName()\n        this.constructions = cfgValue.getValue('Constructions').toFileName()\n        this.caverns = cfgValue.getValue('Caverns').toFileName()\n        this.figures = cfgValue.getValue('Figures').toFileName()\n        this.rockMonsters = cfgValue.getValue('RockMonsters').toFileName()\n        this.oxygen = cfgValue.getValue('Oxygen').toFileName()\n        this.timer = cfgValue.getValue('Timer').toFileName()\n        this.score = cfgValue.getValue('Score').toFileName()\n        return this\n    }\n}\n\nexport class RewardButtonCfg implements ConfigSetFromEntryValue {\n    imgNormalFilepath: string = ''\n    imgHoverFilepath: string = ''\n    imgPressedFilepath: string = ''\n    imgDisabledFilepath: string = ''\n    x: number = 0\n    y: number = 0\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const value = cfgValue.toArray('|', 6)\n        this.imgNormalFilepath = value[0].toFileName()\n        this.imgHoverFilepath = value[1].toFileName()\n        this.imgPressedFilepath = value[2].toFileName()\n        this.imgDisabledFilepath = value[3].toFileName()\n        this.x = value[4].toNumber()\n        this.y = value[5].toNumber()\n        return this\n    }\n}\n","import { ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry } from './CfgEntry'\n\nexport class TexturesCfg implements ConfigSetFromRecord {\n    textureSetByName: Record<string, TextureEntryCfg> = {}\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        cfgValue.forEachEntry((levelName, entry) => {\n            this.textureSetByName[levelName.toLowerCase()] = new TextureEntryCfg().setFromRecord(entry)\n        })\n        return this\n    }\n}\n\nexport class TextureEntryCfg implements ConfigSetFromRecord {\n    roofTexture: string = ''\n    surfTextWidth: number = 8\n    surfTextHeight: number = 8\n    meshBasename: string = ''\n    textureBasename: string = ''\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.roofTexture = cfgValue.getValue('roofTexture').toFileName()\n        this.surfTextWidth = cfgValue.getValue('surfTextWidth').toNumber()\n        this.surfTextHeight = cfgValue.getValue('surfTextHeight').toNumber()\n        this.meshBasename = cfgValue.getValue('meshBasename').toFileName()\n        this.textureBasename = cfgValue.getValue('textureBasename').toFileName()\n        return this\n    }\n}\n","import { ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry } from './CfgEntry'\n\nexport class MiscObjectsCfg implements ConfigSetFromRecord {\n    boulder: string = ''\n    pusher: string = ''\n    freezer: string = ''\n    boulderExplode: string = ''\n    boulderExplodeIce: string = ''\n    laserShot: string = ''\n    smashPath: string = ''\n    crystal: string = ''\n    dynamite: string = ''\n    ore: string = ''\n    processedOre: string = ''\n    barrier: string = ''\n    explosion: string = ''\n    electricFence: string = ''\n    electricFenceStud: string = ''\n    shortElectricFenceBeam: string = ''\n    longElectricFenceBeam: string = ''\n    spiderWeb: string = ''\n    pillar: string = ''\n    rechargeSparkle: string = ''\n    miniTeleportUp: string = ''\n    oohScary: string = ''\n    lazerHit: string = ''\n    pusherHit: string = ''\n    freezerHit: string = ''\n    iceCube: string = ''\n    pathDust: string = ''\n    lavaErosionSmoke1: string = ''\n    lavaErosionSmoke2: string = ''\n    lavaErosionSmoke3: string = ''\n    lavaErosionSmoke4: string = ''\n    birdScarer: string = ''\n    upgradeEffect: string = ''\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.boulder = cfgValue.getValue('Boulder').toFileName()\n        this.pusher = cfgValue.getValue('Pusher').toFileName()\n        this.freezer = cfgValue.getValue('Freezer').toFileName()\n        this.boulderExplode = cfgValue.getValue('BoulderExplode').toFileName()\n        this.boulderExplodeIce = cfgValue.getValue('BoulderExplodeIce').toFileName()\n        this.laserShot = cfgValue.getValue('LaserShot').toFileName()\n        this.smashPath = cfgValue.getValue('SmashPath').toFileName()\n        this.crystal = cfgValue.getValue('Crystal').toFileName()\n        this.dynamite = cfgValue.getValue('Dynamite').toFileName()\n        this.ore = cfgValue.getValue('Ore').toFileName()\n        this.processedOre = cfgValue.getValue('ProcessedOre').toFileName()\n        this.barrier = cfgValue.getValue('Barrier').toFileName()\n        this.explosion = cfgValue.getValue('Explosion').toFileName()\n        this.electricFence = cfgValue.getValue('ElectricFence').toFileName()\n        this.electricFenceStud = cfgValue.getValue('ElectricFenceStud').toFileName()\n        this.shortElectricFenceBeam = cfgValue.getValue('ShortElectricFenceBeam').toFileName()\n        this.longElectricFenceBeam = cfgValue.getValue('LongElectricFenceBeam').toFileName()\n        this.spiderWeb = cfgValue.getValue('SpiderWeb').toFileName()\n        this.pillar = cfgValue.getValue('Pillar').toFileName()\n        this.rechargeSparkle = cfgValue.getValue('RechargeSparkle').toFileName()\n        this.miniTeleportUp = cfgValue.getValue('MiniTeleportUp').toFileName()\n        this.oohScary = cfgValue.getValue('OohScary').toFileName()\n        this.lazerHit = cfgValue.getValue('LazerHit').toFileName()\n        this.pusherHit = cfgValue.getValue('PusherHit').toFileName()\n        this.freezerHit = cfgValue.getValue('FreezerHit').toFileName()\n        this.iceCube = cfgValue.getValue('IceCube').toFileName()\n        this.pathDust = cfgValue.getValue('PathDust').toFileName()\n        this.lavaErosionSmoke1 = cfgValue.getValue('LavaErosionSmoke1').toFileName()\n        this.lavaErosionSmoke2 = cfgValue.getValue('LavaErosionSmoke2').toFileName()\n        this.lavaErosionSmoke3 = cfgValue.getValue('LavaErosionSmoke3').toFileName()\n        this.lavaErosionSmoke4 = cfgValue.getValue('LavaErosionSmoke4').toFileName()\n        this.birdScarer = cfgValue.getValue('BirdScarer').toFileName()\n        this.upgradeEffect = cfgValue.getValue('UpgradeEffect').toFileName()\n        return this\n    }\n}\n","import { ConfigSetFromEntryValue } from './Configurable'\nimport { CfgEntryValue } from './CfgEntry'\n\nexport class RockFallStyle implements ConfigSetFromEntryValue {\n    itemNull: string = '' // XXX Usage unclear\n    threeSides: string = ''\n    outsideCorner: string = ''\n    tunnel: string = ''\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const array = cfgValue.toArray(',', 4)\n        this.itemNull = array[0].toString()\n        this.threeSides = array[1].toFileName()\n        this.outsideCorner = array[2].toFileName()\n        this.tunnel = array[3].toFileName()\n        return this\n    }\n}\n","import { ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry } from './CfgEntry'\n\nexport class ObjInfoCfg implements ConfigSetFromRecord {\n    healthBarPosition: { x: number, y: number } = {x: 0, y: 0}\n    healthBarWidthHeight: { x: number, y: number } = {x: 0, y: 0}\n    healthBarBorderSize: number = 0\n    healthBarBorderRGB: number[] = [0, 0, 0]\n    healthBarBackgroundRGB: number[] = [0, 0, 0]\n    healthBarRGB: number[] = [0, 0, 0]\n    hungerImagesPosition: { x: number, y: number } = {x: 0, y: 0}\n    hungerImages: HungerImageCfg = new HungerImageCfg()\n    upgradeImagePosition: { x: number, y: number } = {x: 0, y: 0}\n    bubbleImagesPosition: { x: number, y: number } = {x: 0, y: 0}\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.healthBarPosition = cfgValue.getValue('HealthBarPosition').toPos(':')\n        this.healthBarWidthHeight = cfgValue.getValue('HealthBarWidthHeight').toPos(':')\n        this.healthBarBorderSize = cfgValue.getValue('HealthBarBorderSize').toNumber()\n        this.healthBarBorderRGB = cfgValue.getValue('HealthBarBorderRGB').toRGB()\n        this.healthBarBackgroundRGB = cfgValue.getValue('HealthBarBackgroundRGB').toRGB()\n        this.healthBarRGB = cfgValue.getValue('HealthBarRGB').toRGB()\n        this.hungerImagesPosition = cfgValue.getValue('HungerImagesPosition').toPos(':')\n        this.hungerImages.setFromRecord(cfgValue.getRecord('HungerImages'))\n        this.upgradeImagePosition = cfgValue.getValue('UpgradeImagePosition').toPos(':')\n        this.bubbleImagesPosition = cfgValue.getValue('BubbleImagesPosition').toPos(':')\n        return this\n    }\n}\n\nexport class HungerImageCfg implements ConfigSetFromRecord {\n    hungerImage0: string = ''\n    hungerImage1: string = ''\n    hungerImage2: string = ''\n    hungerImage3: string = ''\n    hungerImage4: string = ''\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.hungerImage0 = cfgValue.getValue('HungerImage0').toFileName()\n        this.hungerImage1 = cfgValue.getValue('HungerImage1').toFileName()\n        this.hungerImage2 = cfgValue.getValue('HungerImage2').toFileName()\n        this.hungerImage3 = cfgValue.getValue('HungerImage3').toFileName()\n        this.hungerImage4 = cfgValue.getValue('HungerImage4').toFileName()\n        return this\n    }\n}\n","import { EntityType, getEntityTypeByName } from '../game/model/EntityType'\nimport { ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry } from './CfgEntry'\n\nexport class WeaponTypeListCfg implements ConfigSetFromRecord {\n    smallLazer = new WeaponTypeCfg()\n    bigLazer = new WeaponTypeCfg()\n    boulder = new WeaponTypeCfg()\n    pusher = new WeaponTypeCfg()\n    laserShot = new WeaponTypeCfg()\n    freezer = new WeaponTypeCfg()\n    rockFallIn = new WeaponTypeCfg()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.smallLazer.setFromRecord(cfgValue.getRecord('SmallLazer'))\n        this.bigLazer.setFromRecord(cfgValue.getRecord('BigLazer'))\n        this.boulder.setFromRecord(cfgValue.getRecord('Boulder'))\n        this.pusher.setFromRecord(cfgValue.getRecord('Pusher'))\n        this.laserShot.setFromRecord(cfgValue.getRecord('LaserShot'))\n        this.freezer.setFromRecord(cfgValue.getRecord('Freezer'))\n        this.rockFallIn.setFromRecord(cfgValue.getRecord('RockFallIn'))\n        return this\n    }\n}\n\nexport class WeaponTypeCfg implements ConfigSetFromRecord {\n    readonly damageByEntityType: Partial<Record<EntityType, number[]>> = {}\n\n    defaultDamage: number = 0\n    rechargeTime: number = 0\n    weaponRange: number = 0\n    ammo: number = 0 // 0 = infinite\n\n    wallDestroyTimeHard: number = 0 // Hard Rock\n    wallDestroyTimeMedium: number = 0 // Loose Rock\n    wallDestroyTimeLoose: number = 0 // Dirt\n    dischargeRate: number = 0\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        cfgValue.forEachCfgEntryValue((value, key) => {\n            const entityType = getEntityTypeByName(key)\n            if (entityType) {\n                this.damageByEntityType[entityType] = value.toArray(':', undefined).map((v) => v.toNumber())\n            }\n        })\n        this.defaultDamage = cfgValue.getValue('DefaultDamage').toNumber()\n        this.rechargeTime = cfgValue.getValue('RechargeTime').toNumber()\n        this.weaponRange = cfgValue.getValue('WeaponRange').toNumber()\n        this.ammo = cfgValue.getValue('Ammo').toNumber()\n        this.wallDestroyTimeHard = cfgValue.getValue('WallDestroyTime_Hard').toNumber()\n        this.wallDestroyTimeMedium = cfgValue.getValue('WallDestroyTime_Medium').toNumber()\n        this.wallDestroyTimeLoose = cfgValue.getValue('WallDestroyTime_Loose').toNumber()\n        this.dischargeRate = cfgValue.getValue('DischargeRate').toNumber()\n        return this\n    }\n\n    get rechargeTimeMs(): number {\n        return this.rechargeTime / 25 * 1000 // 25 = 1 second\n    }\n}\n","import { ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry } from './CfgEntry'\n\nexport class SamplesCfg implements ConfigSetFromRecord {\n    readonly pathToSfxKeys: Record<string, string[]> = {}\n\n    setFromRecord(cfgVal: CfgEntry): this {\n        cfgVal.forEachCfgEntryValue((value, key) => {\n            value.toArray(',', undefined).map((v) => {\n                let sndPath = v.toFileName()\n                if (sndPath.startsWith('*') || // XXX no clue what this means... don't loop maybe, see teleportup\n                    sndPath.startsWith('@')) {\n                    sndPath = sndPath.slice(1)\n                }\n                this.pathToSfxKeys[`${sndPath.toLowerCase()}.wav`] = this.pathToSfxKeys[`${sndPath.toLowerCase()}.wav`] || []\n                this.pathToSfxKeys[`${sndPath.toLowerCase()}.wav`].push(key.toLowerCase())\n            })\n        })\n        return this\n    }\n}\n","import { ConfigSetFromEntryValue } from './Configurable'\nimport { CfgEntryValue } from './CfgEntry'\n\nexport class InterfaceSurroundImagesEntryCfg implements ConfigSetFromEntryValue {\n    imgName: string = ''\n    val1: number = 0 // XXX clarify usage\n    val2: number = 0 // XXX clarify usage\n    val3: number = 0 // XXX clarify usage\n    val4: number = 0 // XXX clarify usage\n    imgNameWoBackName: string = ''\n    woBack1: number = 0 // XXX clarify usage\n    woBack2: number = 0 // XXX clarify usage\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const array = cfgValue.toArray(':', 8)\n        this.imgName = array[0].toFileName()\n        this.val1 = array[1].toNumber()\n        this.val2 = array[2].toNumber()\n        this.val3 = array[3].toNumber()\n        this.val4 = array[4].toNumber()\n        this.imgNameWoBackName = array[5].toFileName()\n        this.woBack1 = array[6].toNumber()\n        this.woBack2 = array[7].toNumber()\n        return this\n    }\n}\n","import { ConfigSetFromEntryValue } from './Configurable'\nimport { CfgEntryValue } from './CfgEntry'\n\nexport class AdvisorTypeCfg implements ConfigSetFromEntryValue {\n    animFileName: string = ''\n    loopStart: number = 0 // seconds\n    loopEnd: number = 0 // seconds\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const array = cfgValue.toArray(',', 3)\n        this.animFileName = array[0].toFileName()\n        this.loopStart = array[1].toNumber()\n        this.loopEnd = array[2].toNumber()\n        return this\n    }\n}\n\nexport class AdvisorPositionCfg implements ConfigSetFromEntryValue {\n    advisorType: string = ''\n    null: string = '' // NULL // unused and unknown meaning\n    sfx: string = '' // SFX_NULL // unused and unknown meaning\n    x: number = 0\n    y: number = 0\n    panel: string = ''\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const array = cfgValue.toArray(',', 6)\n        this.advisorType = array[0].toFileName()\n        this.null = array[1].toString()\n        this.sfx = array[2].toString()\n        this.x = array[3].toNumber()\n        this.y = array[4].toNumber()\n        this.panel = array[5].toString()\n        return this\n    }\n}\n","import { ConfigSetFromEntryValue, ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry, CfgEntryValue } from './CfgEntry'\n\nexport type Cursor = keyof PointersCfg\n\nexport class PointersCfg implements ConfigSetFromRecord {\n    blank: PointersEntryCfg = new PointersEntryCfg()\n    standard: PointersEntryCfg = new PointersEntryCfg()\n    drill: PointersEntryCfg = new PointersEntryCfg()\n    cantDrill: PointersEntryCfg = new PointersEntryCfg()\n    clear: PointersEntryCfg = new PointersEntryCfg()\n    go: PointersEntryCfg = new PointersEntryCfg()\n    cantGo: PointersEntryCfg = new PointersEntryCfg()\n    teleport: PointersEntryCfg = new PointersEntryCfg()\n    cantTeleport: PointersEntryCfg = new PointersEntryCfg()\n    reinforce: PointersEntryCfg = new PointersEntryCfg()\n    cantReinforce: PointersEntryCfg = new PointersEntryCfg()\n    selected: PointersEntryCfg = new PointersEntryCfg()\n    radarPan: PointersEntryCfg = new PointersEntryCfg()\n    trackObject: PointersEntryCfg = new PointersEntryCfg()\n    zoom: PointersEntryCfg = new PointersEntryCfg()\n    cantZoom: PointersEntryCfg = new PointersEntryCfg()\n    help: PointersEntryCfg = new PointersEntryCfg()\n    cantHelp: PointersEntryCfg = new PointersEntryCfg()\n    putDown: PointersEntryCfg = new PointersEntryCfg()\n    getIn: PointersEntryCfg = new PointersEntryCfg()\n    getOut: PointersEntryCfg = new PointersEntryCfg()\n    okay: PointersEntryCfg = new PointersEntryCfg()\n    notOkay: PointersEntryCfg = new PointersEntryCfg()\n    canBuild: PointersEntryCfg = new PointersEntryCfg()\n    cannotBuild: PointersEntryCfg = new PointersEntryCfg()\n    dynamite: PointersEntryCfg = new PointersEntryCfg()\n    cantDynamite: PointersEntryCfg = new PointersEntryCfg()\n    pickUp: PointersEntryCfg = new PointersEntryCfg()\n    cantPickUp: PointersEntryCfg = new PointersEntryCfg()\n    pickUpOre: PointersEntryCfg = new PointersEntryCfg()\n    manCantDig: PointersEntryCfg = new PointersEntryCfg()\n    vehicleCantDig: PointersEntryCfg = new PointersEntryCfg()\n    manDig: PointersEntryCfg = new PointersEntryCfg()\n    vehicleDig: PointersEntryCfg = new PointersEntryCfg()\n    manCantPickUp: PointersEntryCfg = new PointersEntryCfg()\n    vehicleCantPickUp: PointersEntryCfg = new PointersEntryCfg()\n    manPickUp: PointersEntryCfg = new PointersEntryCfg()\n    vehiclePickUp: PointersEntryCfg = new PointersEntryCfg()\n    manCantGo: PointersEntryCfg = new PointersEntryCfg()\n    vehicleCantGo: PointersEntryCfg = new PointersEntryCfg()\n    manGo: PointersEntryCfg = new PointersEntryCfg()\n    vehicleGo: PointersEntryCfg = new PointersEntryCfg()\n    manClear: PointersEntryCfg = new PointersEntryCfg()\n    vehicleClear: PointersEntryCfg = new PointersEntryCfg()\n    surfaceTypeImmovable: PointersEntryCfg = new PointersEntryCfg()\n    surfaceTypeHard: PointersEntryCfg = new PointersEntryCfg()\n    surfaceTypeMedium: PointersEntryCfg = new PointersEntryCfg()\n    surfaceTypeLoose: PointersEntryCfg = new PointersEntryCfg()\n    surfaceTypeSoil: PointersEntryCfg = new PointersEntryCfg()\n    surfaceTypeOreSeam: PointersEntryCfg = new PointersEntryCfg()\n    surfaceTypeCrystalSeam: PointersEntryCfg = new PointersEntryCfg()\n    surfaceTypeRechargeSeam: PointersEntryCfg = new PointersEntryCfg()\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.blank.setFromValue(cfgValue.getValue('Pointer_Blank'))\n        this.standard.setFromValue(cfgValue.getValue('Pointer_Standard'))\n        this.drill.setFromValue(cfgValue.getValue('Pointer_Drill'))\n        this.cantDrill.setFromValue(cfgValue.getValue('Pointer_CantDrill'))\n        this.clear.setFromValue(cfgValue.getValue('Pointer_Clear'))\n        this.go.setFromValue(cfgValue.getValue('Pointer_Go'))\n        this.cantGo.setFromValue(cfgValue.getValue('Pointer_CantGo'))\n        this.teleport.setFromValue(cfgValue.getValue('Pointer_Teleport'))\n        this.cantTeleport.setFromValue(cfgValue.getValue('Pointer_CantTeleport'))\n        this.reinforce.setFromValue(cfgValue.getValue('Pointer_Reinforce'))\n        this.cantReinforce.setFromValue(cfgValue.getValue('Pointer_CantReinforce'))\n        this.selected.setFromValue(cfgValue.getValue('Pointer_Selected'))\n        this.radarPan.setFromValue(cfgValue.getValue('Pointer_RadarPan'))\n        this.trackObject.setFromValue(cfgValue.getValue('Pointer_TrackObject'))\n        this.zoom.setFromValue(cfgValue.getValue('Pointer_Zoom'))\n        this.cantZoom.setFromValue(cfgValue.getValue('Pointer_CantZoom'))\n        this.help.setFromValue(cfgValue.getValue('Pointer_Help'))\n        this.cantHelp.setFromValue(cfgValue.getValue('Pointer_CantHelp'))\n        this.putDown.setFromValue(cfgValue.getValue('Pointer_PutDown'))\n        this.getIn.setFromValue(cfgValue.getValue('Pointer_GetIn'))\n        this.getOut.setFromValue(cfgValue.getValue('Pointer_GetOut'))\n        this.okay.setFromValue(cfgValue.getValue('Pointer_Okay'))\n        this.notOkay.setFromValue(cfgValue.getValue('Pointer_NotOkay'))\n        this.canBuild.setFromValue(cfgValue.getValue('Pointer_CanBuild'))\n        this.cannotBuild.setFromValue(cfgValue.getValue('Pointer_CannotBuild'))\n        this.dynamite.setFromValue(cfgValue.getValue('Pointer_Dynamite'))\n        this.cantDynamite.setFromValue(cfgValue.getValue('Pointer_CantDynamite'))\n        this.pickUp.setFromValue(cfgValue.getValue('Pointer_PickUp'))\n        this.cantPickUp.setFromValue(cfgValue.getValue('Pointer_CantPickUp'))\n        this.pickUpOre.setFromValue(cfgValue.getValue('Pointer_PickUpOre'))\n        this.manCantDig.setFromValue(cfgValue.getValue('Pointer_LegoManCantDig'))\n        this.vehicleCantDig.setFromValue(cfgValue.getValue('Pointer_VehicleCantDig'))\n        this.manDig.setFromValue(cfgValue.getValue('Pointer_LegoManDig'))\n        this.vehicleDig.setFromValue(cfgValue.getValue('Pointer_VehicleDig'))\n        this.manCantPickUp.setFromValue(cfgValue.getValue('Pointer_LegoManCantPickUp'))\n        this.vehicleCantPickUp.setFromValue(cfgValue.getValue('Pointer_VehicleCantPickUp'))\n        this.manPickUp.setFromValue(cfgValue.getValue('Pointer_LegoManPickUp'))\n        this.vehiclePickUp.setFromValue(cfgValue.getValue('Pointer_VehiclePickUp'))\n        this.manCantGo.setFromValue(cfgValue.getValue('Pointer_LegoManCantGo'))\n        this.vehicleCantGo.setFromValue(cfgValue.getValue('Pointer_VehicleCantGo'))\n        this.manGo.setFromValue(cfgValue.getValue('Pointer_LegoManGo'))\n        this.vehicleGo.setFromValue(cfgValue.getValue('Pointer_VehicleGo'))\n        this.manClear.setFromValue(cfgValue.getValue('Pointer_LegoManClear'))\n        this.vehicleClear.setFromValue(cfgValue.getValue('Pointer_VehicleClear'))\n        this.surfaceTypeImmovable.setFromValue(cfgValue.getValue('Pointer_SurfaceType_Immovable'))\n        this.surfaceTypeHard.setFromValue(cfgValue.getValue('Pointer_SurfaceType_Hard'))\n        this.surfaceTypeMedium.setFromValue(cfgValue.getValue('Pointer_SurfaceType_Medium'))\n        this.surfaceTypeLoose.setFromValue(cfgValue.getValue('Pointer_SurfaceType_Loose'))\n        this.surfaceTypeSoil.setFromValue(cfgValue.getValue('Pointer_SurfaceType_Soil'))\n        this.surfaceTypeOreSeam.setFromValue(cfgValue.getValue('Pointer_SurfaceType_OreSeam'))\n        this.surfaceTypeCrystalSeam.setFromValue(cfgValue.getValue('Pointer_SurfaceType_CrystalSeam'))\n        this.surfaceTypeRechargeSeam.setFromValue(cfgValue.getValue('Pointer_SurfaceType_RechargeSeam'))\n        return this\n    }\n}\n\nexport class PointersEntryCfg implements ConfigSetFromEntryValue {\n    fileName: string = ''\n    flhStart: number = 0\n    flhEnd: number = 0\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const array = cfgValue.toArray(',', undefined)\n        if (array.length === 3) {\n            this.fileName = array[0].toFileName()\n            this.flhStart = array[1].toNumber()\n            this.flhEnd = array[2].toNumber()\n        } else if (array.length === 1) {\n            this.fileName = array[0].toFileName()\n        } else {\n            console.warn(`Unexpected pointers config (${array}) given; expected 3 or 1 values`)\n        }\n        return this\n    }\n}\n","import { BaseButtonCfg } from './ButtonCfg'\nimport { ConfigSetFromEntryValue, ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry, CfgEntryValue } from './CfgEntry'\n\nexport class InterfaceImageEntryCfg extends BaseButtonCfg implements ConfigSetFromEntryValue {\n    tooltipDisabled: string = ''\n    tooltipDisabledSfx: string = ''\n    hotkey: string = ''\n\n    constructor(buttonType: string) {\n        super()\n        this.buttonType = buttonType\n        this.width = 40\n        this.height = 40\n    }\n\n    setFromValue(cfgValue: CfgEntryValue): this {\n        const array = cfgValue.toArray(':', undefined)\n        let hotkeyName: string | undefined\n        if (array.length === 4) {\n            this.normalFile = array[0].toFileName()\n            this.disabledFile = array[1].toFileName()\n            this.pressedFile = array[2].toFileName()\n            hotkeyName = array[3].toString()\n        } else if (array.length === 6 || array.length === 7) { // XXX 7th element is boolean, but usage unknown\n            this.normalFile = array[0].toFileName()\n            this.disabledFile = array[1].toFileName()\n            this.pressedFile = array[2].toFileName()\n            const tooltip = array[3].toArray('|', undefined)\n            const tooltipDisabled = array[4].toArray('|', undefined)\n            hotkeyName = array[5].toString()\n            this.tooltipText = tooltip[0]?.toLabel() || ''\n            this.tooltipSfx = tooltip[1]?.toString() || ''\n            this.tooltipDisabled = tooltipDisabled[0]?.toLabel() || ''\n            this.tooltipDisabledSfx = tooltipDisabled[1]?.toString() || ''\n        } else {\n            console.error(`Unexpected menu item cfg value length: ${array.length}`)\n        }\n        this.hotkey = this.keyNameToKey(hotkeyName)\n        return this\n    }\n\n    private keyNameToKey(hotkeyName?: string): string {\n        if ('KEY_ONE'.equalsIgnoreCase(hotkeyName)) {\n            return '1'\n        } else if ('KEY_TWO'.equalsIgnoreCase(hotkeyName)) {\n            return '2'\n        } else if ('KEY_THREE'.equalsIgnoreCase(hotkeyName)) {\n            return '3'\n        } else if ('KEY_FOUR'.equalsIgnoreCase(hotkeyName)) {\n            return '4'\n        } else if ('KEY_FIVE'.equalsIgnoreCase(hotkeyName)) {\n            return '5'\n        } else if ('KEY_SIX'.equalsIgnoreCase(hotkeyName)) {\n            return '6'\n        } else if ('KEY_SEVEN'.equalsIgnoreCase(hotkeyName)) {\n            return '7'\n        } else if ('KEY_EIGHT'.equalsIgnoreCase(hotkeyName)) {\n            return '8'\n        } else if ('KEY_NINE'.equalsIgnoreCase(hotkeyName)) {\n            return '9'\n        } else if ('KEY_ZERO'.equalsIgnoreCase(hotkeyName)) {\n            return '0'\n        } else if ('KEY_MINUS'.equalsIgnoreCase(hotkeyName)) {\n            return '-'\n        } else if ('KEY_EQUALS'.equalsIgnoreCase(hotkeyName)) {\n            return '='\n        } else {\n            const hotkeyMatch = hotkeyName?.match(/^KEY_([A-Z])$/i)\n            if (hotkeyMatch) {\n                return hotkeyMatch[1].toLowerCase()\n            } else if (hotkeyName) {\n                console.warn(`Given hotkey '${hotkeyName}' does not match with pattern`)\n            }\n        }\n        return ''\n    }\n}\n\ntype ExcludeFunctionPropertyNames<T> = Pick<T, {\n    [K in keyof T]: T[K] extends Function ? never : K\n}[keyof T]>;\n\nexport type InterfaceImage = keyof ExcludeFunctionPropertyNames<InterfaceImagesCfg>\n\nexport class InterfaceImagesCfg implements ConfigSetFromRecord {\n    backToDefault: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_BackToDefault')\n    teleportMan: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_TeleportMan')\n    buildBuilding: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_BuildBuilding')\n    buildSmallVehicle: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_BuildSmallVehicle')\n    buildLargeVehicle: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_BuildLargeVehicle')\n    layPath: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_LayPath')\n    repairLava: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_RepairLava')\n    geologistTest: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GeologistTest')\n    clearRubble: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_ClearRubble')\n    dam: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_Dam')\n    selectMan: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_SelectMan')\n    deleteMan: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_DeleteMan')\n    attack: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_Attack')\n    selectVehicle: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_SelectVehicle')\n    unLoadVehicle: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_UnLoadVehicle')\n    unLoadMiniFigure: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_UnLoadMinifigure')\n    miniFigurePickUp: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_MinifigurePickUp')\n    vehiclePickUp: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_VehiclePickUp')\n    getOut: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GetOut')\n    gotoDock: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GotoDock')\n    getIn: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GetIn')\n    dig: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_Dig')\n    reinforce: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_Reinforce')\n    dynamite: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_Dynamite')\n    upgradeMan: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_UpgradeMan')\n    goFeed: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GoFeed')\n    gotoFirstPerson: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GotoFirstPerson')\n    gotoSecondPerson: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GotoSecondPerson')\n    trackObject: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_TrackObject')\n    powerOn: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_PowerOn')\n    powerOff: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_PowerOff')\n    upgradeBuilding: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_UpgradeBuilding')\n    repair: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_Repair')\n    selectBuilding: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_SelectBuilding')\n    gotoTopView: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GotoTopView')\n    makeTeleporterPrimary: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_MakeTeleporterPrimary')\n    deselectDig: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_DeselectDig')\n    placeFence: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_PlaceFence')\n    encyclopedia: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_Encyclopedia')\n    removePath: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_RemovePath')\n    deleteElectricFence: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_DeleteElectricFence')\n    deleteVehicle: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_DeleteVehicle')\n    deleteBuilding: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_DeleteBuilding')\n    dropBirdScarer: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_DropBirdScarer')\n    getTool: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GetTool')\n    getDrill: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GetDrill')\n    getSpade: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GetSpade')\n    getHammer: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GetHammer')\n    getSpanner: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GetSpanner')\n    getFreezerGun: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GetFreezerGun')\n    getLaser: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GetLaser')\n    getPusherGun: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GetPusherGun')\n    getBirdScarer: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_GetBirdScarer')\n    trainSkill: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_TrainSkill')\n    trainDriver: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_TrainDriver')\n    trainEngineer: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_TrainEngineer')\n    trainGeologist: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_TrainGeologist')\n    trainPilot: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_TrainPilot')\n    trainSailor: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_TrainSailor')\n    trainDynamite: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_TrainDynamite')\n    ejectCrystal: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_EjectCrystal')\n    ejectOre: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_EjectOre')\n    upgradeVehicle: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_UpgradeVehicle')\n    upgradeEngine: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_UpgradeEngine')\n    upgradeDrill: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_UpgardeDrill')\n    upgradeScan: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_UpgardeScan')\n    upgradeCarry: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_UpgardeCarry')\n    cancelConstruction: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('Interface_MenuItem_CancelConstruction')\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.backToDefault.setFromValue(cfgValue.getValue('Interface_MenuItem_BackToDefault'))\n        this.teleportMan.setFromValue(cfgValue.getValue('Interface_MenuItem_TeleportMan'))\n        this.buildBuilding.setFromValue(cfgValue.getValue('Interface_MenuItem_BuildBuilding'))\n        this.buildSmallVehicle.setFromValue(cfgValue.getValue('Interface_MenuItem_BuildSmallVehicle'))\n        this.buildLargeVehicle.setFromValue(cfgValue.getValue('Interface_MenuItem_BuildLargeVehicle'))\n        this.layPath.setFromValue(cfgValue.getValue('Interface_MenuItem_LayPath'))\n        this.repairLava.setFromValue(cfgValue.getValue('Interface_MenuItem_RepairLava'))\n        this.geologistTest.setFromValue(cfgValue.getValue('Interface_MenuItem_GeologistTest'))\n        this.clearRubble.setFromValue(cfgValue.getValue('Interface_MenuItem_ClearRubble'))\n        this.dam.setFromValue(cfgValue.getValue('Interface_MenuItem_Dam'))\n        this.selectMan.setFromValue(cfgValue.getValue('Interface_MenuItem_SelectMan'))\n        this.deleteMan.setFromValue(cfgValue.getValue('Interface_MenuItem_DeleteMan'))\n        this.attack.setFromValue(cfgValue.getValue('Interface_MenuItem_Attack'))\n        this.selectVehicle.setFromValue(cfgValue.getValue('Interface_MenuItem_SelectVehicle'))\n        this.unLoadVehicle.setFromValue(cfgValue.getValue('Interface_MenuItem_UnLoadVehicle'))\n        this.unLoadMiniFigure.setFromValue(cfgValue.getValue('Interface_MenuItem_UnLoadMinifigure'))\n        this.miniFigurePickUp.setFromValue(cfgValue.getValue('Interface_MenuItem_MinifigurePickUp'))\n        this.vehiclePickUp.setFromValue(cfgValue.getValue('Interface_MenuItem_VehiclePickUp'))\n        this.getOut.setFromValue(cfgValue.getValue('Interface_MenuItem_GetOut'))\n        this.gotoDock.setFromValue(cfgValue.getValue('Interface_MenuItem_GotoDock'))\n        this.getIn.setFromValue(cfgValue.getValue('Interface_MenuItem_GetIn'))\n        this.dig.setFromValue(cfgValue.getValue('Interface_MenuItem_Dig'))\n        this.reinforce.setFromValue(cfgValue.getValue('Interface_MenuItem_Reinforce'))\n        this.dynamite.setFromValue(cfgValue.getValue('Interface_MenuItem_Dynamite'))\n        this.upgradeMan.setFromValue(cfgValue.getValue('Interface_MenuItem_UpgradeMan'))\n        this.goFeed.setFromValue(cfgValue.getValue('Interface_MenuItem_GoFeed'))\n        this.gotoFirstPerson.setFromValue(cfgValue.getValue('Interface_MenuItem_GotoFirstPerson'))\n        this.gotoSecondPerson.setFromValue(cfgValue.getValue('Interface_MenuItem_GotoSecondPerson'))\n        this.trackObject.setFromValue(cfgValue.getValue('Interface_MenuItem_TrackObject'))\n        this.powerOn.setFromValue(cfgValue.getValue('Interface_MenuItem_PowerOn'))\n        this.powerOff.setFromValue(cfgValue.getValue('Interface_MenuItem_PowerOff'))\n        this.upgradeBuilding.setFromValue(cfgValue.getValue('Interface_MenuItem_UpgradeBuilding'))\n        this.repair.setFromValue(cfgValue.getValue('Interface_MenuItem_Repair'))\n        this.selectBuilding.setFromValue(cfgValue.getValue('Interface_MenuItem_SelectBuilding'))\n        this.gotoTopView.setFromValue(cfgValue.getValue('Interface_MenuItem_GotoTopView'))\n        this.makeTeleporterPrimary.setFromValue(cfgValue.getValue('Interface_MenuItem_MakeTeleporterPrimary'))\n        this.deselectDig.setFromValue(cfgValue.getValue('Interface_MenuItem_DeselectDig'))\n        this.placeFence.setFromValue(cfgValue.getValue('Interface_MenuItem_PlaceFence'))\n        this.encyclopedia.setFromValue(cfgValue.getValue('Interface_MenuItem_Encyclopedia'))\n        this.removePath.setFromValue(cfgValue.getValue('Interface_MenuItem_RemovePath'))\n        this.deleteElectricFence.setFromValue(cfgValue.getValue('Interface_MenuItem_DeleteElectricFence'))\n        this.deleteVehicle.setFromValue(cfgValue.getValue('Interface_MenuItem_DeleteVehicle'))\n        this.deleteBuilding.setFromValue(cfgValue.getValue('Interface_MenuItem_DeleteBuilding'))\n        this.dropBirdScarer.setFromValue(cfgValue.getValue('Interface_MenuItem_DropBirdScarer'))\n        this.getTool.setFromValue(cfgValue.getValue('Interface_MenuItem_GetTool'))\n        this.getDrill.setFromValue(cfgValue.getValue('Interface_MenuItem_GetDrill'))\n        this.getSpade.setFromValue(cfgValue.getValue('Interface_MenuItem_GetSpade'))\n        this.getHammer.setFromValue(cfgValue.getValue('Interface_MenuItem_GetHammer'))\n        this.getSpanner.setFromValue(cfgValue.getValue('Interface_MenuItem_GetSpanner'))\n        this.getFreezerGun.setFromValue(cfgValue.getValue('Interface_MenuItem_GetFreezerGun'))\n        this.getLaser.setFromValue(cfgValue.getValue('Interface_MenuItem_GetLaser'))\n        this.getPusherGun.setFromValue(cfgValue.getValue('Interface_MenuItem_GetPusherGun'))\n        this.getBirdScarer.setFromValue(cfgValue.getValue('Interface_MenuItem_GetBirdScarer'))\n        this.trainSkill.setFromValue(cfgValue.getValue('Interface_MenuItem_TrainSkill'))\n        this.trainDriver.setFromValue(cfgValue.getValue('Interface_MenuItem_TrainDriver'))\n        this.trainEngineer.setFromValue(cfgValue.getValue('Interface_MenuItem_TrainEngineer'))\n        this.trainGeologist.setFromValue(cfgValue.getValue('Interface_MenuItem_TrainGeologist'))\n        this.trainPilot.setFromValue(cfgValue.getValue('Interface_MenuItem_TrainPilot'))\n        this.trainSailor.setFromValue(cfgValue.getValue('Interface_MenuItem_TrainSailor'))\n        this.trainDynamite.setFromValue(cfgValue.getValue('Interface_MenuItem_TrainDynamite'))\n        this.ejectCrystal.setFromValue(cfgValue.getValue('Interface_MenuItem_EjectCrystal'))\n        this.ejectOre.setFromValue(cfgValue.getValue('Interface_MenuItem_EjectOre'))\n        this.upgradeVehicle.setFromValue(cfgValue.getValue('Interface_MenuItem_UpgradeVehicle'))\n        this.upgradeEngine.setFromValue(cfgValue.getValue('Interface_MenuItem_UpgradeEngine'))\n        this.upgradeDrill.setFromValue(cfgValue.getValue('Interface_MenuItem_UpgardeDrill'))\n        this.upgradeScan.setFromValue(cfgValue.getValue('Interface_MenuItem_UpgardeScan'))\n        this.upgradeCarry.setFromValue(cfgValue.getValue('Interface_MenuItem_UpgardeCarry'))\n        this.cancelConstruction.setFromValue(cfgValue.getValue('Interface_MenuItem_CancelConstruction'))\n        return this\n    }\n}\n\nexport type InterfaceBuildImage = keyof ExcludeFunctionPropertyNames<InterfaceBuildImagesCfg>\n\nexport class InterfaceBuildImagesCfg implements ConfigSetFromRecord {\n    largeMLP: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('largeMLP')\n    hoverboard: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('hoverboard')\n    smallHeli: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('smallHeli')\n    smallMLP: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('smallMLP')\n    smallCat: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('smallCat')\n    smallDigger: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('smallDigger')\n    smallTruck: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('smallTruck')\n    bullDozer: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('bullDozer')\n    walkerDigger: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('walkerDigger')\n    largeDigger: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('largeDigger')\n    largeCat: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('largeCat')\n    largeHeli: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('largeHeli')\n    barracks: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('barracks')\n    powerStation: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('powerStation')\n    oreRefinery: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('oreRefinery')\n    teleportPad: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('teleportPad')\n    docks: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('docks')\n    teleportBig: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('teleportBig')\n    toolstation: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('toolstation')\n    gunstation: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('gunstation')\n    upgrade: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('upgrade')\n    geoDome: InterfaceImageEntryCfg = new InterfaceImageEntryCfg('geoDome')\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.largeMLP.setFromValue(cfgValue.getValue('LargeMLP'))\n        this.hoverboard.setFromValue(cfgValue.getValue('Hoverboard'))\n        this.smallHeli.setFromValue(cfgValue.getValue('SmallHeli'))\n        this.smallMLP.setFromValue(cfgValue.getValue('SmallMLP'))\n        this.smallCat.setFromValue(cfgValue.getValue('SmallCat'))\n        this.smallDigger.setFromValue(cfgValue.getValue('SmallDigger'))\n        this.smallTruck.setFromValue(cfgValue.getValue('SmallTruck'))\n        this.bullDozer.setFromValue(cfgValue.getValue('BullDozer'))\n        this.walkerDigger.setFromValue(cfgValue.getValue('WalkerDigger'))\n        this.largeDigger.setFromValue(cfgValue.getValue('LargeDigger'))\n        this.largeCat.setFromValue(cfgValue.getValue('LargeCat'))\n        this.largeHeli.setFromValue(cfgValue.getValue('LargeHeli'))\n        this.barracks.setFromValue(cfgValue.getValue('Barracks'))\n        this.powerStation.setFromValue(cfgValue.getValue('PowerStation'))\n        this.oreRefinery.setFromValue(cfgValue.getValue('OreRefinery'))\n        this.teleportPad.setFromValue(cfgValue.getValue('TeleportPad'))\n        this.docks.setFromValue(cfgValue.getValue('Docks'))\n        this.teleportBig.setFromValue(cfgValue.getValue('TeleportBig'))\n        this.toolstation.setFromValue(cfgValue.getValue('Toolstation'))\n        this.gunstation.setFromValue(cfgValue.getValue('Gunstation'))\n        this.upgrade.setFromValue(cfgValue.getValue('Upgrade'))\n        this.geoDome.setFromValue(cfgValue.getValue('Geo-Dome'))\n        return this\n    }\n}\n","import { InfoMessagesCfg } from './InfoMessagesCfg'\nimport { TextInfoMessageCfg } from './TextInfoMessageCfg'\nimport { BubblesCfg } from './BubblesCfg'\nimport { IconPanelBackButtonCfg } from './ButtonCfg'\nimport { ButtonsCfg } from './ButtonsCfg'\nimport { DialogCfg } from './DialogCfg'\nimport { GameStatsCfg } from './GameStatsCfg'\nimport { LevelEntryCfg } from './LevelsCfg'\nimport { MainCfg } from './MainCfg'\nimport { GameMenuCfg } from './MenuCfg'\nimport { PanelsCfg } from './PanelCfg'\nimport { PanelRotationControlCfg } from './PanelRotationControlCfg'\nimport { PrioritiesImagePositionsCfg, PriorityButtonListCfg } from './PriorityButtonsCfg'\nimport { RewardCfg } from './RewardCfg'\nimport { TexturesCfg } from './TexturesCfg'\nimport { MiscObjectsCfg } from './MiscObjectsCfg'\nimport { RockFallStyle } from './RockFallStyle'\nimport { EntityType, getEntityTypeByName } from '../game/model/EntityType'\nimport { ObjInfoCfg } from './ObjInfoCfg'\nimport { WeaponTypeListCfg } from './WeaponTypeCfg'\nimport { SamplesCfg } from './SamplesCfg'\nimport { InterfaceSurroundImagesEntryCfg } from './InterfaceSurroundImagesCfg'\nimport { AdvisorPositionCfg, AdvisorTypeCfg } from './AdvisorCfg'\nimport { PointersCfg } from './PointersCfg'\nimport { TILESIZE } from '../params'\nimport { InterfaceBuildImagesCfg, InterfaceImagesCfg } from './InterfaceImageCfg'\nimport { ConfigSetFromRecord } from './Configurable'\nimport { CfgEntry } from './CfgEntry'\n\nexport type EntityDependency = { entityType: EntityType, minLevel: number, itemKey: string }\nexport type EntityDependencyChecked = EntityDependency & { isOk: boolean }\n\nexport class GameConfig implements ConfigSetFromRecord {\n    static readonly instance = new GameConfig()\n\n    main: MainCfg = new MainCfg()\n    dialog: DialogCfg = new DialogCfg()\n    reward: RewardCfg = new RewardCfg()\n    menu: GameMenuCfg = new GameMenuCfg()\n    toolTipInfo: Record<string, string> = {}\n    surfaceTypeDescriptions: Record<string, { objectName: string, sfxKey: string }> = {}\n    objInfo: ObjInfoCfg = new ObjInfoCfg()\n    pointers: PointersCfg = new PointersCfg()\n    interfaceImages: InterfaceImagesCfg = new InterfaceImagesCfg()\n    panelRotationControl: PanelRotationControlCfg = new PanelRotationControlCfg()\n    panels: PanelsCfg = new PanelsCfg()\n    buttons: ButtonsCfg = new ButtonsCfg()\n    interfaceBackButton: IconPanelBackButtonCfg = new IconPanelBackButtonCfg()\n    interfaceBuildImages: InterfaceBuildImagesCfg = new InterfaceBuildImagesCfg()\n    interfaceSurroundImages: InterfaceSurroundImagesEntryCfg[] = []\n    priorityImages: PriorityButtonListCfg = new PriorityButtonListCfg()\n    prioritiesImagePositions: PrioritiesImagePositionsCfg = new PrioritiesImagePositionsCfg()\n    miscObjects: MiscObjectsCfg = new MiscObjectsCfg()\n    bubbles: BubblesCfg = new BubblesCfg()\n    rockFallStyles: Record<string, RockFallStyle> = {}\n    textMessagesWithImages: TextInfoMessageCfg = new TextInfoMessageCfg()\n    samples: SamplesCfg = new SamplesCfg()\n    textures: TexturesCfg = new TexturesCfg()\n    objectNames: Record<string, string> = {}\n    vehicleTypes: Record<string, string[]> = {}\n    rockMonsterTypes: Record<string, string> = {}\n    buildingTypes: Record<string, string> = {}\n    upgradeTypes: Record<string, string> = {}\n    infoMessages: InfoMessagesCfg = new InfoMessagesCfg()\n    stats: GameStatsCfg = new GameStatsCfg()\n    objTtSFXs: Record<string, string> = {}\n    advisor: Record<string, AdvisorTypeCfg> = {}\n    advisorPositions: Record<string, AdvisorPositionCfg> = {}\n    weaponTypes: WeaponTypeListCfg = new WeaponTypeListCfg()\n    dependencies: Record<string, EntityDependency[]> = {}\n    levels: LevelEntryCfg[] = []\n    tooltips: Record<string, string> = {}\n    upgradeNames: string[] = []\n    tooltipIcons: Record<string, string> = {}\n\n    setFromRecord(cfgValue: CfgEntry): this {\n        this.main.setFromRecord(cfgValue.getRecord('Main'))\n        this.dialog.setFromRecord(cfgValue.getRecord('Dialog'))\n        this.reward.setFromRecord(cfgValue.getRecord('Reward'))\n        this.menu.setFromRecord(cfgValue.getRecord('Menu'))\n        cfgValue.getRecord('ToolTipInfo').forEachCfgEntryValue((value, cfgKey) => this.toolTipInfo[cfgKey.toLowerCase()] = value.toLabel())\n        cfgValue.getRecord('SurfaceTypeDescriptions').forEachCfgEntryValue((value, cfgKey) => {\n            const array = value.toArray(',', 2)\n            this.surfaceTypeDescriptions[this.stripSurfaceTypeKey(cfgKey)] = {objectName: array[0].toLabel(), sfxKey: array[1].toString()}\n        })\n        this.objInfo.setFromRecord(cfgValue.getRecord('ObjInfo'))\n        this.pointers.setFromRecord(cfgValue.getRecord('Pointers'))\n        this.interfaceImages.setFromRecord(cfgValue.getRecord('InterfaceImages'))\n        this.panelRotationControl.setFromRecord(cfgValue.getRecord('PanelRotationControl'))\n        this.panels.setFromRecord(cfgValue.getRecord('Panels640x480'))\n        this.buttons.setFromRecord(cfgValue.getRecord('Buttons640x480'))\n        this.interfaceBackButton.setFromValue(cfgValue.getValue('InterfaceBackButton'))\n        this.interfaceBuildImages.setFromRecord(cfgValue.getRecord('InterfaceBuildImages'))\n        cfgValue.getRecord('InterfaceSurroundImages').forEachCfgEntryValue((cfg, numStr) => {\n            const num = Number(numStr)\n            if (isNaN(num)) {\n                console.warn(`Unexpected InterfaceSurroundImages key (${numStr}) given; expected number`)\n                return\n            }\n            this.interfaceSurroundImages[num] = new InterfaceSurroundImagesEntryCfg().setFromValue(cfg)\n        })\n        this.priorityImages.setFromRecord(cfgValue.getRecord('PriorityImages'))\n        this.prioritiesImagePositions.setFromRecord(cfgValue.getRecord('PrioritiesImagePositions'))\n        this.miscObjects.setFromRecord(cfgValue.getRecord('MiscObjects'))\n        cfgValue.getRecord('Bubbles').forEachCfgEntryValue((value, cfgKey) => {\n            const bubblesKey = Object.keys(this.bubbles).find((k) => k.equalsIgnoreCase(cfgKey?.replace('_', '')))\n            if (bubblesKey) {\n                this.bubbles[bubblesKey] = value.toFileName().toLowerCase()\n            } else {\n                console.warn(`Unexpected key (${cfgKey}) given`)\n            }\n        })\n        cfgValue.getRecord('RockFallStyles').forEachCfgEntryValue((value, cfgKey) => this.rockFallStyles[cfgKey.toLowerCase()] = new RockFallStyle().setFromValue(value))\n        this.textMessagesWithImages.setFromRecord(cfgValue.getRecord('TextMessagesWithImages'))\n        this.samples.setFromRecord(cfgValue.getRecord('Samples'))\n        this.textures.setFromRecord(cfgValue.getRecord('Textures'))\n        cfgValue.getRecord('ObjectNames').forEachCfgEntryValue((value, cfgKey) => this.objectNames[cfgKey.toLowerCase()] = value.toLabel())\n        cfgValue.getRecord('VehicleTypes').forEachCfgEntryValue((value, cfgKey) => this.vehicleTypes[cfgKey.toLowerCase()] = value.toArray(',', undefined).map((v) => v.toFileName()))\n        cfgValue.getRecord('RockMonsterTypes').forEachCfgEntryValue((value, cfgKey) => this.rockMonsterTypes[cfgKey.toLowerCase()] = value.toFileName())\n        cfgValue.getRecord('BuildingTypes').forEachCfgEntryValue((value, cfgKey) => this.buildingTypes[cfgKey.toLowerCase()] = value.toFileName())\n        cfgValue.getRecord('UpgradeTypes').forEachCfgEntryValue((value, cfgKey) => this.upgradeTypes[cfgKey.toLowerCase()] = value.toFileName())\n        this.infoMessages.setFromRecord(cfgValue.getRecord('InfoMessages'))\n        this.stats.setFromRecord(cfgValue.getRecord('Stats'))\n        cfgValue.getRecord('ObjTtSFXs').forEachCfgEntryValue((value, cfgKey) => this.objTtSFXs[cfgKey.toLowerCase()] = value.toString())\n        cfgValue.getRecord('Advisor').forEachCfgEntryValue((value, cfgKey) => this.advisor[cfgKey.toLowerCase()] = new AdvisorTypeCfg().setFromValue(value))\n        cfgValue.getRecord('AdvisorPositions640x480').forEachCfgEntryValue((value, cfgKey) => this.advisorPositions[cfgKey.toLowerCase()] = new AdvisorPositionCfg().setFromValue(value))\n        this.weaponTypes.setFromRecord(cfgValue.getRecord('WeaponTypes'))\n        cfgValue.getRecord('Dependencies').forEachCfgEntryValue((value, cfgKey) => {\n            if (cfgKey.toLowerCase().startsWith('AlwaysCheck:'.toLowerCase())) {\n                const entityTypeStr = cfgKey.split(':')[1]\n                const entityType = getEntityTypeByName(entityTypeStr)\n                if (!entityType) {\n                    console.warn(`Skipping unmatched entity type \"${entityTypeStr}\" given`)\n                    return\n                }\n                this.dependencies[entityType.toLowerCase()] = value.toArray(',', undefined).map((dependency): EntityDependency => {\n                    const depEntry = dependency.toArray(':', 2)\n                    const entityTypeStr = depEntry[0].toString()\n                    return {\n                        entityType: getEntityTypeByName(entityTypeStr),\n                        minLevel: depEntry[1].toNumber(),\n                        itemKey: entityTypeStr\n                    }\n                })\n            } else {\n                console.warn(`Ignoring unexpected dependency check '${cfgKey}'`)\n            }\n        })\n        cfgValue.getRecord('Levels').forEachEntry((levelName, entry) => {\n            if (!LevelEntryCfg.isTutorial(levelName) && !LevelEntryCfg.isLevel(levelName)) return // ignore incomplete test levels and duplicates\n            const levelConf = new LevelEntryCfg(levelName).setFromRecord(entry)\n            const tileSize = levelConf.blockSize\n            if (tileSize !== TILESIZE) console.warn(`Unexpected tile size in level configuration: ${tileSize}`)\n            this.levels.push(levelConf)\n        })\n        cfgValue.getRecord('ToolTips').forEachCfgEntryValue((value, cfgKey) => this.tooltips[cfgKey.toLowerCase()] = value.toLabel())\n        cfgValue.getRecord('UpgradeNames').forEachCfgEntryValue((value) => ((v) => {\n            this.upgradeNames.push(v.toLabel())\n        })(value))\n        cfgValue.getRecord('TooltipIcons').forEachCfgEntryValue((value, cfgKey) => {\n            const tooltipKey = this.stripTooltipKey(cfgKey)\n            this.tooltipIcons[tooltipKey] = value.toFileName()\n        })\n        return this\n    }\n\n    private stripSurfaceTypeKey(cfgKey: string) {\n        const surfaceTypeVal = cfgKey.toLowerCase().replaceAll(/[_-]/g, '')\n        const index = surfaceTypeVal.indexOf('surfacetype')\n        return surfaceTypeVal.substring(index < 0 ? 0 : index)\n    }\n\n    private stripTooltipKey(cfgKey: string) {\n        const keyVal = cfgKey.toLowerCase().replaceAll(/[_-]/g, '')\n        let index: number = 0\n        const toolTypeIndex = keyVal.indexOf('tooltype')\n        if (toolTypeIndex >= 0) {\n            index = toolTypeIndex\n        } else {\n            const abilityTypeIndex = keyVal.indexOf('abilitytype')\n            if (abilityTypeIndex >= 0) {\n                index = abilityTypeIndex\n            }\n        }\n        return keyVal.substring(index)\n    }\n\n    getTooltipText(tooltipKey: string | undefined): string {\n        if (!tooltipKey) return ''\n        return this.tooltips[tooltipKey.toLowerCase()] || ''\n    }\n\n    getRockFallDamage(entityType: EntityType, level: number = 0): number {\n        return this.weaponTypes.rockFallIn.damageByEntityType[entityType]?.[level] || 0\n    }\n}\n","import { ScaledLayer } from './ScaledLayer'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { SpriteImage } from '../../core/Sprite'\n\nexport class LoadingLayer extends ScaledLayer {\n    progress: number = 0\n\n    constructor() {\n        super()\n        this.setLoadingMessage('Loading...')\n    }\n\n    setLoadingMessage(text: string) {\n        this.animationFrame.onRedraw = (context) => {\n            context.fillStyle = 'black'\n            context.fillRect(0, 0, this.fixedWidth, this.fixedHeight)\n            context.font = '24px sans-serif'\n            context.fillStyle = 'white'\n            context.fillText('Initializing Rock Raiders Web...', 20, this.fixedHeight - 50)\n            context.font = '18px sans-serif'\n            context.fillStyle = 'white'\n            context.fillText(text, 20, this.fixedHeight - 20)\n        }\n        this.animationFrame.notifyRedraw()\n    }\n\n    enableGraphicMode(imgBackground: SpriteImage, imgProgress: SpriteImage, imgLabel: SpriteImage) {\n        const rectProgress = GameConfig.instance.main.progressWindow\n        const loadX = Math.round(rectProgress.x + (rectProgress.w - imgLabel.width) / 2) + 1\n        const loadY = Math.round(rectProgress.y + (rectProgress.h - imgLabel.height) / 2) + 1\n        this.animationFrame.onRedraw = (context => {\n            context.drawImage(imgBackground, 0, 0)\n            const loadingBarWidth = Math.round(rectProgress.w * this.progress)\n            context.drawImage(imgProgress, rectProgress.x, rectProgress.y, loadingBarWidth, rectProgress.h)\n            context.drawImage(imgLabel, loadX, loadY)\n        })\n        this.animationFrame.notifyRedraw()\n    }\n\n    setLoadingProgress(progress: number) {\n        this.progress = Math.max(0, Math.min(1, progress))\n        this.animationFrame.notifyRedraw()\n    }\n}\n","export const MIME_TYPE_JAVASCRIPT = \"text/javascript\";\nexport const MIME_TYPE_WASM = \"application/wasm\";\nexport const CORE_VERSION = \"0.12.9\";\nexport const CORE_URL = `https://unpkg.com/@ffmpeg/core@${CORE_VERSION}/dist/umd/ffmpeg-core.js`;\nexport var FFMessageType;\n(function (FFMessageType) {\n    FFMessageType[\"LOAD\"] = \"LOAD\";\n    FFMessageType[\"EXEC\"] = \"EXEC\";\n    FFMessageType[\"FFPROBE\"] = \"FFPROBE\";\n    FFMessageType[\"WRITE_FILE\"] = \"WRITE_FILE\";\n    FFMessageType[\"READ_FILE\"] = \"READ_FILE\";\n    FFMessageType[\"DELETE_FILE\"] = \"DELETE_FILE\";\n    FFMessageType[\"RENAME\"] = \"RENAME\";\n    FFMessageType[\"CREATE_DIR\"] = \"CREATE_DIR\";\n    FFMessageType[\"LIST_DIR\"] = \"LIST_DIR\";\n    FFMessageType[\"DELETE_DIR\"] = \"DELETE_DIR\";\n    FFMessageType[\"ERROR\"] = \"ERROR\";\n    FFMessageType[\"DOWNLOAD\"] = \"DOWNLOAD\";\n    FFMessageType[\"PROGRESS\"] = \"PROGRESS\";\n    FFMessageType[\"LOG\"] = \"LOG\";\n    FFMessageType[\"MOUNT\"] = \"MOUNT\";\n    FFMessageType[\"UNMOUNT\"] = \"UNMOUNT\";\n})(FFMessageType || (FFMessageType = {}));\n","/**\n * Generate an unique message ID.\n */\nexport const getMessageID = (() => {\n    let messageID = 0;\n    return () => messageID++;\n})();\n","export const ERROR_UNKNOWN_MESSAGE_TYPE = new Error(\"unknown message type\");\nexport const ERROR_NOT_LOADED = new Error(\"ffmpeg is not loaded, call `await ffmpeg.load()` first\");\nexport const ERROR_TERMINATED = new Error(\"called FFmpeg.terminate()\");\nexport const ERROR_IMPORT_FAILURE = new Error(\"failed to import ffmpeg-core.js\");\n","import { FFMessageType } from \"./const.js\";\nimport { getMessageID } from \"./utils.js\";\nimport { ERROR_TERMINATED, ERROR_NOT_LOADED } from \"./errors.js\";\n/**\n * Provides APIs to interact with ffmpeg web worker.\n *\n * @example\n * ```ts\n * const ffmpeg = new FFmpeg();\n * ```\n */\nexport class FFmpeg {\n    #worker = null;\n    /**\n     * #resolves and #rejects tracks Promise resolves and rejects to\n     * be called when we receive message from web worker.\n     */\n    #resolves = {};\n    #rejects = {};\n    #logEventCallbacks = [];\n    #progressEventCallbacks = [];\n    loaded = false;\n    /**\n     * register worker message event handlers.\n     */\n    #registerHandlers = () => {\n        if (this.#worker) {\n            this.#worker.onmessage = ({ data: { id, type, data }, }) => {\n                switch (type) {\n                    case FFMessageType.LOAD:\n                        this.loaded = true;\n                        this.#resolves[id](data);\n                        break;\n                    case FFMessageType.MOUNT:\n                    case FFMessageType.UNMOUNT:\n                    case FFMessageType.EXEC:\n                    case FFMessageType.FFPROBE:\n                    case FFMessageType.WRITE_FILE:\n                    case FFMessageType.READ_FILE:\n                    case FFMessageType.DELETE_FILE:\n                    case FFMessageType.RENAME:\n                    case FFMessageType.CREATE_DIR:\n                    case FFMessageType.LIST_DIR:\n                    case FFMessageType.DELETE_DIR:\n                        this.#resolves[id](data);\n                        break;\n                    case FFMessageType.LOG:\n                        this.#logEventCallbacks.forEach((f) => f(data));\n                        break;\n                    case FFMessageType.PROGRESS:\n                        this.#progressEventCallbacks.forEach((f) => f(data));\n                        break;\n                    case FFMessageType.ERROR:\n                        this.#rejects[id](data);\n                        break;\n                }\n                delete this.#resolves[id];\n                delete this.#rejects[id];\n            };\n        }\n    };\n    /**\n     * Generic function to send messages to web worker.\n     */\n    #send = ({ type, data }, trans = [], signal) => {\n        if (!this.#worker) {\n            return Promise.reject(ERROR_NOT_LOADED);\n        }\n        return new Promise((resolve, reject) => {\n            const id = getMessageID();\n            this.#worker && this.#worker.postMessage({ id, type, data }, trans);\n            this.#resolves[id] = resolve;\n            this.#rejects[id] = reject;\n            signal?.addEventListener(\"abort\", () => {\n                reject(new DOMException(`Message # ${id} was aborted`, \"AbortError\"));\n            }, { once: true });\n        });\n    };\n    on(event, callback) {\n        if (event === \"log\") {\n            this.#logEventCallbacks.push(callback);\n        }\n        else if (event === \"progress\") {\n            this.#progressEventCallbacks.push(callback);\n        }\n    }\n    off(event, callback) {\n        if (event === \"log\") {\n            this.#logEventCallbacks = this.#logEventCallbacks.filter((f) => f !== callback);\n        }\n        else if (event === \"progress\") {\n            this.#progressEventCallbacks = this.#progressEventCallbacks.filter((f) => f !== callback);\n        }\n    }\n    /**\n     * Loads ffmpeg-core inside web worker. It is required to call this method first\n     * as it initializes WebAssembly and other essential variables.\n     *\n     * @category FFmpeg\n     * @returns `true` if ffmpeg core is loaded for the first time.\n     */\n    load = ({ classWorkerURL, ...config } = {}, { signal } = {}) => {\n        if (!this.#worker) {\n            this.#worker = classWorkerURL ?\n                new Worker(new URL(classWorkerURL, import.meta.url), {\n                    type: \"module\",\n                }) :\n                // We need to duplicated the code here to enable webpack\n                // to bundle worekr.js here.\n                new Worker(new URL(\"./worker.js\", import.meta.url), {\n                    type: \"module\",\n                });\n            this.#registerHandlers();\n        }\n        return this.#send({\n            type: FFMessageType.LOAD,\n            data: config,\n        }, undefined, signal);\n    };\n    /**\n     * Execute ffmpeg command.\n     *\n     * @remarks\n     * To avoid common I/O issues, [\"-nostdin\", \"-y\"] are prepended to the args\n     * by default.\n     *\n     * @example\n     * ```ts\n     * const ffmpeg = new FFmpeg();\n     * await ffmpeg.load();\n     * await ffmpeg.writeFile(\"video.avi\", ...);\n     * // ffmpeg -i video.avi video.mp4\n     * await ffmpeg.exec([\"-i\", \"video.avi\", \"video.mp4\"]);\n     * const data = ffmpeg.readFile(\"video.mp4\");\n     * ```\n     *\n     * @returns `0` if no error, `!= 0` if timeout (1) or error.\n     * @category FFmpeg\n     */\n    exec = (\n    /** ffmpeg command line args */\n    args, \n    /**\n     * milliseconds to wait before stopping the command execution.\n     *\n     * @defaultValue -1\n     */\n    timeout = -1, { signal } = {}) => this.#send({\n        type: FFMessageType.EXEC,\n        data: { args, timeout },\n    }, undefined, signal);\n    /**\n     * Execute ffprobe command.\n     *\n     * @example\n     * ```ts\n     * const ffmpeg = new FFmpeg();\n     * await ffmpeg.load();\n     * await ffmpeg.writeFile(\"video.avi\", ...);\n     * // Getting duration of a video in seconds: ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 video.avi -o output.txt\n     * await ffmpeg.ffprobe([\"-v\", \"error\", \"-show_entries\", \"format=duration\", \"-of\", \"default=noprint_wrappers=1:nokey=1\", \"video.avi\", \"-o\", \"output.txt\"]);\n     * const data = ffmpeg.readFile(\"output.txt\");\n     * ```\n     *\n     * @returns `0` if no error, `!= 0` if timeout (1) or error.\n     * @category FFmpeg\n     */\n    ffprobe = (\n    /** ffprobe command line args */\n    args, \n    /**\n     * milliseconds to wait before stopping the command execution.\n     *\n     * @defaultValue -1\n     */\n    timeout = -1, { signal } = {}) => this.#send({\n        type: FFMessageType.FFPROBE,\n        data: { args, timeout },\n    }, undefined, signal);\n    /**\n     * Terminate all ongoing API calls and terminate web worker.\n     * `FFmpeg.load()` must be called again before calling any other APIs.\n     *\n     * @category FFmpeg\n     */\n    terminate = () => {\n        const ids = Object.keys(this.#rejects);\n        // rejects all incomplete Promises.\n        for (const id of ids) {\n            this.#rejects[id](ERROR_TERMINATED);\n            delete this.#rejects[id];\n            delete this.#resolves[id];\n        }\n        if (this.#worker) {\n            this.#worker.terminate();\n            this.#worker = null;\n            this.loaded = false;\n        }\n    };\n    /**\n     * Write data to ffmpeg.wasm.\n     *\n     * @example\n     * ```ts\n     * const ffmpeg = new FFmpeg();\n     * await ffmpeg.load();\n     * await ffmpeg.writeFile(\"video.avi\", await fetchFile(\"../video.avi\"));\n     * await ffmpeg.writeFile(\"text.txt\", \"hello world\");\n     * ```\n     *\n     * @category File System\n     */\n    writeFile = (path, data, { signal } = {}) => {\n        const trans = [];\n        if (data instanceof Uint8Array) {\n            trans.push(data.buffer);\n        }\n        return this.#send({\n            type: FFMessageType.WRITE_FILE,\n            data: { path, data },\n        }, trans, signal);\n    };\n    mount = (fsType, options, mountPoint) => {\n        const trans = [];\n        return this.#send({\n            type: FFMessageType.MOUNT,\n            data: { fsType, options, mountPoint },\n        }, trans);\n    };\n    unmount = (mountPoint) => {\n        const trans = [];\n        return this.#send({\n            type: FFMessageType.UNMOUNT,\n            data: { mountPoint },\n        }, trans);\n    };\n    /**\n     * Read data from ffmpeg.wasm.\n     *\n     * @example\n     * ```ts\n     * const ffmpeg = new FFmpeg();\n     * await ffmpeg.load();\n     * const data = await ffmpeg.readFile(\"video.mp4\");\n     * ```\n     *\n     * @category File System\n     */\n    readFile = (path, \n    /**\n     * File content encoding, supports two encodings:\n     * - utf8: read file as text file, return data in string type.\n     * - binary: read file as binary file, return data in Uint8Array type.\n     *\n     * @defaultValue binary\n     */\n    encoding = \"binary\", { signal } = {}) => this.#send({\n        type: FFMessageType.READ_FILE,\n        data: { path, encoding },\n    }, undefined, signal);\n    /**\n     * Delete a file.\n     *\n     * @category File System\n     */\n    deleteFile = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.DELETE_FILE,\n        data: { path },\n    }, undefined, signal);\n    /**\n     * Rename a file or directory.\n     *\n     * @category File System\n     */\n    rename = (oldPath, newPath, { signal } = {}) => this.#send({\n        type: FFMessageType.RENAME,\n        data: { oldPath, newPath },\n    }, undefined, signal);\n    /**\n     * Create a directory.\n     *\n     * @category File System\n     */\n    createDir = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.CREATE_DIR,\n        data: { path },\n    }, undefined, signal);\n    /**\n     * List directory contents.\n     *\n     * @category File System\n     */\n    listDir = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.LIST_DIR,\n        data: { path },\n    }, undefined, signal);\n    /**\n     * Delete an empty directory.\n     *\n     * @category File System\n     */\n    deleteDir = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.DELETE_DIR,\n        data: { path },\n    }, undefined, signal);\n}\n","export var FFFSType;\n(function (FFFSType) {\n    FFFSType[\"MEMFS\"] = \"MEMFS\";\n    FFFSType[\"NODEFS\"] = \"NODEFS\";\n    FFFSType[\"NODERAWFS\"] = \"NODERAWFS\";\n    FFFSType[\"IDBFS\"] = \"IDBFS\";\n    FFFSType[\"WORKERFS\"] = \"WORKERFS\";\n    FFFSType[\"PROXYFS\"] = \"PROXYFS\";\n})(FFFSType || (FFFSType = {}));\n","export default \"__VITE_ASSET__Dc9cb_Ff__\"","export default \"__VITE_ASSET__C1mnnC5I__\"","import { FFFSType, FFmpeg, LogEvent } from '@ffmpeg/ffmpeg'\nimport { VERBOSE } from '../../../params'\nimport ffmpegCore from '/node_modules/@ffmpeg/core/dist/esm/ffmpeg-core.js?url'\nimport ffmpegWasm from '/node_modules/@ffmpeg/core/dist/esm/ffmpeg-core.wasm?url'\nimport { cacheGetData, cachePutData } from '../../AssetCacheHelper'\n\nexport class FFmpegWasm {\n    private static readonly SEGMENT_LENGTH = 2 // Changing this will invalidate transcoded parts in caches\n\n    private async loadFFmpeg(): Promise<FFmpeg> {\n        // FFmpeg stops working after mulitiple calls of exec (memory leak)\n        const ffmpeg = new FFmpeg()\n        ffmpeg.on('log', (arg: LogEvent) => {\n            if (VERBOSE) console.log(arg)\n        })\n        await ffmpeg.load({\n            coreURL: ffmpegCore,\n            wasmURL: ffmpegWasm,\n        })\n        return ffmpeg\n    }\n\n    async transcodeAudio(videoFileName: string, videoFileData: ArrayBuffer): Promise<ArrayBuffer> {\n        const outputFilePath = `${videoFileName}-audio.webm`\n        const fromCache = await cacheGetData<ArrayBuffer>(outputFilePath)\n        if (fromCache !== undefined) return fromCache\n        const ffmpeg = await this.loadFFmpeg()\n        try {\n            await ffmpeg.createDir('/input')\n            await ffmpeg.mount(FFFSType.WORKERFS, {files: [new File([videoFileData], videoFileName)]}, '/input')\n            const returnCode = await ffmpeg.exec([\n                '-i', `/input/${videoFileName}`,\n                '-vn',\n                '-c:a', 'libopus', '-compression_level', '0',\n                '-dash', '1',\n                `/${outputFilePath}`,\n            ])\n            if (returnCode !== 0) {\n                throw new Error(`FFmpeg returned non-zero exit status: ${returnCode}`)\n            }\n            const fileData = (await ffmpeg.readFile(outputFilePath) as Uint8Array<ArrayBuffer>).buffer\n            cachePutData(outputFilePath, fileData).then()\n            return fileData\n        } finally {\n            ffmpeg.terminate()\n        }\n    }\n\n    async transcodeVideoSegment(videoFileName: string, videoFileData: ArrayBuffer, segmentNum: number): Promise<ArrayBuffer | null> {\n        const outputFilePath = `${videoFileName}-video-${(FFmpegWasm.SEGMENT_LENGTH)}-${segmentNum}.mp4`\n        const fromCache = await cacheGetData<ArrayBuffer | null>(outputFilePath)\n        if (fromCache !== undefined) return fromCache\n        const ffmpeg = await this.loadFFmpeg()\n        try {\n            await ffmpeg.createDir('/input')\n            await ffmpeg.mount(FFFSType.WORKERFS, {files: [new File([videoFileData], videoFileName)]}, '/input')\n            let isEmpty = false\n            ffmpeg.on('log', ({type, message}) => {\n                if (type === 'stderr' && message.match(/^video:0kB audio:0kB /)) {\n                    isEmpty = true\n                }\n            })\n            const returnCode = await ffmpeg.exec([\n                '-ss', (segmentNum * FFmpegWasm.SEGMENT_LENGTH).toString(),\n                '-to', ((segmentNum + 1) * FFmpegWasm.SEGMENT_LENGTH).toString(),\n                '-i', `/input/${videoFileName}`,\n                '-c:v', 'libx264', '-preset', 'ultrafast',\n                '-profile:v', 'baseline', '-level', '3.0',\n                '-an',\n                '-movflags', 'frag_keyframe+empty_moov+default_base_moof',\n                `/${outputFilePath}`,\n            ])\n            if (returnCode !== 0) {\n                throw new Error(`FFmpeg returned non-zero exit status: ${returnCode}`)\n            }\n            const fileData = isEmpty ? null : (await ffmpeg.readFile(outputFilePath) as Uint8Array<ArrayBuffer>).buffer\n            cachePutData(outputFilePath, fileData).then()\n            return fileData\n        } finally {\n            ffmpeg.terminate()\n        }\n    }\n}\n","import { AbstractLayer } from './AbstractLayer'\nimport { cacheGetData } from '../../resource/AssetCacheHelper'\nimport { SpriteImage } from '../../core/Sprite'\nimport { getFilename } from '../../core/Util'\nimport { FFmpegWasm } from '../../resource/fileparser/avi/FFmpegWasm'\nimport { createContext } from '../../core/ImageHelper'\n\nexport class VideoLayer extends AbstractLayer {\n    readonly video: HTMLVideoElement\n    readonly ffmpeg: FFmpegWasm\n    currentVideo?: () => void\n\n    constructor() {\n        super()\n        this.video = document.createElement('video')\n        this.video.setAttribute('data-layer-class', this.constructor.name)\n        this.video.style.visibility = 'hidden'\n        this.video.style.backgroundColor = '#000000'\n        this.video.autoplay = true\n        this.video.onended = () => {\n            this.hide()\n        }\n        this.ffmpeg = new FFmpegWasm()\n        this.addEventListener('pointerup', (): boolean => {\n            if (!this.video.controls) this.hide()\n            return true\n        })\n    }\n\n    get element(): HTMLElement {\n        return this.video\n    }\n\n    async playVideo(videoFilePath: string): Promise<void> {\n        if (this.currentVideo) {\n            console.log('Already playing video')\n            return\n        } else if (!videoFilePath) {\n            console.warn('No video file path given')\n            return\n        }\n        videoFilePath = videoFilePath.toLowerCase()\n        if (!videoFilePath.endsWith('.avi')) {\n            console.error(`Unsupported video file format \"${videoFilePath}\"`)\n            return\n        }\n        const videoData = await cacheGetData(videoFilePath) as ArrayBuffer\n        if (!videoData) {\n            console.warn(`Video data for ${videoFilePath} not found in cache`)\n            return\n        }\n        this.show()\n\n        const videoFileName = getFilename(videoFilePath)\n\n        const mediaSource = new MediaSource()\n        mediaSource.addEventListener('sourceopen', async () => {\n            try {\n                await Promise.all([\n                    // Audio\n                    new Promise<void>((resolve, reject) => {\n                        const sourceBuf = mediaSource.addSourceBuffer('audio/webm; codecs=\"opus\"')\n                        sourceBuf.addEventListener('error', reject)\n                        sourceBuf.addEventListener('updateend', () => resolve())\n                        this.ffmpeg.transcodeAudio(videoFileName, videoData)\n                            .then((data) => {\n                                if (this.active) sourceBuf.appendBuffer(data)\n                            })\n                            .catch(reject)\n                    }),\n                    // Video\n                    new Promise<void>((resolve, reject) => {\n                        const sourceBuf = mediaSource.addSourceBuffer('video/mp4; codecs=\"avc1.42001e\"')\n                        sourceBuf.mode = 'sequence'\n                        let currentSegment = 0\n                        const nextSegment = () => this.ffmpeg.transcodeVideoSegment(videoFileName, videoData, currentSegment)\n                            .then((data) => {\n                                if (!data || !this.active) {\n                                    resolve()\n                                    return\n                                }\n                                currentSegment++\n                                sourceBuf.appendBuffer(data)\n                            })\n                            .catch(reject)\n                        sourceBuf.addEventListener('error', reject)\n                        sourceBuf.addEventListener('updateend', nextSegment)\n                        nextSegment()\n                    }),\n                ])\n                mediaSource.endOfStream()\n            } catch (e) {\n                console.error('error appending buffer', e)\n                this.hide()\n            }\n        })\n        this.video.src = URL.createObjectURL(mediaSource)\n        this.video.play().then().catch((e) => {\n            console.warn('Could not autoplay video', e)\n            this.video.controls = true\n            this.video.onplay = () => {\n                this.video.controls = false\n            }\n        })\n        return new Promise((resolve) => {\n            this.currentVideo = resolve\n        })\n    }\n\n    resize(width: number, height: number) {\n        this.video.width = width\n        this.video.height = height\n    }\n\n    hide() {\n        super.hide()\n        this.video.pause()\n        this.video.src = ''\n        this.video.controls = false\n        if (this.currentVideo) {\n            this.currentVideo()\n            this.currentVideo = undefined\n        }\n    }\n\n    takeScreenshotFromLayer(): Promise<SpriteImage> {\n        const context = createContext(this.video.width, this.video.height)\n        context.drawImage(this.video, 0, 0)\n        return Promise.resolve(context.canvas)\n    }\n}\n","import { AbstractLayer } from './layer/AbstractLayer'\nimport { createCanvas } from '../core/ImageHelper'\nimport { NATIVE_SCREEN_HEIGHT, NATIVE_SCREEN_WIDTH } from '../params'\nimport { LoadingLayer } from './layer/LoadingLayer'\nimport { SaveGameManager } from '../resource/SaveGameManager'\nimport { HTML_GAME_CANVAS_CONTAINER, HTML_GAME_CONTAINER } from '../core'\nimport { VideoLayer } from './layer/VideoLayer'\nimport { DebugHelper } from './DebugHelper'\n\nexport class ScreenMaster {\n    readonly layers: AbstractLayer[] = []\n    readonly loadingLayer: LoadingLayer\n    readonly videoLayer: VideoLayer\n    width: number = NATIVE_SCREEN_WIDTH\n    height: number = NATIVE_SCREEN_HEIGHT\n    onGlobalMouseMoveEvent: (event: PointerEvent) => void = () => {\n    }\n    onGlobalMouseLeaveEvent: (event: PointerEvent) => void = () => {\n    }\n\n    constructor() {\n        HTML_GAME_CANVAS_CONTAINER.addEventListener('contextmenu', (event: MouseEvent) => event.preventDefault())\n        window.addEventListener('resize', () => this.onWindowResize())\n        this.onWindowResize()\n        HTML_GAME_CANVAS_CONTAINER.addEventListener('pointerdown', () => {\n            this.getActiveLayersSorted()?.[0]?.element?.focus() // always focus topmost\n        })\n        // in case topmost layer does not listen for event, it reaches game-canvas-container as fallback dispatch from here\n        ;['pointermove', 'pointerdown', 'pointerup', 'pointerleave', 'keydown', 'keyup', 'keypress', 'wheel', 'mousemove', 'mouseleave'].forEach((eventType) => {\n            HTML_GAME_CANVAS_CONTAINER.addEventListener(eventType, (event) => {\n                event.stopPropagation()\n                this.dispatchEvent(event)\n            })\n        })\n        ;['touchstart', 'touchmove', 'touchend'].forEach((eventType) => {\n            HTML_GAME_CANVAS_CONTAINER.addEventListener(eventType, (event) => {\n                event.preventDefault()\n                event.stopPropagation()\n                this.dispatchEvent(event)\n            })\n        })\n        this.setupToolbarButtons()\n        const closeButton = DebugHelper.element.querySelector<HTMLButtonElement>('button.game-debug-close-button')\n        if (!closeButton) throw new Error('Debug layer close button not found')\n        closeButton.onclick = () => DebugHelper.toggleDisplay()\n        const copyToClipboard = DebugHelper.element.querySelector<HTMLButtonElement>('button.game-debug-copy-button')\n        if (!copyToClipboard) throw new Error('Debug layer copy to clipboard button not found')\n        copyToClipboard.onclick = () => {\n            navigator.clipboard.writeText(Array.from(DebugHelper.messageContainer.children).map((e) => (e as HTMLElement).innerText).join('\\n')).then()\n        }\n        this.loadingLayer = this.addLayer(new LoadingLayer(), 1200)\n        this.videoLayer = this.addLayer(new VideoLayer(), 1500)\n    }\n\n    private setupToolbarButtons() {\n        this.setupButton('button-escape', () => {\n            this.dispatchEvent(new KeyboardEvent('keydown', {code: 'Escape', key: 'Escape'}))\n            setTimeout(() => this.dispatchEvent(new KeyboardEvent('keyup', {code: 'Escape', key: 'Escape'})), 69)\n        })\n        this.setupButton('button-space', () => {\n            this.dispatchEvent(new KeyboardEvent('keydown', {code: ' ', key: ' '}))\n            setTimeout(() => this.dispatchEvent(new KeyboardEvent('keyup', {code: ' ', key: ' '})), 69)\n        })\n        this.setupButton('button-debug', () => DebugHelper.toggleDisplay())\n        this.setupButton('button-screenshot', () => {\n            this.saveScreenshot()\n        })\n        this.setupButton('button-fullscreen', () => {\n            if (document.fullscreenElement === HTML_GAME_CONTAINER) document.exitFullscreen().then()\n            else HTML_GAME_CONTAINER.requestFullscreen().then()\n        })\n    }\n\n    private setupButton(clsName: string, onClickCallback: () => void): void {\n        const buttons = Array.from(document.getElementsByClassName(clsName)) as HTMLButtonElement[]\n        buttons.forEach((btn) => {\n            btn.style.removeProperty('visibility')\n            btn.onclick = (event) => {\n                event.stopPropagation()\n                onClickCallback()\n            }\n        })\n    }\n\n    dispatchEvent(event: Event, zIndexStart: number = Infinity) {\n        if (event.type === 'pointerleave' && event.target === HTML_GAME_CANVAS_CONTAINER) return // don't dispatch, fired by setPointerCapture\n        const activeLayersSorted = this.getActiveLayersSorted()\n        const nextLayer = activeLayersSorted.find((l) => l.zIndex < zIndexStart && l.eventListener.has(event.type))\n        if (!nextLayer) return\n        // @ts-ignore // XXX maybe there is more elegant way to clone events\n        const eventClone = new event.constructor(event.type, event)\n        nextLayer.element.dispatchEvent(eventClone)\n    }\n\n    addLayer<T extends AbstractLayer>(layer: T, zIndex: number): T {\n        if (!zIndex) throw new Error(`Invalid zIndex ${zIndex} given for layer`)\n        if (this.layers.some((l) => l.zIndex === zIndex)) throw new Error(`The given zIndex is not unique`)\n        layer.screenMaster = this\n        layer.resize(this.width, this.height)\n        layer.setZIndex(zIndex)\n        this.layers.push(layer)\n        HTML_GAME_CANVAS_CONTAINER.appendChild(layer.element)\n        return layer\n    }\n\n    removeLayer(layer: AbstractLayer) {\n        layer.hide()\n        if (this.layers.includes(layer)) {\n            this.layers.remove(layer)\n            HTML_GAME_CANVAS_CONTAINER.removeChild(layer.element)\n        }\n    }\n\n    onWindowResize() {\n        const aspectRatio = HTML_GAME_CONTAINER.offsetWidth / HTML_GAME_CONTAINER.offsetHeight\n        this.width = HTML_GAME_CONTAINER.offsetWidth - 1 - (aspectRatio < 1.333333 ? 0 : 100)\n        this.height = HTML_GAME_CONTAINER.offsetHeight - 1 - (aspectRatio < 1.333333 ? 100 : 0)\n        const screenRatio = SaveGameManager.calcScreenRatio()\n        if (screenRatio > 0) {\n            const idealHeight = Math.round(this.width / screenRatio)\n            if (idealHeight > this.height) {\n                this.width = Math.round(this.height * screenRatio)\n            } else {\n                this.height = idealHeight\n            }\n        }\n        this.layers.forEach((layer) => layer.resize(this.width, this.height))\n    }\n\n    getActiveLayersSorted(): AbstractLayer[] {\n        return this.layers.filter(l => l.active).sort((a, b) => b.zIndex - a.zIndex)\n    }\n\n    async createScreenshot(): Promise<HTMLCanvasElement> {\n        const activeLayers = this.getActiveLayersSorted().reverse()\n        if (activeLayers.length < 1) return Promise.reject()\n        const allLayers = await Promise.all(activeLayers.map((l) => l.takeScreenshotFromLayer()))\n        const layers = allLayers.filter((l) => !!l)\n        const maxLayerWidth = layers.reduce((w, l) => Math.max(w, l.width), 0)\n        const maxLayerHeight = layers.reduce((h, l) => Math.max(h, l.height), 0)\n        const canvas = createCanvas(maxLayerWidth, maxLayerHeight)\n        const context = canvas.getContext('2d')\n        if (!context) throw new Error('Could not get context for canvas')\n        layers.forEach((c) => context.drawImage(c, 0, 0))\n        return canvas\n    }\n\n    saveScreenshot() {\n        this.createScreenshot().then((canvas) => this.downloadCanvasAsImage(canvas))\n    }\n\n    private downloadCanvasAsImage(canvas: HTMLCanvasElement) {\n        canvas.toBlob((blob) => {\n            if (!blob) {\n                console.error('Null instead of blob returned from canvas')\n                return\n            }\n            const link = document.createElement('a')\n            link.download = `Rock Raiders Web ${new Date().toISOString().replace('T', ' ').replace('Z', '')}.png`\n            link.href = URL.createObjectURL(blob)\n            link.onclick = () => setTimeout(() => URL.revokeObjectURL(link.href), 1500)\n            link.click()\n            link.remove()\n        })\n    }\n}\n","// The RockRaidersObjectNotation (RON) format is related to JSON\n\nimport { VERBOSE } from '../../params'\nimport { isNum } from '../../core/Util'\n\nexport class RonFileParser {\n    static parse(filename: string, content: string): object {\n        const lines: string[] = content.split(/[\\r\\n]+/g).map((l) => l\n            .replace(/;.*|\\/\\/.*/, '') // strip comments from each line\n            .trim(), // remove whitespace at start/end of lines\n        )\n        const root = {}\n        this.parseObj(root, lines, 0)\n        const entries = Object.values(root)\n        if (entries.length > 1 && VERBOSE) console.warn(`Ron file '${filename}' contains (${entries.length}) objects! Will proceed with first object '${Object.keys(root)[0]}' only`)\n        return entries[0] as object\n    }\n\n    private static parseObj(obj: Record<string, unknown>, lines: string[], start: number): number {\n        const multiValues: any[] = []\n        for (let c = start; c < lines.length; c++) {\n            const line = lines[c]\n            if (line === '') continue\n            const [name, val] = line.split(/\\s+/) // any number of whitespaces\n            const key = name.toLowerCase()\n            if (val === '{') {\n                obj[key] = {}\n                c = this.parseObj(obj[key] as Record<string, unknown>, lines, c + 1)\n            } else if (key === '}') {\n                return c\n            } else {\n                const values = this.parseVal(val)\n                this.assignValue(obj, key, multiValues, values)\n            }\n        }\n        return lines.length\n    }\n\n    private static parseVal(val: string) {\n        const r = val.split(/:/)\n            .map(v => {\n                const r = v.split(',').map(v => {\n                    const r = v.split('|').map(v => this.parseValue(v))\n                    return r.length === 1 ? r[0] : r\n                })\n                return r.length === 1 ? r[0] : r\n            })\n        return r.length === 1 ? r[0] : r\n    }\n\n    private static parseValue(value: string) {\n        const num = Number(value)\n        if (isNum(num)) return num\n        const lv = value.toLowerCase()\n        if (lv === 'false') {\n            return false\n        } else if (lv === 'true') {\n            return true\n        }\n        return value\n    }\n\n    private static assignValue(obj: Record<string, unknown>, key: string, multiProperties: any[], value: any) {\n        if (obj.hasOwnProperty(key)) {\n            if (!multiProperties.includes(key)) {\n                multiProperties.push(key)\n                obj[key] = [obj[key]]\n            }\n            ;(obj[key] as unknown[]).push(value)\n        } else {\n            obj[key] = value\n        }\n    }\n}\n","export interface WorkerRequestMessage<T> {\n    workerRequestHash: string\n    request: T\n}\n\nexport interface WorkerResponseMessage<T> {\n    workerRequestHash: string\n    response: T\n}\n\nexport interface TypedWorker<M> {\n    sendMessage(message: M, transfer?: (Transferable | OffscreenCanvas)[]): void\n\n    terminate(): void\n}\n\nexport class TypedWorkerFrontend<M, R> implements TypedWorker<M> {\n    constructor(readonly worker: Worker, onResponseFromWorker: (response: R) => void) {\n        worker.onmessage = (event) => {\n            onResponseFromWorker(event?.data)\n        }\n        worker.onerror = (event) => {\n            console.error(`Unexpected error event in worker`, event)\n        }\n    }\n\n    sendMessage(message: M, transfer?: (Transferable | OffscreenCanvas)[]) {\n        this.worker.postMessage(message, transfer)\n    }\n\n    terminate() {\n        this.worker.terminate()\n    }\n}\n\nexport interface TypedWorkerBackend<M, R> {\n    onMessageFromFrontend: (message: M) => void\n\n    sendResponse(response: R, transfer?: Transferable[]): void\n}\n\nexport class TypedWorkerThreaded<M, R> implements TypedWorkerBackend<M, R> {\n    onMessageFromFrontend: (message: M) => void = () => {\n        throw new Error('Not implemented')\n    }\n\n    constructor(readonly worker: Worker) {\n        worker.addEventListener('message', (event) => this.onMessageFromFrontend(event?.data))\n    }\n\n    sendResponse(response: R, transfer?: Transferable[]) {\n        this.worker.postMessage(response, transfer)\n    }\n}\n\nexport class TypedWorkerFallback<M, R> implements TypedWorker<M>, TypedWorkerBackend<M, R> {\n    onMessageFromFrontend: (message: M) => void = () => {\n        throw new Error('Not implemented')\n    }\n\n    constructor(readonly onResponseFromWorker: (response: R) => void) {\n    }\n\n    sendMessage(message: M, _transfer?: (Transferable | OffscreenCanvas)[]) {\n        this.onMessageFromFrontend(message)\n    }\n\n    sendResponse(response: R) {\n        this.onResponseFromWorker(response)\n    }\n\n    terminate() {\n    }\n}\n","/**\n * Source: https://github.com/wokwi/bmp-ts\n */\n\nconst HEADER_TYPE = {\n    BitmapInfoHeader: 40,\n    BitmapV2InfoHeader: 52,\n    BitmapV3InfoHeader: 56,\n    BitmapV4Header: 108,\n    BitmapV5Header: 124\n} as const\ntype HeaderType = typeof HEADER_TYPE[keyof typeof HEADER_TYPE]\nconst isHeaderType = (val: unknown): val is HeaderType => {\n    return Object.values(HEADER_TYPE).includes(val as HeaderType)\n}\n\n// We have these:\n//\n// const sample = 0101 0101 0101 0101\n// const mask   = 0111 1100 0000 0000\n// 256        === 0000 0001 0000 0000\n//\n// We want to take the sample and turn it into an 8-bit value.\n//\n// 1. We extract the last bit of the mask:\n//\n// 0000 0100 0000 0000\n//       ^\n//\n// Like so:\n//\n// const a = ~mask =    1000 0011 1111 1111\n// const b = a + 1 =    1000 0100 0000 0000\n// const c = b & mask = 0000 0100 0000 0000\n//\n// 2. We shift it to the right and extract the bit before the first:\n//\n// 0000 0000 0010 0000\n//             ^\n//\n// Like so:\n//\n// const d = mask / c = 0000 0000 0001 1111\n// const e = mask + 1 = 0000 0000 0010 0000\n//\n// 3. We apply the mask and the two values above to a sample:\n//\n// const f = sample & mask = 0101 0100 0000 0000\n// const g = f / c =         0000 0000 0001 0101\n// const h = 256 / e =       0000 0000 0000 0100\n// const i = g * h =         0000 0000 1010 1000\n//                                     ^^^^ ^\n//\n// Voila, we have extracted a sample and \"stretched\" it to 8 bits. For samples\n// which are already 8-bit, h === 1 and g === i.\n\nfunction maskColor(\n    maskRed: number,\n    maskGreen: number,\n    maskBlue: number,\n    maskAlpha: number,\n) {\n    const maskRedR = (~maskRed + 1) & maskRed\n    const maskGreenR = (~maskGreen + 1) & maskGreen\n    const maskBlueR = (~maskBlue + 1) & maskBlue\n    const maskAlphaR = (~maskAlpha + 1) & maskAlpha\n\n    const shiftedMaskRedL = maskRed / maskRedR + 1\n    const shiftedMaskGreenL = maskGreen / maskGreenR + 1\n    const shiftedMaskBlueL = maskBlue / maskBlueR + 1\n    const shiftedMaskAlphaL = maskAlpha / maskAlphaR + 1\n\n    return {\n        shiftRed: (x: number) =>\n            (((x & maskRed) / maskRedR) * 0x100) / shiftedMaskRedL,\n        shiftGreen: (x: number) =>\n            (((x & maskGreen) / maskGreenR) * 0x100) / shiftedMaskGreenL,\n        shiftBlue: (x: number) =>\n            (((x & maskBlue) / maskBlueR) * 0x100) / shiftedMaskBlueL,\n        shiftAlpha:\n            maskAlpha !== 0\n                ? (x: number) => (((x & maskAlpha) / maskAlphaR) * 0x100) / shiftedMaskAlphaL\n                : () => 255,\n    }\n}\n\nconst Compression = {\n    NONE: 0,\n    BI_RLE8: 1,\n    BI_RLE4: 2,\n    BI_BIT_FIELDS: 3,\n    BI_ALPHA_BIT_FIELDS: 6\n} as const\ntype Compression = typeof Compression[keyof typeof Compression]\nconst isCompression = (val: unknown): val is Compression => {\n    return Object.values(Compression).includes(val as Compression)\n}\n\ntype BitsPerPixel = 1 | 4 | 8 | 16 | 24 | 32;\n\ninterface IColor {\n    red: number;\n    green: number;\n    blue: number;\n    quad: number;\n}\n\ninterface IDecoderOptions {\n    toRGBA?: boolean;\n}\n\ninterface IImage {\n    width: number;\n    height: number;\n    bitPP: BitsPerPixel;\n    data: Uint8Array;\n    reserved1?: number;\n    reserved2?: number;\n    hr?: number;\n    vr?: number;\n    colors?: number;\n    importantColors?: number;\n    palette?: IColor[];\n}\n\ninterface IBitmapImage extends IImage {\n    flag: string;\n    fileSize: number;\n    offset: number;\n    headerSize: number;\n    planes?: number;\n    compression?: Compression;\n    rawSize: number;\n}\n\ntype IColorProcessor = (x: number, line: number) => void;\n\nclass BmpDecoder implements IBitmapImage {\n    // Header\n    public flag: string\n    public fileSize!: number\n    public reserved1!: number\n    public reserved2!: number\n    public offset!: number\n    public headerSize!: HeaderType\n    public width!: number\n    public height!: number\n    public planes!: number\n    public bitPP!: BitsPerPixel\n    public compression?: Compression\n    public rawSize!: number\n    public hr!: number\n    public vr!: number\n    public colors!: number\n    public importantColors!: number\n    public palette!: IColor[]\n    public data!: Uint8Array\n\n    private maskRed!: number\n    private maskGreen!: number\n    private maskBlue!: number\n    private maskAlpha!: number\n\n    private readonly toRGBA: boolean\n\n    private pos: number\n    private bottomUp: boolean\n\n    private readonly locRed: number\n    private readonly locGreen: number\n    private readonly locBlue: number\n    private readonly locAlpha: number\n\n    private shiftRed!: (x: number) => number\n    private shiftGreen!: (x: number) => number\n    private shiftBlue!: (x: number) => number\n    private shiftAlpha!: (x: number) => number\n\n    constructor(\n        readonly bufferView: DataView,\n        {toRGBA}: IDecoderOptions = {toRGBA: false},\n    ) {\n        this.toRGBA = !!toRGBA\n        this.bottomUp = true\n        this.flag = String.fromCharCode(this.bufferView.getUint8(0), this.bufferView.getUint8(1))\n        this.pos = 2\n\n        if (this.flag !== 'BM') {\n            throw new Error('Invalid BMP File')\n        }\n\n        this.locRed = this.toRGBA ? 0 : 3\n        this.locGreen = this.toRGBA ? 1 : 2\n        this.locBlue = this.toRGBA ? 2 : 1\n        this.locAlpha = this.toRGBA ? 3 : 0\n\n        this.parseHeader()\n        this.parseRGBA()\n    }\n\n    private parseHeader() {\n        this.fileSize = this.readUInt32LE()\n\n        this.reserved1 = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n        this.reserved2 = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n\n        this.offset = this.readUInt32LE()\n\n        // End of BITMAP_FILE_HEADER\n        const headerSize = this.readUInt32LE()\n        if (!isHeaderType(headerSize)) throw new Error(`Unsupported BMP header size ${headerSize}`)\n        this.headerSize = headerSize\n\n        this.width = this.readUInt32LE()\n        this.height = this.readUInt32LE()\n\n        this.planes = this.bufferView.getUint16(this.pos, true)\n        this.pos += 2\n        this.bitPP = this.bufferView.getUint16(this.pos, true) as BitsPerPixel\n        this.pos += 2\n\n        const compression = this.readUInt32LE()\n        if (!isCompression(compression)) throw new Error(`Unsupported BMP compression ${compression}`)\n        this.compression = compression\n\n        this.rawSize = this.readUInt32LE()\n        this.hr = this.readUInt32LE()\n        this.vr = this.readUInt32LE()\n        this.colors = this.readUInt32LE()\n        this.importantColors = this.readUInt32LE()\n\n        // De facto defaults\n\n        if (this.bitPP === 32) {\n            this.maskAlpha = 0\n            this.maskRed = 0x00ff0000\n            this.maskGreen = 0x0000ff00\n            this.maskBlue = 0x000000ff\n        } else if (this.bitPP === 16) {\n            this.maskAlpha = 0\n            this.maskRed = 0x7c00\n            this.maskGreen = 0x03e0\n            this.maskBlue = 0x001f\n        }\n\n        // End of BITMAP_INFO_HEADER\n\n        if (\n            this.headerSize > HEADER_TYPE.BitmapInfoHeader ||\n            this.compression === Compression.BI_BIT_FIELDS ||\n            this.compression === Compression.BI_ALPHA_BIT_FIELDS\n        ) {\n            this.maskRed = this.readUInt32LE()\n            this.maskGreen = this.readUInt32LE()\n            this.maskBlue = this.readUInt32LE()\n        }\n\n        // End of BITMAP_V2_INFO_HEADER\n\n        if (\n            this.headerSize > HEADER_TYPE.BitmapV2InfoHeader ||\n            this.compression === Compression.BI_ALPHA_BIT_FIELDS\n        ) {\n            this.maskAlpha = this.readUInt32LE()\n        }\n\n        // End of BITMAP_V3_INFO_HEADER\n\n        if (this.headerSize > HEADER_TYPE.BitmapV3InfoHeader) {\n            this.pos +=\n                HEADER_TYPE.BitmapV4Header - HEADER_TYPE.BitmapV3InfoHeader\n        }\n\n        // End of BITMAP_V4_HEADER\n\n        if (this.headerSize > HEADER_TYPE.BitmapV4Header) {\n            this.pos += HEADER_TYPE.BitmapV5Header - HEADER_TYPE.BitmapV4Header\n        }\n\n        // End of BITMAP_V5_HEADER\n\n        if (this.bitPP <= 8 || this.colors > 0) {\n            const len = this.colors === 0 ? 1 << this.bitPP : this.colors\n            this.palette = new Array(len)\n\n            for (let i = 0; i < len; i++) {\n                const blue = this.bufferView.getUint8(this.pos++)\n                const green = this.bufferView.getUint8(this.pos++)\n                const red = this.bufferView.getUint8(this.pos++)\n                const quad = this.bufferView.getUint8(this.pos++)\n\n                this.palette[i] = {\n                    red,\n                    green,\n                    blue,\n                    quad,\n                }\n            }\n        }\n\n        // End of color table\n\n        // Can the height ever be negative?\n        if (this.height < 0) {\n            this.height *= -1\n            this.bottomUp = false\n        }\n\n        const coloShift = maskColor(\n            this.maskRed,\n            this.maskGreen,\n            this.maskBlue,\n            this.maskAlpha,\n        )\n\n        this.shiftRed = coloShift.shiftRed\n        this.shiftGreen = coloShift.shiftGreen\n        this.shiftBlue = coloShift.shiftBlue\n        this.shiftAlpha = coloShift.shiftAlpha\n    }\n\n    private parseRGBA() {\n        this.data = new Uint8Array(this.width * this.height * 4)\n\n        switch (this.bitPP) {\n            case 1:\n                this.bit1()\n                break\n            case 4:\n                this.bit4()\n                break\n            case 8:\n                this.bit8()\n                break\n            case 16:\n                this.bit16()\n                break\n            case 24:\n                this.bit24()\n                break\n            default:\n                this.bit32()\n        }\n    }\n\n    private bit1() {\n        const xLen = Math.ceil(this.width / 8)\n        const mode = xLen % 4\n        const padding = mode !== 0 ? 4 - mode : 0\n\n        let lastLine: number | undefined\n\n        this.scanImage(padding, xLen, (x, line) => {\n            if (line !== lastLine) {\n                lastLine = line\n            }\n\n            const b = this.bufferView.getUint8(this.pos++)\n            const location = line * this.width * 4 + x * 8 * 4\n\n            for (let i = 0; i < 8; i++) {\n                if (x * 8 + i < this.width) {\n                    const rgb = this.palette[(b >> (7 - i)) & 0x1]\n\n                    this.data[location + i * 4 + this.locAlpha] = 0xff\n                    this.data[location + i * 4 + this.locBlue] = rgb.blue\n                    this.data[location + i * 4 + this.locGreen] = rgb.green\n                    this.data[location + i * 4 + this.locRed] = rgb.red\n                } else {\n                    break\n                }\n            }\n        })\n    }\n\n    private bit4() {\n        if (this.compression === Compression.BI_RLE4) {\n            this.data.fill(0)\n\n            let lowNibble = false //for all count of pixel\n            let lines = this.bottomUp ? this.height - 1 : 0\n            let location = 0\n\n            while (location < this.data.length) {\n                const a = this.bufferView.getUint8(this.pos++)\n                const b = this.bufferView.getUint8(this.pos++)\n\n                //absolute mode\n                if (a === 0) {\n                    if (b === 0) {\n                        //line end\n                        lines += this.bottomUp ? -1 : 1\n                        location = lines * this.width * 4\n                        lowNibble = false\n\n                        continue\n                    }\n\n                    if (b === 1) {\n                        // image end\n                        break\n                    }\n\n                    if (b === 2) {\n                        // offset x, y\n                        const x = this.bufferView.getUint8(this.pos++)\n                        const y = this.bufferView.getUint8(this.pos++)\n\n                        lines += this.bottomUp ? -y : y\n                        location += y * this.width * 4 + x * 4\n                    } else {\n                        let c = this.bufferView.getUint8(this.pos++)\n\n                        for (let i = 0; i < b; i++) {\n                            location = this.setPixelData(\n                                location,\n                                lowNibble ? c & 0x0f : (c & 0xf0) >> 4,\n                            )\n\n                            if (i & 1 && i + 1 < b) {\n                                c = this.bufferView.getUint8(this.pos++)\n                            }\n\n                            lowNibble = !lowNibble\n                        }\n\n                        if ((((b + 1) >> 1) & 1) === 1) {\n                            this.pos++\n                        }\n                    }\n                } else {\n                    //encoded mode\n                    for (let i = 0; i < a; i++) {\n                        location = this.setPixelData(\n                            location,\n                            lowNibble ? b & 0x0f : (b & 0xf0) >> 4,\n                        )\n                        lowNibble = !lowNibble\n                    }\n                }\n            }\n        } else {\n            const xLen = Math.ceil(this.width / 2)\n            const mode = xLen % 4\n            const padding = mode !== 0 ? 4 - mode : 0\n\n            this.scanImage(padding, xLen, (x, line) => {\n                const b = this.bufferView.getUint8(this.pos++)\n                const location = line * this.width * 4 + x * 2 * 4\n\n                const first4 = b >> 4\n                let rgb = this.palette[first4]\n\n                this.data[location + this.locAlpha] = 0xff\n                this.data[location + this.locBlue] = rgb.blue\n                this.data[location + this.locGreen] = rgb.green\n                this.data[location + this.locRed] = rgb.red\n\n                if (x * 2 + 1 >= this.width) {\n                    // throw new Error('Something');\n                    return\n                }\n\n                const last4 = b & 0x0f\n                rgb = this.palette[last4]\n\n                this.data[location + 4 + this.locAlpha] = 0xff\n                this.data[location + 4 + this.locBlue] = rgb.blue\n                this.data[location + 4 + this.locGreen] = rgb.green\n                this.data[location + 4 + this.locRed] = rgb.red\n            })\n        }\n    }\n\n    private bit8() {\n        if (this.compression === Compression.BI_RLE8) {\n            this.data.fill(0)\n\n            let lines = this.bottomUp ? this.height - 1 : 0\n            let location = 0\n\n            while (location < this.data.length) {\n                const a = this.bufferView.getUint8(this.pos++)\n                const b = this.bufferView.getUint8(this.pos++)\n\n                //absolute mode\n                if (a === 0) {\n                    if (b === 0) {\n                        //line end\n                        lines += this.bottomUp ? -1 : 1\n                        location = lines * this.width * 4\n                        continue\n                    }\n\n                    if (b === 1) {\n                        //image end\n                        break\n                    }\n\n                    if (b === 2) {\n                        //offset x,y\n                        const x = this.bufferView.getUint8(this.pos++)\n                        const y = this.bufferView.getUint8(this.pos++)\n\n                        lines += this.bottomUp ? -y : y\n                        location += y * this.width * 4 + x * 4\n                    } else {\n                        for (let i = 0; i < b; i++) {\n                            const c = this.bufferView.getUint8(this.pos++)\n                            location = this.setPixelData(location, c)\n                        }\n\n                        // @ts-ignore\n                        const shouldIncrement = b & (1 === 1)\n                        if (shouldIncrement) {\n                            this.pos++\n                        }\n                    }\n                } else {\n                    //encoded mode\n                    for (let i = 0; i < a; i++) {\n                        location = this.setPixelData(location, b)\n                    }\n                }\n            }\n        } else {\n            const mode = this.width % 4\n            const padding = mode !== 0 ? 4 - mode : 0\n\n            this.scanImage(padding, this.width, (x, line) => {\n                const b = this.bufferView.getUint8(this.pos++)\n                const location = line * this.width * 4 + x * 4\n\n                if (b < this.palette.length) {\n                    const rgb = this.palette[b]\n\n                    this.data[location + this.locAlpha] = 0xff\n                    this.data[location + this.locBlue] = rgb.blue\n                    this.data[location + this.locGreen] = rgb.green\n                    this.data[location + this.locRed] = rgb.red\n                }\n            })\n        }\n    }\n\n    private bit16() {\n        const padding = (this.width % 2) * 2\n\n        this.scanImage(padding, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const px = this.bufferView.getUint16(this.pos, true)\n            this.pos += 2\n\n            this.data[loc + this.locRed] = this.shiftRed(px)\n            this.data[loc + this.locGreen] = this.shiftGreen(px)\n            this.data[loc + this.locBlue] = this.shiftBlue(px)\n            this.data[loc + this.locAlpha] = this.shiftAlpha(px)\n        })\n    }\n\n    private bit24() {\n        const padding = this.width % 4\n\n        this.scanImage(padding, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const blue = this.bufferView.getUint8(this.pos++)\n            const green = this.bufferView.getUint8(this.pos++)\n            const red = this.bufferView.getUint8(this.pos++)\n\n            this.data[loc + this.locAlpha] = 0xff\n            this.data[loc + this.locBlue] = blue\n            this.data[loc + this.locGreen] = green\n            this.data[loc + this.locRed] = red\n        })\n    }\n\n    private bit32() {\n        this.scanImage(0, this.width, (x, line) => {\n            const loc = line * this.width * 4 + x * 4\n            const px = this.readUInt32LE()\n\n            this.data[loc + this.locAlpha] = this.shiftAlpha(px)\n            this.data[loc + this.locBlue] = this.shiftBlue(px)\n            this.data[loc + this.locGreen] = this.shiftGreen(px)\n            this.data[loc + this.locRed] = this.shiftRed(px)\n        })\n    }\n\n    private scanImage(\n        padding = 0,\n        width = this.width,\n        processPixel: IColorProcessor,\n    ) {\n        for (let y = this.height - 1; y >= 0; y--) {\n            const line = this.bottomUp ? y : this.height - 1 - y\n\n            for (let x = 0; x < width; x++) {\n                processPixel.call(this, x, line)\n            }\n\n            this.pos += padding\n        }\n    }\n\n    private readUInt32LE() {\n        const value = this.bufferView.getUint32(this.pos, true)\n        this.pos += 4\n        return value\n    }\n\n    private setPixelData(location: number, rgbIndex: number) {\n        const {blue, green, red} = this.palette[rgbIndex]\n\n        this.data[location + this.locAlpha] = 0xff\n        this.data[location + this.locBlue] = blue\n        this.data[location + this.locGreen] = green\n        this.data[location + this.locRed] = red\n\n        return location + 4\n    }\n}\n\nexport class BitmapWithPalette extends ImageData {\n    readonly palette: IColor[]\n\n    static decode(bitmapData: DataView): BitmapWithPalette {\n        return new BitmapWithPalette(new BmpDecoder(bitmapData, {toRGBA: true}))\n    }\n\n    constructor(decoder: BmpDecoder) {\n        super(new Uint8ClampedArray(decoder.data), decoder.width, decoder.height)\n        this.palette = decoder.palette\n    }\n\n    applyAlphaByIndex(alphaIndex: number): BitmapWithPalette {\n        if (alphaIndex || alphaIndex === 0) {\n            const fallbackColor = {red: this.data[0], green: this.data[1], blue: this.data[2]} // XXX color not in palette for a102_bigtyre.bmp or a277_head_stud.bmp\n            const alphaColor = this.palette?.[alphaIndex] ?? fallbackColor\n            if (alphaColor) {\n                const data = this.data\n                for (let c = 0; c < data.length; c += 4) {\n                    data[c + 3] = alphaColor.red === data[c] && alphaColor.green === data[c + 1] && alphaColor.blue === data[c + 2] ? 0 : 255\n                }\n            }\n        } else {\n            console.warn(`Invalid alpha index (${alphaIndex}) given`)\n        }\n        return this\n    }\n\n    applyAlpha(): BitmapWithPalette {\n        const data = this.data\n        for (let n = 0; n < data.length; n += 4) {\n            // Interface/Reward/RSoxygen.bmp uses 2/2/2 as \"black\" alpha background\n            // Baz's mod uses 5/2/4 as \"black\" alpha background for level images\n            if (data[n] <= 12 && data[n + 1] <= 12 && data[n + 2] <= 12) {\n                data[n + 3] = 0\n            }\n        }\n        return this\n    }\n\n    applyAlphaTranslucent(): BitmapWithPalette {\n        const data = this.data\n        for (let n = 0; n < data.length; n += 4) {\n            const grey = (data[n] + data[n + 1] + data[n + 2]) / 3\n            data[n + 3] = Math.min(255, grey * 4)\n        }\n        return this\n    }\n}\n","import { TypedWorkerBackend, WorkerRequestMessage, WorkerResponseMessage } from './TypedWorker'\n\nexport abstract class AbstractWorkerSystem<M, R> {\n    constructor(readonly worker: TypedWorkerBackend<WorkerRequestMessage<M>, WorkerResponseMessage<R>>) {\n        worker.onMessageFromFrontend = (msg) => {\n            try {\n                if (msg.request) {\n                    this.onMessageFromFrontend(msg.workerRequestHash, msg.request)\n                } else {\n                    console.warn('Worker received message without request from frontend')\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n\n    abstract onMessageFromFrontend(workerRequestHash: string, request: M): void\n\n    sendResponse(workerRequestHash: string, response: R, transfer?: Transferable[]) {\n        this.worker.sendResponse({workerRequestHash: workerRequestHash, response: response}, transfer)\n    }\n}\n","import { TypedWorkerThreaded } from './TypedWorker'\nimport { BitmapWithPalette } from '../resource/fileparser/BitmapWithPalette'\nimport { AbstractWorkerSystem } from './AbstractWorkerSystem'\n\nexport const BITMAP_WORKER_REQUEST_TYPE = {\n    decodeBitmap: 1, // start with 1 for truthiness safety\n    decodeBitmapAlpha: 2,\n    decodeBitmapAlphaIndex: 3,\n    decodeBitmapAlphaTranslucent: 4,\n} as const\ntype BitmapWorkerRequestType = typeof BITMAP_WORKER_REQUEST_TYPE[keyof typeof BITMAP_WORKER_REQUEST_TYPE]\n\nexport interface BitmapWorkerRequest {\n    type: BitmapWorkerRequestType\n    bitmapData: ArrayBuffer\n    alphaIndex?: number\n}\n\nexport interface BitmapWorkerResponse {\n    decoded: BitmapWithPalette\n}\n\nexport class BitmapSystem extends AbstractWorkerSystem<BitmapWorkerRequest, BitmapWorkerResponse> {\n    onMessageFromFrontend(workerRequestHash: string, request: BitmapWorkerRequest): void {\n        const decoded = BitmapWithPalette.decode(new DataView(request.bitmapData))\n        switch (request.type) {\n            case BITMAP_WORKER_REQUEST_TYPE.decodeBitmap:\n                this.sendResponse(workerRequestHash, {decoded: decoded})\n                break\n            case BITMAP_WORKER_REQUEST_TYPE.decodeBitmapAlpha:\n                this.sendResponse(workerRequestHash, {decoded: decoded.applyAlpha()})\n                break\n            case BITMAP_WORKER_REQUEST_TYPE.decodeBitmapAlphaIndex:\n                if (request.alphaIndex === undefined || request.alphaIndex === null) {\n                    console.error(`No alpha index given for bitmap decode request`)\n                    return\n                }\n                this.sendResponse(workerRequestHash, {decoded: decoded.applyAlphaByIndex(request.alphaIndex)})\n                break\n            case BITMAP_WORKER_REQUEST_TYPE.decodeBitmapAlphaTranslucent:\n                this.sendResponse(workerRequestHash, {decoded: decoded.applyAlphaTranslucent()})\n                break\n        }\n    }\n}\n\nconst worker: Worker = self as any\nnew BitmapSystem(new TypedWorkerThreaded(worker))\n","import { TypedWorker, TypedWorkerFallback, TypedWorkerFrontend, WorkerRequestMessage, WorkerResponseMessage } from './TypedWorker'\n\nexport abstract class AbstractWorkerPool<M, R> {\n    private readonly allWorkers: Set<TypedWorker<WorkerRequestMessage<M>>> = new Set()\n    private readonly idleWorkers: TypedWorker<WorkerRequestMessage<M>>[] = []\n    private readonly openRequests: Map<string, ((response: R) => unknown)[]> = new Map()\n    private readonly messageBacklog: WorkerRequestMessage<M>[] = []\n    private readonly broadcastHistory: Set<M> = new Set()\n    private lastRequestId: number = 1\n\n    protected abstract createWorker(): Worker\n\n    protected abstract attachFallbackSystem(worker: TypedWorkerFallback<WorkerRequestMessage<M>, WorkerResponseMessage<R>>): void\n\n    startPool(poolSize: number, setupMessage: M | undefined): this {\n        if (this.allWorkers.size > 0) {\n            console.warn('Pool already has been started')\n            return this\n        }\n        for (let c = 0; c < poolSize; c++) {\n            const worker = this.createTypedWorker()\n            this.allWorkers.add(worker)\n            if (setupMessage) {\n                this.lastRequestId++\n                const message: WorkerRequestMessage<M> = {workerRequestHash: `message-${this.lastRequestId}`, request: setupMessage}\n                this.openRequests.getOrUpdate(message.workerRequestHash, () => []).push(() => this.sendBroadcasts(worker))\n                // response handler must be registered before sending, because send message is synchron with fallback worker\n                worker.sendMessage(message)\n            } else {\n                this.sendBroadcasts(worker)\n            }\n        }\n        return this\n    }\n\n    private sendBroadcasts(worker: TypedWorker<WorkerRequestMessage<M>>) {\n        if (this.allWorkers.size < 1) throw new Error('No workers, has pool been started?')\n        this.broadcastHistory.forEach((broadcast) => {\n            this.lastRequestId++\n            const message: WorkerRequestMessage<M> = {workerRequestHash: `broadcast-${this.lastRequestId}`, request: broadcast}\n            worker.sendMessage(message)\n        })\n        this.processNextMessage(worker)\n    }\n\n    terminatePool() {\n        this.allWorkers.forEach((w) => w.terminate())\n        this.allWorkers.clear()\n    }\n\n    private createTypedWorker(): TypedWorker<WorkerRequestMessage<M>> {\n        try {\n            const workerFrontend: TypedWorkerFrontend<WorkerRequestMessage<M>, WorkerResponseMessage<R>> = new TypedWorkerFrontend(this.createWorker(),\n                (r: WorkerResponseMessage<R>) => this.onWorkerResponse(workerFrontend, r))\n            return workerFrontend\n        } catch (e) {\n            console.warn('Could not setup threaded worker!\\nUsing fallback to main thread, expect reduced performance.', e)\n            const wadWorker: TypedWorkerFallback<WorkerRequestMessage<M>, WorkerResponseMessage<R>> = new TypedWorkerFallback(\n                (r: WorkerResponseMessage<R>) => this.onWorkerResponse(wadWorker, r))\n            this.attachFallbackSystem(wadWorker)\n            return wadWorker\n        }\n    }\n\n    protected processMessage(request: M & { hash?: string }): Promise<R> {\n        if (this.allWorkers.size < 1) throw new Error('No workers, has pool been started?')\n        let workerRequestHash = request.hash\n        if (!workerRequestHash) {\n            this.lastRequestId++\n            workerRequestHash = `message-${this.lastRequestId}`\n        }\n        const message = {workerRequestHash: workerRequestHash, request: request}\n        const openRequests = this.openRequests.getOrUpdate(message.workerRequestHash, () => [])\n        const idleWorker = this.idleWorkers.shift()\n        if (!idleWorker && openRequests.length < 1) this.messageBacklog.push(message)\n        // response handler must be registered before sending, because send message is synchron with fallback worker\n        const result = new Promise<R>((resolve) => openRequests.push(resolve))\n        idleWorker?.sendMessage(message)\n        return result\n    }\n\n    protected broadcast(broadcast: M): Promise<R>[] {\n        if (this.allWorkers.size < 1) throw new Error('No workers, has pool been started?')\n        this.broadcastHistory.add(broadcast)\n        const result: Promise<R>[] = []\n        this.allWorkers.forEach((worker) => {\n            this.lastRequestId++\n            const message = {workerRequestHash: `broadcast-${this.lastRequestId}`, request: broadcast}\n            result.push(new Promise<R>((resolve) => this.openRequests.getOrUpdate(message.workerRequestHash, () => []).push(resolve)))\n            // response handler must be registered before sending, because send message is synchron with fallback worker\n            worker.sendMessage(message)\n        })\n        return result\n    }\n\n    private onWorkerResponse(worker: TypedWorker<WorkerRequestMessage<M>>, response: WorkerResponseMessage<R>) {\n        if (response.workerRequestHash) {\n            const requests = this.openRequests.get(response.workerRequestHash)\n            if (requests) {\n                requests.forEach((r) => r(response.response))\n                this.openRequests.set(response.workerRequestHash, [])\n            } else {\n                // TODO When sending a broadcast, each broadcast message needs it's own request hash, otherwise two worker replying a broadcast trigger this warning. Or don't reply to broadcasts at all?\n                if (!response.workerRequestHash.startsWith('broadcast-')) {\n                    console.warn(`Received response for unknown request ${response.workerRequestHash}`)\n                }\n            }\n        } else {\n            console.warn(`Received unexpected worker response`, response)\n        }\n        this.processNextMessage(worker)\n    }\n\n    private processNextMessage(worker: TypedWorker<WorkerRequestMessage<M>>) {\n        const nextMessage = this.messageBacklog.shift()\n        if (nextMessage) {\n            worker.sendMessage(nextMessage)\n        } else {\n            this.idleWorkers.push(worker)\n        }\n    }\n}\n","import { BitmapWithPalette } from '../resource/fileparser/BitmapWithPalette'\nimport { BITMAP_WORKER_REQUEST_TYPE, BitmapSystem, BitmapWorkerRequest, BitmapWorkerResponse } from './BitmapWorker'\nimport { AbstractWorkerPool } from './AbstractWorkerPool'\nimport { TypedWorkerFallback, WorkerRequestMessage, WorkerResponseMessage } from './TypedWorker'\n\nexport class BitmapWorkerPool extends AbstractWorkerPool<BitmapWorkerRequest, BitmapWorkerResponse> {\n    static readonly instance = new BitmapWorkerPool()\n\n    protected createWorker() {\n        return new Worker(new URL('./BitmapWorker', import.meta.url), {type: 'module'}) // do not change this line otherwise no worker.js is exported for production\n    }\n\n    protected attachFallbackSystem(worker: TypedWorkerFallback<WorkerRequestMessage<BitmapWorkerRequest>, WorkerResponseMessage<BitmapWorkerResponse>>) {\n        new BitmapSystem(worker)\n    }\n\n    async decodeBitmap(data: ArrayBuffer): Promise<BitmapWithPalette> {\n        const message = {type: BITMAP_WORKER_REQUEST_TYPE.decodeBitmap, bitmapData: data}\n        const response = await this.processMessage(message)\n        return response.decoded\n    }\n\n    async decodeBitmapWithAlpha(data: ArrayBuffer): Promise<BitmapWithPalette> {\n        const message = {type: BITMAP_WORKER_REQUEST_TYPE.decodeBitmapAlpha, bitmapData: data}\n        const response = await this.processMessage(message)\n        return response.decoded\n    }\n\n    async decodeBitmapWithAlphaIndex(data: ArrayBuffer, alphaIndex: number): Promise<BitmapWithPalette> {\n        const message = {type: BITMAP_WORKER_REQUEST_TYPE.decodeBitmapAlphaIndex, bitmapData: data, alphaIndex: alphaIndex}\n        const response = await this.processMessage(message)\n        return response.decoded\n    }\n\n    async decodeBitmapWithAlphaTranslucent(data: ArrayBuffer): Promise<BitmapWithPalette> {\n        const message = {type: BITMAP_WORKER_REQUEST_TYPE.decodeBitmapAlphaTranslucent, bitmapData: data}\n        const response = await this.processMessage(message)\n        return response.decoded\n    }\n}\n","export class LevelObjectiveTextEntry {\n    levelKey: string = ''\n    objective: string = ''\n    failure: string = ''\n    completion: string = ''\n    crystalFailure: string = ''\n}\n\nexport type LevelObjectiveTexts = Record<string, LevelObjectiveTextEntry>\n\nexport class ObjectiveTextParser {\n    parseObjectiveTextFile(txtFileText: string): LevelObjectiveTexts {\n        const result: LevelObjectiveTexts = {}\n        let currentLevel: LevelObjectiveTextEntry\n        txtFileText.split('\\n').forEach((l) => {\n            const line = l.trim()\n            if (line.startsWith('[') && line.endsWith(']')) {\n                currentLevel = new LevelObjectiveTextEntry()\n                currentLevel.levelKey = line.slice(1, -1)\n                result[currentLevel.levelKey.toLowerCase()] = currentLevel\n            } else if (line.toLowerCase().startsWith('Objective:'.toLowerCase())) {\n                currentLevel.objective = line.slice('Objective:'.length).trim()\n            } else if (line.toLowerCase().startsWith('Failure:'.toLowerCase())) {\n                currentLevel.failure = line.slice('Failure:'.length).trim()\n            } else if (line.toLowerCase().startsWith('Completion:'.toLowerCase())) {\n                currentLevel.completion = line.slice('Completion:'.length).trim()\n            } else if (line.toLowerCase().startsWith('CrystalFailure:'.toLowerCase())) {\n                currentLevel.crystalFailure = line.slice('CrystalFailure:'.length).trim()\n            }\n        })\n        return result\n    }\n}\n","import { getFilename } from '../../core/Util'\n\nexport class UVData {\n    names: string[] = []\n    mapNames: string[] = []\n    uvs: number[][] = []\n}\n\nexport class LWOUVParser {\n    constructor(readonly verbose: boolean = false) {\n    }\n\n    parse(content: string): UVData {\n        const result: UVData = new UVData()\n        if (this.verbose) console.log(content)\n        const lines = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n') // normalize newlines\n            .replace(/\\t/g, ' ') // tabs to spaces\n            .split('\\n')\n            .map((l) => l.trim())\n        if (this.verbose) console.log(lines)\n        let fileIndex = 0\n        if (lines[fileIndex] !== '2') { // XXX What means 2 in first line?\n            throw new Error(`first line is not 2, but ${lines[0]}`)\n        }\n        fileIndex++\n        const numOfMats = Number(lines[fileIndex])\n        if (this.verbose) console.log(`UV file should contain ${numOfMats} materials`)\n        fileIndex++\n        for (let c = 0; c < numOfMats; c++) {\n            const matName = lines[fileIndex + c]\n            if (this.verbose) console.log('Material name is ', matName)\n            result.names.push(matName)\n        }\n        fileIndex += numOfMats\n        for (let c = 0; c < numOfMats; c++) {\n            const mapName = lines[fileIndex + c]\n            if (this.verbose) console.log('Texture map name is ', mapName)\n            result.mapNames.push(getFilename(mapName))\n        }\n        fileIndex += numOfMats\n        const numOfCoords = Number(lines[fileIndex])\n        if (this.verbose) console.log(`Expecting ${numOfCoords} coords`)\n        fileIndex++\n        for (let c = 0; c < numOfCoords; c++) {\n            const tupleLine = lines[fileIndex]\n            if (this.verbose) console.log('tupleLine', tupleLine)\n            fileIndex++\n            const [uvIndex, uvLength] = tupleLine.split(' ').map((n) => Number(n))\n            result.uvs[uvIndex] = []\n            if (this.verbose) console.log(`tuple index is ${uvIndex} and length is ${uvLength}`)\n            for (let t = 0; t < uvLength; t++) {\n                const uvLine = lines[fileIndex]\n                if (this.verbose) console.log(uvLine)\n                const [u, v, w] = uvLine.split(' ').map((n) => Number(n))\n                if (w !== 0) console.warn(`Unexpected non zero third UV value w = ${w} given`)\n                result.uvs[uvIndex].push(u, v)\n                fileIndex++\n            }\n        }\n        for (let c = 0; c < numOfMats; c++) {\n            const nextLine = lines[fileIndex]\n            if (this.verbose) console.log('nextLine', nextLine)\n            fileIndex++\n            const tupleLength = Number(nextLine) // should be always 4\n            if (tupleLength !== 4) {\n                console.error(`Unexpected tuple length ${tupleLength}`)\n                continue\n            }\n            // OXRot OYRot OZRot\n            fileIndex++\n            // XRotation YRotation ZRotation\n            fileIndex++\n            // XPosition YPosition ZPosition\n            fileIndex++\n            // XScale YScale ZScale\n            fileIndex++\n        }\n        if (this.verbose) console.log(result)\n        return result\n    }\n}\n","import { AVIVideoDecoder } from './AVIVideoStream'\nimport { getPixel, setPixel } from '../../../core/ImageHelper'\nimport { ByteStreamReader } from '../../../core/ByteStreamReader'\nimport { AVIVideoFormat } from './AVI'\n\nexport class MSVCDecoder implements AVIVideoDecoder {\n    constructor(readonly videoFormat: AVIVideoFormat) {\n        if (videoFormat.biBitCount !== 16) {\n            throw new Error(`Unhandled video bit count ${videoFormat.biBitCount}`)\n        }\n    }\n\n    decodeFrame(previousFrame: ImageData, chunkReader: ByteStreamReader): ImageData {\n        let byteA = chunkReader.read8()\n        let byteB = chunkReader.read8()\n        const result = new ImageData(this.videoFormat.biWidth, this.videoFormat.biHeight)\n        const blockRowLen = this.videoFormat.biWidth / 4\n        const blockColHeight = this.videoFormat.biHeight / 4\n        let blockIndex = 0\n        while (blockIndex < blockRowLen * blockColHeight) {\n            if (byteB < 0x80) {\n                const colorA = chunkReader.read16()\n                if (colorA & 0x8000) {\n                    const quad1A = colorA\n                    const quad1B = chunkReader.read16()\n                    const quad2A = chunkReader.read16()\n                    const quad2B = chunkReader.read16()\n                    const quad3A = chunkReader.read16()\n                    const quad3B = chunkReader.read16()\n                    const quad4A = chunkReader.read16()\n                    const quad4B = chunkReader.read16()\n                    const blockColors: number[] = [\n                        (byteA & 0b00000001) ? quad1A : quad1B, (byteA & 0b00000010) ? quad1A : quad1B,\n                        (byteA & 0b00000100) ? quad2A : quad2B, (byteA & 0b00001000) ? quad2A : quad2B,\n                        (byteA & 0b00010000) ? quad1A : quad1B, (byteA & 0b00100000) ? quad1A : quad1B,\n                        (byteA & 0b01000000) ? quad2A : quad2B, (byteA & 0b10000000) ? quad2A : quad2B,\n                        (byteB & 0b00000001) ? quad3A : quad3B, (byteB & 0b00000010) ? quad3A : quad3B,\n                        (byteB & 0b00000100) ? quad4A : quad4B, (byteB & 0b00001000) ? quad4A : quad4B,\n                        (byteB & 0b00010000) ? quad3A : quad3B, (byteB & 0b00100000) ? quad3A : quad3B,\n                        (byteB & 0b01000000) ? quad4A : quad4B, (byteB & 0b10000000) ? quad4A : quad4B,\n                    ]\n                    this.writeBlockToImageData(blockColors, result, blockIndex, blockRowLen)\n                } else {\n                    const colorB = chunkReader.read16()\n                    const blockColors = [\n                        (byteA & 0b00000001) ? colorA : colorB, (byteA & 0b00000010) ? colorA : colorB,\n                        (byteA & 0b00000100) ? colorA : colorB, (byteA & 0b00001000) ? colorA : colorB,\n                        (byteA & 0b00010000) ? colorA : colorB, (byteA & 0b00100000) ? colorA : colorB,\n                        (byteA & 0b01000000) ? colorA : colorB, (byteA & 0b10000000) ? colorA : colorB,\n                        (byteB & 0b00000001) ? colorA : colorB, (byteB & 0b00000010) ? colorA : colorB,\n                        (byteB & 0b00000100) ? colorA : colorB, (byteB & 0b00001000) ? colorA : colorB,\n                        (byteB & 0b00010000) ? colorA : colorB, (byteB & 0b00100000) ? colorA : colorB,\n                        (byteB & 0b01000000) ? colorA : colorB, (byteB & 0b10000000) ? colorA : colorB,\n                    ]\n                    this.writeBlockToImageData(blockColors, result, blockIndex, blockRowLen)\n                }\n            } else if (byteB < 0x84 || byteB >= 0x88) {\n                const blockColor = (byteB << 8) + byteA\n                const blockColors: number[] = [\n                    blockColor, blockColor, blockColor, blockColor,\n                    blockColor, blockColor, blockColor, blockColor,\n                    blockColor, blockColor, blockColor, blockColor,\n                    blockColor, blockColor, blockColor, blockColor\n                ]\n                this.writeBlockToImageData(blockColors, result, blockIndex, blockRowLen)\n            } else {\n                const n = (byteB - 0x84) * 256 + byteA\n                this.copyFromPreviousFrame(previousFrame, result, blockIndex, n, blockRowLen)\n                blockIndex += n - 1\n            }\n            blockIndex++\n            byteA = chunkReader.read8()\n            byteB = chunkReader.read8()\n        }\n        return result\n    }\n\n    writeBlockToImageData(blockColors: number[], imageData: ImageData, blockIndex: number, blockRowLen: number) {\n        if (blockColors.length !== 16) throw new Error(`Invalid number of block colors given; got ${blockColors.length} instead of 16`)\n        const blockX = (blockIndex % blockRowLen) * 4\n        const blockY = imageData.height - 1 - Math.floor(blockIndex / blockRowLen) * 4\n        for (let index = 0; index < 16; index++) {\n            const x = index % 4\n            const y = Math.floor(index / 4)\n            const r = (blockColors[index] & 0b0111110000000000) >> (10 - 3)\n            const g = (blockColors[index] & 0b0000001111100000) >> (5 - 3)\n            const b = (blockColors[index] & 0b0000000000011111) << 3\n            setPixel(imageData, blockX + x, blockY - y, r, g, b)\n        }\n    }\n\n    copyFromPreviousFrame(previousFrame: ImageData, targetFrame: ImageData, blockIndex: number, numBlocks: number, blockRowLen: number) {\n        for (let c = 0; c < numBlocks; c++) {\n            const blockX = ((blockIndex + c) % blockRowLen) * 4\n            const blockY = targetFrame.height - 1 - Math.floor((blockIndex + c) / blockRowLen) * 4\n            for (let index = 0; index < 16; index++) {\n                const x = index % 4\n                const y = Math.floor(index / 4)\n                const color = getPixel(previousFrame, blockX + x, blockY - y)\n                setPixel(targetFrame, blockX + x, blockY - y, color.r, color.g, color.b)\n            }\n        }\n    }\n}\n","import { ByteStreamReader } from '../../../core/ByteStreamReader'\nimport { SpriteContext, SpriteImage } from '../../../core/Sprite'\nimport { MSVCDecoder } from './MSVCDecoder'\nimport { AVIStreamHeader, AVIVideoFormat } from './AVI'\n\nexport interface AVIVideoDecoder {\n    decodeFrame(previousFrame: ImageData, aviReader: ByteStreamReader): ImageData\n}\n\nexport class AVIVideoStream {\n    readonly frameChunks: ByteStreamReader[] = []\n    readonly framesDecoded: ImageData[] = []\n    readonly canvas: SpriteImage\n    readonly context: SpriteContext\n    readonly decoder: AVIVideoDecoder\n    frameIndex: number = 0\n\n    constructor(\n        readonly streamIndex: number,\n        readonly streamHeader: AVIStreamHeader,\n        readonly videoFormat: AVIVideoFormat,\n    ) {\n        this.canvas = document.createElement('canvas')\n        this.canvas.width = videoFormat.biWidth\n        this.canvas.height = videoFormat.biHeight\n        const context = this.canvas.getContext('2d')\n        if (!context) throw new Error('Failed to get context for video frame canvas')\n        this.context = context\n\n        switch (streamHeader.fccHandler) {\n            case 'MSVC':\n            case 'CRAM':\n            case 'WHAM':\n                this.decoder = new MSVCDecoder(this.videoFormat)\n                break\n            default:\n                throw new Error(`Unhandled video codec ${streamHeader.fccHandler}`)\n        }\n    }\n\n    setFrameChunks(chunks: ByteStreamReader[]) {\n        this.frameChunks.push(...chunks)\n    }\n\n    getNextFrame(): SpriteImage {\n        if (this.frameChunks.length > 0) {\n            this.framesDecoded[this.frameIndex] = this.framesDecoded[this.frameIndex] ?? this.decoder.decodeFrame(this.framesDecoded[this.frameIndex - 1], this.frameChunks[this.frameIndex])\n            this.context.putImageData(this.framesDecoded[this.frameIndex], 0, 0)\n            this.frameIndex = (this.frameIndex + 1) % this.frameChunks.length\n        }\n        return this.canvas\n    }\n}\n","// see https://learn.microsoft.com/en-us/windows/win32/directshow/avi-riff-file-reference\n\nexport interface AVIMainHeader {\n    streams: number\n    flags: number\n    suggestedBufferSize: number\n    width: number\n    initialFrames: number\n    microSecPerFrame: number\n    paddingGranularity: number\n    maxBytesPerSec: number\n    totalFrames: number\n    height: number\n}\n\nexport interface AVIStreamHeader {\n    fccType: string\n    flags: number\n    start: number\n    length: number\n    suggestedBufferSize: number\n    scale: number\n    language: number\n    priority: number\n    sampleSize: number\n    quality: number\n    rate: number\n    fccHandler: string\n    initialFrames: number\n    frame: { top: number; left: number; bottom: number; right: number }\n}\n\nexport interface AVIVideoFormat {\n    biHeight: number\n    biSize: number\n    biSizeImage: number\n    biWidth: number\n    biCompression: number\n    biClrUsed: number\n    biClrImportant: number\n    biBitCount: number\n    biXPelsPerMeter: number\n    biPlanes: number\n    biYPelsPerMeter: number\n}\n\nexport const WAVE_FORMAT_MSADPCM = 0x2\n\nexport interface AVIAudioFormat {\n    wFormatTag: number\n    nChannels: number\n    nSamplesPerSec: number\n    nAvgBytesPerSec: number\n    nBlockAlign: number\n    wBitsPerSample: number\n    cbSize: number\n    extra?: MSADPCMAdditionalInfo\n}\n\nexport interface MSADPCMAdditionalInfo {\n    wSamplesPerBlock: number\n    wNumCoefficients: number\n    coefficientPairs: number[][]\n}\n","import { ByteStreamReader } from '../../../core/ByteStreamReader'\nimport { AVIParser } from './AVIParser'\n\nexport interface AVIItem {\n    chunkType: string\n    reader: AVIReader\n}\n\nexport class AVIReader extends ByteStreamReader {\n    readFourCC(): string {\n        return this.readString(4)\n    }\n\n    readItem(): AVIItem | undefined {\n        const chunkType = this.skipJunk()\n        if (!chunkType) return undefined\n        const chunkLength = this.read32()\n        const nextOffset = this.dataView.byteOffset + this.offset\n        const reader = new AVIReader(new DataView(this.dataView.buffer, nextOffset, chunkLength))\n        this.offset += chunkLength\n        this.offset += this.offset % 2 // padded to WORD boundary\n        return {chunkType, reader}\n    }\n\n    private skipJunk(): string | undefined {\n        let chunkType: string | undefined\n        while (this.hasMoreData()) {\n            chunkType = this.readFourCC()\n            if (chunkType === AVIParser.CHUNK_TYPE_JUNK) {\n                const chunkLength = this.read32()\n                this.offset += chunkLength\n                this.offset += this.offset % 2 // padded to WORD boundary\n            } else {\n                break\n            }\n        }\n        return chunkType\n    }\n\n    readList(expectedListType: string): AVIReader {\n        const list = this.readItem()\n        if (list?.chunkType !== AVIParser.CHUNK_TYPE_LIST) throw new Error(`Unexpected chunk type; got ${list?.chunkType} instead of ${AVIParser.CHUNK_TYPE_LIST}`)\n        const listType = list.reader.readFourCC()\n        if (listType !== expectedListType) throw new Error(`Unexpected list type; got ${listType} instead of ${expectedListType}`)\n        return list.reader\n    }\n\n    forEachItem(callback: (item: AVIItem) => void): void {\n        let item = this.readItem()\n        while (item) {\n            callback(item)\n            item = this.readItem()\n        }\n    }\n}\n","import { AVIAudioDecoder } from './AVIAudioStream'\nimport { AVIReader } from './AVIReader'\nimport { AVIAudioFormat } from './AVI'\n\n// Inspired by https://github.com/Snack-X/node-ms-adpcm/blob/master/index.js\n\nexport class ADPCMAudioDecoder implements AVIAudioDecoder {\n    static readonly ADAPTATION_TABLE = [\n        230, 230, 230, 230, 307, 409, 512, 614,\n        768, 614, 512, 409, 307, 230, 230, 230,\n    ]\n\n    coefficient1: number[] = [256, 512, 0, 192, 240, 460, 392]\n    coefficient2: number[] = [0, -256, 0, 64, 0, -208, -232]\n\n    constructor(\n        readonly audioFormat: AVIAudioFormat,\n    ) {\n        if (audioFormat.extra) {\n            this.coefficient1 = audioFormat.extra.coefficientPairs[0]\n            this.coefficient2 = audioFormat.extra.coefficientPairs[1]\n        }\n    }\n\n    decode(buf: AVIReader, channels: number, wSamplesPerBlock: number): number[][] {\n        const coefficient1: number[] = []\n        const coefficient2: number[] = []\n        const delta: number[] = []\n        const sample1: number[] = []\n        const sample2: number[] = []\n        // Read MS-ADPCM chunk header\n        for (let i = 0; i < channels; i++) {\n            const predictor = ADPCMAudioDecoder.clamp(buf.read8(), 0, 6)\n            coefficient1[i] = this.coefficient1[predictor]\n            coefficient2[i] = this.coefficient2[predictor]\n        }\n        for (let i = 0; i < channels; i++) {\n            delta.push(buf.read16Signed())\n        }\n        for (let i = 0; i < channels; i++) {\n            sample1.push(buf.read16Signed())\n        }\n        for (let i = 0; i < channels; i++) {\n            sample2.push(buf.read16Signed())\n        }\n        // Decode chunk\n        const output: number[][] = []\n        for (let i = 0; i < channels; i++) {\n            output[i] = [sample2[i], sample1[i]]\n        }\n        let channel = 0\n        while (buf.hasMoreData()) {\n            const byte = buf.read8()\n            ;[byte >> 4, byte & 0xf].forEach((nibble) => {\n                // Expand nibble\n                const signed = 8 <= nibble ? nibble - 16 : nibble\n                let expanded = ((\n                    sample1[channel] * coefficient1[channel] +\n                    sample2[channel] * coefficient2[channel]\n                ) >> 8) + (signed * delta[channel])\n                expanded = ADPCMAudioDecoder.clamp(expanded, -0x8000, 0x7fff)\n                sample2[channel] = sample1[channel]\n                sample1[channel] = expanded\n                delta[channel] = Math.floor(ADPCMAudioDecoder.ADAPTATION_TABLE[nibble] * delta[channel] / 256)\n                if (delta[channel] < 16) delta[channel] = 16\n                output[channel].push(expanded)\n                channel = (channel + 1) % channels\n            })\n            if (output[0].length >= wSamplesPerBlock) {\n                break\n            }\n        }\n        // Normalize output to [-1, 1]\n        return output.map((d) => d.map((e) => e / 32768))\n    }\n\n    static clamp(val: number, min: number, max: number): number {\n        if (val < min) return min\n        else if (val > max) return max\n        else return val\n    }\n}\n","import { ByteStreamReader } from '../../../core/ByteStreamReader'\nimport { AVIAudioFormat, AVIStreamHeader, WAVE_FORMAT_MSADPCM } from './AVI'\nimport { ADPCMAudioDecoder } from './ADPCMAudioDecoder'\n\nexport interface AVIAudioDecoder {\n    decode(buf: ByteStreamReader, channels: number, wSamplesPerBlock: number): number[][]\n}\n\nexport class AVIAudioStream {\n    readonly frameChunks: ByteStreamReader[] = []\n    readonly decoder: AVIAudioDecoder\n\n    constructor(\n        readonly streamIndex: number,\n        readonly streamHeader: AVIStreamHeader,\n        readonly audioFormat: AVIAudioFormat,\n    ) {\n        switch (audioFormat.wFormatTag) {\n            case WAVE_FORMAT_MSADPCM:\n                this.decoder = new ADPCMAudioDecoder(audioFormat)\n                break\n            default:\n                throw new Error(`Unhandled audio codec ${audioFormat.wFormatTag}`)\n        }\n    }\n\n    setFrameChunks(chunks: ByteStreamReader[]) {\n        this.frameChunks.push(...chunks)\n    }\n}\n","import { ByteStreamReader } from '../../../core/ByteStreamReader'\nimport { AVIVideoStream } from './AVIVideoStream'\nimport { AVIAudioFormat, AVIMainHeader, AVIStreamHeader, AVIVideoFormat, WAVE_FORMAT_MSADPCM } from './AVI'\nimport { AVIItem, AVIReader } from './AVIReader'\nimport { AVIAudioStream } from './AVIAudioStream'\n\nexport interface AVIFile {\n    videoStreams: AVIVideoStream[]\n    audioStreams: AVIAudioStream[]\n}\n\nexport class AVIParser {\n    static readonly LIST_TYPE_HEADER_LIST = 'hdrl'\n    static readonly LIST_TYPE_STREAM_HEADER_LIST = 'strl'\n    static readonly LIST_TYPE_STREAM_DATA = 'movi'\n    static readonly CHUNK_TYPE_LIST = 'LIST'\n    static readonly CHUNK_TYPE_JUNK = 'JUNK'\n    static readonly CHUNK_TYPE_MAIN_HEADER = 'avih'\n    static readonly CHUNK_TYPE_STREAM_HEADER = 'strh'\n    static readonly CHUNK_TYPE_STREAM_FORMAT = 'strf'\n    static readonly FCC_TYPE_VIDEO = 'vids'\n    static readonly FCC_TYPE_AUDIO = 'auds'\n\n    readonly reader: AVIReader\n    readonly videoStreams: AVIVideoStream[] = []\n    readonly audioStreams: AVIAudioStream[] = []\n    readonly chunksByStreamIndex: Map<number, ByteStreamReader[]> = new Map()\n    mainHeader?: AVIMainHeader\n\n    constructor(dataView: DataView) {\n        this.reader = new AVIReader(dataView)\n    }\n\n    parse(): AVIFile {\n        const magic = this.reader.readFourCC()\n        if (magic !== 'RIFF') throw new Error(`Unexpected magic in AVI header; got ${magic} instead of \"RIFF\"`)\n        this.reader.read32() // fileLength not needed\n        const fileType = this.reader.readFourCC()\n        if (fileType !== 'AVI ') throw new Error(`Unexpected file type; got ${fileType} instead of \"AVI \"`)\n        this.parseHeaderList()\n        this.parseStreamData()\n        // XXX handle optional avi index entries?\n        this.videoStreams.forEach((stream) => {\n            const chunks = this.chunksByStreamIndex.get(stream.streamIndex)\n            if (!chunks) throw new Error(`No chunks for stream ${stream.streamIndex} provided`)\n            stream.setFrameChunks(chunks)\n        })\n        this.audioStreams.forEach((stream) => {\n            const chunks = this.chunksByStreamIndex.get(stream.streamIndex)\n            if (!chunks) throw new Error(`No chunks for stream ${stream.streamIndex} provided`)\n            stream.setFrameChunks(chunks)\n        })\n        return {videoStreams: this.videoStreams, audioStreams: this.audioStreams}\n    }\n\n    private parseHeaderList() {\n        const headerList = this.reader.readList(AVIParser.LIST_TYPE_HEADER_LIST)\n        let streamIndex = 0\n        headerList.forEachItem((headerItem) => {\n            switch (headerItem.chunkType) {\n                case AVIParser.CHUNK_TYPE_MAIN_HEADER:\n                    this.parseMainHeader(headerItem.reader)\n                    break\n                case AVIParser.CHUNK_TYPE_LIST:\n                    this.parseStreamHeaders(streamIndex, headerItem)\n                    streamIndex++\n                    break\n                default:\n                    throw new Error(`Unhandled list type \"${headerItem.chunkType}\" in AVI file. Cannot proceed without endless loop`)\n            }\n        })\n    }\n\n    private parseMainHeader(aviReader: AVIReader) {\n        this.mainHeader = {\n            microSecPerFrame: aviReader.read32(),\n            maxBytesPerSec: aviReader.read32(),\n            paddingGranularity: aviReader.read32(),\n            flags: aviReader.read32(),\n            totalFrames: aviReader.read32(),\n            initialFrames: aviReader.read32(),\n            streams: aviReader.read32(),\n            suggestedBufferSize: aviReader.read32(),\n            width: aviReader.read32(),\n            height: aviReader.read32(),\n            // reserved 16 bytes ignored\n        }\n    }\n\n    private parseStreamHeaders(streamIndex: number, headerItem: AVIItem) {\n        const listType = headerItem.reader.readFourCC()\n        if (listType !== AVIParser.LIST_TYPE_STREAM_HEADER_LIST) throw new Error(`Unexpected list type; got ${listType} instead of ${AVIParser.LIST_TYPE_STREAM_HEADER_LIST}`)\n        while (headerItem.reader.hasMoreData()) {\n            const streamHeaderItem = headerItem.reader.readItem()\n            if (!streamHeaderItem) throw new Error('Failed to read next header item')\n            if (streamHeaderItem.chunkType !== AVIParser.CHUNK_TYPE_STREAM_HEADER) throw new Error(`Unexpected header item; got ${streamHeaderItem.chunkType} instead of ${AVIParser.CHUNK_TYPE_STREAM_HEADER}`)\n            const streamHeader = this.parseStreamHeader(streamHeaderItem.reader)\n            const streamFormatItem = headerItem.reader.readItem()\n            if (!streamFormatItem) throw new Error('Failed to read next stream format item')\n            if (streamFormatItem.chunkType !== AVIParser.CHUNK_TYPE_STREAM_FORMAT) throw new Error(`Unexpected header item; got ${streamFormatItem.chunkType} instead of ${AVIParser.CHUNK_TYPE_STREAM_FORMAT}`)\n            switch (streamHeader.fccType) {\n                case AVIParser.FCC_TYPE_VIDEO:\n                    const videoFormat = this.parseVideoFormat(streamFormatItem.reader)\n                    this.videoStreams.push(new AVIVideoStream(streamIndex, streamHeader, videoFormat))\n                    break\n                case AVIParser.FCC_TYPE_AUDIO:\n                    const audioFormat = this.parseAudioFormat(streamFormatItem.reader)\n                    this.audioStreams.push(new AVIAudioStream(streamIndex, streamHeader, audioFormat))\n                    break\n                default:\n                    console.warn(`Unsupported stream fcc type ${streamHeader.fccType}`)\n                    break\n            }\n        }\n    }\n\n    private parseStreamHeader(aviReader: AVIReader): AVIStreamHeader {\n        return {\n            fccType: aviReader.readFourCC(),\n            fccHandler: aviReader.readFourCC(),\n            flags: aviReader.read32(),\n            priority: aviReader.read16(),\n            language: aviReader.read16(),\n            initialFrames: aviReader.read32(),\n            scale: aviReader.read32(),\n            rate: aviReader.read32(),\n            start: aviReader.read32(),\n            length: aviReader.read32(),\n            suggestedBufferSize: aviReader.read32(),\n            quality: aviReader.read32(),\n            sampleSize: aviReader.read32(),\n            frame: {\n                left: aviReader.read16Signed(),\n                top: aviReader.read16Signed(),\n                right: aviReader.read16Signed(),\n                bottom: aviReader.read16Signed()\n            },\n        }\n    }\n\n    private parseVideoFormat(aviReader: AVIReader): AVIVideoFormat {\n        const videoFormat = {\n            biSize: aviReader.read32(),\n            biWidth: aviReader.read32Signed(),\n            biHeight: aviReader.read32Signed(),\n            biPlanes: aviReader.read16(),\n            biBitCount: aviReader.read16(),\n            biCompression: aviReader.read32(),\n            biSizeImage: aviReader.read32(),\n            biXPelsPerMeter: aviReader.read32Signed(),\n            biYPelsPerMeter: aviReader.read32Signed(),\n            biClrUsed: aviReader.read32(),\n            biClrImportant: aviReader.read32(),\n        }\n        if (aviReader.hasMoreData()) {\n            console.warn('Reading bitmap palette is not yet implemented')\n        }\n        return videoFormat\n    }\n\n    private parseAudioFormat(aviReader: AVIReader): AVIAudioFormat {\n        const result: AVIAudioFormat = {\n            wFormatTag: aviReader.read16(),\n            nChannels: aviReader.read16(),\n            nSamplesPerSec: aviReader.read32(),\n            nAvgBytesPerSec: aviReader.read32(),\n            nBlockAlign: aviReader.read16(),\n            wBitsPerSample: aviReader.read16(),\n            cbSize: aviReader.read16(),\n        }\n        if (result.cbSize) {\n            switch (result.wFormatTag) {\n                case WAVE_FORMAT_MSADPCM:\n                    result.extra = {\n                        wSamplesPerBlock: aviReader.read16(),\n                        wNumCoefficients: aviReader.read16(),\n                        coefficientPairs: [[], []]\n                    }\n                    for (let c = 0; c < result.extra.wNumCoefficients; c++) {\n                        result.extra.coefficientPairs[0].push(aviReader.read16Signed())\n                        result.extra.coefficientPairs[1].push(aviReader.read16Signed())\n                    }\n                    break\n                default:\n                    throw new Error(`Unhandled audio codec ${result.wFormatTag}`)\n            }\n        }\n        return result\n    }\n\n    private parseStreamData() {\n        const moviList = this.reader.readList(AVIParser.LIST_TYPE_STREAM_DATA)\n        moviList.forEachItem((streamDataItem) => {\n            const streamIndexStr = streamDataItem.chunkType.slice(0, 2)\n            const streamIndex = Number(streamIndexStr)\n            if (isNaN(streamIndex)) throw new Error(`Non-numeric stream index given \"${streamIndexStr}\" in \"${streamDataItem.chunkType}\"`)\n            const chunks = this.chunksByStreamIndex.getOrUpdate(streamIndex, () => [])\n            chunks.push(streamDataItem.reader)\n        })\n    }\n}\n","import { BufferGeometry, Mesh } from 'three'\nimport { SequenceTextureMaterial } from './SequenceTextureMaterial'\n\nexport class SceneMesh extends Mesh<BufferGeometry, SequenceTextureMaterial[]> {\n    constructor(geometry?: BufferGeometry, material?: SequenceTextureMaterial[], name?: string) {\n        super(geometry, material ?? [])\n        this.name = name ?? ''\n    }\n\n    dispose() {\n        this.removeFromParent()\n        // do not dispose geometries since they're handled as singletons to save memory\n        this.material?.forEach((m) => m.dispose())\n    }\n\n    update(elapsedMs: number) {\n        this.material?.forEach((m) => m.isSequenceTextureMaterial && m.update(elapsedMs))\n    }\n}\n","import { MeshPhongMaterial, Texture } from 'three'\nimport { SEQUENCE_TEXTURE_INTERVAL_MS } from '../params'\n\nexport class SequenceTextureMaterial extends MeshPhongMaterial {\n    textures: Texture[] = []\n    timer: number = 0\n    seqNum: number = 0\n    isSequenceTextureMaterial: boolean = true\n\n    constructor(name: string) {\n        super({\n            alphaToCoverage: true,\n            shininess: 0,\n            emissiveIntensity: 0,\n        })\n        this.name = name\n    }\n\n    clone(): this {\n        const clone = super.clone() as this\n        clone.setTextures(this.textures)\n        return clone\n    }\n\n    setTextures(textures: Texture[]) {\n        this.textures = textures\n        if (this.textures.length < 1) return\n        this.map = this.textures[0]\n        this.emissiveMap = this.map\n        this.color.setScalar(1)\n    }\n\n    update(elapsedMs: number) {\n        if (this.textures.length < 1) return\n        this.timer += elapsedMs\n        const addedSeqNum = Math.floor(this.timer / SEQUENCE_TEXTURE_INTERVAL_MS)\n        this.timer -= addedSeqNum * SEQUENCE_TEXTURE_INTERVAL_MS\n        this.seqNum = (this.seqNum + addedSeqNum) % this.textures.length\n        this.map = this.textures[this.seqNum]\n        this.emissiveMap = this.map\n    }\n\n    setOpacity(opacity: number) {\n        this.opacity = opacity\n        this.transparent = this.transparent || this.opacity < 1\n    }\n}\n","// noinspection JSBitwiseOperatorUsage\n\n/**\n * This loader loads LWOB files exported from LW\n *\n * File format description: https://www.sandbox.de/osg/lightwave.htm\n */\n\nimport { AdditiveBlending, BufferAttribute, BufferGeometry, ClampToEdgeWrapping, DoubleSide, Loader, MirroredRepeatWrapping, RepeatWrapping, Texture, Vector3 } from 'three'\nimport { getFilename } from '../../core/Util'\nimport { VERBOSE } from '../../params'\nimport { SequenceTextureMaterial } from '../../scene/SequenceTextureMaterial'\nimport { UVData } from './LWOUVParser'\n\n//*************************//\n//* FLAG DEFINITION START *//\n//*************************//\n\nconst LUMINOUS_BIT = 1\nconst OUTLINE_BIT = 2\nconst SMOOTHING_BIT = 4\nconst COLORHIGHLIGHTS_BIT = 8\nconst COLORFILTER_BIT = 16\nconst OPAQUEEDGE_BIT = 32\nconst TRANSPARENTEDGE_BIT = 64\nconst SHARPTERMINATOR_BIT = 128\nconst DOUBLESIDED_BIT = 256\nconst ADDITIVE_BIT = 512\nconst SHADOWALPHA_BIT = 1024\n\n//*************************//\n//*  FLAG DEFINITION END  *//\n//*************************//\n\n//*************************//\n//* TFLG DEFINITION START *//\n//*************************//\n\nconst XAXIS_BIT = 1\nconst YAXIS_BIT = 2\nconst ZAXIS_BIT = 4\nconst WORLDCOORDS_BIT = 8\nconst NEGATIVEIMAGE_BIT = 16\nconst PIXELBLENDING_BIT = 32\nconst ANTIALIASING_BIT = 64\n\n//*************************//\n//*  TFLG DEFINITION END  *//\n//*************************//\n\n// noinspection JSUnusedGlobalSymbols\nconst ReflectionMode = {\n    BACKDROP: 0,\n    BACKDROP_WITH_RAYTRACING: 1,\n    SPHERICAL: 2,\n    SPHERICAL_WITH_RAYTRACING: 3,\n} as const\ntype ReflectionMode = typeof ReflectionMode[keyof typeof ReflectionMode]\nconst isReflectionMode = (val: unknown): val is ReflectionMode => {\n    return Object.values(ReflectionMode).includes(val as ReflectionMode)\n}\n\nexport class LWOBParser {\n    readonly lwoReader: LWOBFileReader\n    materials: SequenceTextureMaterial[] = []\n    geometry: BufferGeometry = new BufferGeometry()\n    vertices: Float32Array = new Float32Array()\n    indices: Uint16Array = new Uint16Array()\n    uvs: Float32Array = new Float32Array()\n\n    constructor(\n        buffer: ArrayBuffer,\n        readonly textureLoader: LWOBTextureLoader,\n        readonly uvData: UVData | undefined,\n        readonly verbose: boolean = false,\n    ) {\n        this.lwoReader = new LWOBFileReader(buffer)\n    }\n\n    parse(): { geometry: BufferGeometry, material: SequenceTextureMaterial[] } | undefined {\n        if (this.lwoReader.readIDTag() !== 'FORM') {\n            console.error('Cannot find header.')\n            return undefined\n        }\n\n        const fileSize = this.lwoReader.readUint32()\n        const readerByteLength = this.lwoReader.byteLength\n        if (fileSize + 8 !== readerByteLength) {\n            console.warn(`Discrepancy between size in header (${fileSize + 8} bytes) and actual size (${readerByteLength} bytes).`)\n        }\n\n        const magic = this.lwoReader.readString(4)\n        if (magic !== 'LWOB') {\n            console.error(`Invalid magic ID (${magic}) in LWO header.`)\n            return undefined\n        }\n\n        while (!this.lwoReader.endOfFile()) {\n            const cursor = this.lwoReader.cursor\n            const chunkType = this.lwoReader.readString(4)\n            const chunkSize = this.lwoReader.readUint32()\n            if (this.verbose) console.log(`${chunkType} ( ${cursor} ) -> ( ${cursor + chunkSize + 8})`)\n\n            switch (chunkType) {\n                case 'PNTS':\n                    this.parsePoints(chunkSize)\n                    break\n                case 'SRFS':\n                    this.parseSurfaceNames(chunkSize)\n                    break\n                case 'POLS':\n                    this.parsePolygons(chunkSize)\n                    break\n                case 'SURF':\n                    this.parseSurface(chunkSize)\n                    break\n                default:\n                    console.warn(`${chunkType} ( ${cursor} ) -> ( ${cursor + chunkSize + 8}) Skipping unrecognised chunk type`)\n                    this.lwoReader.skip(chunkSize)\n                    break\n            }\n        }\n\n        this.geometry.setAttribute('position', new BufferAttribute(this.vertices, 3))\n        this.geometry.setAttribute('uv', new BufferAttribute(this.uvs, 2))\n        this.geometry.setIndex(new BufferAttribute(this.indices, 1))\n        this.geometry.computeVertexNormals()\n\n        return {geometry: this.geometry, material: this.materials}\n    }\n\n    parsePoints(chunkSize: number): void {\n        if (chunkSize % 12 !== 0) {\n            console.error(`PNTS does not evenly divide into chunk size (${chunkSize}). Possible corruption.`)\n            return\n        }\n        const vertices = []\n        for (let c = 0; c < chunkSize; c += 12) {\n            vertices.push(\n                // LightWave coordinate system (left-handed) to three.js coordinate system (right-handed)\n                -this.lwoReader.readFloat32(), // x where +x means to the right or east\n                this.lwoReader.readFloat32(), // y where +y means up\n                this.lwoReader.readFloat32(), // z where +z means forward or north\n            )\n        }\n        this.vertices = new Float32Array(vertices)\n    }\n\n    parseSurfaceNames(chunkSize: number): void {\n        this.materials = this.lwoReader.readStringArray(chunkSize).map((name) => new SequenceTextureMaterial(name))\n        if (this.verbose) console.log(`LWO contains ${this.materials.length} materials named: ${this.materials.map((m) => m.name).join(', ')}`)\n    }\n\n    parsePolygons(chunkSize: number): void {\n        let offset = 0\n        const vertices: number[] = []\n        const uvs: number[] = []\n        const indices: number[] = []\n        while (offset < chunkSize) {\n            const numIndices = this.lwoReader.readUint16()\n            const faceIndices = []\n            for (let i = 0; i < numIndices; i++) {\n                faceIndices[i] = this.lwoReader.readUint16()\n            }\n            const materialIndex = this.lwoReader.readUint16() - 1\n            this.geometry.addGroup(indices.length, (numIndices - 2) * 3, materialIndex)\n            const faceUvs = this.uvData?.uvs[this.geometry.groups.length - 1] ?? []\n            const addVert = (vertIndex: number, faceUvIndex: number = -1) => {\n                for (let i = 0; i < 3; i++) {\n                    vertices.push(this.vertices[vertIndex * 3 + i] ?? 0)\n                }\n                uvs.push(\n                    faceUvs[faceUvIndex * 2 + 0] ?? 0,\n                    1 - (faceUvs[faceUvIndex * 2 + 1] ?? 1),\n                )\n                indices.push(indices.length)\n            }\n            switch (numIndices) {\n                case 3:\n                    addVert(faceIndices[2], 2)\n                    addVert(faceIndices[1], 1)\n                    addVert(faceIndices[0], 0)\n                    break\n                case 4: // split quad face into two triangles\n                    addVert(faceIndices[2], 2)\n                    addVert(faceIndices[1], 1)\n                    addVert(faceIndices[0], 0)\n                    addVert(faceIndices[3], 3)\n                    addVert(faceIndices[2], 2)\n                    addVert(faceIndices[0], 0)\n                    break\n                case 5: // split face into triangles\n                    addVert(faceIndices[2], 2)\n                    addVert(faceIndices[1], 1)\n                    addVert(faceIndices[0], 0)\n                    addVert(faceIndices[4], 4)\n                    addVert(faceIndices[2], 2)\n                    addVert(faceIndices[0], 0)\n                    addVert(faceIndices[3], 3)\n                    addVert(faceIndices[2], 2)\n                    addVert(faceIndices[4], 4)\n                    break\n                case 6:\n                    addVert(faceIndices[3], 3)\n                    addVert(faceIndices[1], 1)\n                    addVert(faceIndices[0], 0)\n                    addVert(faceIndices[3], 3)\n                    addVert(faceIndices[2], 2)\n                    addVert(faceIndices[1], 1)\n                    addVert(0) // XXX ??? ok: 0, 3 in [0, 25]\n                    addVert(faceIndices[3], 3)\n                    addVert(faceIndices[0], 0)\n                    addVert(3) // XXX ??? ok: 0, 3 in [0, 25]\n                    addVert(faceIndices[3], 3)\n                    addVert(faceIndices[0], 0)\n                    break\n                default:\n                    console.warn(`Expected face with 3, 4, 5 or 6 indices but got ${numIndices} instead`)\n            }\n            offset += 2 + (numIndices * 2) + 2\n        }\n        this.vertices = new Float32Array(vertices)\n        this.uvs = new Float32Array(uvs)\n        this.indices = new Uint16Array(indices)\n        if (this.verbose) console.log('indices', this.indices)\n    }\n\n    parseSurface(chunkSize: number): void {\n        const chunkEnd = this.lwoReader.cursor + chunkSize\n        const materialName = this.lwoReader.readString()\n        if (this.verbose) console.log(`Start parsing surface: \"${materialName}\"`)\n        let materialIndex = -1\n        let material: SequenceTextureMaterial | undefined\n        for (let i = 0; i < this.materials.length; i++) {\n            if (this.materials[i].name === materialName) {\n                materialIndex = i\n                material = this.materials[i]\n                break\n            }\n        }\n        if (!material) {\n            console.error(`Surface \"${materialName}\" from SURF chunk does not exist in SRFS chunk`)\n            return\n        }\n\n        let textureFlags = 0\n        const textureSize = new Vector3(0, 0, 0)\n        const textureCenter = new Vector3(0, 0, 0)\n        // let textureFalloff = new Vector3(0, 0, 0);\n        // let textureVelocity = new Vector3(0, 0, 0);\n        let sequenceOffset = 0\n        let sequenceFlags = 0\n        let sequenceLoopLength = 0\n        let reflectionMode: ReflectionMode = ReflectionMode.SPHERICAL_WITH_RAYTRACING\n        let textureColorArray: number[] | undefined\n\n        while (this.lwoReader.cursor < chunkEnd) {\n            const cursor = this.lwoReader.cursor\n            const subChunkType = this.lwoReader.readString(4)\n            const subChunkSize = this.lwoReader.readUint16()\n            if (this.verbose) console.log(`${subChunkType} ( ${cursor} ) -> ( ${(cursor + subChunkSize)} )`)\n\n            switch (subChunkType) {\n                case 'COLR':\n                    const colorArray = [\n                        this.lwoReader.readUint8() / 255,\n                        this.lwoReader.readUint8() / 255,\n                        this.lwoReader.readUint8() / 255,\n                    ]\n                    const lastColorByte = this.lwoReader.readUint8() // should be zero\n                    if (lastColorByte !== 0) console.warn('Unexpected ignored last color byte is not zero', lastColorByte)\n                    material.color.fromArray(colorArray)\n                    if (this.verbose) console.log(`Surface color for ${material.name} is ${material.color.toArray().map((x) => Math.round(x * 255))}`)\n                    break\n                case 'FLAG':\n                    const flags = this.lwoReader.readUint16()\n                    if (this.verbose) console.log(`Flags (FLAG): ${flags.toString(2)}`)\n                    if (this.verbose && flags & LUMINOUS_BIT) console.warn('Flag is set but unhandled: luminous') // flag replaced with LUMI below\n                    if (this.verbose && flags & OUTLINE_BIT) console.warn('Flag is set but unhandled: outline')\n                    if (flags & SMOOTHING_BIT) material.flatShading = true\n                    if (this.verbose && flags & COLORHIGHLIGHTS_BIT) console.warn('Flag is set but unhandled: colorHighlights')\n                    if (this.verbose && flags & COLORFILTER_BIT) console.warn('Flag is set but unhandled: colorFilter')\n                    if (this.verbose && flags & OPAQUEEDGE_BIT) console.warn('Flag is set but unhandled: opaqueEdge')\n                    if (this.verbose && flags & TRANSPARENTEDGE_BIT) console.warn('Flag is set but unhandled: transparentEdge')\n                    if (this.verbose && flags & SHARPTERMINATOR_BIT) console.warn('Flag is set but unhandled: sharpTerminator')\n                    if (flags & DOUBLESIDED_BIT) material.side = DoubleSide\n                    if (flags & ADDITIVE_BIT) {\n                        material.blending = AdditiveBlending\n                        material.depthWrite = false // otherwise transparent parts \"carve out\" objects behind\n                        material.transparent = true // otherwise texture is shown behind opaque siblings\n                        material.fog = false // otherwise texture black background is colored in fog color\n                    }\n                    if (this.verbose && flags & SHADOWALPHA_BIT) console.warn('Flag is set but unhandled: shadowAlpha')\n                    break\n                case 'RIND':\n                    const refractiveIndex = this.lwoReader.readFloat32()\n                    material.refractionRatio = 1 / refractiveIndex\n                    break\n                case 'EDGE':\n                    const edgeTransparencyThreshold = this.lwoReader.readFloat32()\n                    if (this.verbose) console.warn(`Edge transparency threshold (0.0 to 1.0): ${edgeTransparencyThreshold}`)\n                    break\n                case 'SMAN':\n                    const maxSmoothAngle = this.lwoReader.readFloat32()\n                    if (this.verbose) console.warn(`Implement maximum angle between two adjacent polygons that can be smooth shaded: ${maxSmoothAngle}`)\n                    break\n                case 'LUMI':\n                    const luminosity = this.lwoReader.readUint16() / 256\n                    if (this.verbose) console.log(`Luminosity (LUMI): ${luminosity}`)\n                    material.emissiveIntensity = luminosity\n                    break\n                case 'DIFF':\n                    const diffuse = this.lwoReader.readUint16() / 256\n                    if (this.verbose) console.log(`Diffuse (DIFF): ${diffuse}`)\n                    if (!diffuse) material.color.set(0xffffff)\n                    break\n                case 'SPEC':\n                    const specular = this.lwoReader.readUint16() / 256\n                    // material.specular = material.color.multiplyScalar(specular);\n                    if (this.verbose) console.warn(`Unhandled specular (SPEC): ${specular}`)\n                    break\n                case 'GLOS':\n                    const glossiness = this.lwoReader.readUint16() / 1024\n                    if (this.verbose) console.warn(`Unhandled glossiness (GLOS): ${glossiness}`)\n                    break\n                case 'REFL':\n                case 'VRFL':\n                    let reflection = 0\n                    if (subChunkType === 'VRFL') {\n                        reflection = this.lwoReader.readFloat32()\n                    } else {\n                        reflection = this.lwoReader.readUint16() / 256\n                    }\n                    material.reflectivity = reflection\n                    if (this.verbose) console.log(`Reflectivity (REFL): ${material.reflectivity}`)\n                    break\n                case 'TRAN':\n                case 'VTRN':\n                    let transparency = 0\n                    if (subChunkType === 'VTRN') {\n                        transparency = this.lwoReader.readFloat32()\n                    } else {\n                        transparency = this.lwoReader.readUint16() / 256\n                    }\n                    material.setOpacity(1 - transparency)\n                    if (this.verbose) console.log(`Opacity (TRAN/VTRN): ${material.opacity}`)\n                    break\n                case 'VLUM':\n                    const vLuminosity = this.lwoReader.readFloat32()\n                    if (this.verbose) console.log(`Luminosity (VLUM): ${vLuminosity}`)\n                    material.emissiveIntensity = vLuminosity\n                    break\n                case 'VDIF':\n                    let vDiffuse = this.lwoReader.readFloat32()\n                    if (this.verbose) console.log(`Diffuse (VDIF): ${vDiffuse}`)\n                    // material.vertexColors = !!vDiffuse // XXX push vertex colors first\n                    break\n                case 'VSPC':\n                    let vSpecular = this.lwoReader.readFloat32()\n                    // material.specular = material.color.multiplyScalar(vSpecular);\n                    if (this.verbose) console.warn(`Specular (VSPC): ${vSpecular}`)\n                    break\n                case 'CTEX': // start of new texture sub-chunk\n                case 'DTEX':\n                case 'STEX':\n                case 'RTEX':\n                case 'TTEX':\n                case 'BTEX':\n                    const textureTypeName = this.lwoReader.readString()\n                    if (this.verbose) console.log(`Texture typename: ${textureTypeName}`)\n                    textureColorArray = undefined\n                    break\n                case 'TFLG':\n                    textureFlags = this.lwoReader.readUint16()\n                    if (this.verbose) console.log(`Flags (TFLG): ${textureFlags.toString(2)}`)\n                    // axis bits (XAXIS_BIT, YAXIS_BIT, ZAXIS_BIT) are handled below in planar mapping\n                    if (this.verbose && textureFlags & WORLDCOORDS_BIT) console.warn('Texture flag is set but unhandled: World Coords')\n                    if (this.verbose && textureFlags & NEGATIVEIMAGE_BIT) console.warn('Texture flag is set but unhandled: Negative Image')\n                    if (this.verbose && textureFlags & PIXELBLENDING_BIT) console.warn('Texture flag is set but unhandled: Pixel Blending')\n                    if (this.verbose && textureFlags & ANTIALIASING_BIT) console.log('Texture flag is set: Antialiasing') // turned on by default\n                    break\n                case 'TSIZ':\n                    textureSize.set(this.lwoReader.readFloat32(), this.lwoReader.readFloat32(), this.lwoReader.readFloat32())\n                    if (this.verbose) console.log(`Texture size (TSIZ): ${textureSize.toArray().join(' ')}`)\n                    break\n                case 'TCTR':\n                    textureCenter.set(this.lwoReader.readFloat32(), this.lwoReader.readFloat32(), this.lwoReader.readFloat32())\n                    if (this.verbose) console.log(`Texture center (TCTR): ${textureCenter.toArray().join(' ')}`)\n                    // texture center is handled below in planar mapping\n                    break\n                case 'TCLR':\n                    textureColorArray = [\n                        this.lwoReader.readUint8() / 255,\n                        this.lwoReader.readUint8() / 255,\n                        this.lwoReader.readUint8() / 255,\n                    ]\n                    const lastTextureColorByte = this.lwoReader.readUint8() // should be zero\n                    if (lastTextureColorByte !== 0) console.warn('Unexpected ignored last texture color byte is not zero', lastTextureColorByte)\n                    if (this.verbose) console.log(`Texture color for ${material.name} is ${material.color.toArray().map((x) => Math.round(x * 255))}`)\n                    break\n                case 'TVAL':\n                    const textureValue = this.lwoReader.readUint16() / 256\n                    if (this.verbose) console.warn(`Unhandled texture value (TVAL): ${textureValue}`)\n                    break\n                case 'TIMG':\n                    const textureFilepath = this.lwoReader.readString()\n                    if (this.verbose) console.log(`Texture filepath (TIMG): ${textureFilepath}`)\n                    const lTextureFilename = getFilename(textureFilepath)?.toLowerCase()\n                    if (lTextureFilename.endsWith(' (sequence)') && (sequenceOffset || sequenceFlags || sequenceLoopLength)) {\n                        console.warn('Sequence options not yet implemented', lTextureFilename, sequenceOffset, sequenceFlags, sequenceLoopLength) // XXX Implement sequence options\n                    }\n                    if (lTextureFilename.trim().toLowerCase() === '(none)') {\n                        material.map = null\n                        continue\n                    }\n                    material.transparent = material.transparent || !!lTextureFilename.match(/(.*a).*(\\d+)(_?.+)/) || !!lTextureFilename.match(/\\/a.*\\d.*/i)\n                    this.textureLoader.load(lTextureFilename, (t) => material.setTextures(t))\n                    sequenceOffset = 0\n                    sequenceFlags = 0\n                    sequenceLoopLength = 0\n                    reflectionMode = ReflectionMode.SPHERICAL_WITH_RAYTRACING\n                    if (textureColorArray) material.color.fromArray(textureColorArray)\n                    break\n                case 'TWRP':\n                    const horizontalWrappingMode = this.parseWrappingMode(this.lwoReader.readUint16())\n                    const verticalWrappingMode = this.parseWrappingMode(this.lwoReader.readUint16())\n                    material.textures.forEach((t) => {\n                        t.wrapS = horizontalWrappingMode\n                        t.wrapT = verticalWrappingMode\n                    })\n                    break\n                case 'TAAS':\n                    const antialiasingStrength = this.lwoReader.readFloat32()\n                    if (this.verbose) console.log(`Antialiasing strength: ${antialiasingStrength} (not supported by three.js)`)\n                    break\n                case 'IMSQ':\n                    sequenceOffset = this.lwoReader.readUint16()\n                    sequenceFlags = this.lwoReader.readUint16()\n                    sequenceLoopLength = this.lwoReader.readUint16()\n                    break\n                case 'RFLT':\n                    const reflectionModeValue = this.lwoReader.readUint16()\n                    if (!isReflectionMode(reflectionModeValue)) {\n                        console.warn('Unexpected reflection mode given', reflectionModeValue)\n                    } else {\n                        reflectionMode = reflectionModeValue\n                    }\n                    if (this.verbose) console.log(`Reflection Mode (RFLT): ${reflectionMode}`)\n                    break\n                case 'RIMG':\n                    const sceneBackgroundFilepath = this.lwoReader.readString()\n                    if (this.verbose) console.log(`Scene background (RIMG): ${sceneBackgroundFilepath}`)\n                    break\n                case 'TFP0':\n                case 'TFP1':\n                case 'TFP2':\n                case 'TFP3':\n                    if (this.verbose) console.log(`Algorithmic texture parameter (${subChunkType}) not used and ignored`)\n                    this.lwoReader.readFloat32() // most probably unused in the game\n                    break\n                case 'GLOW':\n                    if (this.verbose) console.log(`Undefined parameter (GLOW) not used and ignored`)\n                    this.lwoReader.skip(4) // not specified anywhere\n                    break\n                default: // XXX implement all LWOB features\n                    if (this.verbose || VERBOSE) console.warn(`Found unrecognised SURF sub-chunk type ${subChunkType} (${subChunkType}) at ${cursor}; length ${subChunkSize}`)\n                    this.lwoReader.skip(subChunkSize)\n                    break\n            }\n        }\n\n        const uvIndex = this.uvData?.names.findIndex((name) => name === materialName) ?? -1\n        const textureName = this.uvData?.mapNames[uvIndex]\n        if (textureName && textureName.toLowerCase() !== 'null') {\n            this.textureLoader.load(textureName.toLowerCase(), (t) => material.setTextures(t))\n        } else {\n            this.planarMapUVs(materialIndex, textureSize, textureCenter, textureFlags)\n        }\n\n        if (this.verbose) console.log(`Done parsing surface: \"${materialName}\"`, material)\n    }\n\n    parseWrappingMode(wrap: number) {\n        if (wrap === 0) { // Unsupported texture wrapping mode with black color outside of texture image\n            return ClampToEdgeWrapping\n        } else if (wrap === 1) {\n            return ClampToEdgeWrapping\n        } else if (wrap === 2) {\n            return RepeatWrapping\n        } else if (wrap === 3) {\n            return MirroredRepeatWrapping\n        } else {\n            console.warn(`Unexpected texture wrapping mode given: ${wrap}`)\n            return RepeatWrapping\n        }\n    }\n\n    planarMapUVs(materialIndex: number, size: Vector3, center: Vector3, flags: number) {\n        // Check to ensure that one of the flags is set, if not throw an error.\n        const mask = XAXIS_BIT | YAXIS_BIT | ZAXIS_BIT\n        if (!(flags & mask)) {\n            if (this.verbose) console.warn('No texture axis bit is set!')\n            return\n        }\n        for (let group of this.geometry.groups) {\n            if (group.materialIndex !== materialIndex) continue\n\n            for (let i = group.start; i < group.start + group.count; i++) {\n                let vertexIndex = this.indices[i] * 3\n                // LightWave coordinate system (left-handed) to three.js coordinate system (right-handed)\n                let x = -this.vertices[vertexIndex] - center.x\n                let y = this.vertices[vertexIndex + 1] - center.y\n                let z = this.vertices[vertexIndex + 2] - center.z\n\n                let uvIndex = this.indices[i] * 2\n                let u = 0\n                let v = 0\n\n                if (flags & XAXIS_BIT) {\n                    u = z / size.z\n                    v = y / size.y\n                } else if (flags & YAXIS_BIT) {\n                    u = x / size.x\n                    v = z / size.z\n                    // TODO drill_icon.bmp on top of large digger is shown duplicated with 2 rows and 4 columns\n                    // u = (x / size.x + 0.5) / 4\n                    // v = (z / size.z + 0.5) / 2\n                } else if (flags & ZAXIS_BIT) {\n                    u = x / size.x\n                    v = y / size.y\n                }\n\n                this.uvs[uvIndex] = u + 0.5\n                this.uvs[uvIndex + 1] = v + 0.5\n            }\n        }\n    }\n}\n\nexport class LWOBTextureLoader extends Loader {\n    load(textureFilename: string, onLoad: (textures: Texture[]) => void): void {\n    }\n}\n\nclass LWOBFileReader {\n    private readonly dataView: DataView\n    private offset: number = 0\n\n    constructor(buffer: ArrayBuffer) {\n        this.dataView = new DataView(buffer)\n    }\n\n    skip(length: number): void {\n        this.offset += length\n    }\n\n    endOfFile(): boolean {\n        return this.offset >= this.byteLength\n    }\n\n    get cursor(): number {\n        return this.offset\n    }\n\n    get byteLength(): number {\n        return this.dataView.byteLength\n    }\n\n    // An ID tag is a sequence of 4 bytes containing 7-bit ASCII values\n    readIDTag(): string {\n        return this.readString(4)\n    }\n\n    readString(size: number = -1): string {\n        if (size === 0) return ''\n        const charBuffer = []\n        if (size > 0) {\n            for (let c = 0; c < size; c++) {\n                charBuffer[c] = this.readUint8()\n            }\n        } else {\n            let currentChar = null\n            let length = 0\n            while (currentChar !== 0) {\n                currentChar = this.readUint8()\n                if (currentChar !== 0) charBuffer.push(currentChar)\n                length++\n            }\n            if (length % 2 !== 0) this.skip(1) // if string is uneven, extra nullbyte is skipped\n        }\n        return String.fromCharCode.apply(null, charBuffer)\n    }\n\n    readStringArray(size: number): string[] {\n        return this.readString(size).split('\\0').filter(Boolean)\n    }\n\n    readUint8(): number {\n        const value = this.dataView.getUint8(this.offset)\n        this.offset += 1\n        return value\n    }\n\n    readUint16(): number {\n        const value = this.dataView.getUint16(this.offset)\n        this.offset += 2\n        return value\n    }\n\n    readUint32(): number {\n        const value = this.dataView.getUint32(this.offset)\n        this.offset += 4\n        return value\n    }\n\n    readFloat32(): number {\n        const value = this.dataView.getFloat32(this.offset)\n        this.offset += 4\n        return value\n    }\n}\n","import { clearIntervalSafe } from '../core/Util'\nimport { NATIVE_UPDATE_INTERVAL } from '../params'\n\nexport class AnimatedCursorData { // This gets serialized for caching\n    readonly dataUrls: string[] = []\n\n    constructor(cursorImages: HTMLCanvasElement[]) {\n        this.dataUrls = cursorImages.map((c) => `url(${c.toDataURL()}), auto`)\n    }\n}\n\nexport class AnimatedCursor {\n    animationInterval?: NodeJS.Timeout\n    animationIndex: number = 0\n\n    constructor(readonly cursorUrls: string[]) {\n    }\n\n    enableAnimation(targetElement: HTMLElement) {\n        this.animationIndex = 0\n        if (this.cursorUrls.length > 1) {\n            this.animationInterval = clearIntervalSafe(this.animationInterval)\n            this.animationInterval = setInterval(() => {\n                this.animationIndex = (this.animationIndex + 1) % this.cursorUrls.length\n                targetElement.style.cursor = this.cursorUrls[this.animationIndex]\n            }, NATIVE_UPDATE_INTERVAL)\n        } else {\n            targetElement.style.cursor = this.cursorUrls[this.animationIndex]\n        }\n    }\n\n    disableAnimation() {\n        this.animationInterval = clearIntervalSafe(this.animationInterval)\n    }\n}\n","import { Cursor } from '../cfg/PointersCfg'\nimport { AnimatedCursor } from './AnimatedCursor'\nimport { clearTimeoutSafe } from '../core/Util'\nimport { HTML_GAME_CANVAS_CONTAINER } from '../core'\n\nexport class CursorManager {\n    static readonly cursorToUrl: Map<Cursor, AnimatedCursor> = new Map()\n    static currentCursor: Cursor\n    static cursorTimeout?: NodeJS.Timeout\n    static activeCursor?: AnimatedCursor\n\n    static addCursor(cursor: Cursor, dataUrls: string[]) {\n        this.cursorToUrl.set(cursor, new AnimatedCursor(dataUrls))\n    }\n\n    static changeCursor(cursor: Cursor, timeout?: number) {\n        if (timeout) {\n            this.cursorTimeout = clearTimeoutSafe(this.cursorTimeout)\n            this.setCursor(cursor)\n            this.cursorTimeout = setTimeout(() => {\n                this.cursorTimeout = undefined\n                this.setCursor(this.currentCursor)\n            }, timeout)\n        } else if (this.currentCursor !== cursor) {\n            this.currentCursor = cursor\n            if (this.cursorTimeout) return\n            this.setCursor(cursor)\n        }\n    }\n\n    private static setCursor(cursor: Cursor) {\n        this.activeCursor?.disableAnimation()\n        this.activeCursor = CursorManager.cursorToUrl.get(cursor)\n        if (!this.activeCursor) throw new Error(`Cursor ${cursor} not found`)\n        this.activeCursor.enableAnimation(HTML_GAME_CANVAS_CONTAINER)\n    }\n}\n","import { BufferGeometry, NearestFilter, RepeatWrapping, SRGBColorSpace, Texture } from 'three'\nimport { getFilename, getPath } from '../core/Util'\nimport { VERBOSE } from '../params'\nimport { SceneMesh } from '../scene/SceneMesh'\nimport { LWOBParser, LWOBTextureLoader } from './fileparser/LWOBParser'\nimport { LWSCData } from './fileparser/LWSCParser'\nimport { AnimEntityData } from './AnimEntityParser'\nimport { UVData } from './fileparser/LWOUVParser'\nimport { SpriteImage } from '../core/Sprite'\nimport { createCanvas, createContext, createDummyImgData } from '../core/ImageHelper'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { Cursor, PointersEntryCfg } from '../cfg/PointersCfg'\nimport { cacheGetData, cachePutData } from './AssetCacheHelper'\nimport { CursorManager } from '../screen/CursorManager'\nimport { AnimatedCursorData } from '../screen/AnimatedCursor'\nimport { SequenceTextureMaterial } from '../scene/SequenceTextureMaterial'\nimport { SurfaceMeshPro } from '../game/terrain/SurfaceMesh'\n\nexport class ResourceManager {\n    static readonly resourceByName: Map<string, any> = new Map()\n    static readonly imageCache: Map<string, SpriteImage> = new Map()\n    static readonly lwoCache: Map<string, { geometry: BufferGeometry, material: SequenceTextureMaterial[] } | undefined> = new Map()\n    static readonly textureCache: Map<string, Map<number, Texture>> = new Map() // TODO Remove three.js dependency here and put texture cache into scene manager\n    static readonly proMeshes: Map<string, SurfaceMeshPro> = new Map()\n\n    static getResource(resourceName: string): any { // TODO Replace with more type-safe approach\n        const lName = resourceName?.toString()?.toLowerCase() || undefined\n        if (!lName) return undefined\n        return this.resourceByName.get(lName)\n    }\n\n    static getImageOptional(imageName: string): SpriteImage | undefined {\n        if (!imageName) return undefined\n        const cached = this.imageCache.get(imageName)\n        if (cached) return cached\n        const imgData = this.resourceByName.get(imageName.toLowerCase()) // TODO data should be handled only in type-safe cache\n        if (!imgData) {\n            console.warn(`Image \"${imageName}\" not found!`)\n            return undefined\n        }\n        const context = createContext(imgData.width, imgData.height)\n        context.putImageData(imgData, 0, 0)\n        this.imageCache.set(imageName, context.canvas)\n        return context.canvas\n    }\n\n    static getImage(imageName: string): SpriteImage {\n        return this.imageCache.getOrUpdate(imageName, () => {\n            const imgData = this.getImageData(imageName)\n            const context = createContext(imgData.width, imgData.height)\n            context.putImageData(imgData, 0, 0)\n            // TODO Loading screen background should be cached to be able to be shown earlier\n            if (imageName.toLowerCase().endsWith('/loading.bmp') || imageName.toLowerCase().endsWith('/menubgpic.bmp')) {\n                context.fillStyle = '#f00'\n                context.fillRect(38, 9, 131, 131)\n            }\n            return context.canvas\n        })\n    }\n\n    static getImageData(imageName: string): ImageData {\n        if (!imageName) throw new Error(`imageName must not be undefined, null or empty - was ${imageName}`)\n        return this.resourceByName.getOrUpdate((imageName.toLowerCase()), () => {\n            console.error(`Image \"${imageName}\" not found! Using placeholder image instead`)\n            return createDummyImgData(64, 64)\n        })\n    }\n\n    static async loadAllCursor() {\n        const blankPointerImageData = this.getImageData(GameConfig.instance.pointers.blank.fileName)\n        const loadingCursors: Promise<void>[] = []\n        Object.entries(GameConfig.instance.pointers).forEach(([cursor, cursorEntry]: [string, PointersEntryCfg]) => {\n            const cursorFileName = cursorEntry.fileName\n            if (cursorFileName.toLowerCase().endsWith('.bmp')) {\n                loadingCursors.push(this.loadCursor(cursorFileName, cursor as Cursor))\n                return\n            }\n            loadingCursors.push(cacheGetData(cursorFileName).then((animatedCursorData) => {\n                if (!animatedCursorData) {\n                    const cursorImages = (this.getResource(cursorFileName) as SpriteImage[]).map((cursorCanvas) => {\n                        const blankCanvas = createCanvas(blankPointerImageData.width, blankPointerImageData.height)\n                        const context = blankCanvas.getContext('2d')\n                        if (!context) throw new Error('Could not init context for cursor canvas')\n                        context.putImageData(blankPointerImageData, 0, 0)\n                        const x = Math.round((blankPointerImageData.width - cursorCanvas.width) / 2)\n                        const y = Math.round((blankPointerImageData.height - cursorCanvas.height) / 2)\n                        context.drawImage(cursorCanvas, x, y)\n                        return context.canvas\n                    })\n                    animatedCursorData = new AnimatedCursorData(cursorImages)\n                    cachePutData(cursorFileName, animatedCursorData).then()\n                }\n                CursorManager.addCursor(cursor as Cursor, animatedCursorData.dataUrls)\n            }))\n        })\n        await Promise.all(loadingCursors)\n    }\n\n    static async loadCursor(cursorImageName: string, cursor: Cursor) {\n        let animatedCursorData = await cacheGetData(cursorImageName)\n        if (!animatedCursorData) {\n            const imgData = this.getImageData(cursorImageName)\n            const cursorImage = createCanvas(imgData.width, imgData.height)\n            const context = cursorImage.getContext('2d')\n            if (!context) {\n                console.warn('Could not get context to draw cursor on canvas')\n            } else {\n                context.putImageData(imgData, 0, 0)\n            }\n            animatedCursorData = new AnimatedCursorData([cursorImage])\n            cachePutData(cursorImageName, animatedCursorData).then()\n        }\n        CursorManager.addCursor(cursor, animatedCursorData.dataUrls)\n    }\n\n    static getTexturesBySequenceName(basename: string): Texture[] {\n        const lBasename = basename?.toLowerCase()\n        const result: string[] = []\n        this.resourceByName.forEach((_, name) => {\n            if (name.match(`${lBasename}\\\\d+`)) result.push(name)\n        })\n        result.sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))\n        if (result.length > 0) {\n            return result.map((textureFilepath) => this.getTexture(textureFilepath)).filter((t) => !!t)\n        } else if (!lBasename.startsWith('world/shared/')) {\n            return this.getTexturesBySequenceName(`world/shared/${getFilename(lBasename)}`)\n        } else {\n            console.log(`Texture sequence not found: ${lBasename}`)\n            return []\n        }\n    }\n\n    static getMeshTexture(textureFilepath: string, meshPath: string): Texture[] {\n        for (const path of [\n            '' + meshPath + textureFilepath,\n            `vehicles/sharedug/${textureFilepath}`,\n            `world/shared/${textureFilepath}`,\n        ]) {\n            const imgData = this.resourceByName.get(path.toLowerCase())\n            if (imgData) {\n                const texture = this.createTexture(imgData, path)\n                return texture ? [texture] : []\n            }\n        }\n        // TODO Refactor texture asset handling, search mesh textures in all subfolders of shared directories\n        const path = `vehicles/sharedug/drill_s/${textureFilepath}`\n        const imgData = this.resourceByName.get(path.toLowerCase())\n        if (imgData) {\n            const texture = this.createTexture(imgData, path)\n            return texture ? [texture] : []\n        }\n        // ignore known texture issues\n        if (VERBOSE || !['teofoilreflections.jpg', 'wingbase3.bmp', 'a_side.bmp', 'a_top.bmp', 'sand.bmp', 'display.bmp'].includes(textureFilepath)) {\n            console.warn(`Could not find texture ${textureFilepath}`)\n        }\n        return []\n    }\n\n    static getSurfaceTexture(textureFilepath: string, rotation: number): Texture | undefined {\n        const texture = this.getTexture(textureFilepath)\n        if (!texture) return undefined\n        if (rotation === 0) return texture\n        return this.textureCache.getOrUpdate(textureFilepath.toLowerCase(), () => new Map()).getOrUpdate(rotation, () => {\n            const rotatedTexture = texture.clone()\n            rotatedTexture.center.set(0.5, 0.5)\n            rotatedTexture.rotation = rotation\n            return rotatedTexture\n        })\n    }\n\n    static getTexture(textureFilepath: string): Texture | undefined {\n        if (!textureFilepath) {\n            throw new Error(`textureFilepath must not be undefined, null or empty - was ${textureFilepath}`)\n        }\n        const imgData = this.resourceByName.get(textureFilepath.toLowerCase())\n        if (!imgData) {\n            console.warn(`Could not find texture ${textureFilepath}`)\n            return undefined\n        }\n        return this.createTexture(imgData, textureFilepath)\n    }\n\n    private static createTexture(imgData: ImageData, textureFilepath: string): Texture {\n        return this.textureCache.getOrUpdate(textureFilepath.toLowerCase(), () => new Map()).getOrUpdate(0, () => {\n            // without repeat wrapping some entities are not fully textured\n            const texture = new Texture(imgData, Texture.DEFAULT_MAPPING, RepeatWrapping, RepeatWrapping)\n            texture.name = textureFilepath\n            texture.needsUpdate = true // without everything is just dark\n            texture.colorSpace = SRGBColorSpace\n            texture.magFilter = NearestFilter\n            return texture\n        })\n    }\n\n    static getLwoModel(lwoFilepath: string, textureLoader: ResourceManagerTextureLoader = ResourceManagerTextureLoader.instance): SceneMesh | undefined {\n        if (!lwoFilepath.endsWith('.lwo')) lwoFilepath += '.lwo'\n        const lwoData = this.lwoCache.getOrUpdate(lwoFilepath.toLowerCase(), () => {\n            const lwoBuffer = ResourceManager.getResource(lwoFilepath)\n            if (!lwoBuffer) {\n                const sharedLwoFilepath = `world/shared/${getFilename(lwoFilepath)}`\n                return this.lwoCache.getOrUpdate(sharedLwoFilepath.toLowerCase(), () => {\n                    const sharedLwoBuffer = ResourceManager.getResource(sharedLwoFilepath)\n                    if (!sharedLwoBuffer) {\n                        if (VERBOSE) console.warn(`Could not find lwo file neither at ${lwoFilepath} nor at ${sharedLwoFilepath}`)\n                        return undefined\n                    }\n                    textureLoader.setMeshPath(getPath(sharedLwoFilepath))\n                    const uvFilepath = sharedLwoFilepath.replace('.lwo', '.uv')\n                    const uvData = ResourceManager.getResource(uvFilepath) as UVData\n                    return new LWOBParser(sharedLwoBuffer, textureLoader, uvData).parse()\n                })\n            }\n            textureLoader.setMeshPath(getPath(lwoFilepath))\n            const uvFilepath = lwoFilepath.replace('.lwo', '.uv')\n            const uvData = ResourceManager.getResource(uvFilepath) as UVData\n            return new LWOBParser(lwoBuffer, textureLoader, uvData).parse()\n        })\n        if (!lwoData) return undefined\n        return new SceneMesh(lwoData.geometry, lwoData.material.map((m) => m.clone()), lwoFilepath)\n    }\n\n    static getLwscData(lwscFilepath: string): LWSCData {\n        lwscFilepath = lwscFilepath.toLowerCase()\n        if (!lwscFilepath.endsWith('.lws')) lwscFilepath += '.lws'\n        const lwscData = ResourceManager.getResource(lwscFilepath) as LWSCData\n        if (!lwscData) throw new Error(`Could not get LWSC data for '${lwscFilepath}'`)\n        return lwscData\n    }\n\n    static getAnimatedData(aeName: string): AnimEntityData {\n        const aeFilename = `${aeName}/${aeName.split('/').last()}.ae`\n        const animData = ResourceManager.getResource(aeFilename) as AnimEntityData\n        if (!animData) throw new Error(`Could not get animation data for: ${aeName}`)\n        return animData\n    }\n}\n\nclass ResourceManagerTextureLoader extends LWOBTextureLoader {\n    static readonly instance: ResourceManagerTextureLoader = new ResourceManagerTextureLoader()\n\n    meshPath: string = ''\n\n    setMeshPath(meshPath: string) {\n        this.meshPath = meshPath\n    }\n\n    load(textureFilename: string, onLoad: (textures: Texture[]) => void): void {\n        onLoad(this.loadFromResourceManager(textureFilename))\n    }\n\n    private loadFromResourceManager(textureFilename: string): Texture[] {\n        if (!textureFilename || textureFilename === '(none)') return []\n        const hasSequence = textureFilename.endsWith('(sequence)')\n        if (hasSequence) textureFilename = textureFilename.slice(0, textureFilename.length - '(sequence)'.length).trim()\n        const alphaIndexMatch = textureFilename.match(/(.*a)(\\d+)(_.+)/i)\n        if (alphaIndexMatch) textureFilename = alphaIndexMatch[1] + alphaIndexMatch[3]\n        if (hasSequence) {\n            const match = textureFilename.match(/(.+\\D)0+(\\d+)\\..+/i)\n            if (!match) return []\n            return ResourceManager.getTexturesBySequenceName(this.meshPath + match[1])\n        } else {\n            return ResourceManager.getMeshTexture(textureFilename, this.meshPath)\n        }\n    }\n}\n","import { getPixel, setPixel } from '../../core/ImageHelper'\n\n/**\n * References for FLIC file formats (FLC, FLI and FLH)\n *\n * https://www.compuphase.com/flic.htm#DELTA_FLC\n * https://github.com/miningmanna/LRR-remake/blob/master/src/org/rrr/assets/tex/FLHFile.java\n * https://www.drdobbs.com/windows/the-flic-file-format/184408954\n * http://bespin.org/~qz/pc-gpe/fli.for\n * https://github.com/aseprite/flic/blob/main/decoder.cpp\n *\n */\n\nexport class FlhParser {\n    fileLength: number = 0\n    flicFileType: number = 0\n    lengthFrames: number = 0\n    frames: Array<ImageData> = []\n    width: number = 0\n    height: number = 0\n    depth: number = 0\n    offsetFirstFrame: number = 0\n\n    constructor(readonly dataView: DataView, readonly interFrameMode: boolean) {\n    }\n\n    parse(): ImageData[] {\n        this.parseHeader()\n        this.parseChunks()\n        if (this.interFrameMode) this.frames.shift()\n        return this.frames\n    }\n\n    private parseHeader() {\n        this.fileLength = this.getDWord(0)\n        this.flicFileType = this.getWord(4)\n        if (this.flicFileType !== 0xAF43) console.warn(`Unexpected FLIC file type found: ${this.flicFileType} does not match expected 0xAF43`)\n        this.lengthFrames = this.getWord(6)\n        this.frames = new Array(this.lengthFrames)\n        this.width = this.getWord(8)\n        this.height = this.getWord(10)\n        this.depth = this.getWord(12)\n        if (this.depth != 16) console.warn(`Expected 16 bit colors in flh file; got instead: ${this.depth}`)\n        // const flags = this.getWord(14) // always 0\n        // const speed = this.getDWord(16) // delay between frames; always 0\n        this.offsetFirstFrame = this.getDWord(80)\n    }\n\n    private parseChunks() {\n        let frameIndex = 0\n        for (let chunkStart = this.offsetFirstFrame; chunkStart < this.fileLength;) {\n            const chunkLength = this.getDWord(chunkStart)\n            const chunkType = this.getWord(chunkStart + 4)\n            switch (chunkType) {\n                case 0xF1FA:\n                    if (chunkLength > 16) {\n                        this.parseFrameType(chunkStart + 6, frameIndex)\n                        frameIndex++\n                    }\n                    break\n                default:\n                    console.warn(`Unexpected chunk type: 0x${chunkType.toString(16).toUpperCase()}`)\n                    break\n            }\n            chunkStart += chunkLength\n        }\n    }\n\n    parseFrameType(chunkStart: number, frameIndex: number) {\n        let offset = chunkStart\n        const numChunks = this.dataView.getUint16(offset, true)\n        if (numChunks > 1) {\n            console.warn(`More than one sub-chunk; got instead: ${numChunks}`)\n        }\n        offset += 2\n        offset += 2\n        offset += 2 // reserved = 0\n        offset += 4 // width and height override should be 0\n\n        let len = this.dataView.getUint32(offset, true)\n        len -= 6\n        offset += 4\n        const chunkType = this.dataView.getUint16(offset, true)\n        offset += 2\n\n        switch (chunkType) {\n            case 25:\n                this.parseDtaBrun(this.dataView, offset, chunkStart + len, frameIndex)\n                break\n            case 27:\n                this.parseDeltaFlc(this.dataView, offset, chunkStart + len, frameIndex)\n                break\n            default:\n                console.warn(`Unsupported sub-chunk type: ${chunkType}`)\n                break\n        }\n    }\n\n    private parseDtaBrun(seg: DataView, offset: number, chunkEnd: number, frameIndex: number) {\n        const imgData = new ImageData(this.width, this.height)\n        let x = 0\n        let y = 0\n        let w = this.width\n        offset += 1\n        while ((chunkEnd - offset) > 0) {\n            let repeat = seg.getInt8(offset)\n            if (repeat < 0) {\n                repeat = (repeat * -1)\n                for (let i = 0; i < repeat; i++) {\n                    const [r, g, b] = FlhParser.getARGBFrom555RGB(seg, offset + i * 2 + 1)\n                    this.setPixel(imgData, x, y, r, g, b, (!r && !g && !b ? 0 : 255))\n                    x++\n                }\n                offset += repeat * 2 + 1\n            } else {\n                const [r, g, b] = FlhParser.getARGBFrom555RGB(seg, offset + 1)\n                for (let i = 0; i < repeat; i++) {\n                    this.setPixel(imgData, x, y, r, g, b, (!r && !g && !b ? 0 : 255))\n                    x++\n                }\n                offset += 3\n            }\n            if (x >= w) {\n                x %= w\n                y++\n                if (y > this.height) break\n                offset++\n            }\n        }\n        this.frames[frameIndex] = imgData\n    }\n\n    private parseDeltaFlc(seg: DataView, offset: number, chunkEnd: number, frameIndex: number) {\n        const res = new ImageData(this.width, this.height)\n        if (frameIndex > (this.interFrameMode ? 1 : 0)) {\n            res.data.set(this.frames[frameIndex - 1].data)\n        }\n        const numLines = seg.getUint16(offset, true)\n        offset += 2\n        let y = 0\n        let linesDone = 0\n        while ((chunkEnd - offset) > 0) {\n            if (numLines === linesDone) {\n                console.warn(`All lines already done. Unexpected data at: ${chunkEnd - offset}`)\n                break\n            }\n            let packCount = -1\n            while (packCount === -1) {\n                const opcode = seg.getInt16(offset, true)\n                offset += 2\n                const opType = (0x0000C000 & opcode) >> 14\n                switch (opType) {\n                    case 0:\n                        packCount = opcode\n                        break\n                    case 1: // undefined opcode according to specs\n                        console.warn(`Undefined opcode: ${opcode}`)\n                        break\n                    case 2:\n                        // console.log('Last Pixel?')\n                        break\n                    case 3:\n                        y += Math.abs(opcode) & 0x000000FF\n                        break\n                    default:\n                        console.warn(`Unknown opType: ${opType}; opcode: ${opcode}`)\n                        break\n                }\n            }\n            let x = 0\n            for (let i = 0; i < packCount; i++) {\n                x += 0x000000FF & seg.getInt8(offset)\n                offset++\n                let repeat = seg.getInt8(offset)\n                offset++\n                if (repeat < 0) {\n                    repeat = (-1 * repeat)\n                    const [r, g, b] = FlhParser.getARGBFrom555RGB(seg, offset)\n                    for (let j = 0; j < repeat; j++) {\n                        this.setPixel(res, x, y, r, g, b)\n                        x++\n                    }\n                    offset += 2\n                } else {\n                    for (let j = 0; j < repeat; j++) {\n                        const [r, g, b] = FlhParser.getARGBFrom555RGB(seg, offset + j * 2)\n                        this.setPixel(res, x, y, r, g, b)\n                        x++\n                    }\n                    offset += repeat * 2\n                }\n            }\n            y++\n            linesDone++\n        }\n        this.frames[frameIndex] = res\n    }\n\n    private setPixel(img: ImageData, x: number, y: number, r: number, g: number, b: number, a: number = 255) {\n        const firstFrame = this.frames[0]\n        if (this.interFrameMode && firstFrame && img !== firstFrame) {\n            const f = getPixel(firstFrame, x, y)\n            const d = Math.abs(f.r - r) + Math.abs(f.g - g) + Math.abs(f.b - b) + Math.abs(f.a - a)\n            if (d > 1) {\n                setPixel(img, x, y, r, g, b, a)\n            } else {\n                setPixel(img, x, y, 0, 0, 0, 0)\n            }\n        } else {\n            setPixel(img, x, y, r, g, b, a)\n        }\n    }\n\n    private static getARGBFrom555RGB(a: DataView, offset: number): [number, number, number] {\n        let rgb = 0x000000FF\n        rgb &= a.getInt8(offset + 1)\n        rgb = rgb << 8\n        rgb |= 0x000000FF & a.getInt8(offset)\n        let r = Math.floor((rgb >> 10) * (255.0 / 31.0))\n        let g = Math.floor(((rgb >> 5) & 0b00011111) * (255.0 / 31.0))\n        let b = Math.floor((rgb & 0b00011111) * (255.0 / 31.0))\n        return [r, g, b]\n    }\n\n    private getDWord(offset: number): number {\n        return this.dataView.getUint32(offset, true)\n    }\n\n    private getWord(offset: number): number {\n        return this.dataView.getUint16(offset, true)\n    }\n}\n","export const enum EventKey {\n    // Local events\n    SELECTION_CHANGED = 'selection-changed',\n    DESELECT_ALL = 'deselect-all',\n    BUILDINGS_CHANGED = 'buildings-changed',\n    RAIDER_AMOUNT_CHANGED = 'raider-amount-changed',\n    RAIDER_TRAINING_COMPLETE = 'raider-training-complete',\n    VEHICLE_UPGRADE_COMPLETE = 'vehicle-upgrade-complete',\n    SHOW_MISSION_BRIEFING = 'show-mission-briefing',\n    SHOW_MISSION_ADVISOR = 'show-mission-advisor',\n    SHOW_GAME_RESULT = 'show-game-result',\n    SHOW_OPTIONS = 'show-options',\n    SET_SPACE_TO_CONTINUE = 'set-space-to-continue',\n    FOLLOWER_SET_CANVAS = 'follower-set-canvas',\n    FOLLOWER_SET_LOOK_AT = 'follower-set-look-at',\n    FOLLOWER_RENDER_START = 'follower-render-start',\n    FOLLOWER_RENDER_STOP = 'follower-render-stop',\n    SELECTION_FRAME_CHANGE = 'selection-frame-change',\n    INIT_RADAR_MAP = 'init-radar-map',\n    UPDATE_RADAR_ENTITY = 'update-radar-entity',\n    UPDATE_RADAR_TERRAIN = 'update-radar-terrain',\n    UPDATE_RADAR_SURFACE = 'update-radar-surface',\n    UPDATE_RADAR_CAMERA = 'update-radar-camera',\n    GUI_BUTTON_BLINK = 'gui-button-blink',\n    GUI_GO_BACK_BUTTON_CLICKED = 'gui-back-button-clicked',\n    GUI_BUILD_BUILDING_BUTTON_CLICKED = 'gui-build-button-clicked',\n    GUI_GET_TOOL_BUTTON_CLICKED = 'gui-get-tool-button-clicked',\n    GUI_TRAIN_RAIDER_BUTTON_CLICKED = 'gui-train-raider-button-clicked',\n    ADVANCE_AFTER_REWARDS = 'advance-after-rewards',\n\n    // GUI command events\n    COMMAND_TOOLTIP_CHANGE = 'command-tooltip-change',\n    COMMAND_TOOLTIP_FORCE_REDRAW = 'command-tooltip-force-redraw',\n    COMMAND_TOOLTIP_HIDE = 'command-tooltip-hide',\n    COMMAND_PLAY_SOUND = 'command-play-sound',\n    COMMAND_CREATE_POWER_PATH = 'command-create-power-path',\n    COMMAND_PLACE_FENCE = 'command-place-fence',\n    COMMAND_FENCE_BEAMUP = 'command-fence-beamup',\n    COMMAND_MAKE_RUBBLE = 'command-make-rubble',\n    COMMAND_CREATE_CLEAR_RUBBLE_JOB = 'command-create-clear-rubble-job',\n    COMMAND_CREATE_DRILL_JOB = 'command-create-drill-job',\n    COMMAND_CREATE_REINFORCE_JOB = 'command-create-reinforce-job',\n    COMMAND_CREATE_DYNAMITE_JOB = 'command-create-dynamite-job',\n    COMMAND_CANCEL_SURFACE_JOBS = 'command-cancel-surface-jobs',\n    COMMAND_CHANGE_BUILDING_POWER_STATE = 'command-change-building-power-state',\n    COMMAND_UPGRADE_BUILDING = 'command-upgrade-building',\n    COMMAND_BUILDING_BEAMUP = 'command-building-beamup',\n    COMMAND_RAIDER_EAT = 'command-raider-eat',\n    COMMAND_PICK_TOOL = 'command-pick-tool',\n    COMMAND_RAIDER_UPGRADE = 'command-raider-upgrade',\n    COMMAND_RAIDER_BEAMUP = 'command-raider-beamup',\n    COMMAND_TRAIN_RAIDER = 'command-train-raider',\n    COMMAND_RAIDER_DROP = 'command-raider-drop',\n    COMMAND_SELECT_BUILD_MODE = 'command-select-build-mode',\n    COMMAND_CANCEL_CONSTRUCTION = 'command-cancel-construction',\n    COMMAND_VEHICLE_GET_MAN = 'command-vehicle-get-man',\n    COMMAND_VEHICLE_BEAMUP = 'command-vehicle-beamup',\n    COMMAND_VEHICLE_DRIVER_GET_OUT = 'command-vehicle-driver-get-out',\n    COMMAND_VEHICLE_UNLOAD = 'command-vehicle-unload',\n    COMMAND_VEHICLE_LOAD = 'command-vehicle-load',\n    COMMAND_CAMERA_CONTROL = 'command-camera-control',\n    COMMAND_REPAIR_LAVA = 'command-repair-lava',\n    COMMAND_CHANGE_PREFERENCES = 'command-change-preferences',\n    COMMAND_UPGRADE_VEHICLE = 'command-upgrade-vehicle',\n    COMMAND_REPAIR_BUILDING = 'command-repair-building',\n    COMMAND_DROP_BIRD_SCARER = 'command-drop-bird-scarer',\n    COMMAND_CAMERA_VIEW = 'command-camera-view',\n\n    // World events with location\n    LOCATION_DEATH = 'location-death',\n    LOCATION_MONSTER = 'location-monster',\n    LOCATION_MONSTER_GONE = 'location-monster-gone',\n    LOCATION_CRYSTAL_FOUND = 'location-crystal-found',\n    LOCATION_UNDER_ATTACK = 'location-under-attack',\n    LOCATION_LANDSLIDE = 'location-landslide',\n    LOCATION_POWER_DRAIN = 'location-power-drain',\n    LOCATION_SLUG_EMERGE = 'location-slug-emerge',\n    LOCATION_SLUG_GONE = 'location-slug-gone',\n    LOCATION_RAIDER_DISCOVERED = 'location-raider-discovered',\n\n    // World events\n    LEVEL_SELECTED = 'level-selected',\n    JOB_CREATE = 'job-create',\n    REQUESTED_RAIDERS_CHANGED = 'requested-raiders-changed',\n    REQUESTED_VEHICLES_CHANGED = 'requested-vehicles-changed',\n    MATERIAL_AMOUNT_CHANGED = 'material-amount-changed',\n    USED_CRYSTALS_CHANGED = 'used-crystals-changed',\n    CAVERN_DISCOVERED = 'cavern-discovered',\n    ORE_FOUND = 'ore-found',\n    AIR_LEVEL_CHANGED = 'air-level-changed',\n    MONSTER_EMERGE = 'monster-emerge',\n    NERP_MESSAGE = 'nerp-message',\n    NERP_MESSAGE_NEXT = 'nerp-message-next',\n    NERP_SUPPRESS_ARROW = 'nerp-suppress-arrow',\n    PAUSE_GAME = 'pause-game',\n    UNPAUSE_GAME = 'unpause-game',\n    UPDATE_PRIORITIES = 'update-priorities',\n    TOGGLE_ALARM = 'toggle-alarm',\n    DYNAMITE_EXPLOSION = 'dynamite-explosion',\n    GAME_RESULT_STATE = 'game-result-state',\n    RESTART_GAME = 'restart-game',\n    SHOOT_LASER = 'shoot-laser',\n    MONSTER_LASER_HIT = 'monster-laser-hit',\n}\n","import { PriorityIdentifier } from './PriorityIdentifier'\n\nexport class PriorityEntry {\n    key: PriorityIdentifier\n    enabled: boolean\n\n    constructor(other: PriorityEntry) {\n        this.key = other.key\n        this.enabled = other.enabled\n    }\n}\n","import { EventTypeMap } from './EventTypeMap'\n\n// Inspired by https://github.com/nijatismayilov/typescript-eventbus\n\nclass Observer<EventType extends keyof EventTypeMap> {\n    private listeners: ((e: EventTypeMap[EventType]) => void)[] = []\n\n    subscribe(listener: (e: EventTypeMap[EventType]) => void): () => void {\n        this.listeners = [...this.listeners, listener]\n        return () => {\n            this.listeners = this.listeners.filter((l) => l !== listener)\n        }\n    }\n\n    publish(event: EventTypeMap[EventType]): void {\n        this.listeners.forEach((listener) => listener(event))\n    }\n}\n\nexport class EventBroker {\n    private static instance: EventBroker\n    private observers: {\n        [Type in keyof EventTypeMap]?: Observer<Type>;\n    } = {}\n    private readonly blockedEvents: Set<keyof EventTypeMap> = new Set<keyof EventTypeMap>()\n\n    public static publish<Type extends keyof EventTypeMap>(event: EventTypeMap[Type]): void {\n        if (!this.instance.observers[event.type]) {\n            this.instance.observers = {\n                ...this.instance.observers,\n                [event.type]: new Observer<Type>(),\n            }\n        }\n        if (this.instance.blockedEvents.has(event.type)) return // event is currently blocked from publishing\n        this.instance.blockedEvents.add(event.type)\n        // @ts-ignore\n        this.instance.observers[event.type].publish(event)\n        this.instance.blockedEvents.delete(event.type)\n    }\n\n    public static subscribe<Type extends keyof EventTypeMap>(\n        type: Type,\n        listener: (e: EventTypeMap[Type]) => void\n    ): void {\n        if (!this.instance.observers[type]) {\n            this.instance.observers = {\n                ...this.instance.observers,\n                [type]: new Observer<Type>(),\n            }\n        }\n        this.instance.observers[type]?.subscribe(listener)\n    }\n\n    public static init() {\n        this.instance = new EventBroker()\n    }\n}\n","import { AdvanceAfterRewardsEvent, BuildingsChangedEvent, DeselectAll, FollowerSetCanvasEvent, FollowerSetLookAtEvent, GuiBackButtonClicked, GuiBuildButtonClicked, GuiButtonBlinkEvent, GuiGetToolButtonClicked, GuiTrainRaiderButtonClicked, InitRadarMap, RaidersAmountChangedEvent, RaiderTrainingCompleteEvent, SelectionChanged, SelectionFrameChangeEvent, SetSpaceToContinueEvent, ShowGameResultEvent, ShowMissionAdvisorEvent, ShowMissionBriefingEvent, ShowOptionsEvent, UpdateRadarCamera, UpdateRadarEntityEvent, UpdateRadarSurface, UpdateRadarTerrain, VehicleUpgradeCompleteEvent } from './LocalEvents'\nimport { AirLevelChanged, CavernDiscovered, DynamiteExplosionEvent, GameResultEvent, JobCreateEvent, LevelSelectedEvent, MaterialAmountChanged, MonsterEmergeEvent, MonsterLaserHitEvent, NerpMessageEvent, NerpSuppressArrowEvent, OreFoundEvent, RequestedRaidersChanged, RequestedVehiclesChanged, RestartGameEvent, ShootLaserEvent, ToggleAlarmEvent, UpdatePriorities, UsedCrystalsChanged, WorldLocationEvent } from './WorldEvents'\nimport { CameraControl, CancelBuilding, CancelSurfaceJobs, ChangeBuildingPowerState, ChangeCameraEvent, ChangePreferences, ChangeTooltip, CreateClearRubbleJob, CreateDrillJob, CreateDynamiteJob, CreatePowerPath, CreateReinforceJob, DropBirdScarer, ForceRedrawTooltip, HideTooltip, MakeRubble, PickTool, PlaceFence, PlaySoundEvent, RaiderBeamUp, RaiderDrop, RaiderEat, RaiderUpgrade, RepairBuilding, RepairLava, SelectBuildMode, TrainRaider, UpgradeBuilding, UpgradeVehicle, VehicleBeamUp, VehicleCallMan, VehicleDriverGetOut, VehicleLoad, VehicleUnload } from './GuiCommand'\n\nexport class BaseEvent {\n    constructor(readonly type: keyof EventTypeMap) {\n    }\n}\n\n/**\n * All mappings must be unique! Events trigger the same handlers otherwise, regardless of the event key being used\n */\n\nexport interface DefaultEventMap {\n    'selection-changed': SelectionChanged\n    'deselect-all': DeselectAll\n    'buildings-changed': BuildingsChangedEvent\n    'raider-amount-changed': RaidersAmountChangedEvent\n    'raider-training-complete': RaiderTrainingCompleteEvent\n    'vehicle-upgrade-complete': VehicleUpgradeCompleteEvent\n    'show-mission-briefing': ShowMissionBriefingEvent\n    'show-mission-advisor': ShowMissionAdvisorEvent\n    'show-game-result': ShowGameResultEvent\n    'show-options': ShowOptionsEvent\n    'set-space-to-continue': SetSpaceToContinueEvent\n    'follower-set-canvas': FollowerSetCanvasEvent\n    'follower-set-look-at': FollowerSetLookAtEvent\n    'follower-render-start': BaseEvent\n    'follower-render-stop': BaseEvent\n    'selection-frame-change': SelectionFrameChangeEvent\n    'init-radar-map': InitRadarMap\n    'update-radar-entity': UpdateRadarEntityEvent\n    'update-radar-terrain': UpdateRadarTerrain\n    'update-radar-surface': UpdateRadarSurface\n    'update-radar-camera': UpdateRadarCamera\n    'gui-button-blink': GuiButtonBlinkEvent\n    'gui-back-button-clicked': GuiBackButtonClicked\n    'gui-build-button-clicked': GuiBuildButtonClicked\n    'gui-get-tool-button-clicked': GuiGetToolButtonClicked\n    'gui-train-raider-button-clicked': GuiTrainRaiderButtonClicked\n    'advance-after-rewards': AdvanceAfterRewardsEvent\n\n    'command-tooltip-change': ChangeTooltip\n    'command-tooltip-force-redraw': ForceRedrawTooltip\n    'command-tooltip-hide': HideTooltip\n    'command-play-sound': PlaySoundEvent\n    'command-create-power-path': CreatePowerPath\n    'command-place-fence': PlaceFence\n    'command-fence-beamup': BaseEvent\n    'command-make-rubble': MakeRubble\n    'command-create-clear-rubble-job': CreateClearRubbleJob\n    'command-create-drill-job': CreateDrillJob\n    'command-create-reinforce-job': CreateReinforceJob\n    'command-create-dynamite-job': CreateDynamiteJob\n    'command-cancel-surface-jobs': CancelSurfaceJobs\n    'command-change-building-power-state': ChangeBuildingPowerState\n    'command-upgrade-building': UpgradeBuilding\n    'command-building-beamup': BaseEvent\n    'command-raider-eat': RaiderEat\n    'command-pick-tool': PickTool\n    'command-raider-upgrade': RaiderUpgrade\n    'command-raider-beamup': RaiderBeamUp\n    'command-train-raider': TrainRaider\n    'command-raider-drop': RaiderDrop\n    'command-select-build-mode': SelectBuildMode\n    'command-cancel-construction': CancelBuilding\n    'command-vehicle-get-man': VehicleCallMan\n    'command-vehicle-beamup': VehicleBeamUp\n    'command-vehicle-driver-get-out': VehicleDriverGetOut\n    'command-vehicle-unload': VehicleUnload\n    'command-vehicle-load': VehicleLoad\n    'command-camera-control': CameraControl\n    'command-repair-lava': RepairLava\n    'command-change-preferences': ChangePreferences\n    'command-upgrade-vehicle': UpgradeVehicle\n    'command-repair-building': RepairBuilding\n    'command-drop-bird-scarer': DropBirdScarer\n    'command-camera-view': ChangeCameraEvent\n\n    'level-selected': LevelSelectedEvent\n    'job-create': JobCreateEvent\n    'requested-raiders-changed': RequestedRaidersChanged\n    'requested-vehicles-changed': RequestedVehiclesChanged\n    'material-amount-changed': MaterialAmountChanged\n    'used-crystals-changed': UsedCrystalsChanged\n    'cavern-discovered': CavernDiscovered\n    'ore-found': OreFoundEvent\n    'air-level-changed': AirLevelChanged\n    'monster-emerge': MonsterEmergeEvent\n    'nerp-message': NerpMessageEvent\n    'nerp-message-next': BaseEvent\n    'nerp-suppress-arrow': NerpSuppressArrowEvent\n    'pause-game': BaseEvent\n    'unpause-game': BaseEvent\n    'update-priorities': UpdatePriorities\n    'toggle-alarm': ToggleAlarmEvent\n    'dynamite-explosion': DynamiteExplosionEvent\n    'game-result-state': GameResultEvent\n    'restart-game': RestartGameEvent\n    'shoot-laser': ShootLaserEvent\n    'monster-laser-hit': MonsterLaserHitEvent\n}\n\nexport interface WorldLocationEventMap {\n    'location-death': WorldLocationEvent\n    'location-monster': WorldLocationEvent\n    'location-monster-gone': WorldLocationEvent\n    'location-crystal-found': WorldLocationEvent\n    'location-under-attack': WorldLocationEvent\n    'location-landslide': WorldLocationEvent\n    'location-power-drain': WorldLocationEvent\n    'location-slug-emerge': WorldLocationEvent\n    'location-slug-gone': WorldLocationEvent\n    'location-raider-discovered': WorldLocationEvent\n}\n\nexport interface EventTypeMap extends DefaultEventMap, WorldLocationEventMap {\n}\n","import { EntityType } from '../game/model/EntityType'\nimport { GameState } from '../game/model/GameState'\nimport { Job } from '../game/model/job/Job'\nimport { EventKey } from './EventKeyEnum'\nimport { Vector2 } from 'three'\nimport { GameResultState } from '../game/model/GameResult'\nimport { LevelConfData } from '../game/LevelLoader'\nimport { BaseEvent, WorldLocationEventMap } from './EventTypeMap'\nimport { PriorityEntry } from '../game/model/job/PriorityEntry'\nimport { Surface } from '../game/terrain/Surface'\nimport { GameEntity } from '../game/ECS'\nimport { WeaponTypeCfg } from '../cfg/WeaponTypeCfg'\nimport { PositionComponent } from '../game/component/PositionComponent'\n\nexport class JobCreateEvent extends BaseEvent {\n    constructor(readonly job: Job) {\n        super(EventKey.JOB_CREATE)\n    }\n}\n\nexport class RequestedRaidersChanged extends BaseEvent {\n    constructor(readonly numRequested: number) {\n        super(EventKey.REQUESTED_RAIDERS_CHANGED)\n    }\n}\n\nexport class RequestedVehiclesChanged extends BaseEvent {\n    constructor(readonly vehicle: EntityType, readonly numRequested: number) {\n        super(EventKey.REQUESTED_VEHICLES_CHANGED)\n    }\n}\n\nexport class MaterialAmountChanged extends BaseEvent {\n    readonly numCrystal: number\n    readonly totalOre: number\n\n    constructor() {\n        super(EventKey.MATERIAL_AMOUNT_CHANGED)\n        this.numCrystal = GameState.numCrystal\n        this.totalOre = GameState.numOreValue\n    }\n}\n\nexport class UsedCrystalsChanged extends BaseEvent {\n    readonly usedCrystals: number\n\n    constructor() {\n        super(EventKey.USED_CRYSTALS_CHANGED)\n        this.usedCrystals = GameState.usedCrystals\n    }\n}\n\nexport class CavernDiscovered extends BaseEvent {\n    constructor() {\n        super(EventKey.CAVERN_DISCOVERED)\n    }\n}\n\nexport class OreFoundEvent extends BaseEvent {\n    constructor() {\n        super(EventKey.ORE_FOUND)\n    }\n}\n\nexport class ToggleAlarmEvent extends BaseEvent {\n    constructor(readonly alarmState: boolean) {\n        super(EventKey.TOGGLE_ALARM)\n    }\n}\n\nexport class DynamiteExplosionEvent extends BaseEvent {\n    constructor(readonly position: Vector2) {\n        super(EventKey.DYNAMITE_EXPLOSION)\n    }\n}\n\nexport class GameResultEvent extends BaseEvent {\n    constructor(readonly result: GameResultState) {\n        super(EventKey.GAME_RESULT_STATE)\n    }\n}\n\nexport class RestartGameEvent extends BaseEvent {\n    constructor() {\n        super(EventKey.RESTART_GAME)\n    }\n}\n\nexport class LevelSelectedEvent extends BaseEvent {\n    constructor(readonly levelConf: LevelConfData) {\n        super(EventKey.LEVEL_SELECTED)\n    }\n}\n\nexport class AirLevelChanged extends BaseEvent {\n    constructor(readonly airLevel: number) {\n        super(EventKey.AIR_LEVEL_CHANGED)\n    }\n}\n\nexport class MonsterEmergeEvent extends BaseEvent {\n    constructor(readonly surface: Surface) {\n        super(EventKey.MONSTER_EMERGE)\n    }\n}\n\nexport class NerpMessageEvent extends BaseEvent {\n    constructor(readonly text: string, readonly messageTimeoutMs: number, readonly arrowDisabled: boolean) {\n        super(EventKey.NERP_MESSAGE)\n    }\n}\n\nexport class UpdatePriorities extends BaseEvent {\n    constructor(readonly priorityList: PriorityEntry[]) {\n        super(EventKey.UPDATE_PRIORITIES)\n    }\n}\n\nexport class NerpSuppressArrowEvent extends BaseEvent {\n    constructor(readonly suppressArrow: boolean) {\n        super(EventKey.NERP_SUPPRESS_ARROW)\n    }\n}\n\nexport class ShootLaserEvent extends BaseEvent {\n    constructor(readonly entity: GameEntity) {\n        super(EventKey.SHOOT_LASER)\n    }\n}\n\nexport class MonsterLaserHitEvent extends BaseEvent {\n    constructor(readonly entity: GameEntity, readonly weaponCfg: WeaponTypeCfg) {\n        super(EventKey.MONSTER_LASER_HIT)\n    }\n}\n\nexport class WorldLocationEvent extends BaseEvent {\n    constructor(eventType: keyof WorldLocationEventMap, readonly location: PositionComponent) {\n        super(eventType)\n    }\n}\n","import { PriorityEntry } from '../../game/model/job/PriorityEntry'\nimport { EventBroker } from '../../event/EventBroker'\nimport { UpdatePriorities } from '../../event/WorldEvents'\nimport { PriorityIdentifier } from '../../game/model/job/PriorityIdentifier'\n\nexport class PriorityList {\n    readonly levelDefault: PriorityEntry[] = []\n    readonly current: PriorityEntry[] = []\n\n    setList(priorities: PriorityEntry[]) {\n        this.levelDefault.length = 0\n        this.levelDefault.push(...priorities)\n        this.reset()\n    }\n\n    toggle(index: number) {\n        this.current[index].enabled = !this.current[index].enabled\n        EventBroker.publish(new UpdatePriorities(this.current))\n    }\n\n    upOne(index: number) {\n        const tmp = this.current[index]\n        this.current[index] = this.current[index + 1]\n        this.current[index + 1] = tmp\n        EventBroker.publish(new UpdatePriorities(this.current))\n    }\n\n    reset() {\n        this.current.length = 0\n        this.current.push(...this.levelDefault.map((entry) => new PriorityEntry(entry))) // use deep copy to avoid interference\n        EventBroker.publish(new UpdatePriorities(this.current))\n    }\n\n    pushToTop(index: number) {\n        const element = this.current[index]\n        for (let c = index; c > 0; c--) {\n            this.current[c] = this.current[c - 1]\n        }\n        this.current[0] = element\n        EventBroker.publish(new UpdatePriorities(this.current))\n    }\n\n    setPriorityIndex(priorityIdentifier: PriorityIdentifier, targetIndex: number): void {\n        if (targetIndex < 0 || targetIndex > 1) {\n            console.warn('Unexpected target index for priority. Pushing to top anyway') // XXX Support other target indexes\n        }\n        const currentIndex = this.current.findIndex((p) => p.key === priorityIdentifier)\n        if (currentIndex < 0) {\n            console.warn(`Cannot change priority index for ${priorityIdentifier}. Index not found`)\n            return\n        }\n        this.pushToTop(currentIndex)\n        EventBroker.publish(new UpdatePriorities(this.current))\n    }\n\n    getPriority(priorityIdentifier: PriorityIdentifier): number {\n        return this.current.findIndex((p) => p.key === priorityIdentifier)\n    }\n\n    isEnabled(priorityIdentifier: PriorityIdentifier): boolean {\n        const priority = this.current.find((p) => p.key === priorityIdentifier)\n        return !priority || priority.enabled\n    }\n}\n","import { Vector2 } from 'three'\nimport { PriorityList } from '../../gui/toppanel/PriorityList'\nimport { BRICK_ORE_VALUE, DEV_MODE } from '../../params'\nimport { GameEntity } from '../ECS'\nimport { SaveGameRaider } from '../../resource/SaveGameManager'\n\nexport class GameState {\n    static gameSpeedMultiplier: number = 1\n    static numCrystal: number = 0\n    static numOre: number = 0\n    static numBrick: number = 0\n    static usedCrystals: number = 0\n    static dischargedCrystals: number = 0\n    static airLevel: number = 1 // air level in percent from 0 to 1.0\n    static totalCrystals: number = 0\n    static totalOres: number = 0\n    static totalDiggables: number = 0\n    static remainingDiggables: number = 0\n    static discoveredCaverns: number = 0\n    static hiddenObjectsFound: number = 0\n    static alarmMode: boolean = false\n    static showObjInfo: boolean = false\n    static monsterCongregation?: Vector2\n    static priorityList: PriorityList = new PriorityList()\n    static tutoBlockClicks: Map<number, number> = new Map()\n    static noMultiSelect: boolean = false\n    static monsterAttackPowerStation: boolean = false\n    static isBirdView: boolean = true\n    static unassignedTeam: SaveGameRaider[] = []\n    static raiderSaveGameMap: Map<GameEntity, SaveGameRaider> = new Map()\n\n    static reset() {\n        this.gameSpeedMultiplier = 1\n        this.numCrystal = this.getDevParam('numCrystal', 0)\n        this.numOre = this.getDevParam('numOre', 0)\n        this.numBrick = this.getDevParam('numBrick', 0)\n        this.usedCrystals = 0\n        this.dischargedCrystals = 0\n        this.airLevel = 1\n        this.totalCrystals = 0\n        this.totalOres = 0\n        this.totalDiggables = 0\n        this.remainingDiggables = 0\n        this.discoveredCaverns = 0\n        this.hiddenObjectsFound = 0\n        this.alarmMode = false\n        this.monsterCongregation = undefined\n        this.priorityList = new PriorityList()\n        this.tutoBlockClicks = new Map()\n        this.noMultiSelect = false\n        this.monsterAttackPowerStation = false\n        this.isBirdView = true\n        this.unassignedTeam.length = 0\n        this.raiderSaveGameMap = new Map()\n    }\n\n    static getDevParam(paramName: string, fallback: number): number {\n        if (!DEV_MODE) return fallback\n        const params = new URLSearchParams(window.location.search)\n        return Number(params.get(paramName)) || fallback\n    }\n\n    static get numOreValue(): number {\n        return this.numOre + this.numBrick * BRICK_ORE_VALUE\n    }\n}\n","// Inspired by https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript/47593316#47593316\n\n/**\n * Simple hash function to properly seed pseudo-random-number-generator from any user input\n */\nfunction cyrb128(seed: string): number[] {\n    let h1 = 1779033703, h2 = 3144134277,\n        h3 = 1013904242, h4 = 2773480762\n    for (let i = 0, k: number; i < seed.length; i++) {\n        k = seed.charCodeAt(i)\n        h1 = h2 ^ Math.imul(h1 ^ k, 597399067)\n        h2 = h3 ^ Math.imul(h2 ^ k, 2869860233)\n        h3 = h4 ^ Math.imul(h3 ^ k, 951274213)\n        h4 = h1 ^ Math.imul(h4 ^ k, 2716044179)\n    }\n    h1 = Math.imul(h3 ^ (h1 >>> 18), 597399067)\n    h2 = Math.imul(h4 ^ (h2 >>> 22), 2869860233)\n    h3 = Math.imul(h1 ^ (h3 >>> 17), 951274213)\n    h4 = Math.imul(h2 ^ (h4 >>> 19), 2716044179)\n    // noinspection CommaExpressionJS\n    h1 ^= (h2 ^ h3 ^ h4), h2 ^= h1, h3 ^= h1, h4 ^= h1\n    return [h1 >>> 0, h2 >>> 0, h3 >>> 0, h4 >>> 0]\n}\n\n/**\n * pseudo-random-number-generator\n */\nfunction sfc32(a: number, b: number, c: number, d: number): () => number {\n    return function () {\n        a |= 0\n        b |= 0\n        c |= 0\n        d |= 0\n        let t = (a + b | 0) + d | 0\n        d = d + 1 | 0\n        a = b ^ b >>> 9\n        b = c + (c << 3) | 0\n        c = (c << 21 | c >>> 11)\n        c = c + t | 0\n        return (t >>> 0) / 4294967296\n    }\n}\n\nexport class SeededRandomGenerator {\n    private rand?: () => number\n\n    setSeed(seed: string): this {\n        if (!seed) throw new Error('Invalid seed given')\n        const hashed = cyrb128(seed)\n        this.rand = sfc32(hashed[0], hashed[1], hashed[2], hashed[3])\n        return this\n    }\n\n    random(): number {\n        if (!this.rand) throw new Error('Not yet initialized')\n        return this.rand()\n    }\n\n    randInt(maximum: number): number {\n        return Math.floor(this.random() * maximum)\n    }\n\n    shuffle<T>(array: T[] | undefined): T[] {\n        if (!Array.isArray(array)) throw new Error(`Not an array but \"${array}\"`)\n        let currentIndex = array.length\n        while (currentIndex > 0) {\n            const randomIndex = this.randInt(currentIndex)\n            currentIndex--;\n            [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]]\n        }\n        return array\n    }\n\n    sample<T>(array: [T, ...T[]]): T;\n    sample<T>(array: T[]): T | undefined;\n    sample<T>(array: [T, ...T[]] | T[]): T | undefined {\n        if (!Array.isArray(array) || array.length < 1) return undefined\n        return array[this.randInt(array.length)]\n    }\n}\n","import { SeededRandomGenerator } from '../../core/SeededRandomGenerator'\nimport { VERBOSE } from '../../params'\n\nexport class PRNG {\n    static readonly terrain: SeededRandomGenerator = new SeededRandomGenerator()\n    static readonly movement: SeededRandomGenerator = new SeededRandomGenerator()\n    static readonly damage: SeededRandomGenerator = new SeededRandomGenerator()\n    static readonly animation: SeededRandomGenerator = new SeededRandomGenerator()\n    static readonly nerp: SeededRandomGenerator = new SeededRandomGenerator()\n\n    static readonly unsafe: SeededRandomGenerator = new SeededRandomGenerator().setSeed(Math.random().toString().substring(2))\n\n    static setSeed(masterSeed: string) {\n        console.log(`Seeding random generators with master seed \"${masterSeed}\"`)\n        const master = new SeededRandomGenerator().setSeed(masterSeed)\n        const terrainSeed = master.random().toString() // Changing order breaks determinism!\n        if (VERBOSE) console.log('random terrain seed', terrainSeed)\n        this.terrain.setSeed(terrainSeed)\n        const movementSeed = master.random().toString() // Changing order breaks determinism!\n        if (VERBOSE) console.log('random movement seed', movementSeed)\n        this.movement.setSeed(movementSeed)\n        const damageSeed = master.random().toString() // Changing order breaks determinism!\n        if (VERBOSE) console.log('random damage seed', damageSeed)\n        this.damage.setSeed(damageSeed)\n        const animationSeed = master.random().toString() // Changing order breaks determinism!\n        if (VERBOSE) console.log('random animation seed', animationSeed)\n        this.animation.setSeed(animationSeed)\n        const nerpSeed = master.random().toString() // Changing order breaks determinism!\n        if (VERBOSE) console.log('random nerp seed', nerpSeed)\n        this.nerp.setSeed(nerpSeed)\n    }\n}\n","import { LevelEntryCfg, LevelRewardConfig } from '../../cfg/LevelsCfg'\nimport { ADDITIONAL_RAIDER_PER_SUPPORT } from '../../params'\nimport { GameState } from './GameState'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { PRNG } from '../factory/PRNG'\n\nexport const GAME_RESULT_STATE = {\n    // noinspection JSUnusedGlobalSymbols\n    undecided: 0, // useful for truthiness checks\n    quit: 1,\n    complete: 2,\n    failed: 3,\n    crystalFailure: 4,\n} as const\nexport type GameResultState = typeof GAME_RESULT_STATE[keyof typeof GAME_RESULT_STATE]\n\nexport class GameResult {\n    defencePercent: number = 100 // TODO defence report is either 0% or 100%\n    airLevelPercent: number = 100\n    numCrystal: number = 0\n    numOre: number = 0\n    numTotalOres: number = 0\n    remainingDiggables: number = 0\n    totalDiggables: number = 0\n    discoveredCaverns: number = 0\n    score: number = 100\n    // fields below are only used to debug score calculations\n    scoreCrystals: number = 0\n    scoreTimer: number = 0\n    scoreCaverns: number = 0\n    scoreConstructions: number = 0\n    scoreOxygen: number = 0\n    scoreFigures: number = 0\n\n    constructor(\n        readonly levelFullName: string,\n        readonly rewardConfig: LevelRewardConfig | undefined,\n        readonly state: GameResultState,\n        readonly numBuildings: number,\n        readonly numRaiders: number,\n        readonly numMaxAirRaiders: number,\n        readonly gameTimeMs: number,\n        readonly screenshot: HTMLCanvasElement | undefined,\n    ) {\n        this.airLevelPercent = GameState.airLevel * 100\n        this.numCrystal = GameState.numCrystal\n        this.numOre = GameState.numOre\n        this.numTotalOres = GameState.totalOres\n        this.remainingDiggables = GameState.remainingDiggables\n        this.totalDiggables = GameState.totalDiggables\n        this.discoveredCaverns = GameState.discoveredCaverns\n        const quota = this.rewardConfig?.quota\n        const importance = this.rewardConfig?.importance\n        if (quota && importance) {\n            this.scoreCrystals = quota.crystals ? Math.min(1, GameState.numCrystal / quota.crystals) * importance.crystals : 0\n            this.scoreTimer = quota.timerMs && this.gameTimeMs <= quota.timerMs ? importance.timer : 0\n            this.scoreCaverns = quota.caverns ? Math.min(1, GameState.discoveredCaverns / quota.caverns) * importance.caverns : 0\n            this.scoreConstructions = quota.constructions ? Math.min(1, this.numBuildings / quota.constructions) * importance.constructions : 0\n            this.scoreOxygen = GameState.airLevel * importance.oxygen\n            this.scoreFigures = this.numRaiders / ADDITIONAL_RAIDER_PER_SUPPORT * importance.figures\n            this.score = Math.max(0, Math.min(100, Math.round(this.scoreCrystals + this.scoreTimer + this.scoreCaverns + this.scoreConstructions + this.scoreOxygen + this.scoreFigures)))\n        } else if (this.state === GAME_RESULT_STATE.complete) {\n            this.score = 100 // Tutorial levels get score 100 by default\n        }\n    }\n\n    static random(): GameResult {\n        const randomLevelConf = PRNG.unsafe.sample(GameConfig.instance.levels.filter((l) => LevelEntryCfg.isLevel(l.levelName)))\n        if (!randomLevelConf) throw new Error('Could not find random level configuration')\n        return new GameResult(randomLevelConf.fullName, randomLevelConf.reward, GAME_RESULT_STATE.complete, PRNG.unsafe.randInt(6), PRNG.unsafe.randInt(10), 10, 49062000, undefined)\n    }\n}\n","/*\n Inspired by https://gist.github.com/mbforbes/5604a426a7f9b054d0308ac3cc170037\n\n - With elapsedMs on system updates\n - With start/stop and interval to call systems.update()\n */\n\nexport type GameEntity = number\n\nexport abstract class AbstractGameComponent {\n    markDirty: () => void = () => {\n    }\n}\n\nexport abstract class AbstractGameSystem {\n    abstract readonly componentsRequired: Set<Function>\n    readonly dirtyComponents: Set<Function> = new Set()\n    ecs!: ECS\n\n    abstract update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void\n}\n\nexport type ComponentClass<T extends AbstractGameComponent> = new (...args: any[]) => T\n\nexport class ComponentContainer {\n    private map = new Map<Function, AbstractGameComponent>()\n\n    public add(component: AbstractGameComponent): void {\n        this.map.set(component.constructor, component)\n    }\n\n    public get<T extends AbstractGameComponent>(\n        componentClass: ComponentClass<T>,\n    ): T {\n        return this.map.get(componentClass) as T // TODO Fix possible NPE\n    }\n\n    public has(componentClass: Function): boolean {\n        return this.map.has(componentClass)\n    }\n\n    public hasAll(componentClasses: Iterable<Function>): boolean {\n        for (const cls of componentClasses) {\n            if (!this.map.has(cls)) {\n                return false\n            }\n        }\n        return true\n    }\n\n    public delete(componentClass: Function): void {\n        this.map.delete(componentClass)\n    }\n}\n\nexport class ECS {\n    private entities = new Map<GameEntity, ComponentContainer>()\n    private systems = new Map<AbstractGameSystem, Set<GameEntity>>()\n    private nextEntityID = 1\n    private entitiesToDestroy = new Array<GameEntity>()\n    private dirtySystemsCare = new Map<Function, Set<AbstractGameSystem>>()\n    private dirtyEntities = new Map<AbstractGameSystem, Set<GameEntity>>()\n\n    public reset(): void {\n        this.entities.clear()\n        this.nextEntityID = 1\n        this.entitiesToDestroy.length = 0\n        this.systems.forEach((s) => s.clear())\n        this.dirtyEntities.forEach((m) => m.clear())\n    }\n\n    public addEntity(): GameEntity {\n        const entity = this.nextEntityID\n        this.nextEntityID++\n        this.entities.set(entity, new ComponentContainer())\n        return entity\n    }\n\n    public removeEntity(entity: GameEntity): void {\n        this.entitiesToDestroy.push(entity)\n    }\n\n    public addComponent<T extends AbstractGameComponent>(entity: GameEntity, component: T): T {\n        this.entities.get(entity)?.add(component)\n        component.markDirty = () => {\n            this.componentDirty(entity, component)\n        }\n\n        this.checkEntity(entity)\n        component.markDirty()\n        return component\n    }\n\n    public getComponents(entity: GameEntity): ComponentContainer {\n        const container = this.entities.get(entity)\n        if (container) return container\n        console.warn(`Entity (${entity}) unknow to ECS; must be referenced otherwise`)\n        return new ComponentContainer()\n    }\n\n    public removeComponent(\n        entity: GameEntity, componentClass: Function,\n    ): void {\n        this.entities.get(entity)?.delete(componentClass)\n        this.dirtyEntities.forEach((entities, system) => {\n            if (system.dirtyComponents.has(componentClass)) entities.delete(entity)\n        })\n        this.checkEntity(entity)\n    }\n\n    public addSystem<T extends AbstractGameSystem>(system: T): T {\n        if (system.componentsRequired.size == 0) {\n            console.warn('System not added: empty Components list.')\n            console.warn(system)\n            return system\n        }\n        system.ecs = this\n        this.systems.set(system, new Set())\n        for (const entity of this.entities.keys()) {\n            this.checkEntityWithSystem(entity, system)\n        }\n        for (const c of system.dirtyComponents) {\n            if (!this.dirtySystemsCare.has(c)) {\n                this.dirtySystemsCare.set(c, new Set())\n            }\n            this.dirtySystemsCare.get(c)?.add(system)\n        }\n        this.dirtyEntities.set(system, new Set())\n        return system\n    }\n\n    public update(elapsedMs: number): void {\n        for (const [system, entities] of this.systems.entries()) {\n            const dirtySystemEntities = this.dirtyEntities.get(system) ?? new Set()\n            system.update(elapsedMs, entities, dirtySystemEntities)\n            dirtySystemEntities?.clear()\n        }\n        while (this.entitiesToDestroy.length > 0) {\n            this.destroyEntity(this.entitiesToDestroy.pop())\n        }\n    }\n\n    private destroyEntity(entity: GameEntity | undefined): void {\n        if (entity === undefined) return\n        this.entities.delete(entity)\n        for (const [system, entities] of this.systems.entries()) {\n            entities.delete(entity)\n            if (this.dirtyEntities.has(system)) {\n                this.dirtyEntities.get(system)?.delete(entity)\n            }\n        }\n    }\n\n    private checkEntity(entity: GameEntity): void {\n        for (const system of this.systems.keys()) {\n            this.checkEntityWithSystem(entity, system)\n        }\n    }\n\n    private checkEntityWithSystem(entity: GameEntity, system: AbstractGameSystem): void {\n        if (this.entities.get(entity)?.hasAll(system.componentsRequired)) {\n            this.systems.get(system)?.add(entity)\n        } else {\n            this.systems.get(system)?.delete(entity)\n            if (this.dirtyEntities.has(system)) {\n                this.dirtyEntities.get(system)?.delete(entity)\n            }\n        }\n    }\n\n    private componentDirty(entity: GameEntity, component: AbstractGameComponent): void {\n        if (!this.dirtySystemsCare.has(component.constructor)) {\n            return\n        }\n        for (const system of this.dirtySystemsCare.get(component.constructor) ?? []) {\n            if (this.systems.get(system)?.has(entity)) {\n                this.dirtyEntities.get(system)?.add(entity)\n            }\n        }\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { Vector2, Vector3 } from 'three'\nimport { Surface } from '../terrain/Surface'\n\nexport class PositionComponent extends AbstractGameComponent {\n    readonly position: Vector3 = new Vector3()\n    floorOffset: number = 0.1\n    surface: Surface\n\n    constructor(worldPos: Vector3, surface: Surface) {\n        super()\n        this.position.copy(worldPos)\n        this.surface = surface\n    }\n\n    isDiscovered(): boolean {\n        return this.surface.discovered\n    }\n\n    getPosition2D(): Vector2 {\n        return new Vector2(this.position.x, this.position.z)\n    }\n}\n","import { Cursor } from '../../cfg/PointersCfg'\nimport { GameConfig } from '../../cfg/GameConfig'\n\nexport class SurfaceType {\n    name: string = '' // human-readable config name\n    shaping: boolean = false\n    matIndex: string = '00'\n    floor: boolean = false\n    selectable: boolean = false\n    digable: boolean = false\n    reinforcable: boolean = false\n    hasRubble: boolean = false\n    cursor: Cursor = 'standard'\n    statsDrillName?: 'hardDrillTime' | 'looseDrillTime' | 'soilDrillTime' | 'seamDrillTime'\n    statsLaserName?: 'wallDestroyTimeHard' | 'wallDestroyTimeMedium' | 'wallDestroyTimeLoose'\n    canHaveFence: boolean = false\n    connectsPath: boolean = false\n    mapSurfaceColor: string = '#00FFFF'\n    fallInAffected: boolean = false\n    hasErosion: boolean = false\n\n    constructor(options: Partial<SurfaceType> = {}) {\n        Object.assign(this, options)\n    }\n\n    static readonly GROUND = new SurfaceType({\n        name: 'surfaceTypeTunnel',\n        floor: true,\n        selectable: true,\n        canHaveFence: true,\n        mapSurfaceColor: '#280048',\n        fallInAffected: true,\n    })\n    static readonly HIDDEN_CAVERN = new SurfaceType({\n        name: 'surfaceTypeUndiscovered',\n        mapSurfaceColor: '#6A0000',\n    })\n    static readonly HIDDEN_SLUG_HOLE = new SurfaceType({\n        name: 'surfaceTypeUndiscovered',\n        mapSurfaceColor: '#6A0000',\n    })\n    static readonly SOLID_ROCK = new SurfaceType({\n        name: 'surfaceTypeImmovable',\n        shaping: true,\n        matIndex: '5',\n        cursor: 'surfaceTypeImmovable',\n        mapSurfaceColor: '#500090',\n    })\n    static readonly HARD_ROCK = new SurfaceType({\n        name: 'surfaceTypeHard',\n        shaping: true,\n        matIndex: '4',\n        selectable: true,\n        digable: true,\n        reinforcable: true,\n        cursor: 'surfaceTypeHard',\n        statsDrillName: 'hardDrillTime',\n        statsLaserName: 'wallDestroyTimeHard',\n        mapSurfaceColor: '#7000B0',\n    })\n    static readonly LOOSE_ROCK = new SurfaceType({\n        name: 'surfaceTypeMedium',\n        shaping: true,\n        matIndex: '3',\n        selectable: true,\n        digable: true,\n        reinforcable: true,\n        cursor: 'surfaceTypeMedium',\n        statsDrillName: 'looseDrillTime',\n        statsLaserName: 'wallDestroyTimeMedium',\n        mapSurfaceColor: '#9000D0',\n    })\n    static readonly DIRT = new SurfaceType({\n        name: 'surfaceTypeLoose',\n        shaping: true,\n        matIndex: '2',\n        selectable: true,\n        digable: true,\n        reinforcable: true,\n        cursor: 'surfaceTypeLoose',\n        statsDrillName: 'soilDrillTime',\n        statsLaserName: 'wallDestroyTimeLoose',\n        mapSurfaceColor: '#B000F0',\n    })\n    static readonly SLUG_HOLE = new SurfaceType({\n        name: 'surfaceTypeSlugHole', floor: true, matIndex: '30', mapSurfaceColor: '#280048',\n    })\n    static readonly LAVA1 = new SurfaceType({\n        name: 'lava 1', floor: true, matIndex: '06', selectable: true, mapSurfaceColor: '#280048', hasErosion: true,\n    })\n    static readonly LAVA2 = new SurfaceType({\n        name: 'lava 2', floor: true, matIndex: '16', selectable: true, mapSurfaceColor: '#280048', hasErosion: true,\n    })\n    static readonly LAVA3 = new SurfaceType({\n        name: 'lava 3', floor: true, matIndex: '26', selectable: true, mapSurfaceColor: '#280048', hasErosion: true,\n    })\n    static readonly LAVA4 = new SurfaceType({\n        name: 'lava 4', floor: true, matIndex: '36', selectable: true, mapSurfaceColor: '#280048', hasErosion: true,\n    })\n    static readonly LAVA5 = new SurfaceType({\n        name: 'surfaceTypeLava', floor: true, matIndex: '46', mapSurfaceColor: '#fa5700',\n    })\n    static readonly ORE_SEAM = new SurfaceType({\n        name: 'surfaceTypeOreSeam',\n        matIndex: '40',\n        selectable: true,\n        digable: true,\n        reinforcable: true,\n        cursor: 'surfaceTypeOreSeam',\n        statsDrillName: 'seamDrillTime',\n        mapSurfaceColor: '#963c00',\n    })\n    static readonly WATER = new SurfaceType({\n        name: 'surfaceTypeLake', floor: true, matIndex: '45', mapSurfaceColor: '#000080',\n    })\n    static readonly CRYSTAL_SEAM = new SurfaceType({\n        name: 'surfaceTypeCrystalSeam',\n        matIndex: '20',\n        selectable: true,\n        digable: true,\n        reinforcable: true,\n        cursor: 'surfaceTypeCrystalSeam',\n        statsDrillName: 'seamDrillTime',\n        mapSurfaceColor: '#aafa00',\n    })\n    static readonly RECHARGE_SEAM = new SurfaceType({\n        name: 'surfaceTypeRechargeSeam',\n        matIndex: '67',\n        cursor: 'surfaceTypeRechargeSeam',\n        mapSurfaceColor: '#ffff00',\n    })\n    static readonly POWER_PATH = new SurfaceType({\n        name: 'surfaceTypePath',\n        floor: true,\n        matIndex: '60',\n        selectable: true,\n        canHaveFence: true,\n        connectsPath: true,\n        mapSurfaceColor: '#ffff00',\n        fallInAffected: true,\n    })\n    static readonly POWER_PATH_BUILDING_SITE = new SurfaceType({\n        name: 'power path building site',\n        floor: true,\n        matIndex: '61',\n        selectable: true,\n        canHaveFence: true,\n        mapSurfaceColor: '#280048',\n    })\n    static readonly POWER_PATH_BUILDING = new SurfaceType({\n        name: 'surfaceTypePath',\n        floor: true,\n        matIndex: '76',\n        connectsPath: true,\n        mapSurfaceColor: '#B8BBB8',\n    })\n    static readonly RUBBLE1 = new SurfaceType({\n        name: 'surfaceTypeRubble',\n        floor: true,\n        matIndex: '13',\n        selectable: true,\n        hasRubble: true,\n        canHaveFence: true,\n        mapSurfaceColor: '#280048',\n        fallInAffected: true,\n    })\n    static readonly RUBBLE2 = new SurfaceType({\n        name: 'surfaceTypeRubble',\n        floor: true,\n        matIndex: '12',\n        selectable: true,\n        hasRubble: true,\n        canHaveFence: true,\n        mapSurfaceColor: '#280048',\n        fallInAffected: true,\n    })\n    static readonly RUBBLE3 = new SurfaceType({\n        name: 'surfaceTypeRubble',\n        floor: true,\n        matIndex: '11',\n        selectable: true,\n        hasRubble: true,\n        canHaveFence: true,\n        mapSurfaceColor: '#280048',\n        fallInAffected: true,\n    })\n    static readonly RUBBLE4 = new SurfaceType({\n        name: 'surfaceTypeRubble',\n        floor: true,\n        matIndex: '10',\n        selectable: true,\n        hasRubble: true,\n        canHaveFence: true,\n        mapSurfaceColor: '#280048',\n    })\n\n    static getByNum(typeNum: number) {\n        switch (typeNum) {\n            case SURFACE_TYPE.ground:\n                return SurfaceType.GROUND\n            case SURFACE_TYPE.solidRock:\n                return SurfaceType.SOLID_ROCK\n            case SURFACE_TYPE.hardRock:\n                return SurfaceType.HARD_ROCK\n            case SURFACE_TYPE.looseRock:\n                return SurfaceType.LOOSE_ROCK\n            case SURFACE_TYPE.dirt:\n            // fallthrough\n            case 5: // soil(5) was removed pre-release, so replace it with dirt(4)\n                return SurfaceType.DIRT\n            case SURFACE_TYPE.lava5:\n                return SurfaceType.LAVA5\n            case SURFACE_TYPE.oreSeam:\n                return SurfaceType.ORE_SEAM\n            case SURFACE_TYPE.water:\n                return SurfaceType.WATER\n            case SURFACE_TYPE.crystalSeam:\n                return SurfaceType.CRYSTAL_SEAM\n            case SURFACE_TYPE.rechargeSeam:\n                return SurfaceType.RECHARGE_SEAM\n            case SURFACE_TYPE.slugHole: // XXX slug hole hidden/exposed?\n            // fallthrough\n            case 40: // XXX slug hole hidden/exposed?\n                return SurfaceType.SLUG_HOLE\n            case SURFACE_TYPE.rubble4:\n                return SurfaceType.RUBBLE4\n            case SURFACE_TYPE.rubble3:\n                return SurfaceType.RUBBLE3\n            case SURFACE_TYPE.rubble2:\n                return SurfaceType.RUBBLE2\n            case SURFACE_TYPE.rubble1:\n                return SurfaceType.RUBBLE1\n            default:\n                console.error(`Unexpected surface type num: ${typeNum}`)\n                return SurfaceType.SOLID_ROCK\n        }\n    }\n\n    getObjectName(): string {\n        return GameConfig.instance.surfaceTypeDescriptions[this.name.toLowerCase()]?.objectName || ''\n    }\n\n    getSfxKey(): string {\n        return GameConfig.instance.surfaceTypeDescriptions[this.name.toLowerCase()]?.sfxKey || ''\n    }\n}\n\nexport const SURFACE_TYPE = {\n    ground: 0,\n    solidRock: 1,\n    hardRock: 2,\n    looseRock: 3,\n    dirt: 4,\n    lava5: 6,\n    oreSeam: 8,\n    water: 9,\n    crystalSeam: 10,\n    rechargeSeam: 11,\n    slugHole: 30,\n    rubble4: 100,\n    rubble3: 101,\n    rubble2: 102,\n    rubble1: 103,\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { AnimatedSceneEntity } from '../../scene/AnimatedSceneEntity'\n\nexport class AnimatedSceneEntityComponent extends AbstractGameComponent {\n    constructor(readonly sceneEntity: AnimatedSceneEntity) {\n        super()\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { AnimatedSceneEntity } from '../../scene/AnimatedSceneEntity'\n\nexport interface FlockEntity {\n    sceneEntity: AnimatedSceneEntity\n    separationDist?: number\n    separationMult?: number\n    cohesionDist?: number\n    cohesionMult?: number\n    alignmentMult?: number\n    inertiaMult?: number\n    speed?: number\n}\n\nexport class FlockComponent extends AbstractGameComponent {\n\n    readonly entities: Required<FlockEntity>[]\n\n    constructor(entities: FlockEntity[], defaults?: Omit<FlockEntity, 'sceneEntity'>) {\n        super()\n        this.entities = entities.map((e) => ({\n            sceneEntity: e.sceneEntity,\n            separationDist: e.separationDist ?? defaults?.separationDist ?? 0,\n            separationMult: e.separationMult ?? defaults?.separationMult ?? 1,\n            cohesionDist: e.cohesionDist ?? defaults?.cohesionDist ?? 0,\n            cohesionMult: e.cohesionMult ?? defaults?.cohesionMult ?? 1,\n            alignmentMult: e.alignmentMult ?? defaults?.alignmentMult ?? 0,\n            inertiaMult: e.inertiaMult ?? defaults?.inertiaMult ?? 0,\n            speed: e.speed ?? defaults?.speed ?? 1,\n        }))\n    }\n}\n","import { CanvasTexture, Sprite, SpriteMaterial } from 'three'\nimport { createContext } from '../core/ImageHelper'\nimport { SpriteContext } from '../core/Sprite'\nimport { GameState } from '../game/model/GameState'\nimport { Updatable } from '../game/model/Updateable'\nimport { GameConfig } from '../cfg/GameConfig'\n\nexport class HealthBarSprite extends Sprite implements Updatable {\n    static readonly textureSize = 128\n    readonly textureContext: SpriteContext\n    readonly activeArea: { x: number, y: number, w: number, h: number } = {x: 0, y: 0, w: 0, h: 0}\n    actualStatus: number = 1\n    targetStatus: number = 1\n    visibleTimeout: number = 0\n\n    constructor(yOffset: number, scale: number, readonly canBeShownPermanently: boolean) {\n        super(new SpriteMaterial({depthTest: false}))\n        this.position.set(0, yOffset, 0)\n        this.scale.setScalar(scale)\n        this.textureContext = createContext(HealthBarSprite.textureSize, HealthBarSprite.textureSize)\n        const barWidth = GameConfig.instance.objInfo.healthBarWidthHeight.x\n        const barHeight = GameConfig.instance.objInfo.healthBarWidthHeight.y\n        const barBorderSize = GameConfig.instance.objInfo.healthBarBorderSize\n        const sizeFactor = HealthBarSprite.textureSize / (barWidth + 2 * barBorderSize)\n        const height = Math.round(sizeFactor * (barHeight + 2 * barBorderSize))\n        const posY = Math.round((HealthBarSprite.textureSize - height) / 2)\n        this.textureContext.fillStyle = HealthBarSprite.rgbToHtmlHex(GameConfig.instance.objInfo.healthBarBorderRGB)\n        this.textureContext.fillRect(0, posY, HealthBarSprite.textureSize, height)\n        this.activeArea.x = Math.round(barBorderSize * sizeFactor)\n        this.activeArea.y = posY + this.activeArea.x\n        this.textureContext.fillStyle = HealthBarSprite.rgbToHtmlHex(GameConfig.instance.objInfo.healthBarBorderRGB.map((v) => v / 2))\n        this.textureContext.fillRect(this.activeArea.x, this.activeArea.y, HealthBarSprite.textureSize, height - this.activeArea.x)\n        this.activeArea.w = HealthBarSprite.textureSize - 2 * this.activeArea.x\n        this.activeArea.h = height - 2 * this.activeArea.x\n        this.textureContext.fillStyle = HealthBarSprite.rgbToHtmlHex(GameConfig.instance.objInfo.healthBarRGB)\n        this.textureContext.fillRect(this.activeArea.x, this.activeArea.y, this.activeArea.w, this.activeArea.h)\n        this.material.map = new CanvasTexture(this.textureContext.canvas)\n        this.visible = false\n    }\n\n    setTargetStatus(targetStatus: number) {\n        const nextStatus = Math.max(0, Math.min(1, targetStatus))\n        if (this.targetStatus === nextStatus) return\n        this.targetStatus = nextStatus\n        this.visibleTimeout = 3000\n        this.visible = GameState.isBirdView\n    }\n\n    update(elapsedMs: number) {\n        if (this.visibleTimeout > 0) {\n            this.visibleTimeout -= elapsedMs\n        } else {\n            this.visible = GameState.showObjInfo && this.canBeShownPermanently && GameState.isBirdView\n            this.visibleTimeout = 0\n        }\n        if (this.targetStatus === this.actualStatus) return\n        const delta = this.targetStatus - this.actualStatus\n        this.actualStatus += Math.sign(delta) * Math.min(Math.abs(delta), 0.03)\n        const x = Math.max(0, Math.min(1, this.actualStatus))\n        this.textureContext.fillStyle = HealthBarSprite.rgbToHtmlHex(GameConfig.instance.objInfo.healthBarRGB)\n        this.textureContext.fillRect(this.activeArea.x, this.activeArea.y, this.activeArea.w, this.activeArea.h)\n        this.textureContext.fillStyle = HealthBarSprite.rgbToHtmlHex(GameConfig.instance.objInfo.healthBarBackgroundRGB)\n        const redPosX = Math.round(this.activeArea.w * x)\n        this.textureContext.fillRect(this.activeArea.x + redPosX, this.activeArea.y, this.activeArea.w - redPosX, this.activeArea.h)\n        if (this.material.map) this.material.map.needsUpdate = true\n    }\n\n    private static rgbToHtmlHex(rgb: number[]): string {\n        if (rgb?.length !== 3) throw new Error(`Invalid RGB array given '${rgb}')`)\n        return `#${rgb.map((v) => Math.round(v * 255).toString(16).padStart(2, '0')).join('')}`\n    }\n}\n","import { CanvasTexture, Sprite, SpriteMaterial } from 'three'\nimport { createContext } from '../core/ImageHelper'\nimport { SpriteContext, SpriteImage } from '../core/Sprite'\nimport { ResourceManager } from '../resource/ResourceManager'\n\nexport class HealthFontSprite extends Sprite {\n    static readonly textureSize = 64\n    readonly textureContext: SpriteContext\n    state: number = 0\n\n    constructor(readonly yOffset: number, readonly startScale: number) {\n        super(new SpriteMaterial({depthTest: false}))\n        this.position.set(0, yOffset, 0)\n        this.scale.setScalar(startScale)\n        this.textureContext = createContext(HealthFontSprite.textureSize, HealthFontSprite.textureSize)\n        this.material.map = new CanvasTexture(this.textureContext.canvas)\n    }\n\n    setNumber(healthNumber: number) {\n        healthNumber = Math.round(Math.max(-100, Math.min(healthNumber, 100)))\n        this.state = 0\n        this.textureContext.clearRect(0, 0, HealthFontSprite.textureSize, HealthFontSprite.textureSize)\n        const numStr = healthNumber.toString()\n        const numImg: SpriteImage[] = []\n        let totalWidth: number = 0\n        for (let c = 0; c < numStr.length; c++) {\n            const letter = numStr.charAt(c)\n            let img: SpriteImage\n            if (letter.match(/^\\d$/)) {\n                img = ResourceManager.getImage(`Interface/Fonts/HealthFont/a_${letter}.bmp`)\n            } else if (letter === '-') {\n                img = ResourceManager.getImage('Interface/Fonts/HealthFont/a_10.bmp')\n            } else {\n                console.warn('Ignoring invalid char in health font', letter)\n                continue\n            }\n            numImg.push(img)\n            totalWidth += img.width\n        }\n        let x = (HealthFontSprite.textureSize - totalWidth) / 2\n        numImg.forEach((img) => {\n            this.textureContext.drawImage(img, x, (HealthFontSprite.textureSize - img.height) / 2)\n            x += img.width\n        })\n        if (this.material.map) this.material.map.needsUpdate = true\n        const r = healthNumber < 0 ? 255 : 0\n        const g = Math.max(0, Math.min((100 + healthNumber) / 50 * 255, 255))\n        this.material.color.setRGB(r, g, 0)\n    }\n\n    update(elapsedMs: number) {\n        if (this.state >= 1) return\n        this.state += elapsedMs / 1000\n        if (this.state > 1) this.state = 1\n        this.material.opacity = 1 - this.state\n        this.position.y = this.yOffset + this.state * this.yOffset * 2\n        this.scale.setScalar(this.startScale * this.state * 2)\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { HealthBarSprite } from '../../scene/HealthBarSprite'\nimport { Object3D } from 'three'\nimport { ToggleAlarmEvent } from '../../event/WorldEvents'\nimport { HealthFontSprite } from '../../scene/HealthFontSprite'\nimport { EventBroker } from '../../event/EventBroker'\n\nexport class HealthComponent extends AbstractGameComponent {\n    readonly healthBarSprite: HealthBarSprite\n    readonly healthFontSprite: HealthFontSprite\n    health: number = 100\n    maxHealth: number = 100\n    hitByLavaTimeoutMs: number = 0\n\n    constructor(\n        readonly triggerAlarm: boolean,\n        yOffset: number,\n        scale: number,\n        parent: Object3D,\n        canBeShownPermanently: boolean,\n        public rockFallDamage: number,\n    ) {\n        super()\n        this.healthBarSprite = new HealthBarSprite(yOffset, scale, canBeShownPermanently)\n        parent.add(this.healthBarSprite)\n        this.healthFontSprite = new HealthFontSprite(yOffset, scale)\n        parent.add(this.healthFontSprite)\n    }\n\n    changeHealth(delta: number) {\n        const nextHealth = Math.max(0, Math.min(this.maxHealth, this.health + delta))\n        if (this.health === nextHealth) return\n        this.health = nextHealth\n        if (delta < 0) {\n            this.healthFontSprite.setNumber(delta)\n            if (this.triggerAlarm) EventBroker.publish(new ToggleAlarmEvent(true))\n        }\n        this.healthBarSprite.setTargetStatus(this.health / this.maxHealth)\n        this.markDirty()\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { Vector3 } from 'three'\n\nexport const MAP_MARKER_TYPE = {\n    default: 1,\n    monster: 2,\n    material: 3,\n    scanner: 4,\n} as const\nexport type MapMarkerType = typeof MAP_MARKER_TYPE[keyof typeof MAP_MARKER_TYPE]\n\nexport const MAP_MARKER_CHANGE = {\n    update: 1,\n    remove: 2,\n} as const\nexport type MapMarkerChange = typeof MAP_MARKER_CHANGE[keyof typeof MAP_MARKER_CHANGE]\n\nexport class MapMarkerComponent extends AbstractGameComponent {\n    readonly lastPos: Vector3 = new Vector3()\n    lastUpdateMs: number = 0\n\n    constructor(readonly mapMarkerType: MapMarkerType) {\n        super()\n    }\n}\n","export type AnimationActivity = string\n\nexport const BARRIER_ACTIVITY = {\n    short: 'Short',\n    expand: 'Expand',\n    long: 'Long',\n    teleport: 'Teleport',\n} as const\n\nexport const DYNAMITE_ACTIVITY = {\n    normal: 'Normal',\n    tickDown: 'TickDown',\n}\n\nexport const BUILDING_ACTIVITY = {\n    stand: 'Activity_Stand',\n    teleport: 'Activity_Teleport',\n    deposit: 'Activity_Deposit',\n    explode: 'Activity_Explode',\n    unpowered: 'Activity_Unpowered',\n    upgrade: 'Activity_Upgrade',\n}\n\nexport const ANIM_ENTITY_ACTIVITY = {\n    stand: 'Activity_Stand',\n    route: 'Activity_Route',\n    teleportIn: 'Activity_TeleportIn',\n    carry: 'Activity_Carry',\n    standCarry: 'Activity_CarryStand',\n}\nexport type AnimEntityActivity = typeof ANIM_ENTITY_ACTIVITY[keyof typeof ANIM_ENTITY_ACTIVITY]\n\nexport const RAIDER_ACTIVITY = {\n    drill: 'Activity_Drill',\n    walk: 'Activity_Walk',\n    reinforce: 'Activity_Reinforce',\n    turnLeft: 'Activity_TurnLeft',\n    turnRight: 'Activity_TurnRight',\n    collect: 'Activity_Collect',\n    clear: 'Activity_Clear',\n    dynamite: 'Activity_Dynamite',\n    place: 'Activity_Place',\n    deposit: 'Activity_Deposit',\n    repair: 'Activity_Repair',\n    rest: 'Activity_rest',\n    routeRubble: 'Activity_routeRubble',\n    carryRubble: 'Activity_CarryRubble',\n    eat: 'Activity_Eat',\n    slip: 'Activity_Slip',\n    train: 'Activity_Train',\n    runPanic: 'Activity_RunPanic',\n    thrown: 'Activity_ThrownByRockMonster',\n    getUp: 'Activity_GetUp',\n\n    hoverboard: 'Activity_Hoverboard',\n    standHoverboard: 'Activity_Standhoverboard',\n    smallTruck: 'Activity_SMALLTRUCK',\n    standSmallTruck: 'Activity_StandSMALLTRUCK',\n    smallHeli: 'Activity_SMALLheli',\n    standSmallHeli: 'Activity_StandSMALLheli',\n    smallCat: 'Activity_SMALLCAT',\n    standSmallCat: 'Activity_StandSMALLCAT',\n    smallMlp: 'Activity_SMALLMLP',\n    standSmallMLP: 'Activity_StandSMALLMLP',\n    largeCat: 'Activity_LARGECAT',\n    standLargeCat: 'Activity_StandLARGECAT',\n    smallDigger: 'Activity_SMALLDIGGER',\n    standSmallDigger: 'Activity_StandSMALLDIGGER',\n\n    shoot: 'Activity_FireLaser',\n    recharge: 'Activity_Recharge',\n}\nexport type RaiderActivity = typeof RAIDER_ACTIVITY[keyof typeof RAIDER_ACTIVITY]\n\nexport const ROCK_MONSTER_ACTIVITY = {\n    unpowered: 'Activity_Unpowered',\n    emerge: 'Activity_Emerge',\n    wakeUp: 'Activity_WakeUp',\n    eat: 'Activity_Eat',\n    stamp: 'Activity_Stamp',\n    enter: 'Activity_Enter',\n    gather: 'Activity_Gather',\n    throw: 'Activity_Throw',\n    punch: 'Activity_Repair',\n    crumble: 'Activity_Crumble',\n    throwMan: 'Activity_ThrowMan',\n    rest: 'Activity_Rest',\n    hitHard: 'Activity_HitHard',\n}\n\nexport const SLUG_ACTIVITY = {\n    emerge: 'Activity_Emerge',\n    enter: 'Activity_Enter',\n    suck: 'Activity_Repair',\n}\n","import { Object3D, PositionalAudio } from 'three'\nimport { SaveGameManager } from '../resource/SaveGameManager'\nimport { SoundManager } from '../audio/SoundManager'\nimport { SceneMesh } from './SceneMesh'\nimport { TILESIZE } from '../params'\nimport { GameState } from '../game/model/GameState'\n\nexport interface SceneAudioMeshUserData {\n    sfxNameAnimation?: string\n}\n\nexport class SceneAudioMesh extends SceneMesh {\n    declare userData: SceneAudioMeshUserData\n    readonly audioId: number = SoundManager.nextAudioId\n    audioNode?: PositionalAudio\n    lastSfxName: string = ''\n\n    update(elapsedMs: number) {\n        const sfxVolume = SaveGameManager.getSfxVolume()\n        if (sfxVolume <= 0 || !this.isVisible()) return\n        const sfxName = this.userData.sfxNameAnimation || ''\n        if (!sfxName || (this.lastSfxName === sfxName && this.audioNode?.isPlaying)) return\n        this.lastSfxName = sfxName\n        const audioBuffer = SoundManager.getSoundBuffer(sfxName)\n        if (!audioBuffer) return\n        if (!this.audioNode) {\n            this.audioNode = new PositionalAudio(SoundManager.sceneAudioListener)\n            this.audioNode.setRefDistance(TILESIZE * 5)\n            this.audioNode.setRolloffFactor(10)\n            this.add(this.audioNode)\n            this.audioNode.onEnded = () => {\n                SoundManager.stopAudio(this.audioId)\n            }\n        }\n        this.audioNode.setVolume(sfxVolume)\n        this.audioNode.setBuffer(audioBuffer)\n        this.audioNode.playbackRate = GameState.gameSpeedMultiplier\n        this.audioNode.play()\n        SoundManager.playingAudio.set(this.audioId, this.audioNode)\n    }\n\n    private isVisible(): boolean {\n        let hiddenObj: Object3D | null = this\n        while (hiddenObj?.visible) {\n            hiddenObj = hiddenObj.parent\n        }\n        return !hiddenObj\n    }\n\n    dispose() {\n        SoundManager.stopAudio(this.audioId)\n        this.lastSfxName = ''\n    }\n}\n","import { Group } from 'three'\nimport { Updatable } from './model/Updateable'\n\nexport abstract class SceneEntity extends Group implements Updatable {\n    abstract update(elapsedMs: number): void\n\n    abstract dispose(): void\n}\n","import { AnimationAction, AnimationClip, AnimationMixer, LoopOnce, NumberKeyframeTrack } from 'three'\nimport { ResourceManager } from '../resource/ResourceManager'\nimport { SceneMesh } from './SceneMesh'\nimport { getPath } from '../core/Util'\nimport { LWSCData } from '../resource/fileparser/LWSCParser'\nimport { SceneAudioMesh } from './SceneAudioMesh'\nimport { SceneEntity } from '../game/SceneEntity'\n\nexport class AnimationGroup extends SceneEntity {\n    readonly meshList: SceneMesh[] = []\n    readonly animationMixers: AnimationMixer[] = []\n    readonly animationActions: AnimationAction[] = []\n    isDone: boolean = false\n    animationTransCoef: number = 1\n    animationTime: number = 0\n    maxDurationMs: number = 0\n    animationTriggerTimeMs: number = 0\n\n    constructor(readonly lwsFilepath: string, public onAnimationDone: (() => void) | undefined, public durationTimeoutMs: number = 0, public onAnimationTrigger?: () => void) {\n        super()\n        this.maxDurationMs = durationTimeoutMs\n        this.animationTriggerTimeMs = durationTimeoutMs\n    }\n\n    setup(): this {\n        const lwscData = ResourceManager.getLwscData(this.lwsFilepath)\n        this.createMeshList(lwscData)\n        this.createAnimationMixers(lwscData)\n        return this\n    }\n\n    protected resolveMesh(lowerName: string | undefined): SceneMesh | undefined {\n        if (!lowerName) return undefined\n        return ResourceManager.getLwoModel(getPath(this.lwsFilepath) + lowerName)\n    }\n\n    protected createMeshList(lwscData: LWSCData) {\n        this.meshList.length = 0\n        lwscData.objects.forEach((obj) => {\n            let mesh: SceneMesh | undefined\n            if (obj.isNull) {\n                if (obj.lowerName === 'sfx' || obj.lowerName === 'snd') {\n                    mesh = new SceneAudioMesh()\n                } else {\n                    mesh = new SceneMesh()\n                }\n            } else {\n                mesh = this.resolveMesh(obj.lowerName)\n                if (!mesh) {\n                    console.warn(`Could not find mesh ${obj.lowerName}`)\n                    mesh = new SceneMesh()\n                }\n            }\n            mesh.name = obj.lowerName\n            mesh.castShadow = obj.castShadow\n            mesh.receiveShadow = obj.receiveShadow\n            this.meshList.push(mesh)\n        })\n    }\n\n    protected createAnimationMixers(lwscData: LWSCData) {\n        this.animationMixers.length = 0\n        lwscData.objects.forEach((obj, index) => {\n            const mesh = this.meshList[index]\n            // associate child meshes with parents\n            if (obj.parentObjInd === 0) { // index is 1 based, 0 means no parent\n                this.add(mesh)\n            } else {\n                this.meshList[obj.parentObjInd - 1].add(mesh)\n            }\n            // setup animation clip for each object\n            const opacityTracks = obj.opacityTracks.flatMap((t) => mesh.material\n                .map((_, index) => new NumberKeyframeTrack(`.material[${index}].opacity`, t.times, t.values)))\n            const clip = new AnimationClip(lwscData.filePath, lwscData.durationSeconds, [...obj.keyframeTracks, ...opacityTracks])\n            this.maxDurationMs = Math.max(this.maxDurationMs, clip.duration * 1000)\n            this.addMixer(mesh, clip)\n        })\n    }\n\n    protected addMixer(mesh: SceneMesh, clip: AnimationClip) {\n        const mixer = new AnimationMixer(mesh) // mixer needs to recreate after each group change\n        this.animationMixers.push(mixer)\n        const animationAction = mixer.clipAction(clip)\n        this.animationActions.push(animationAction)\n        if (this.onAnimationDone && !this.durationTimeoutMs) {\n            animationAction.setLoop(LoopOnce, 0)\n            animationAction.clampWhenFinished = true\n            mixer.addEventListener('finished', () => {\n                if (this.onAnimationDone && !this.isDone) {\n                    this.isDone = true\n                    this.onAnimationDone()\n                }\n            })\n        }\n    }\n\n    update(elapsedMs: number) {\n        const deltaTimeInSeconds = elapsedMs / 1000 * this.animationTransCoef\n        this.animationMixers.forEach((m) => m.update(deltaTimeInSeconds))\n        this.meshList.forEach((m) => m.update(elapsedMs))\n        if (this.durationTimeoutMs || this.animationTriggerTimeMs) { // otherwise animationTime counter may become very high for loop\n            if (this.onAnimationTrigger && this.animationTime < this.animationTriggerTimeMs && this.animationTime + elapsedMs >= this.animationTriggerTimeMs) {\n                this.onAnimationTrigger()\n            }\n            this.animationTime += elapsedMs\n            if (this.durationTimeoutMs && this.animationTime >= this.durationTimeoutMs) {\n                this.animationMixers.forEach((a) => a.stopAllAction())\n                if (this.onAnimationDone && !this.isDone) {\n                    this.isDone = true\n                    this.onAnimationDone()\n                }\n            }\n        }\n    }\n\n    dispose() {\n        this.meshList.forEach((m) => m.dispose())\n    }\n\n    play(): this {\n        this.animationActions.forEach((a) => a.play())\n        this.update(0)\n        return this\n    }\n\n    resetAnimation() {\n        this.isDone = false\n        this.animationTime = 0\n        this.animationMixers.forEach((m) => m.stopAllAction())\n        // play needs to be called here to not have the animation stuck on last frame but first\n        this.play()\n    }\n}\n","import { AnimEntityAnimationData, AnimEntityData } from '../resource/AnimEntityParser'\nimport { AnimationGroup } from './AnimationGroup'\nimport { SceneMesh } from './SceneMesh'\nimport { RAIDER_CARRY_SLOWDOWN } from '../params'\n\nexport class AnimationQualityGroup extends AnimationGroup {\n    constructor(readonly animEntityData: AnimEntityData, animData: AnimEntityAnimationData, onAnimationDone: (() => void) | undefined, durationTimeoutMs: number = 0, onAnimationTrigger: (() => void) | undefined) {\n        super(animData.file, onAnimationDone, durationTimeoutMs, onAnimationTrigger)\n        const carryRubbleWorkaround = animData.name.equalsIgnoreCase('Activity_CarryRubble') ? 2 / RAIDER_CARRY_SLOWDOWN : 1\n        this.animationTransCoef = 1 / ((animData.transcoef || 1) * carryRubbleWorkaround) // XXX Remove workaround for raider carry rubble animation speed being too fast\n        this.animationTriggerTimeMs = Math.round(animData.trigger / 25 * 1000) // TODO Use actual animation speed from LWS\n    }\n\n    protected resolveMesh(lowerName: string): SceneMesh | undefined { // TODO support other mesh quality levels and FPP cameras\n        // return super.resolveMesh(this.animEntityData.highPolyBodies.get(lowerName)) || super.resolveMesh(lowerName.replace('vlp', 'hp'))\n        //     || super.resolveMesh(this.animEntityData.mediumPolyBodies.get(lowerName)) || super.resolveMesh(lowerName.replace('vlp', 'mp'))\n        return super.resolveMesh(this.animEntityData.lowPolyBodies[lowerName]) || super.resolveMesh(lowerName.replace('vlp', 'lp'))\n            || super.resolveMesh(lowerName)\n    }\n}\n","import { Group, Object3D, Vector2, Vector3 } from 'three'\nimport { SceneMesh } from './SceneMesh'\nimport { AnimEntityData } from '../resource/AnimEntityParser'\nimport { ResourceManager } from '../resource/ResourceManager'\nimport { ANIM_ENTITY_ACTIVITY } from '../game/model/anim/AnimationActivity'\nimport { VERBOSE } from '../params'\nimport { AnimationQualityGroup } from './AnimationQualityGroup'\nimport { SceneManager } from '../game/SceneManager'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { SceneEntity } from '../game/SceneEntity'\n\nexport class AnimatedSceneEntity extends SceneEntity {\n    readonly animationData: AnimEntityData[] = []\n    readonly cacheAnimationGroups: Map<string, AnimationQualityGroup> = new Map()\n    readonly animationGroups: AnimationQualityGroup[] = []\n    readonly meshesByLName: Map<string, SceneMesh[]> = new Map()\n    readonly installedUpgrades: { parent: Object3D, child: AnimatedSceneEntity }[] = []\n    readonly animationParent: Group = new Group()\n    readonly carryJoints: SceneMesh[] = []\n    readonly carriedByIndex: Map<number, Object3D> = new Map()\n    readonly wheelJoints: { mesh: SceneMesh, radius: number }[] = []\n    upgradeLevel: string = '0000'\n    currentAnimation: string = ''\n    driverParent?: Object3D\n    driver?: Object3D\n    toolParent?: Object3D\n    depositParent?: Object3D\n    xPivotObj?: Object3D\n    pivotMinZ: number | undefined\n    pivotMaxZ: number | undefined\n    yPivotObj?: Object3D\n    flipCamera: boolean = false\n    camFPVJoint?: Object3D\n    camShoulderJoint?: Object3D\n    camFPVChildren: Object3D[] = []\n    camShoulderChildren: Object3D[] = []\n\n    constructor() {\n        super()\n        this.add(this.animationParent)\n    }\n\n    addAnimated(animatedData: AnimEntityData) {\n        this.animationData.add(animatedData)\n        this.animationParent.scale.setScalar(this.animationData.reduce((prev, b) => prev * (b.scale || 1), 1))\n    }\n\n    addDriver(driver: Object3D) {\n        if (!this.driverParent) return\n        this.driver = driver\n        this.driver.position.set(0, 0, 0)\n        this.driver.rotation.set(0, 0, 0)\n        this.driverParent.add(this.driver)\n    }\n\n    removeDriver() {\n        if (!this.driver) return\n        this.driverParent?.remove(this.driver)\n        this.driver.position.copy(this.driverParent?.position || this.position)\n        this.driver.rotation.copy(this.driverParent?.rotation || this.rotation)\n        this.driver = undefined\n    }\n\n    setAnimation(animationName: string, onAnimationDone?: () => void, durationTimeoutMs: number = 0, onAnimationTrigger?: () => void) {\n        if (this.currentAnimation === animationName) return\n        this.currentAnimation = animationName\n        if (this.animationData.length > 0) this.removeAll()\n        this.camFPVChildren = this.camFPVJoint?.children || this.camFPVChildren\n        this.camShoulderChildren = this.camShoulderJoint?.children || this.camShoulderChildren\n        this.animationData.forEach((animEntityData) => {\n            const animData = animEntityData.animations.find((a) => a.name.equalsIgnoreCase(animationName))\n                ?? animEntityData.animations.find((a) => a.name.equalsIgnoreCase(ANIM_ENTITY_ACTIVITY.stand))\n            if (!animData) {\n                console.error(`Animation data neither have \"${animationName}\" nor stand animation`)\n                return\n            }\n            const animatedGroup = this.cacheAnimationGroups.getOrUpdate(animData.file, () => {\n                return new AnimationQualityGroup(animEntityData, animData, onAnimationDone, durationTimeoutMs, onAnimationTrigger).setup()\n            })\n            this.animationParent.add(animatedGroup)\n            this.animationGroups.push(animatedGroup)\n            animatedGroup.resetAnimation()\n            animatedGroup.onAnimationDone = onAnimationDone\n            animatedGroup.durationTimeoutMs = durationTimeoutMs\n            animatedGroup.onAnimationTrigger = onAnimationTrigger\n            animatedGroup.meshList.forEach((m) => this.meshesByLName.getOrUpdate(m.name, () => []).add(m))\n            this.pivotMaxZ = animEntityData.pivotMaxZ ?? this.pivotMaxZ\n            this.pivotMinZ = animEntityData.pivotMinZ ?? this.pivotMinZ\n            // add wheels\n            if (animEntityData.wheelMesh && animEntityData.wheelNullName) {\n                const wheelParentMesh = this.meshesByLName.getOrUpdate(animEntityData.wheelNullName, () => [])\n                if (wheelParentMesh.length < 1) {\n                    if (this.currentAnimation !== ANIM_ENTITY_ACTIVITY.teleportIn) {\n                        console.warn(`Could not find wheel parent ${animEntityData.wheelNullName} in ${Array.from(this.meshesByLName.keys())}`)\n                    }\n                    return\n                }\n                wheelParentMesh.forEach((p) => {\n                    const wheelMesh = ResourceManager.getLwoModel(animEntityData.wheelMesh)\n                    if (!wheelMesh) {\n                        console.warn(`Could not find wheel mesh \"${animEntityData.wheelMesh}\"`)\n                    } else {\n                        p.add(wheelMesh)\n                        this.wheelJoints.add({mesh: wheelMesh, radius: animEntityData.wheelRadius})\n                    }\n                })\n            }\n        })\n        this.finalizeMeshSetup()\n        const camJoints = this.animationGroups.flatMap((a) => a.meshList.filter((m) => m.name.equalsIgnoreCase(a.animEntityData.cameraNullName)))\n        this.camFPVJoint = camJoints[0]\n        if (this.camFPVJoint) {\n            this.camFPVJoint.rotation.y = this.flipCamera ? Math.PI : 0 // XXX Why is this needed for vehicles and not pilot?\n            this.camFPVChildren.forEach((c) => this.camFPVJoint?.add(c))\n        }\n        this.camShoulderJoint = camJoints[1]\n        if (this.camShoulderJoint) {\n            this.camShoulderJoint.rotation.y = this.flipCamera ? Math.PI : 0 // XXX Why is this needed for vehicles and not pilot?\n            this.camShoulderChildren.forEach((c) => this.camShoulderJoint?.add(c))\n        }\n    }\n\n    setAnimationSpeed(multiplier: number) {\n        this.animationGroups.forEach((a) => a.animationMixers.forEach((m) => m.timeScale = multiplier))\n    }\n\n    private removeAll() {\n        this.animationParent.clear()\n        this.animationGroups.length = 0\n        this.meshesByLName.clear()\n        this.installedUpgrades.forEach((e) => e.parent.remove(e.child))\n        this.installedUpgrades.length = 0\n        this.wheelJoints.forEach((w) => w.mesh.dispose())\n        this.wheelJoints.length = 0\n        this.carryJoints.length = 0\n        if (this.driverParent && this.driver) this.driverParent.remove(this.driver)\n        this.driverParent = undefined\n        this.toolParent = undefined\n        this.depositParent = undefined\n        this.xPivotObj = undefined\n        this.yPivotObj = undefined\n    }\n\n    setUpgradeLevel(upgradeLevel: string) {\n        if (this.upgradeLevel === upgradeLevel) return\n        this.upgradeLevel = upgradeLevel\n        this.installedUpgrades.forEach((e) => e.parent.remove(e.child))\n        this.installedUpgrades.length = 0\n        this.finalizeMeshSetup()\n    }\n\n    private finalizeMeshSetup() {\n        this.reinstallAllUpgrades()\n        this.driverParent = this.animationParent\n        this.animationData.forEach((animEntityData) => {\n            if (animEntityData.carryNullName) this.carryJoints.push(...this.meshesByLName.getOrUpdate(animEntityData.carryNullName, () => []))\n            if (animEntityData.driverNullName) this.driverParent = this.meshesByLName.get(animEntityData.driverNullName)?.last() || this.driverParent\n            if (animEntityData.toolNullName) this.toolParent = this.meshesByLName.get(animEntityData.toolNullName)?.last() || this.toolParent\n            if (animEntityData.depositNullName) this.depositParent = this.meshesByLName.get(animEntityData.depositNullName)?.last() || this.depositParent\n            if (animEntityData.xPivotName) this.xPivotObj = this.meshesByLName.get(animEntityData.xPivotName)?.last() || this.xPivotObj\n            if (animEntityData.yPivotName) this.yPivotObj = this.meshesByLName.get(animEntityData.yPivotName)?.last() || this.yPivotObj\n        })\n        this.addCarriedToJoints()\n        if (this.driver) this.driverParent.add(this.driver)\n    }\n\n    reinstallAllUpgrades() {\n        this.animationData.forEach((animEntityData) => {\n            // XXX what if an upgrade level is not defined for an upgrade, but a compatible one is, like 0110 and 0100\n            const upgrades = animEntityData.upgradesByLevel.get(this.upgradeLevel) ?? animEntityData.upgradesByLevel.get('0000') ?? []\n            upgrades.forEach((upgrade) => {\n                const parent = this.meshesByLName.get(upgrade.parentNullName.toLowerCase())?.[upgrade.parentNullIndex]\n                if (!parent) {\n                    if (this.currentAnimation !== ANIM_ENTITY_ACTIVITY.teleportIn) {\n                        console.warn(`Could not find upgrade parent for '${upgrade.lNameType}' with name '${upgrade.parentNullName}' in animation '${this.currentAnimation}'`)\n                    }\n                    return\n                }\n                const upgradeMesh = new AnimatedSceneEntity()\n                upgradeMesh.name = upgrade.lNameType\n                const upgradeFilename = GameConfig.instance.upgradeTypes[upgrade.lNameType] || upgrade.lUpgradeFilepath\n                try {\n                    const upgradeAnimData = ResourceManager.getAnimatedData(upgradeFilename)\n                    upgradeMesh.addAnimated(upgradeAnimData)\n                } catch (e) {\n                    const mesh = ResourceManager.getLwoModel(upgradeFilename)\n                    if (!mesh) {\n                        console.error(`Could not get upgrade mesh for \"${upgrade.lNameType}\"`)\n                    } else {\n                        mesh.name = upgrade.lNameType\n                        upgradeMesh.animationParent.add(mesh)\n                        this.meshesByLName.getOrUpdate(mesh.name, () => []).push(mesh)\n                    }\n                }\n                upgradeMesh.upgradeLevel = this.upgradeLevel\n                upgradeMesh.setAnimation(this.currentAnimation)\n                upgradeMesh.meshesByLName.forEach((mesh, lName) => this.meshesByLName.getOrUpdate(lName, () => []).push(...mesh))\n                parent.add(upgradeMesh)\n                this.installedUpgrades.add({parent: parent, child: upgradeMesh})\n            })\n        })\n    }\n\n    update(elapsedMs: number) {\n        this.animationGroups.forEach((a) => a.update(elapsedMs))\n        this.installedUpgrades.forEach((c) => c.child.update(elapsedMs))\n    }\n\n    private addCarriedToJoints() {\n        this.carriedByIndex.forEach((item, index) => {\n            const carryJoint = this.carryJoints[index]\n            if (carryJoint) {\n                carryJoint.add(item)\n            } else {\n                console.warn(`Could not find carry joint with index ${index} in ${this.carryJoints}`)\n            }\n        })\n    }\n\n    pickupEntity(entity: Object3D) {\n        const foundCarryJoint = this.carryJoints.some((carryJoint, index) => {\n            if (carryJoint.children.length < 1) {\n                this.carriedByIndex.set(index, entity)\n                carryJoint.add(entity)\n                return true\n            }\n            return false\n        })\n        if (!foundCarryJoint) {\n            if (VERBOSE) console.warn('Could not find empty carry joint to attach carried entity')\n            this.carriedByIndex.set(this.carriedByIndex.size, entity) // rockies pick item before having a carry joint\n        }\n        entity.position.set(0, 0, 0)\n    }\n\n    removeAllCarried(): void {\n        this.carriedByIndex.forEach((item, index) => {\n            const carryJoint = this.carryJoints[index]\n            const position = this.position.clone()\n            if (carryJoint) {\n                carryJoint.remove(item)\n                carryJoint.getWorldPosition(position)\n            }\n            item.position.copy(position)\n            item.rotation.copy(this.rotation)\n        })\n        this.carriedByIndex.clear()\n    }\n\n    dispose() {\n        this.animationGroups.forEach((a) => a.dispose())\n        this.animationGroups.length = 0\n    }\n\n    get heading(): number {\n        return this.rotation.y\n    }\n\n    get position2D(): Vector2 {\n        return new Vector2(this.position.x, this.position.z)\n    }\n\n    pointLaserAt(worldTarget: Vector3) {\n        if (!worldTarget) return\n        if (this.xPivotObj) {\n            this.xPivotObj.rotation.order = 'YXZ'\n            this.xPivotObj.rotation.set(0, 0, 0)\n            const pivotWorldPos = this.xPivotObj.getWorldPosition(new Vector3())\n            const diff = worldTarget.clone().sub(pivotWorldPos)\n            const base = diff.clone().setY(0)\n            let angleToTarget = base.angleTo(diff)\n            if (diff.y > 0) angleToTarget *= -1\n            // XXX use rotation speed and smooth movement\n            this.xPivotObj.rotateX(this.limitAngle(angleToTarget))\n        }\n        const yPivot = this.yPivotObj ?? this.xPivotObj\n        if (yPivot?.parent) {\n            const pivotWorldPos = yPivot.getWorldPosition(new Vector3())\n            const angleToTarget = Math.atan2(worldTarget.x - pivotWorldPos.x, worldTarget.z - pivotWorldPos.z)\n            const parentDir = yPivot.parent.getWorldDirection(new Vector3())\n            const parentAngle = new Vector2(parentDir.z, parentDir.x).angle()\n            // XXX use rotation speed and smooth movement\n            yPivot.rotation.y = angleToTarget - parentAngle\n        }\n    }\n\n    private limitAngle(angle: number): number {\n        let result = angle\n        const min = this.pivotMinZ\n        if (min !== null && min !== undefined && result < min) {\n            result = min\n        }\n        const max = this.pivotMaxZ\n        if (max !== null && max !== undefined && result > max) {\n            result = max\n        }\n        return result\n    }\n\n    headTowards(location: Vector2) {\n        this.lookAt(new Vector3(location.x, this.position.y, location.y))\n    }\n\n    addToScene(sceneMgr: SceneManager, worldPosition: Vector2 | undefined, headingRad: number | undefined) {\n        if (worldPosition) {\n            this.position.copy(sceneMgr.getFloorPosition(worldPosition))\n        }\n        if (headingRad !== undefined && headingRad !== null) {\n            this.rotation.y = headingRad\n        }\n        this.visible = sceneMgr.terrain.getSurfaceFromWorld(this.position).discovered\n        sceneMgr.addSceneEntity(this)\n    }\n\n    getFireNullParents(): { worldPos: Vector3, worldDirection: Vector3 }[] {\n        return this.animationData.flatMap((a) => this.meshesByLName.getOrUpdate(a.fireNullName, () => []).map((parent) => {\n            return {worldPos: parent.getWorldPosition(new Vector3()), worldDirection: parent.getWorldDirection(new Vector3())}\n        }))\n    }\n\n    restartAnimation() {\n        this.animationGroups.forEach((a) => a.resetAnimation())\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { MovableEntityStats } from '../../cfg/GameStatsCfg'\n\nexport class MovableStatsComponent extends AbstractGameComponent {\n    routeSpeed: number[] = [1]\n    pathCoef: number = 1\n    rubbleCoef: number = 1\n    level: number = 0\n    enterWall: boolean = false\n    crossLand: boolean = false\n    crossWater: boolean = false\n    crossLava: boolean = false\n\n    constructor(stats: MovableEntityStats) {\n        super()\n        this.routeSpeed = stats.routeSpeed\n        this.pathCoef = stats.pathCoef\n        this.rubbleCoef = stats.rubbleCoef\n        this.enterWall = stats.randomEnterWall\n        this.crossLand = stats.crossLand\n        this.crossWater = stats.crossWater\n        this.crossLava = stats.crossLava\n    }\n\n    getSpeed(isOnPath: boolean, isOnRubble: boolean): number {\n        const routeSpeed = this.routeSpeed[this.level]\n        const pathCoef = isOnPath ? this.pathCoef : 1\n        const rubbleCoef = isOnRubble ? this.rubbleCoef : 1\n        return routeSpeed * pathCoef * rubbleCoef\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { PRNG } from '../factory/PRNG'\n\nexport class RandomMoveComponent extends AbstractGameComponent {\n    idleTimer: number = 0\n\n    constructor(readonly maxIdleTimer: number) {\n        super()\n        this.resetIdleTimer()\n    }\n\n    isOnIdleTimer(elapsedMs: number): boolean {\n        if (this.idleTimer > 0) {\n            this.idleTimer -= elapsedMs\n            return true\n        }\n        return this.resetIdleTimer()\n    }\n\n    private resetIdleTimer() {\n        if (this.maxIdleTimer <= 0) return false\n        this.idleTimer = PRNG.movement.randInt(this.maxIdleTimer)\n        return false\n    }\n}\n","import { MonsterEntityStats } from '../../cfg/GameStatsCfg'\nimport { AbstractGameComponent } from '../ECS'\n\nexport class MonsterStatsComponent extends AbstractGameComponent {\n    constructor(readonly stats: MonsterEntityStats) {\n        super()\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\n\nexport class LastWillComponent extends AbstractGameComponent {\n    constructor(readonly onDeath: () => void) {\n        super()\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { MaterialEntity } from '../model/material/MaterialEntity'\nimport { Surface } from '../terrain/Surface'\nimport { BuildingEntity } from '../model/building/BuildingEntity'\nimport { SceneMesh } from '../../scene/SceneMesh'\n\nexport const ROCK_MONSTER_BEHAVIOR_STATE = {\n    idle: 0,\n    gotoCrystal: 1,\n    eatCrystal: 2,\n    boulderAttack: 3,\n    meleeAttack: 4,\n    goHome: 5,\n    gotoWall: 6,\n    gather: 7,\n    throw: 8,\n    punch: 9,\n    throwMan: 10,\n    resting: 11,\n    hitByLaser: 12,\n} as const\ntype RockMonsterBehaviorState = typeof ROCK_MONSTER_BEHAVIOR_STATE[keyof typeof ROCK_MONSTER_BEHAVIOR_STATE]\n\nexport class RockMonsterBehaviorComponent extends AbstractGameComponent {\n    state: RockMonsterBehaviorState = ROCK_MONSTER_BEHAVIOR_STATE.idle\n    numCrystalsEaten: number = 0\n    targetCrystal?: MaterialEntity\n    targetWall?: Surface\n    boulder?: SceneMesh\n    targetBuilding?: BuildingEntity\n\n    changeToIdle() {\n        this.state = ROCK_MONSTER_BEHAVIOR_STATE.idle\n        this.targetCrystal = undefined\n        this.targetWall = undefined\n        this.targetBuilding = undefined\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { Vector2 } from 'three'\n\nexport class WorldTargetComponent extends AbstractGameComponent {\n    constructor(readonly position = new Vector2(), readonly radiusSq: number = 1) {\n        super()\n    }\n}\n","import { Vector2 } from 'three'\nimport { ITEM_ACTION_RANGE_SQ } from '../../params'\nimport { BuildingEntity } from './building/BuildingEntity'\nimport { BuildingSite } from './building/BuildingSite'\nimport { GameEntity } from '../ECS'\n\nexport class PathTarget {\n    constructor(\n        readonly targetLocation: Vector2,\n        readonly radiusSq: number,\n        readonly building: BuildingEntity | undefined,\n        readonly site: BuildingSite | undefined,\n        readonly entity: GameEntity | undefined,\n        readonly focusPoint: Vector2 | undefined\n    ) {\n    }\n\n    static fromLocation(targetLocation: Vector2, radiusSq: number = 1, focusPoint?: Vector2) {\n        return new PathTarget(targetLocation, radiusSq, undefined, undefined, undefined, focusPoint)\n    }\n\n    static fromBuilding(building: BuildingEntity, targetLocation: Vector2, radiusSq: number, focusPoint: Vector2) {\n        return new PathTarget(targetLocation, radiusSq, building, undefined, building.entity, focusPoint)\n    }\n\n    static fromSite(site: BuildingSite, targetLocation: Vector2, focusPoint: Vector2 | undefined) {\n        return new PathTarget(targetLocation, ITEM_ACTION_RANGE_SQ, undefined, site, undefined, focusPoint)\n    }\n\n    static fromEntity(entity: GameEntity, targetLocation: Vector2, radiusSq: number) {\n        return new PathTarget(targetLocation, radiusSq, undefined, undefined, entity, undefined)\n    }\n}\n","export const RAIDER_TOOL = {\n    none: '', // useful for truthiness checks\n    drill: 'ToolType_Drill',\n    hammer: 'ToolType_Hammer',\n    shovel: 'ToolType_Spade',\n    spanner: 'ToolType_Spanner',\n    freezerGun: 'ToolType_FreezerGun',\n    laser: 'ToolType_Laser',\n    pusherGun: 'ToolType_PusherGun',\n    birdScarer: 'ToolType_BirdScarer',\n}\nexport type RaiderTool = typeof RAIDER_TOOL[keyof typeof RAIDER_TOOL]\n\nexport class RaiderTools {\n    static values: RaiderTool[] = [\n        RAIDER_TOOL.drill,\n        RAIDER_TOOL.hammer,\n        RAIDER_TOOL.shovel,\n        RAIDER_TOOL.spanner,\n        RAIDER_TOOL.freezerGun,\n        RAIDER_TOOL.laser,\n        RAIDER_TOOL.pusherGun,\n        RAIDER_TOOL.birdScarer,\n    ]\n\n    static toToolTipIconName(tool: RaiderTool): string {\n        return tool.replace('_', '').toLowerCase()\n    }\n\n    static toInterfaceItemKey(tool: RaiderTool): string {\n        switch (tool) {\n            case RAIDER_TOOL.drill:\n                return 'Interface_MenuItem_GetDrill'\n            case RAIDER_TOOL.shovel:\n                return 'Interface_MenuItem_GetSpade'\n            case RAIDER_TOOL.hammer:\n                return 'Interface_MenuItem_GetHammer'\n            case RAIDER_TOOL.spanner:\n                return 'Interface_MenuItem_GetSpanner'\n            case RAIDER_TOOL.freezerGun:\n                return 'Interface_MenuItem_GetFreezerGun'\n            case RAIDER_TOOL.laser:\n                return 'Interface_MenuItem_GetLaser'\n            case RAIDER_TOOL.pusherGun:\n                return 'Interface_MenuItem_GetPusherGun'\n            case RAIDER_TOOL.birdScarer:\n                return 'Interface_MenuItem_GetBirdScarer'\n            default:\n                throw new Error(`Unexpected raider tool given: ${tool}`)\n        }\n    }\n}\n","export const RAIDER_TRAINING = {\n    none: 0, // useful for truthiness checks\n    driver: 1,\n    engineer: 2,\n    geologist: 3,\n    pilot: 4,\n    sailor: 5,\n    demolition: 6,\n} as const\nexport type RaiderTraining = typeof RAIDER_TRAINING[keyof typeof RAIDER_TRAINING]\n\nexport interface RaiderTrainingStats {\n    trainDriver: boolean[]\n    trainRepair: boolean[]\n    trainScanner: boolean[]\n    trainPilot: boolean[]\n    trainSailor: boolean[]\n    trainDynamite: boolean[]\n}\n\nexport class RaiderTrainings {\n    static values: RaiderTraining[] = [\n        RAIDER_TRAINING.driver,\n        RAIDER_TRAINING.engineer,\n        RAIDER_TRAINING.geologist,\n        RAIDER_TRAINING.pilot,\n        RAIDER_TRAINING.sailor,\n        RAIDER_TRAINING.demolition,\n    ]\n\n    static toStatsProperty(training: RaiderTraining): keyof RaiderTrainingStats {\n        switch (training) {\n            case RAIDER_TRAINING.driver:\n                return 'trainDriver'\n            case RAIDER_TRAINING.engineer:\n                return 'trainRepair'\n            case RAIDER_TRAINING.geologist:\n                return 'trainScanner'\n            case RAIDER_TRAINING.pilot:\n                return 'trainPilot'\n            case RAIDER_TRAINING.sailor:\n                return 'trainSailor'\n            case RAIDER_TRAINING.demolition:\n                return 'trainDynamite'\n            default:\n                throw new Error(`Unexpected training value given: (${training})`)\n        }\n    }\n\n    static toToolTipIconName(training: RaiderTraining): string {\n        let result = ''\n        switch (training) {\n            case RAIDER_TRAINING.driver:\n                result = `AbilityType_Driver`\n                break\n            case RAIDER_TRAINING.engineer:\n                result = `AbilityType_Repair`\n                break\n            case RAIDER_TRAINING.geologist:\n                result = `AbilityType_Scanner`\n                break\n            case RAIDER_TRAINING.pilot:\n                result = `AbilityType_Pilot`\n                break\n            case RAIDER_TRAINING.sailor:\n                result = `AbilityType_Sailor`\n                break\n            case RAIDER_TRAINING.demolition:\n                result = `AbilityType_Dynamite`\n                break\n            default:\n                throw new Error(`Unexpected training value given: (${training})`)\n        }\n        return result.replace('_', '').toLowerCase()\n    }\n}\n","export const JOB_STATE = {\n    incomplete: 1,\n    complete: 2,\n    canceled: 3,\n} as const\nexport type JobState = typeof JOB_STATE[keyof typeof JOB_STATE]\n","import { AnimationActivity } from '../anim/AnimationActivity'\nimport { Surface } from '../../terrain/Surface'\nimport { MaterialEntity } from '../material/MaterialEntity'\nimport { PathTarget } from '../PathTarget'\nimport { RAIDER_TOOL, RaiderTool } from '../raider/RaiderTool'\nimport { RAIDER_TRAINING, RaiderTraining } from '../raider/RaiderTraining'\nimport { JOB_STATE, JobState } from './JobState'\nimport { BubblesCfg } from '../../../cfg/BubblesCfg'\nimport { PRIORITY_IDENTIFIER, PriorityIdentifier } from './PriorityIdentifier'\nimport { AnimatedSceneEntity } from '../../../scene/AnimatedSceneEntity'\nimport { EntityType } from '../EntityType'\nimport { TerrainPath } from '../../terrain/TerrainPath'\nimport { GameEntity } from '../../ECS'\nimport { PickSphereStats } from '../../../cfg/GameStatsCfg'\n\nexport interface JobFulfiller {\n    entity: GameEntity\n    entityType: EntityType\n    sceneEntity: AnimatedSceneEntity\n    stats: PickSphereStats\n\n    findShortestPath(targets: PathTarget[] | PathTarget | undefined): TerrainPath | undefined\n    stopJob(): void\n    dropCarried(unAssign: boolean): MaterialEntity[]\n    getDrillTimeSeconds(surface: Surface): number\n    getRepairValue(): number\n}\n\nexport abstract class Job {\n    jobState: JobState = JOB_STATE.incomplete\n    surface?: Surface\n    carryItem?: MaterialEntity\n    requiredTool: RaiderTool = RAIDER_TOOL.none\n    requiredTraining: RaiderTraining = RAIDER_TRAINING.none\n    priorityIdentifier: PriorityIdentifier = PRIORITY_IDENTIFIER.none\n    workSoundRaider?: string\n    workSoundVehicle?: string\n    doOnAlarm: boolean = false\n\n    abstract assign(fulfiller: JobFulfiller): void\n\n    abstract unAssign(fulfiller: JobFulfiller): void\n\n    abstract hasFulfiller(): boolean\n\n    isReadyToComplete(): boolean {\n        return true\n    }\n\n    onJobComplete(fulfiller: JobFulfiller): void {\n        this.jobState = JOB_STATE.complete\n    }\n\n    abstract getWorkplace(entity: JobFulfiller): PathTarget | undefined\n\n    getWorkActivity(): AnimationActivity | undefined {\n        return undefined\n    }\n\n    getExpectedTimeLeft(): number | undefined {\n        return undefined\n    }\n\n    getJobBubble(): keyof BubblesCfg | undefined {\n        return undefined\n    }\n}\n","import { AbstractGameComponent, GameEntity } from '../ECS'\nimport { PickSphereStats } from '../../cfg/GameStatsCfg'\nimport { Mesh, MeshBasicMaterial, Object3D, SphereGeometry } from 'three'\nimport { EntityType } from '../model/EntityType'\n\nexport interface SceneSelectionUserData {\n    gameEntity: GameEntity\n    entityType: EntityType\n}\n\nexport class PickSphereMesh extends Mesh<SphereGeometry, MeshBasicMaterial> {\n    declare userData: SceneSelectionUserData\n}\n\nexport class SceneSelectionComponent extends AbstractGameComponent {\n    readonly pickSphere: PickSphereMesh\n\n    constructor(parentObj: Object3D, userData: SceneSelectionUserData, readonly stats: PickSphereStats) {\n        super()\n        const pickSphereRadius = stats.pickSphere / 2 // TODO separate pick spheres from collision and use CollRadius\n        const geometry = new SphereGeometry(pickSphereRadius, 8, 8)\n        const material = new MeshBasicMaterial({color: 0xa0a000, visible: false, wireframe: true}) // change visible to true for debugging\n        this.pickSphere = new PickSphereMesh(geometry, material)\n        this.pickSphere.position.y = stats.collHeight / 2\n        this.pickSphere.userData = userData\n        parentObj.add(this.pickSphere)\n    }\n}\n","import { CanvasTexture, Sprite, SpriteMaterial } from 'three'\nimport { createContext } from '../core/ImageHelper'\n\nexport class SelectionFrameSprite extends Sprite {\n    private static readonly textureSize = 128\n    private static readonly baseStrength = 50\n    private static readonly shankLength = SelectionFrameSprite.textureSize / 6\n\n    constructor(pickSphereDiameter: number, hexColor: string) {\n        super(SelectionFrameSprite.createSpriteMaterial(pickSphereDiameter, hexColor))\n    }\n\n    private static createSpriteMaterial(pickSphereDiameter: number, hexColor: string) {\n        const ctx = createContext(SelectionFrameSprite.textureSize, SelectionFrameSprite.textureSize)\n        ctx.fillStyle = hexColor\n        const strength = Math.round(SelectionFrameSprite.baseStrength / pickSphereDiameter)\n        ctx.fillRect(0, 0, SelectionFrameSprite.shankLength, strength)\n        ctx.fillRect(0, 0, strength, SelectionFrameSprite.shankLength)\n        ctx.fillRect(SelectionFrameSprite.textureSize - SelectionFrameSprite.shankLength, 0, SelectionFrameSprite.shankLength, strength)\n        ctx.fillRect(SelectionFrameSprite.textureSize - strength, 0, strength, SelectionFrameSprite.shankLength)\n        ctx.fillRect(SelectionFrameSprite.textureSize - strength, SelectionFrameSprite.textureSize - SelectionFrameSprite.shankLength, strength, SelectionFrameSprite.shankLength)\n        ctx.fillRect(SelectionFrameSprite.textureSize - SelectionFrameSprite.shankLength, SelectionFrameSprite.textureSize - strength, SelectionFrameSprite.shankLength, strength)\n        ctx.fillRect(0, SelectionFrameSprite.textureSize - strength, SelectionFrameSprite.shankLength, strength)\n        ctx.fillRect(0, SelectionFrameSprite.textureSize - SelectionFrameSprite.shankLength, strength, SelectionFrameSprite.shankLength)\n        const selectionFrameTexture = new CanvasTexture(ctx.canvas)\n        return new SpriteMaterial({map: selectionFrameTexture, depthTest: false})\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { PickSphereStats } from '../../cfg/GameStatsCfg'\nimport { Object3D, Vector3 } from 'three'\nimport { SelectionFrameSprite } from '../../scene/SelectionFrameSprite'\n\nexport class SelectionFrameComponent extends AbstractGameComponent {\n    readonly selectionFrame: SelectionFrameSprite\n    readonly selectionFrameDouble: SelectionFrameSprite\n    readonly selectionFrameSecondary: SelectionFrameSprite\n\n    constructor(parentObj: Object3D, stats: PickSphereStats, pickSphereHeightOffset: number = 0) {\n        super()\n        this.selectionFrame = this.addSelectionFrame(parentObj, stats.pickSphere, parentObj.position, '#0f0')\n        this.selectionFrame.position.y = pickSphereHeightOffset\n        this.selectionFrameDouble = this.addSelectionFrame(parentObj, stats.pickSphere, parentObj.position, '#f00')\n        this.selectionFrameDouble.position.y = pickSphereHeightOffset\n        this.selectionFrameSecondary = this.addSelectionFrame(parentObj, stats.pickSphere, parentObj.position, '#ff0')\n        this.selectionFrameSecondary.position.y = pickSphereHeightOffset\n    }\n\n    private addSelectionFrame(parentObj: Object3D, pickSphereDiameter: number, pickSphereCenter: Vector3, hexColor: string) {\n        const selectionFrame = new SelectionFrameSprite(pickSphereDiameter, hexColor)\n        selectionFrame.position.copy(pickSphereCenter)\n        selectionFrame.scale.setScalar(pickSphereDiameter * 3 / 4)\n        selectionFrame.visible = false\n        parentObj.add(selectionFrame)\n        return selectionFrame\n    }\n\n    select() {\n        this.selectionFrame.visible = true\n        this.selectionFrameDouble.visible = false\n        this.selectionFrameSecondary.visible = false\n    }\n\n    doubleSelect() {\n        this.selectionFrame.visible = false\n        this.selectionFrameDouble.visible = true\n        this.selectionFrameSecondary.visible = false\n    }\n\n    selectSecondary() {\n        this.selectionFrame.visible = false\n        this.selectionFrameDouble.visible = false\n        this.selectionFrameSecondary.visible = true\n    }\n\n    deselect() {\n        this.selectionFrame.visible = false\n        this.selectionFrameDouble.visible = false\n        this.selectionFrameSecondary.visible = false\n    }\n\n    isSelected(): boolean {\n        return this.selectionFrame.visible || this.selectionFrameDouble.visible || this.selectionFrameSecondary.visible\n    }\n}\n","import { Surface } from '../../game/terrain/Surface'\n\nexport class MapSurfaceRect {\n    x: number\n    y: number\n    surfaceColor: string\n    borderColor: string\n    objectName: string\n    sfxKey: string\n\n    constructor(surface: Surface) {\n        this.x = surface.x\n        this.y = surface.y\n        this.surfaceColor = surface.surfaceType.mapSurfaceColor\n        this.borderColor = surface.reinforced ? '#FFFF00' : ''\n        this.objectName = surface.surfaceType.getObjectName()\n        this.sfxKey = surface.surfaceType.getSfxKey()\n    }\n}\n","export const VEHICLE_UPGRADE = {\n    none: 0, // useful for truthiness checks\n    carry: 1,\n    scan: 2,\n    speed: 3,\n    drill: 4,\n}\nexport type VehicleUpgrade = typeof VEHICLE_UPGRADE[keyof typeof VEHICLE_UPGRADE]\n\nexport class VehicleUpgrades {\n    static values: VehicleUpgrade[] = [\n        VEHICLE_UPGRADE.carry,\n        VEHICLE_UPGRADE.scan,\n        VEHICLE_UPGRADE.speed,\n        VEHICLE_UPGRADE.drill,\n    ]\n\n    static toUpgradeString(upgrades: Set<VehicleUpgrade>): string {\n        return (upgrades.has(VEHICLE_UPGRADE.carry) ? '1' : '0')\n            + (upgrades.has(VEHICLE_UPGRADE.scan) ? '1' : '0')\n            + (upgrades.has(VEHICLE_UPGRADE.speed) ? '1' : '0')\n            + (upgrades.has(VEHICLE_UPGRADE.drill) ? '1' : '0')\n    }\n\n    static toCostIndex(upgrade: VehicleUpgrade): number {\n        switch (upgrade) {\n            case VEHICLE_UPGRADE.carry:\n                return 0\n            case VEHICLE_UPGRADE.scan:\n                return 1\n            case VEHICLE_UPGRADE.speed:\n                return 2\n            case VEHICLE_UPGRADE.drill:\n                return 3\n            default:\n                throw new Error(`Cannot map upgrade (${upgrade}) to cost index`)\n        }\n    }\n}\n","import { Vector3 } from 'three'\nimport { MapMarkerChange, MapMarkerType } from '../game/component/MapMarkerComponent'\nimport { EntityManager } from '../game/EntityManager'\nimport { EntityType } from '../game/model/EntityType'\nimport { Surface } from '../game/terrain/Surface'\nimport { SurfaceType } from '../game/terrain/SurfaceType'\nimport { Terrain } from '../game/terrain/Terrain'\nimport { RAIDER_TOOL, RaiderTool, RaiderTools } from '../game/model/raider/RaiderTool'\nimport { RAIDER_TRAINING, RaiderTraining, RaiderTrainings } from '../game/model/raider/RaiderTraining'\nimport { MapSurfaceRect } from '../gui/radar/MapSurfaceRect'\nimport { DEV_MODE, TILESIZE } from '../params'\nimport { EventKey } from './EventKeyEnum'\nimport { VehicleUpgrade, VehicleUpgrades } from '../game/model/vehicle/VehicleUpgrade'\nimport { GameResult } from '../game/model/GameResult'\nimport { GameEntity } from '../game/ECS'\nimport { HealthComponent } from '../game/component/HealthComponent'\nimport { Rect } from '../core/Rect'\nimport { BaseEvent } from './EventTypeMap'\nimport { SpriteImage } from '../core/Sprite'\nimport { MapRendererCameraRect } from '../worker/MapRendererWorker'\n\nexport const SELECT_PANEL_TYPE = {\n    none: 0,\n    raider: 1,\n    vehicle: 2,\n    building: 3,\n    surface: 4,\n    fence: 5,\n} as const\nexport type SelectPanelType = typeof SELECT_PANEL_TYPE[keyof typeof SELECT_PANEL_TYPE]\n\nexport class SelectionChanged extends BaseEvent {\n    readonly selectPanelType: SelectPanelType = SELECT_PANEL_TYPE.none\n    readonly isGround: boolean\n    readonly isPowerPath: boolean\n    readonly canPlaceFence: boolean\n    readonly isFloor: boolean\n    readonly isSite: boolean\n    readonly hasErosion: boolean\n    readonly hasRepairLava: boolean\n    readonly hasRubble: boolean\n    readonly isDrillable: boolean\n    readonly isReinforcable: boolean\n    readonly someCarries: boolean\n    readonly everyHasMaxLevel: boolean\n    readonly canDoTraining: Map<RaiderTraining, boolean> = new Map()\n    readonly canInstallUpgrade: Map<VehicleUpgrade, boolean> = new Map()\n    readonly hasUpgradeSite: boolean\n    readonly everyHasTool: Map<RaiderTool, boolean> = new Map()\n    readonly buildingCanUpgrade: boolean\n    readonly buildingMissingOreForUpgrade: number\n    readonly buildingNeedsRepair: boolean\n    readonly buildingCanSwitchPower: boolean\n    readonly buildingPowerSwitchState: boolean\n    readonly vehicleHasCallManJob: boolean\n    readonly noVehicleWithDriver: boolean\n    readonly vehicleWithCarried: boolean\n    readonly someHasBirdScarer: boolean\n    readonly someVehicleCanLoad: boolean\n\n    constructor(entityMgr: EntityManager) {\n        super(EventKey.SELECTION_CHANGED)\n        this.selectPanelType = entityMgr.selection.getSelectPanelType()\n        this.isGround = entityMgr.selection.surface?.surfaceType === SurfaceType.GROUND\n        this.isPowerPath = entityMgr.selection.surface?.surfaceType === SurfaceType.POWER_PATH\n        this.isFloor = !!entityMgr.selection.surface?.surfaceType.floor\n        this.isSite = !!entityMgr.selection.surface?.site\n        this.hasErosion = !!entityMgr.selection.surface?.surfaceType.hasErosion\n        this.hasRepairLava = !!entityMgr.selection.surface?.site\n        this.hasRubble = !!entityMgr.selection.surface?.hasRubble()\n        this.isDrillable = !!entityMgr.selection.surface?.isDigable() && (entityMgr.selection.surface?.surfaceType !== SurfaceType.HARD_ROCK || entityMgr.vehicles.some((v) => v.canDrill(entityMgr.selection.surface)))\n        this.isReinforcable = !!entityMgr.selection.surface?.isReinforcable()\n        this.canPlaceFence = !!entityMgr.selection.surface?.canPlaceFence()\n        this.someCarries = entityMgr.selection.raiders.some((r) => !!r.carries)\n        this.everyHasMaxLevel = entityMgr.selection.raiders.every((r) => r.level >= r.stats.maxLevel)\n        RaiderTrainings.values.forEach((training) => this.canDoTraining.set(training, entityMgr.hasTrainingSite(training) && entityMgr.selection.raiders.some((r) => !r.hasTraining(training))))\n        RaiderTools.values.forEach((tool) => this.everyHasTool.set(tool, entityMgr.selection.raiders.every((r) => r.hasTool(tool))))\n        VehicleUpgrades.values.forEach((upgrade) => this.canInstallUpgrade.set(upgrade, entityMgr.selection.vehicles.some((v) => v.canUpgrade(upgrade))))\n        this.hasUpgradeSite = entityMgr.hasUpgradeSite()\n        this.buildingCanUpgrade = !!entityMgr.selection.building?.canUpgrade()\n        this.buildingMissingOreForUpgrade = entityMgr.selection.building?.missingOreForUpgrade() || 0\n        const buildingEntity = entityMgr.selection.building?.entity\n        const buildingHealthComponent = buildingEntity ? entityMgr.worldMgr.ecs.getComponents(buildingEntity).get(HealthComponent) : undefined\n        this.buildingNeedsRepair = buildingHealthComponent ? buildingHealthComponent.health < buildingHealthComponent.maxHealth : false\n        this.buildingCanSwitchPower = !entityMgr.selection.building?.stats.selfPowered && !entityMgr.selection.building?.stats.powerBuilding && !!(entityMgr.selection.building?.energized || entityMgr.selection.building?.surfaces.some((s) => s.energized))\n        this.buildingPowerSwitchState = !!entityMgr.selection.building?.powerSwitch\n        this.vehicleHasCallManJob = entityMgr.selection.vehicles.every((v) => !!v.callManJob)\n        this.noVehicleWithDriver = entityMgr.selection.vehicles.every((v) => !v.driver)\n        this.vehicleWithCarried = entityMgr.selection.vehicles.some((v) => v.carriedItems.size > 0 || (!v.portering && !!v.carriedVehicle))\n        this.someHasBirdScarer = entityMgr.selection.raiders.some((r) => r.hasTool(RAIDER_TOOL.birdScarer))\n        this.someVehicleCanLoad = entityMgr.selection.vehicles.some((v) => v.canLoad())\n    }\n}\n\nexport class DeselectAll extends BaseEvent {\n    constructor() {\n        super(EventKey.DESELECT_ALL)\n    }\n}\n\nexport class BuildingsChangedEvent extends BaseEvent {\n    readonly placedVisibleBuildings: Set<GameEntity> = new Set()\n    readonly poweredBuildings: Set<GameEntity> = new Set()\n    readonly discoveredBuildingsMaxLevel: Map<EntityType, number> = new Map()\n    readonly usableBuildingsMaxLevel: Map<EntityType, number> = new Map()\n\n    constructor(entityMgr: EntityManager) {\n        super(EventKey.BUILDINGS_CHANGED)\n        entityMgr.buildings.forEach((b) => {\n            if (b.isReady()) {\n                this.placedVisibleBuildings.add(b.entity)\n                this.discoveredBuildingsMaxLevel.upsert(b.entityType, (current) => Math.max(current || 0, b.level))\n            }\n            if (b.isPowered()) {\n                this.poweredBuildings.add(b.entity)\n                this.usableBuildingsMaxLevel.upsert(b.entityType, (current) => Math.max(current || 0, b.level))\n            }\n        })\n    }\n\n    // needs static, because events might get de-/serialized, which removes class methods\n    static hasUsable(event: BuildingsChangedEvent, building: EntityType, minLevel: number = 0): boolean {\n        const currentMaxLevel = event.usableBuildingsMaxLevel.getOrUpdate(building, () => -1)\n        return currentMaxLevel >= minLevel\n    }\n}\n\nexport class RaidersAmountChangedEvent extends BaseEvent {\n    readonly hasRaider: boolean\n    readonly hasMaxRaiders: boolean\n    readonly hasDemolition: boolean\n\n    constructor(entityMgr: EntityManager) {\n        super(EventKey.RAIDER_AMOUNT_CHANGED)\n        this.hasRaider = entityMgr.raiders.length > 0\n        this.hasMaxRaiders = entityMgr.hasMaxRaiders()\n        this.hasDemolition = entityMgr.hasProfessional(RAIDER_TRAINING.demolition)\n    }\n}\n\nexport class RaiderTrainingCompleteEvent extends BaseEvent {\n    constructor(readonly training: RaiderTraining) {\n        super(EventKey.RAIDER_TRAINING_COMPLETE)\n    }\n}\n\nexport class VehicleUpgradeCompleteEvent extends BaseEvent {\n    constructor() {\n        super(EventKey.VEHICLE_UPGRADE_COMPLETE)\n    }\n}\n\nexport class InitRadarMap extends BaseEvent {\n    readonly focusTile: { x: number, y: number }\n    readonly surfaces: MapSurfaceRect[] = []\n    readonly terrainWidth: number\n    readonly terrainHeight: number\n\n    constructor(mapFocus: Vector3, terrain: Terrain) {\n        super(EventKey.INIT_RADAR_MAP)\n        this.focusTile = {x: Math.floor(mapFocus.x / TILESIZE), y: Math.floor(mapFocus.z / TILESIZE)}\n        terrain.forEachSurface((s) => {\n            if (s.discovered || s.scanned || DEV_MODE) this.surfaces.push(new MapSurfaceRect(s))\n        })\n        this.terrainWidth = terrain.width\n        this.terrainHeight = terrain.height\n    }\n}\n\nexport class UpdateRadarTerrain extends BaseEvent {\n    readonly surfaces: MapSurfaceRect[] = []\n    readonly terrainWidth: number\n    readonly terrainHeight: number\n\n    constructor(terrain: Terrain) {\n        super(EventKey.UPDATE_RADAR_TERRAIN)\n        terrain.forEachSurface((s) => {\n            if (s.discovered || s.scanned || DEV_MODE) this.surfaces.push(new MapSurfaceRect(s))\n        })\n        this.terrainWidth = terrain.width\n        this.terrainHeight = terrain.height\n    }\n}\n\nexport class UpdateRadarSurface extends BaseEvent {\n    readonly surfaceRect: MapSurfaceRect\n\n    constructor(surface: Surface) {\n        super(EventKey.UPDATE_RADAR_SURFACE)\n        this.surfaceRect = new MapSurfaceRect(surface)\n    }\n}\n\nexport class UpdateRadarEntityEvent extends BaseEvent {\n    constructor(readonly mapMarkerType: MapMarkerType, readonly entity: GameEntity, readonly change: MapMarkerChange, readonly position?: { x: number, z: number }, readonly radius?: number) {\n        super(EventKey.UPDATE_RADAR_ENTITY)\n    }\n}\n\nexport class UpdateRadarCamera extends BaseEvent {\n    constructor(readonly cameraRect: MapRendererCameraRect) {\n        super(EventKey.UPDATE_RADAR_CAMERA)\n    }\n}\n\nexport class ShowMissionBriefingEvent extends BaseEvent {\n    constructor(readonly isShowing: boolean) {\n        super(EventKey.SHOW_MISSION_BRIEFING)\n    }\n}\n\nexport class ShowMissionAdvisorEvent extends BaseEvent {\n    constructor(readonly showAdvisor: boolean) {\n        super(EventKey.SHOW_MISSION_ADVISOR)\n    }\n}\n\nexport class ShowGameResultEvent extends BaseEvent {\n    constructor(readonly result: GameResult) {\n        super(EventKey.SHOW_GAME_RESULT)\n    }\n}\n\nexport class ShowOptionsEvent extends BaseEvent {\n    constructor() {\n        super(EventKey.SHOW_OPTIONS)\n    }\n}\n\nexport class SetSpaceToContinueEvent extends BaseEvent {\n    constructor(readonly state: boolean) {\n        super(EventKey.SET_SPACE_TO_CONTINUE)\n    }\n}\n\nexport class FollowerSetCanvasEvent extends BaseEvent {\n    constructor(readonly canvas: SpriteImage | undefined) {\n        super(EventKey.FOLLOWER_SET_CANVAS)\n    }\n}\n\nexport class FollowerSetLookAtEvent extends BaseEvent {\n    constructor(readonly entity: GameEntity) {\n        super(EventKey.FOLLOWER_SET_LOOK_AT)\n    }\n}\n\nexport class SelectionFrameChangeEvent extends BaseEvent {\n    constructor(readonly rect: Rect | undefined) {\n        super(EventKey.SELECTION_FRAME_CHANGE)\n    }\n}\n\nexport class GuiButtonBlinkEvent extends BaseEvent {\n    constructor(readonly buttonType: string, readonly blinking: boolean) {\n        super(EventKey.GUI_BUTTON_BLINK)\n    }\n}\n\nexport class GuiBackButtonClicked extends BaseEvent {\n    constructor() {\n        super(EventKey.GUI_GO_BACK_BUTTON_CLICKED)\n    }\n}\n\nexport class GuiBuildButtonClicked extends BaseEvent {\n    constructor() {\n        super(EventKey.GUI_BUILD_BUILDING_BUTTON_CLICKED)\n    }\n}\n\nexport class GuiGetToolButtonClicked extends BaseEvent {\n    constructor() {\n        super(EventKey.GUI_GET_TOOL_BUTTON_CLICKED)\n    }\n}\n\nexport class GuiTrainRaiderButtonClicked extends BaseEvent {\n    constructor() {\n        super(EventKey.GUI_TRAIN_RAIDER_BUTTON_CLICKED)\n    }\n}\n\nexport class AdvanceAfterRewardsEvent extends BaseEvent {\n    constructor() {\n        super(EventKey.ADVANCE_AFTER_REWARDS)\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { TILESIZE } from '../../params'\n\nexport const RAIDER_SCARE_RANGE = {\n    bat: TILESIZE / 2,\n    rocky: TILESIZE,\n    dynamite: 1.5 * TILESIZE,\n} as const\ntype RaiderScareRange = typeof RAIDER_SCARE_RANGE[keyof typeof RAIDER_SCARE_RANGE]\n\nexport class RaiderScareComponent extends AbstractGameComponent {\n    readonly scareRadiusSq: number\n\n    constructor(scareRadius: RaiderScareRange) {\n        super()\n        this.scareRadiusSq = scareRadius * scareRadius\n    }\n}\n","import { ANIM_ENTITY_ACTIVITY, AnimationActivity, BARRIER_ACTIVITY, BUILDING_ACTIVITY, DYNAMITE_ACTIVITY, RAIDER_ACTIVITY } from '../anim/AnimationActivity'\nimport { MaterialEntity } from '../material/MaterialEntity'\nimport { PathTarget } from '../PathTarget'\nimport { Job, JobFulfiller } from './Job'\nimport { EntityType } from '../EntityType'\nimport { Raider } from '../raider/Raider'\nimport { DynamiteExplosionEvent } from '../../../event/WorldEvents'\nimport { SceneSelectionComponent } from '../../component/SceneSelectionComponent'\nimport { SelectionFrameComponent } from '../../component/SelectionFrameComponent'\nimport { BubblesCfg } from '../../../cfg/BubblesCfg'\nimport { EntityManager } from '../../EntityManager'\nimport { SelectionChanged } from '../../../event/LocalEvents'\nimport { RAIDER_SCARE_RANGE, RaiderScareComponent } from '../../component/RaiderScareComponent'\nimport { MaterialSpawner } from '../../factory/MaterialSpawner'\nimport { JOB_STATE } from './JobState'\nimport { GameConfig } from '../../../cfg/GameConfig'\nimport { EventBroker } from '../../../event/EventBroker'\nimport { Vector2 } from 'three'\nimport { PRIORITY_IDENTIFIER } from './PriorityIdentifier'\nimport { GameState } from '../GameState'\n\nexport class CarryJob extends Job {\n    fulfiller?: JobFulfiller\n    target?: PathTarget\n\n    constructor(readonly carryItem: MaterialEntity) {\n        super()\n        this.requiredTraining = this.carryItem.requiredTraining\n        this.priorityIdentifier = this.carryItem.priorityIdentifier\n        this.workSoundRaider = 'SFX_Place'\n        const carriedEntityType = this.carryItem.entityType\n        if (carriedEntityType === EntityType.ORE || carriedEntityType === EntityType.BRICK) {\n            this.workSoundRaider = 'SFX_PlaceOre'\n        } else if (carriedEntityType === EntityType.CRYSTAL) {\n            this.workSoundRaider = 'SFX_PlaceCrystal'\n        }\n    }\n\n    getWorkplace(entity: JobFulfiller): PathTarget | undefined {\n        if (!this.target ||\n            (this.target.building && !this.target.building.isPowered()) ||\n            (this.target.site && (this.target.site.complete || this.target.site.canceled)) ||\n            (this.carryItem.targetSurface && this.carryItem.targetSurface.dynamiteJob !== this) ||\n            (!this.target.site && !this.carryItem.targetSurface && this.findReachableBuildingSiteWithNeed(this.carryItem.worldMgr.entityMgr, this.carryItem, entity).length > 0) ||\n            !entity.findShortestPath(this.target)\n        ) { // find new target workplace\n            if (this.target?.site) this.target.site.unAssign(this.carryItem)\n            this.target = entity.findShortestPath(this.findWorkplaces(entity))?.target\n            if (this.target?.site) this.target.site.assign(this.carryItem)\n        }\n        this.priorityIdentifier = this.target?.site ? PRIORITY_IDENTIFIER.construction : this.carryItem.priorityIdentifier\n        return this.target\n    }\n\n    private findWorkplaces(entity: JobFulfiller): PathTarget[] {\n        const carryItem = this.carryItem\n        const entityMgr = carryItem.worldMgr.entityMgr\n        switch (carryItem.entityType) {\n            case EntityType.ORE:\n                if (GameState.priorityList.isEnabled(PRIORITY_IDENTIFIER.construction)) {\n                    const oreSites = this.findReachableBuildingSiteWithNeed(entityMgr, carryItem, entity)\n                    if (oreSites.length > 0) return oreSites\n                }\n                if (GameState.priorityList.isEnabled(PRIORITY_IDENTIFIER.ore)) {\n                    const oreRefineries = this.findReachableBuilding(entityMgr, EntityType.ORE_REFINERY, entity)\n                    if (oreRefineries.length > 0) return oreRefineries\n                    return this.findReachableBuilding(entityMgr, EntityType.TOOLSTATION, entity)\n                }\n                return []\n            case EntityType.CRYSTAL:\n                if (GameState.priorityList.isEnabled(PRIORITY_IDENTIFIER.construction)) {\n                    const crystalSites = this.findReachableBuildingSiteWithNeed(entityMgr, carryItem, entity)\n                    if (crystalSites.length > 0) return crystalSites\n                }\n                if (GameState.priorityList.isEnabled(PRIORITY_IDENTIFIER.crystal)) {\n                    const powerStations = this.findReachableBuilding(entityMgr, EntityType.POWER_STATION, entity)\n                    if (powerStations.length > 0) return powerStations\n                    return this.findReachableBuilding(entityMgr, EntityType.TOOLSTATION, entity)\n                }\n                return []\n            case EntityType.DEPLETED_CRYSTAL:\n                return this.carryItem.worldMgr.sceneMgr.terrain.rechargeSeams\n                    .flatMap((s) => s.getDigPositions()\n                        .map((p) => PathTarget.fromLocation(p, 1, s.getCenterWorld2D()))\n                    )\n            case EntityType.BRICK:\n                const sites = this.findReachableBuildingSiteWithNeed(entityMgr, carryItem, entity)\n                if (sites.length > 0) return sites\n                return this.findReachableBuilding(entityMgr, EntityType.TOOLSTATION, entity)\n            case EntityType.BARRIER:\n                if (!carryItem.targetSite || carryItem.targetSite.complete || carryItem.targetSite.canceled) {\n                    return this.findReachableBuilding(entityMgr, EntityType.TOOLSTATION, entity)\n                } else if (carryItem.location) {\n                    const targetCenter = carryItem.worldMgr.sceneMgr.terrain.getSurfaceFromWorld2D(carryItem.location).getCenterWorld2D()\n                    const focusPoint = carryItem.location.clone().add(new Vector2().copy(carryItem.location).sub(targetCenter))\n                    return [PathTarget.fromSite(carryItem.targetSite, carryItem.location, focusPoint)].filter((p) => !!entity.findShortestPath(p))\n                } else {\n                    console.warn(`Could not find workplace for barrier; neither target site (${carryItem.targetSite}}) nor location (${carryItem.location}) given`)\n                    return []\n                }\n            case EntityType.DYNAMITE:\n                if (carryItem.targetSurface?.isDigable() && carryItem.targetSurface?.dynamiteJob === this) {\n                    const pickupRadius = carryItem.worldMgr.ecs.getComponents(carryItem.entity).get(SceneSelectionComponent)?.stats.pickSphere || 1\n                    return carryItem.targetSurface.getDigPositions()\n                        .map((p) => PathTarget.fromLocation(p, pickupRadius * pickupRadius))\n                        .filter((p) => !!entity.findShortestPath(p))\n                } else {\n                    return this.findReachableBuilding(entityMgr, EntityType.TOOLSTATION, entity)\n                }\n            case EntityType.ELECTRIC_FENCE:\n                if (!carryItem.targetSurface?.isWalkable()) {\n                    return this.findReachableBuilding(entityMgr, EntityType.TOOLSTATION, entity)\n                } else {\n                    return [PathTarget.fromLocation(carryItem.targetSurface.getCenterWorld2D(), 25)].filter((p) => !!entity.findShortestPath(p))\n                }\n        }\n    }\n\n    private findReachableBuildingSiteWithNeed(entityMgr: EntityManager, carryItem: MaterialEntity, entity: JobFulfiller) {\n        return entityMgr.buildingSites\n            .filter((b) => b.needs(carryItem.entityType))\n            .map((s) => PathTarget.fromSite(s, s.getRandomDropPosition(), undefined))\n            .filter((p) => !!entity.findShortestPath(p))\n    }\n\n    private findReachableBuilding(entityMgr: EntityManager, buildingType: EntityType, entity: JobFulfiller) {\n        return entityMgr.getBuildingCarryPathTargets(buildingType).filter((p) => !!entity.findShortestPath(p))\n    }\n\n    getWorkActivity(): AnimationActivity {\n        if (this.fulfiller?.entityType === EntityType.PILOT) {\n            if (this.carryItem.entityType === EntityType.DEPLETED_CRYSTAL) return RAIDER_ACTIVITY.recharge\n            const building = this.target?.building?.entityType\n            return building === EntityType.POWER_STATION || building === EntityType.ORE_REFINERY ? RAIDER_ACTIVITY.deposit : RAIDER_ACTIVITY.place\n        }\n        return ANIM_ENTITY_ACTIVITY.stand\n    }\n\n    isReadyToComplete(): boolean {\n        if (!this.target) return false\n        if (this.target.building?.entityType === EntityType.POWER_STATION || this.target.building?.entityType === EntityType.ORE_REFINERY) {\n            return this.target.building.sceneEntity.currentAnimation === (this.target.building.isPowered() ? BUILDING_ACTIVITY.stand : BUILDING_ACTIVITY.unpowered)\n        }\n        return true\n    }\n\n    onJobComplete(fulfiller: JobFulfiller): void {\n        super.onJobComplete(fulfiller)\n        const dropped = this.fulfiller?.dropCarried(false) || []\n        dropped.forEach((droppedItem) => {\n            if (droppedItem.carryJob) droppedItem.carryJob.jobState = JOB_STATE.complete\n            if (this.target) droppedItem.setPosition(droppedItem.worldMgr.sceneMgr.getFloorPosition(this.target.targetLocation))\n            const targetBuilding = this.target?.building\n            if (targetBuilding) {\n                if (targetBuilding.entityType === EntityType.POWER_STATION || targetBuilding.entityType === EntityType.ORE_REFINERY) {\n                    targetBuilding.pickupItem(droppedItem)\n                    if (targetBuilding.sceneEntity.carriedByIndex.size >= targetBuilding.getMaxCarry()) {\n                        targetBuilding.sceneEntity.setAnimation(BUILDING_ACTIVITY.deposit, () => {\n                            targetBuilding.sceneEntity.setAnimation(targetBuilding.isPowered() ? BUILDING_ACTIVITY.stand : BUILDING_ACTIVITY.unpowered)\n                            targetBuilding.sceneEntity.removeAllCarried()\n                            targetBuilding.depositItems()\n                        })\n                    }\n                } else {\n                    droppedItem.worldMgr.depositItem(droppedItem)\n                    droppedItem.disposeFromWorld()\n                }\n            } else if (droppedItem.entityType === EntityType.DEPLETED_CRYSTAL) {\n                droppedItem.disposeFromWorld()\n                const material = MaterialSpawner.spawnMaterial(droppedItem.worldMgr, EntityType.CRYSTAL, droppedItem.getPosition2D())\n                if (material.carryJob) {\n                    const raider = fulfiller as Raider // XXX refactor type safety for jobs\n                    raider.setJob(material.carryJob)\n                    raider.carries = material\n                    raider.sceneEntity.pickupEntity(material.sceneEntity)\n                }\n            } else if (droppedItem.entityType === EntityType.ELECTRIC_FENCE) {\n                droppedItem.worldMgr.entityMgr.removeEntity(droppedItem.entity)\n                if (droppedItem.targetSurface) {\n                    droppedItem.worldMgr.sceneMgr.addSceneEntity(droppedItem.sceneEntity)\n                    droppedItem.sceneEntity.rotation.set(0, 0, 0)\n                    const pickSphere = droppedItem.worldMgr.ecs.getComponents(droppedItem.entity).get(SceneSelectionComponent).pickSphere\n                    const stats = GameConfig.instance.stats.electricFence\n                    droppedItem.worldMgr.ecs.addComponent(droppedItem.entity, new SelectionFrameComponent(pickSphere, stats))\n                    droppedItem.targetSurface.fence = droppedItem.entity\n                    droppedItem.targetSurface.fenceRequested = false\n                    droppedItem.worldMgr.entityMgr.placedFences.add(droppedItem)\n                    const neighborsFence = droppedItem.targetSurface.neighborsFence\n                    if (neighborsFence.some((s) => s.selected)) EventBroker.publish(new SelectionChanged(droppedItem.worldMgr.entityMgr))\n                } else {\n                    console.warn('Cannot place electric fence without given target surface')\n                }\n            } else if (droppedItem.entityType === EntityType.DYNAMITE) {\n                if (droppedItem.targetSurface?.dynamiteJob === this) this.igniteDynamite()\n            } else {\n                droppedItem.sceneEntity.addToScene(droppedItem.worldMgr.sceneMgr, undefined, undefined)\n                if (droppedItem.entityType === EntityType.BARRIER) {\n                    droppedItem.sceneEntity.setAnimation(BARRIER_ACTIVITY.expand, () => droppedItem.sceneEntity.setAnimation(BARRIER_ACTIVITY.long))\n                    droppedItem.sceneEntity.lookAt(droppedItem.getSurface().getCenterWorld())\n                }\n                this.target?.site?.addItem(droppedItem)\n            }\n        })\n    }\n\n    private igniteDynamite() {\n        this.carryItem.worldMgr.ecs.addComponent(this.carryItem.entity, new RaiderScareComponent(RAIDER_SCARE_RANGE.dynamite))\n        const targetSurface = this.carryItem.targetSurface\n        if (targetSurface) this.carryItem.sceneEntity.headTowards(targetSurface.getCenterWorld2D())\n        this.carryItem.sceneEntity.setAnimation(DYNAMITE_ACTIVITY.tickDown, () => {\n            this.carryItem.worldMgr.ecs.removeComponent(this.carryItem.entity, RaiderScareComponent)\n            targetSurface?.collapse()\n            this.carryItem.worldMgr.sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.explosion, this.carryItem.getPosition(), this.carryItem.sceneEntity.heading, false)\n            EventBroker.publish(new DynamiteExplosionEvent(this.carryItem.getPosition2D()))\n            this.carryItem.disposeFromWorld()\n        })\n    }\n\n    assign(fulfiller: JobFulfiller) {\n        if (this.fulfiller !== fulfiller) this.fulfiller?.stopJob()\n        this.fulfiller = fulfiller\n    }\n\n    unAssign(fulfiller: JobFulfiller) {\n        if (this.fulfiller !== fulfiller) return\n        this.fulfiller = undefined\n    }\n\n    hasFulfiller(): boolean {\n        return !!this.fulfiller\n    }\n\n    getJobBubble(): keyof BubblesCfg {\n        switch (this.carryItem.entityType) {\n            case EntityType.ORE:\n            case EntityType.BRICK:\n                return 'bubbleCarryOre'\n            case EntityType.CRYSTAL:\n                return 'bubbleCarryCrystal'\n            case EntityType.DEPLETED_CRYSTAL:\n                return 'bubbleRecharge'\n            case EntityType.DYNAMITE:\n                return 'bubbleCarryDynamite'\n            case EntityType.BARRIER:\n                return 'bubbleCarryBarrier'\n            case EntityType.ELECTRIC_FENCE:\n                return 'bubbleCarryElecFence'\n        }\n    }\n}\n","import { JobCreateEvent } from '../../../event/WorldEvents'\nimport { WorldManager } from '../../WorldManager'\nimport { CarryJob } from '../job/CarryJob'\nimport { JOB_STATE } from '../job/JobState'\nimport { GameEntity } from '../../ECS'\nimport { Surface } from '../../terrain/Surface'\nimport { BuildingSite } from '../building/BuildingSite'\nimport { MaterialEntityType } from '../EntityType'\nimport { AnimatedSceneEntity } from '../../../scene/AnimatedSceneEntity'\nimport { PRIORITY_IDENTIFIER, PriorityIdentifier } from '../job/PriorityIdentifier'\nimport { RAIDER_TRAINING, RaiderTraining } from '../raider/RaiderTraining'\nimport { Vector2, Vector3 } from 'three'\nimport { PositionComponent } from '../../component/PositionComponent'\nimport { UpdateRadarEntityEvent } from '../../../event/LocalEvents'\nimport { MAP_MARKER_CHANGE, MAP_MARKER_TYPE, MapMarkerComponent } from '../../component/MapMarkerComponent'\nimport { EventBroker } from '../../../event/EventBroker'\n\nexport class MaterialEntity {\n    entity: GameEntity\n    carryJob?: CarryJob\n    sceneEntity: AnimatedSceneEntity\n    priorityIdentifier: PriorityIdentifier = PRIORITY_IDENTIFIER.none\n    requiredTraining: RaiderTraining = RAIDER_TRAINING.none\n\n    constructor(\n        readonly worldMgr: WorldManager,\n        readonly entityType: MaterialEntityType,\n        readonly targetSurface: Surface | undefined,\n        readonly targetSite: BuildingSite | undefined,\n        readonly location: Vector2 | undefined,\n    ) {\n        this.entity = this.worldMgr.ecs.addEntity()\n        this.sceneEntity = new AnimatedSceneEntity()\n    }\n\n    setupCarryJob(): CarryJob {\n        if (this.carryJob?.jobState !== JOB_STATE.incomplete) {\n            this.carryJob = new CarryJob(this)\n            EventBroker.publish(new JobCreateEvent(this.carryJob))\n        }\n        return this.carryJob\n    }\n\n    disposeFromWorld() {\n        if (this.carryJob) this.carryJob.jobState = JOB_STATE.canceled\n        this.worldMgr.ecs.removeComponent(this.entity, MapMarkerComponent)\n        EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.material, this.entity, MAP_MARKER_CHANGE.remove))\n        this.worldMgr.sceneMgr.disposeSceneEntity(this.sceneEntity)\n        this.worldMgr.entityMgr.removeEntity(this.entity)\n        this.worldMgr.ecs.removeEntity(this.entity)\n    }\n\n    getPosition(): Vector3 {\n        return this.sceneEntity.position.clone()\n    }\n\n    getPosition2D(): Vector2 {\n        return this.sceneEntity.position2D\n    }\n\n    setPosition(position: Vector3) {\n        this.sceneEntity.position.copy(position)\n        const surface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld(position)\n        this.sceneEntity.visible = surface.discovered\n        const positionComponent = this.worldMgr.ecs.getComponents(this.entity).get(PositionComponent)\n        if (positionComponent) {\n            positionComponent.position.copy(position)\n            positionComponent.surface = surface\n            positionComponent.markDirty()\n            this.sceneEntity.position.y += positionComponent.floorOffset\n        }\n    }\n\n    getSurface(): Surface {\n        return this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld(this.getPosition())\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { Raider } from '../model/raider/Raider'\nimport { BuildingEntity } from '../model/building/BuildingEntity'\nimport { MaterialEntity } from '../model/material/MaterialEntity'\nimport { VehicleEntity } from '../model/vehicle/VehicleEntity'\nimport { GameConfig } from '../../cfg/GameConfig'\n\nexport class BeamUpComponent extends AbstractGameComponent {\n    constructor(readonly entity: Raider | VehicleEntity | BuildingEntity | MaterialEntity) {\n        super()\n        this.entity.worldMgr.sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.miniTeleportUp, this.entity.getPosition(), this.entity.sceneEntity.heading, false)\n        if (this.entity.worldMgr.sceneMgr.birdViewControls.lockedObject === entity.sceneEntity) this.entity.worldMgr.sceneMgr.birdViewControls.unlockCamera()\n    }\n}\n","import { createContext, createDummyImgData, getPixel, setPixel } from './ImageHelper'\nimport { SpriteImage } from './Sprite'\n\nexport class BitmapFontData {\n    readonly charCodeMap: Map<number, ImageData> = new Map()\n    readonly alphaColor: { r: number, g: number, b: number }\n    readonly spaceWidth: number\n\n    constructor(fontImageData: ImageData, readonly charHeight: number) {\n        if (!fontImageData) throw new Error('No font image data given')\n        if (charHeight < 1) throw new Error(`Invalid char height (${charHeight}) given`)\n        const cols = 10, rows = Math.floor(fontImageData.height / charHeight)\n        // XXX find better way to detect char dimensions\n        const maxCharWidth = fontImageData.width / cols\n        this.alphaColor = getPixel(fontImageData, 0, 0)\n\n        function isLimiterColor(imgData: ImageData, index: number): boolean {\n            // Last pixel in the first row of the first char defines the end of char limiter color (e.g. 255,39,0),\n            // because tooltipfont.bmp uses alphaColor at the end of the file\n            return imgData.data[index] === fontImageData.data[(maxCharWidth - 1) * 4]\n                && imgData.data[index + 1] === fontImageData.data[(maxCharWidth - 1) * 4 + 1]\n                && imgData.data[index + 2] === fontImageData.data[(maxCharWidth - 1) * 4 + 2]\n        }\n\n        function getActualCharacterWidth(imgData: ImageData) {\n            for (let y = 0; y < imgData.height; y++) {\n                if (isLimiterColor(imgData, y * 4 * imgData.width)) continue // find non-empty row first\n                for (let x = 0; x < maxCharWidth; x++) {\n                    if (isLimiterColor(imgData, y * 4 * imgData.width + x * 4)) return x\n                }\n                return maxCharWidth\n            }\n            return imgData.width\n        }\n\n        for (let i = 0; i < cols * rows; i++) {\n            let imgData = this.extractData(fontImageData, (i % 10) * maxCharWidth, Math.floor(i / 10) * this.charHeight, maxCharWidth)\n            const actualWidth = getActualCharacterWidth(imgData)\n            if (actualWidth > 0) {\n                imgData = this.extractData(imgData, 0, 0, actualWidth)\n            } else {\n                console.warn(`Could not determine actual character width for '${i}'. Adding dummy sprite to letter map`)\n                imgData = createDummyImgData(maxCharWidth, this.charHeight)\n            }\n            this.charCodeMap.set(i + 32, imgData) // Config files use custom encoding with offset (32) to bitmap fonts index\n        }\n\n        this.spaceWidth = this.charCodeMap.get(' '.charCodeAt(0))?.width || 10\n    }\n\n    extractData(imgData: ImageData, startX: number, startY: number, width: number): ImageData {\n        const result = new ImageData(width, this.charHeight)\n        for (let x = 0; x < width; x++) {\n            for (let y = 0; y < this.charHeight; y++) {\n                const p = getPixel(imgData, startX + x, startY + y)\n                if (p.r === this.alphaColor.r && p.g === this.alphaColor.g && p.b === this.alphaColor.b) p.a = 0 // apply alpha channel\n                setPixel(result, x, y, p.r, p.g, p.b, p.a)\n            }\n        }\n        return result\n    }\n}\n\nexport class BitmapFont {\n    constructor(readonly data: BitmapFontData) {\n    }\n\n    createTextImageData(text: string, maxWidth?: number, autoCenter: boolean = true): ImageData | undefined {\n        if (!text) return undefined\n        text = text.replace(/_/g, ' ') // TODO All underscores should be replaced in config parsing\n        const rows = this.determineRows(text, maxWidth)\n        const width = Math.max(1, ...(rows.map(r => r.width)))\n        const result = new ImageData(width, this.data.charHeight * (rows.length || 1))\n        rows.forEach((row, index) => {\n            const rowX = autoCenter ? Math.round((width - row.width) / 2) : 0\n            const rowY = index * this.data.charHeight\n            let letterX = 0\n            for (let c = 0; c < row.text.length; c++) {\n                const letterImgData = this.data.charCodeMap.get(row.text.charCodeAt(c))\n                if (letterImgData) {\n                    for (let x = letterX; x < letterX + letterImgData.width; x++) {\n                        for (let y = 0; y < letterImgData.height; y++) {\n                            const p = getPixel(letterImgData, x - letterX, y)\n                            setPixel(result, rowX + x, rowY + y, p.r, p.g, p.b, p.a)\n                        }\n                    }\n                    letterX += letterImgData.width\n                } // missing letter issue already reported above\n            }\n        })\n        return result\n    }\n\n    createTextImage(text: string, maxWidth?: number, autoCenter: boolean = true): SpriteImage | undefined {\n        if (!text) return undefined\n        const result = this.createTextImageData(text, maxWidth, autoCenter)\n        if (!result) return undefined\n        const img = createContext(result.width, result.height)\n        img.putImageData(result, 0, 0)\n        return img.canvas\n    }\n\n    private determineRows(text: string, maxWidth?: number): { text: string, width: number }[] {\n        const rows: { text: string, width: number }[] = []\n        let rowText = ''\n        let rowWidth = 0\n        text.replaceAll('\\t', '    ').split(' ').forEach((word) => {\n            let wordWidth = 0\n            for (let c = 0; c < word.length; c++) {\n                const charCode = word.charCodeAt(c)\n                const letterImg = this.data.charCodeMap.get(charCode)\n                if (letterImg) {\n                    wordWidth += letterImg.width\n                } else {\n                    const letter = word.charAt(c)\n                    if (charCode !== 13) { // ignore carriage return\n                        console.error(`Ignoring letter '${letter}' (${charCode}) of word \"${text}\" not found in charset of size ${this.data.charCodeMap.size}!`)\n                    }\n                }\n            }\n            if (rowWidth > 0) {\n                if (!maxWidth || rowWidth + this.data.spaceWidth + wordWidth < maxWidth) {\n                    rowText += ` ${word}`\n                    rowWidth += this.data.spaceWidth + wordWidth\n                } else {\n                    rows.push({text: rowText, width: rowWidth})\n                    rowText = word\n                    rowWidth = wordWidth\n                }\n            } else {\n                rowText += word\n                rowWidth += wordWidth\n            }\n        })\n        if (rowWidth > 0) rows.push({text: rowText, width: rowWidth})\n        return rows\n    }\n}\n","import { AbstractWorkerSystem } from './AbstractWorkerSystem'\nimport { BitmapFont, BitmapFontData } from '../core/BitmapFont'\nimport { TypedWorkerThreaded } from './TypedWorker'\n\nexport const BITMAP_FONT_WORKER_REQUEST_TYPE = {\n    addFont: 1, // start with 1 for truthiness safety\n    createTextImage: 2,\n} as const\ntype BitmapFontWorkerRequestType = typeof BITMAP_FONT_WORKER_REQUEST_TYPE[keyof typeof BITMAP_FONT_WORKER_REQUEST_TYPE]\n\nexport interface BitmapFontWorkerRequest {\n    type: BitmapFontWorkerRequestType\n    fontName: string\n    fontData?: BitmapFontData\n    text?: string\n    maxWidth?: number\n    autoCenter?: boolean\n}\n\nexport interface BitmapFontWorkerResponse {\n    textImageData?: ImageData\n}\n\nexport class BitmapFontSystem extends AbstractWorkerSystem<BitmapFontWorkerRequest, BitmapFontWorkerResponse> {\n    private readonly fontCache: Map<string, BitmapFont> = new Map()\n\n    onMessageFromFrontend(workerRequestHash: string, request: BitmapFontWorkerRequest) {\n        if (!request.fontName) {\n            console.error(`No fontname given for '${request.text}'`)\n            this.sendResponse(workerRequestHash, {textImageData: undefined})\n            return\n        }\n        switch (request.type) {\n            case BITMAP_FONT_WORKER_REQUEST_TYPE.addFont:\n                if (!request.fontData) {\n                    console.error(`No font data given for '${request.fontName}'`)\n                    this.sendResponse(workerRequestHash, {textImageData: undefined})\n                    return\n                }\n                this.fontCache.set(request.fontName.toLowerCase(), new BitmapFont(request.fontData))\n                this.sendResponse(workerRequestHash, {textImageData: undefined})\n                break\n            case BITMAP_FONT_WORKER_REQUEST_TYPE.createTextImage:\n                if (!request.text) {\n                    console.error(`No text given for '${request.fontName}'`)\n                    this.sendResponse(workerRequestHash, {textImageData: undefined})\n                    return\n                }\n                const font = this.fontCache.get(request.fontName.toLowerCase())\n                if (!font) {\n                    console.error(`Unknown font '${request.fontName}' for '${request.text}'. Possible options are: ${Array.from(this.fontCache.keys())}`)\n                    this.sendResponse(workerRequestHash, {textImageData: undefined})\n                    return\n                }\n                const textImageData = font.createTextImageData(request.text, request.maxWidth, request.autoCenter)\n                this.sendResponse(workerRequestHash, {textImageData: textImageData})\n                break\n        }\n    }\n}\n\nconst worker: Worker = self as any\nnew BitmapFontSystem(new TypedWorkerThreaded(worker))\n","import { AbstractWorkerPool } from './AbstractWorkerPool'\nimport { TypedWorkerFallback, WorkerRequestMessage, WorkerResponseMessage } from './TypedWorker'\nimport { BITMAP_FONT_WORKER_REQUEST_TYPE, BitmapFontSystem, BitmapFontWorkerRequest, BitmapFontWorkerResponse } from './BitmapFontWorker'\nimport { SpriteImage } from '../core/Sprite'\nimport { imgDataToCanvas } from '../core/ImageHelper'\nimport { BitmapFontData } from '../core/BitmapFont'\n\nexport class BitmapFontWorkerPool extends AbstractWorkerPool<BitmapFontWorkerRequest, BitmapFontWorkerResponse> {\n    static readonly instance = new BitmapFontWorkerPool()\n\n    readonly knownFonts: Map<string, BitmapFontData> = new Map()\n\n    setupPool(fontName: string, fontData: BitmapFontData) {\n        this.startPool(4, {\n            type: BITMAP_FONT_WORKER_REQUEST_TYPE.addFont,\n            fontName: fontName,\n            fontData: fontData,\n        })\n    }\n\n    async addFont(fontName: string, fontData: BitmapFontData): Promise<void> {\n        if (this.knownFonts.has(fontName.toLowerCase())) {\n            console.warn(`Font ${fontName} already known in pool`)\n            return\n        }\n        this.knownFonts.set(fontName.toLowerCase(), fontData)\n        const message = {type: BITMAP_FONT_WORKER_REQUEST_TYPE.addFont, fontName: fontName, fontData: fontData}\n        await Promise.all(this.broadcast(message))\n    }\n\n    async createTextImage(fontName: string | undefined, text: string | undefined, maxWidth?: number, autoCenter: boolean = true): Promise<SpriteImage | undefined> {\n        if (!fontName || !text) return undefined\n        const message = {type: BITMAP_FONT_WORKER_REQUEST_TYPE.createTextImage, fontName: fontName, text: text, maxWidth: maxWidth, autoCenter: autoCenter}\n        const response = await this.processMessage(message)\n        if (!response.textImageData) return undefined\n        return imgDataToCanvas(response.textImageData)\n    }\n\n    getFontHeight(fontName: string): number {\n        return this.knownFonts.get(fontName.toLowerCase())?.charHeight ?? 1\n    }\n\n    protected createWorker() {\n        return new Worker(new URL('./BitmapFontWorker', import.meta.url), {type: 'module'}) // do not change this line otherwise no worker.js is exported for production\n    }\n\n    protected attachFallbackSystem(worker: TypedWorkerFallback<WorkerRequestMessage<BitmapFontWorkerRequest>, WorkerResponseMessage<BitmapFontWorkerResponse>>) {\n        new BitmapFontSystem(worker)\n    }\n}\n","import { SpriteImage } from '../core/Sprite'\nimport { BitmapFontWorkerPool } from '../worker/BitmapFontWorkerPool'\nimport { TOOLTIP_FONT_NAME } from '../params'\nimport { RaiderTool, RaiderTools } from '../game/model/raider/RaiderTool'\nimport { RaiderTraining, RaiderTrainings } from '../game/model/raider/RaiderTraining'\nimport { createContext } from '../core/ImageHelper'\nimport { ResourceManager } from './ResourceManager'\nimport { GameConfig } from '../cfg/GameConfig'\n\nexport class TooltipSpriteBuilder {\n    static async getTooltipSprite(tooltipText: string, energy: number): Promise<SpriteImage> {\n        if (tooltipText.toLowerCase().startsWith('tooltip')) {\n            console.error(`Found key instead of tooltip text ${tooltipText}`)\n        }\n        const requests: Promise<SpriteImage | undefined>[] = [BitmapFontWorkerPool.instance.createTextImage(TOOLTIP_FONT_NAME, tooltipText)]\n        if (energy) {\n            requests.add(BitmapFontWorkerPool.instance.createTextImage(TOOLTIP_FONT_NAME, `${GameConfig.instance.toolTipInfo['energytext']}: ${Math.round(energy)}`))\n        }\n        const tooltipTextImages = await Promise.all(requests)\n        return this.wrapTooltipSprite(...tooltipTextImages.map((s) => [s]))\n    }\n\n    static async getRaiderTooltipSprite(tooltipText: string, numToolSlots: number, tools: RaiderTool[], trainings: RaiderTraining[]): Promise<SpriteImage> {\n        const tooltipTextImage = await BitmapFontWorkerPool.instance.createTextImage(TOOLTIP_FONT_NAME, tooltipText)\n        const toolIcons = tools.map((t) => {\n            return ResourceManager.getImage(GameConfig.instance.tooltipIcons[RaiderTools.toToolTipIconName(t)])\n        })\n        for (let c = toolIcons.length; c < numToolSlots; c++) {\n            toolIcons.push(ResourceManager.getImage(GameConfig.instance.tooltipIcons['blank']))\n        }\n        const trainingIcons = trainings.map((t) => {\n            return ResourceManager.getImage(GameConfig.instance.tooltipIcons[RaiderTrainings.toToolTipIconName(t)])\n        })\n        return this.wrapTooltipSprite([tooltipTextImage], toolIcons, trainingIcons)\n    }\n\n    static async getBuildingSiteTooltipSprite(tooltipText: string, crystals: { actual: number, needed: number }, ores: { actual: number, needed: number }, bricks: { actual: number, needed: number }): Promise<SpriteImage> {\n        const tooltipTextImage = await BitmapFontWorkerPool.instance.createTextImage(TOOLTIP_FONT_NAME, tooltipText)\n        const crystalsTextImage = crystals?.needed ? [await BitmapFontWorkerPool.instance.createTextImage(TOOLTIP_FONT_NAME, `${GameConfig.instance.objectNames['powercrystal']}: ${crystals.actual}/${crystals.needed}`)] : []\n        const oresTextImage = ores?.needed ? [await BitmapFontWorkerPool.instance.createTextImage(TOOLTIP_FONT_NAME, `${GameConfig.instance.objectNames['ore']}: ${ores.actual}/${ores.needed}`)] : []\n        const bricksTextImage = bricks?.needed ? [await BitmapFontWorkerPool.instance.createTextImage(TOOLTIP_FONT_NAME, `${GameConfig.instance.objectNames['processedore']}: ${bricks.actual}/${bricks.needed}`)] : []\n        return this.wrapTooltipSprite([tooltipTextImage], crystalsTextImage, oresTextImage, bricksTextImage)\n    }\n\n    static async getBuildingMissingOreForUpgradeTooltipSprite(buildingMissingOreForUpgrade: number): Promise<SpriteImage> {\n        const tooltipTextImage = await BitmapFontWorkerPool.instance.createTextImage(TOOLTIP_FONT_NAME, GameConfig.instance.toolTipInfo['orerequiredtext'])\n        const oresTextImage = []\n        const oreImg = ResourceManager.getImage(GameConfig.instance.tooltipIcons['ore'])\n        for (let c = 0; c < buildingMissingOreForUpgrade; c++) {\n            oresTextImage.push(oreImg)\n        }\n        return this.wrapTooltipSprite([tooltipTextImage], oresTextImage)\n    }\n\n    static wrapTooltipSprite(...rowsThenCols: (SpriteImage | undefined)[][]): SpriteImage {\n        const margin = 2\n        const padding = 2\n        const [contentWidth, contentHeight] = this.getTooltipContentSize(rowsThenCols)\n        const context = createContext(contentWidth + 2 * margin + 2 * padding, contentHeight + 2 * margin + 2 * padding)\n        context.fillStyle = '#004000' // 000:064:000 // XXX derive from ToolTipRGB from config\n        context.fillRect(0, 0, context.canvas.width, context.canvas.height)\n        context.fillStyle = '#188418' // 024:132:024 // XXX derive from ToolTipRGB from config\n        context.fillRect(0, 0, context.canvas.width - margin, context.canvas.height - margin)\n        context.fillStyle = '#006400' // XXX read ToolTipRGB from config\n        context.fillRect(margin, margin, context.canvas.width - 2 * margin, context.canvas.height - 2 * margin)\n        let posY = margin + padding\n        for (const cols of rowsThenCols) {\n            let posX = 0\n            let maxHeight = 0\n            for (const img of cols) {\n                if (!img) continue\n                context.drawImage(img, margin + padding + posX, posY)\n                posX += img.width\n                maxHeight = Math.max(maxHeight, img.height)\n            }\n            posY += maxHeight\n        }\n        return context.canvas\n    }\n\n    private static getTooltipContentSize(rowsThenCols: (SpriteImage | undefined)[][]): number[] {\n        let contentWidth = 0\n        let contentHeight = 0\n        for (const cols of rowsThenCols) {\n            let rowWidth = 0\n            let maxHeight = 0\n            for (const img of cols) {\n                if (!img) continue\n                rowWidth += img.width\n                maxHeight = Math.max(maxHeight, img.height)\n            }\n            contentWidth = Math.max(contentWidth, rowWidth)\n            contentHeight += maxHeight\n        }\n        return [contentWidth, contentHeight]\n    }\n}\n","import { EntityType } from '../game/model/EntityType'\nimport { RaiderTool } from '../game/model/raider/RaiderTool'\nimport { RaiderTraining } from '../game/model/raider/RaiderTraining'\nimport { EventKey } from './EventKeyEnum'\nimport { VehicleUpgrade } from '../game/model/vehicle/VehicleUpgrade'\nimport { CameraRotation } from '../scene/BirdViewControls'\nimport { Vector2 } from 'three'\nimport { BaseEvent } from './EventTypeMap'\nimport { TooltipSpriteBuilder } from '../resource/TooltipSpriteBuilder'\nimport { SpriteImage } from '../core/Sprite'\n\nexport class ChangeTooltip extends BaseEvent {\n    readonly getTooltipTextImg: () => Promise<SpriteImage>\n    tooltipKey: string\n\n    constructor(\n        public tooltipText: string,\n        readonly timeoutText: number,\n        readonly tooltipSfx: string = '',\n        readonly timeoutSfx: number = 0,\n        callback: () => Promise<SpriteImage> = () => {\n            return TooltipSpriteBuilder.getTooltipSprite(this.tooltipText, 0)\n        },\n    ) {\n        super(EventKey.COMMAND_TOOLTIP_CHANGE)\n        this.tooltipKey = tooltipText\n        this.getTooltipTextImg = () => {\n            return callback()\n        }\n    }\n}\n\nexport class ForceRedrawTooltip extends BaseEvent {\n    tooltipKey: string\n\n    constructor(\n        public tooltipText: string,\n        readonly getTooltipTextImg: () => Promise<SpriteImage> = () => {\n            return TooltipSpriteBuilder.getTooltipSprite(this.tooltipText, 0)\n        },\n    ) {\n        super(EventKey.COMMAND_TOOLTIP_FORCE_REDRAW)\n        this.tooltipKey = tooltipText\n    }\n}\n\nexport class HideTooltip extends BaseEvent {\n    constructor(readonly tooltipText?: string) {\n        super(EventKey.COMMAND_TOOLTIP_HIDE)\n    }\n}\n\nexport class PlaySoundEvent extends BaseEvent {\n    constructor(readonly sample: string, readonly isVoice: boolean) {\n        super(EventKey.COMMAND_PLAY_SOUND)\n    }\n}\n\nexport class SelectBuildMode extends BaseEvent {\n    constructor(readonly entityType: EntityType) {\n        super(EventKey.COMMAND_SELECT_BUILD_MODE)\n    }\n}\n\nexport class PickTool extends BaseEvent {\n    constructor(readonly tool: RaiderTool) {\n        super(EventKey.COMMAND_PICK_TOOL)\n    }\n}\n\nexport class CreatePowerPath extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_CREATE_POWER_PATH)\n    }\n}\n\nexport class PlaceFence extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_PLACE_FENCE)\n    }\n}\n\nexport class MakeRubble extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_MAKE_RUBBLE)\n    }\n}\n\nexport class CreateClearRubbleJob extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_CREATE_CLEAR_RUBBLE_JOB)\n    }\n}\n\nexport class UpgradeBuilding extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_UPGRADE_BUILDING)\n    }\n}\n\nexport class BeamUpBuilding extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_BUILDING_BEAMUP)\n    }\n}\n\nexport class BeamUpFence extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_FENCE_BEAMUP)\n    }\n}\n\nexport class ChangeBuildingPowerState extends BaseEvent {\n    constructor(readonly state: boolean) {\n        super(EventKey.COMMAND_CHANGE_BUILDING_POWER_STATE)\n    }\n}\n\nexport class CreateDrillJob extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_CREATE_DRILL_JOB)\n    }\n}\n\nexport class CreateReinforceJob extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_CREATE_REINFORCE_JOB)\n    }\n}\n\nexport class CreateDynamiteJob extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_CREATE_DYNAMITE_JOB)\n    }\n}\n\nexport class CancelSurfaceJobs extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_CANCEL_SURFACE_JOBS)\n    }\n}\n\nexport class RaiderEat extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_RAIDER_EAT)\n    }\n}\n\nexport class RaiderDrop extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_RAIDER_DROP)\n    }\n}\n\nexport class RaiderUpgrade extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_RAIDER_UPGRADE)\n    }\n}\n\nexport class RaiderBeamUp extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_RAIDER_BEAMUP)\n    }\n}\n\nexport class TrainRaider extends BaseEvent {\n    constructor(readonly training: RaiderTraining) {\n        super(EventKey.COMMAND_TRAIN_RAIDER)\n    }\n}\n\nexport class CancelBuilding extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_CANCEL_CONSTRUCTION)\n    }\n}\n\nexport class VehicleCallMan extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_VEHICLE_GET_MAN)\n    }\n}\n\nexport class VehicleBeamUp extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_VEHICLE_BEAMUP)\n    }\n}\n\nexport class VehicleDriverGetOut extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_VEHICLE_DRIVER_GET_OUT)\n    }\n}\n\nexport class VehicleUnload extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_VEHICLE_UNLOAD)\n    }\n}\n\nexport class VehicleLoad extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_VEHICLE_LOAD)\n    }\n}\n\nexport class CameraControl extends BaseEvent {\n    constructor(\n        readonly args: {\n            zoom?: number,\n            cycleBuilding?: boolean,\n            rotationIndex?: CameraRotation,\n            jumpToWorld?: Vector2,\n        }\n    ) {\n        super(EventKey.COMMAND_CAMERA_CONTROL)\n    }\n}\n\nexport class RepairLava extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_REPAIR_LAVA)\n    }\n}\n\nexport class ChangePreferences extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_CHANGE_PREFERENCES)\n    }\n}\n\nexport class UpgradeVehicle extends BaseEvent {\n    constructor(readonly upgrade: VehicleUpgrade) {\n        super(EventKey.COMMAND_UPGRADE_VEHICLE)\n    }\n}\n\nexport class RepairBuilding extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_REPAIR_BUILDING)\n    }\n}\n\nexport class DropBirdScarer extends BaseEvent {\n    constructor() {\n        super(EventKey.COMMAND_DROP_BIRD_SCARER)\n    }\n}\n\nexport const CAMERA_VIEW_MODE = {\n    bird: 1,\n    fpv: 2,\n    shoulder: 3,\n} as const\nexport type CameraViewMode = typeof CAMERA_VIEW_MODE[keyof typeof CAMERA_VIEW_MODE]\n\nexport class ChangeCameraEvent extends BaseEvent {\n    constructor(readonly viewMode: CameraViewMode) {\n        super(EventKey.COMMAND_CAMERA_VIEW)\n    }\n}\n","import { AbstractGameComponent, GameEntity } from '../ECS'\nimport { SpriteImage } from '../../core/Sprite'\nimport { ChangeTooltip, ForceRedrawTooltip } from '../../event/GuiCommand'\nimport { TOOLTIP_DELAY_SFX, TOOLTIP_DELAY_TEXT_SCENE } from '../../params'\n\nexport class TooltipComponent extends AbstractGameComponent {\n    constructor(readonly entity: GameEntity, public tooltipText: string, public sfxKey: string, readonly getTextImg?: () => Promise<SpriteImage>) {\n        super()\n    }\n\n    createEvent(): ChangeTooltip {\n        const result = new ChangeTooltip(this.tooltipText, TOOLTIP_DELAY_TEXT_SCENE, this.sfxKey, TOOLTIP_DELAY_SFX, this.getTextImg)\n        result.tooltipKey = this.tooltipText + this.entity // change key to make it unique per entity\n        return result\n    }\n\n    createForceRedrawEvent(): ForceRedrawTooltip {\n        const result = new ForceRedrawTooltip(this.tooltipText, this.getTextImg)\n        result.tooltipKey = this.tooltipText + this.entity // change key to make it unique per entity\n        return result\n    }\n}\n","import { WorldManager } from '../WorldManager'\nimport { Vector2 } from 'three'\nimport { MaterialEntity } from '../model/material/MaterialEntity'\nimport { Surface } from '../terrain/Surface'\nimport { EntityType, MaterialEntityType } from '../model/EntityType'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { SceneSelectionComponent } from '../component/SceneSelectionComponent'\nimport { BuildingSite } from '../model/building/BuildingSite'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { BARRIER_ACTIVITY, DYNAMITE_ACTIVITY } from '../model/anim/AnimationActivity'\nimport { PRIORITY_IDENTIFIER } from '../model/job/PriorityIdentifier'\nimport { RAIDER_TRAINING } from '../model/raider/RaiderTraining'\nimport { HealthComponent } from '../component/HealthComponent'\nimport { LastWillComponent } from '../component/LastWillComponent'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { WorldLocationEvent } from '../../event/WorldEvents'\nimport { BeamUpComponent } from '../component/BeamUpComponent'\nimport { MAP_MARKER_CHANGE, MAP_MARKER_TYPE, MapMarkerComponent } from '../component/MapMarkerComponent'\nimport { UpdateRadarEntityEvent } from '../../event/LocalEvents'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { EventBroker } from '../../event/EventBroker'\nimport { TooltipComponent } from '../component/TooltipComponent'\nimport { TooltipSpriteBuilder } from '../../resource/TooltipSpriteBuilder'\nimport { GameEntity } from '../ECS'\n\nexport class MaterialSpawner {\n    static spawnMaterial(\n        worldMgr: WorldManager,\n        entityType: MaterialEntityType,\n        worldPos: Vector2,\n        headingRad?: number,\n        targetSurface?: Surface,\n        barrierLocation?: Vector2,\n        targetSite?: BuildingSite,\n    ): MaterialEntity {\n        const floorPosition = worldMgr.sceneMgr.getFloorPosition(worldPos)\n        const surface = worldMgr.sceneMgr.terrain.getSurfaceFromWorld2D(worldPos)\n        const material = new MaterialEntity(worldMgr, entityType, targetSurface, targetSite, barrierLocation)\n        worldMgr.ecs.addComponent(material.entity, new PositionComponent(floorPosition, surface))\n        switch (entityType) {\n            case EntityType.ORE:\n                const oreMesh = ResourceManager.getLwoModel(GameConfig.instance.miscObjects.ore)\n                if (!oreMesh) throw new Error(`Cannot spawn ore missing mesh \"${GameConfig.instance.miscObjects.ore}\"`)\n                material.sceneEntity.add(oreMesh)\n                worldMgr.ecs.addComponent(material.entity, new SceneSelectionComponent(material.sceneEntity, {gameEntity: material.entity, entityType: material.entityType}, GameConfig.instance.stats.ore))\n                // Do not set priority identifier before workplace\n                this.addTooltip(worldMgr, material.entity, material.entityType, () => 0)\n                break\n            case EntityType.BRICK:\n                const brickMesh = ResourceManager.getLwoModel(GameConfig.instance.miscObjects.processedOre)\n                if (!brickMesh) throw new Error(`Cannot spawn brick missing mesh \"${GameConfig.instance.miscObjects.processedOre}\"`)\n                material.sceneEntity.add(brickMesh)\n                worldMgr.ecs.addComponent(material.entity, new SceneSelectionComponent(material.sceneEntity, {gameEntity: material.entity, entityType: material.entityType}, GameConfig.instance.stats.processedOre))\n                // Do not set priority identifier before workplace\n                this.addTooltip(worldMgr, material.entity, material.entityType, () => 0)\n                break\n            case EntityType.CRYSTAL:\n                const energyCrystalMesh = ResourceManager.getLwoModel(GameConfig.instance.miscObjects.crystal)\n                if (!energyCrystalMesh) throw new Error(`Cannot spawn energy crystal missing mesh \"${GameConfig.instance.miscObjects.crystal}\"`)\n                energyCrystalMesh.material.forEach((m) => {\n                    m.color.fromArray(GameConfig.instance.main.powerCrystalRGB)\n                    m.emissive.fromArray(GameConfig.instance.main.powerCrystalRGB)\n                })\n                material.sceneEntity.add(energyCrystalMesh)\n                worldMgr.ecs.addComponent(material.entity, new SceneSelectionComponent(material.sceneEntity, {gameEntity: material.entity, entityType: material.entityType}, GameConfig.instance.stats.powerCrystal))\n                // Do not set priority identifier before workplace\n                this.addTooltip(worldMgr, material.entity, material.entityType, () => 0)\n                break\n            case EntityType.DEPLETED_CRYSTAL:\n                const depletedCrystalMesh = ResourceManager.getLwoModel(GameConfig.instance.miscObjects.crystal)\n                if (!depletedCrystalMesh) throw new Error(`Cannot spawn energy crystal missing mesh \"${GameConfig.instance.miscObjects.crystal}\"`)\n                depletedCrystalMesh.material.forEach((m) => {\n                    m.color.fromArray(GameConfig.instance.main.unpoweredCrystalRGB)\n                    m.emissive.fromArray(GameConfig.instance.main.unpoweredCrystalRGB)\n                })\n                material.sceneEntity.add(depletedCrystalMesh)\n                worldMgr.ecs.addComponent(material.entity, new SceneSelectionComponent(material.sceneEntity, {gameEntity: material.entity, entityType: material.entityType}, GameConfig.instance.stats.powerCrystal))\n                material.priorityIdentifier = PRIORITY_IDENTIFIER.recharge\n                this.addTooltip(worldMgr, material.entity, EntityType.CRYSTAL, () => 0)\n                break\n            case EntityType.BARRIER:\n                material.sceneEntity.addAnimated(ResourceManager.getAnimatedData(GameConfig.instance.miscObjects.barrier))\n                material.sceneEntity.setAnimation(BARRIER_ACTIVITY.short)\n                worldMgr.ecs.addComponent(material.entity, new SceneSelectionComponent(material.sceneEntity, {gameEntity: material.entity, entityType: material.entityType}, {pickSphere: 10, collRadius: 10, collHeight: 0})) // XXX find any constant for pick sphere?\n                material.priorityIdentifier = PRIORITY_IDENTIFIER.construction\n                break\n            case EntityType.DYNAMITE:\n                material.sceneEntity.addAnimated(ResourceManager.getAnimatedData(GameConfig.instance.miscObjects.dynamite))\n                material.sceneEntity.setAnimation(DYNAMITE_ACTIVITY.normal)\n                worldMgr.ecs.addComponent(material.entity, new SceneSelectionComponent(material.sceneEntity, {gameEntity: material.entity, entityType: material.entityType}, {pickSphere: 8, collRadius: 8, collHeight: 0})) // XXX find any constant for pick sphere?\n                material.priorityIdentifier = PRIORITY_IDENTIFIER.destruction\n                material.requiredTraining = RAIDER_TRAINING.demolition\n                break\n            case EntityType.ELECTRIC_FENCE:\n                const electricFenceMesh = ResourceManager.getLwoModel(GameConfig.instance.miscObjects.electricFence)\n                if (!electricFenceMesh) throw new Error(`Cannot spawn electric fence missing mesh \"${GameConfig.instance.miscObjects.electricFence}\"`)\n                material.sceneEntity.add(electricFenceMesh)\n                const statsFence = GameConfig.instance.stats.electricFence\n                worldMgr.ecs.addComponent(material.entity, new SceneSelectionComponent(material.sceneEntity, {gameEntity: material.entity, entityType: material.entityType}, statsFence))\n                material.priorityIdentifier = PRIORITY_IDENTIFIER.construction\n                const healthComponent = material.worldMgr.ecs.addComponent(material.entity, new HealthComponent(statsFence.damageCausesCallToArms, statsFence.collHeight, 10, material.sceneEntity, false, GameConfig.instance.getRockFallDamage(material.entityType, 0)))\n                material.worldMgr.sceneMgr.addSprite(healthComponent.healthBarSprite)\n                material.worldMgr.sceneMgr.addSprite(healthComponent.healthFontSprite)\n                material.worldMgr.ecs.addComponent(material.entity, new LastWillComponent(() => {\n                    EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_DEATH, material.worldMgr.ecs.getComponents(material.entity).get(PositionComponent)))\n                    material.worldMgr.entityMgr.removeEntity(material.entity)\n                    if (material.targetSurface) {\n                        material.targetSurface.fence = undefined\n                        material.targetSurface.fenceRequested = false\n                    }\n                    material.worldMgr.ecs.addComponent(material.entity, new BeamUpComponent(material))\n                }))\n                this.addTooltip(worldMgr, material.entity, material.entityType, () => healthComponent.health)\n                break\n        }\n        material.sceneEntity.addToScene(worldMgr.sceneMgr, worldPos, headingRad)\n        worldMgr.entityMgr.addEntity(material.entity, material.entityType)\n        if (material.sceneEntity.visible) {\n            material.setupCarryJob()\n            worldMgr.entityMgr.materials.add(material) // TODO use game entities within entity manager\n            worldMgr.ecs.addComponent(material.entity, new MapMarkerComponent(MAP_MARKER_TYPE.material))\n            EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.material, material.entity, MAP_MARKER_CHANGE.update, floorPosition))\n        } else {\n            worldMgr.entityMgr.materialsUndiscovered.add(material) // TODO use game entities within entity manager\n        }\n        return material\n    }\n\n    static addTooltip(worldMgr: WorldManager, entity: GameEntity, entityType: EntityType, energyCallback: () => number) {\n        const objectKey = entityType.toLowerCase()\n        const objectName = GameConfig.instance.objectNames[objectKey] || ''\n        const sfxKey = GameConfig.instance.objTtSFXs[objectKey] || ''\n        if (objectName) worldMgr.ecs.addComponent(entity, new TooltipComponent(entity, objectName, sfxKey, () => {\n            return TooltipSpriteBuilder.getTooltipSprite(objectName, energyCallback())\n        }))\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { BuildingEntity } from '../model/building/BuildingEntity'\nimport { PathTarget } from '../model/PathTarget'\n\nexport const SLUG_BEHAVIOR_STATE = {\n    emerge: 1,\n    idle: 2,\n    leech: 3,\n    goEnter: 4,\n} as const\ntype SlugBehaviorState = typeof SLUG_BEHAVIOR_STATE[keyof typeof SLUG_BEHAVIOR_STATE]\n\nexport class SlugBehaviorComponent extends AbstractGameComponent {\n    state: SlugBehaviorState = SLUG_BEHAVIOR_STATE.emerge\n    energyLeeched: boolean = false\n    targetBuilding?: BuildingEntity\n    targetEnter?: PathTarget\n    idleTimer: number = 0\n}\n","import { AbstractGameComponent } from '../ECS'\n\nexport class EntityPushedComponent extends AbstractGameComponent {\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { Vector2 } from 'three'\n\nexport class HeadingComponent extends AbstractGameComponent {\n    constructor(\n        readonly location: Vector2,\n    ) {\n        super()\n    }\n}\n","import { TILESIZE } from '../../params'\nimport { EntityType, MonsterEntityType } from '../model/EntityType'\nimport { WorldManager } from '../WorldManager'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { AnimatedSceneEntityComponent } from '../component/AnimatedSceneEntityComponent'\nimport { FlockComponent, FlockEntity } from '../component/FlockComponent'\nimport { HealthComponent } from '../component/HealthComponent'\nimport { MAP_MARKER_CHANGE, MAP_MARKER_TYPE } from '../component/MapMarkerComponent'\nimport { AnimatedSceneEntity } from '../../scene/AnimatedSceneEntity'\nimport { Vector2 } from 'three'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { MovableStatsComponent } from '../component/MovableStatsComponent'\nimport { ANIM_ENTITY_ACTIVITY, ROCK_MONSTER_ACTIVITY } from '../model/anim/AnimationActivity'\nimport { GameEntity } from '../ECS'\nimport { RandomMoveComponent } from '../component/RandomMoveComponent'\nimport { MonsterStatsComponent } from '../component/MonsterStatsComponent'\nimport { LastWillComponent } from '../component/LastWillComponent'\nimport { RockMonsterBehaviorComponent } from '../component/RockMonsterBehaviorComponent'\nimport { WorldTargetComponent } from '../component/WorldTargetComponent'\nimport { MaterialSpawner } from './MaterialSpawner'\nimport { WorldLocationEvent } from '../../event/WorldEvents'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { RAIDER_SCARE_RANGE, RaiderScareComponent } from '../component/RaiderScareComponent'\nimport { SLUG_BEHAVIOR_STATE, SlugBehaviorComponent } from '../component/SlugBehaviorComponent'\nimport { UpdateRadarEntityEvent } from '../../event/LocalEvents'\nimport { EntityPushedComponent } from '../component/EntityPushedComponent'\nimport { HeadingComponent } from '../component/HeadingComponent'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { EventBroker } from '../../event/EventBroker'\nimport { TooltipComponent } from '../component/TooltipComponent'\nimport { SceneSelectionComponent } from '../component/SceneSelectionComponent'\nimport { MonsterEntityStats } from '../../cfg/GameStatsCfg'\n\nexport class MonsterSpawner {\n    static spawnMonster(worldMgr: WorldManager, entityType: MonsterEntityType, worldPos: Vector2, headingRad: number): GameEntity {\n        const entity = worldMgr.ecs.addEntity()\n        const floorPosition = worldMgr.sceneMgr.getFloorPosition(worldPos)\n        const surface = worldMgr.sceneMgr.terrain.getSurfaceFromWorld2D(worldPos)\n        const positionComponent = worldMgr.ecs.addComponent(entity, new PositionComponent(floorPosition, surface))\n        const sceneEntity: AnimatedSceneEntity = new AnimatedSceneEntity()\n        sceneEntity.position.copy(floorPosition)\n        sceneEntity.position.y += positionComponent.floorOffset\n        sceneEntity.rotation.y = headingRad\n        sceneEntity.visible = surface.discovered\n        worldMgr.ecs.addComponent(entity, new AnimatedSceneEntityComponent(sceneEntity))\n        switch (entityType) {\n            case EntityType.SMALL_SPIDER:\n                positionComponent.floorOffset = 1\n                sceneEntity.addAnimated(ResourceManager.getAnimatedData('Creatures/SpiderSB'))\n                sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                const spiderStats = GameConfig.instance.stats.smallSpider\n                worldMgr.ecs.addComponent(entity, new MovableStatsComponent(spiderStats))\n                if (spiderStats.randomMove) worldMgr.ecs.addComponent(entity, new RandomMoveComponent(Math.max(0, 10 - spiderStats.randomMoveTime) * 1000))\n                break\n            case EntityType.BAT:\n                positionComponent.floorOffset = TILESIZE / 4\n                const batStats = GameConfig.instance.stats.bat\n                const flockEntities: FlockEntity[] = []\n                for (let c = 0; c < batStats.flocksSize; c++) {\n                    const flockSceneEntity: AnimatedSceneEntity = new AnimatedSceneEntity()\n                    flockSceneEntity.position.copy(sceneEntity.position)\n                    flockSceneEntity.rotation.copy(sceneEntity.rotation)\n                    flockSceneEntity.visible = sceneEntity.visible\n                    flockSceneEntity.addAnimated(ResourceManager.getAnimatedData('Creatures/bat'))\n                    flockSceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.route)\n                    // Change the speed slightly to make the animation unsynchronized\n                    const speedModifier = 0.9 + 0.2 * (c + 0.5) / batStats.flocksSize\n                    flockSceneEntity.setAnimationSpeed(speedModifier)\n                    flockEntities.push({sceneEntity: flockSceneEntity, speed: batStats.flocksSpeed * speedModifier})\n                    worldMgr.sceneMgr.addSceneEntity(flockSceneEntity)\n                }\n                worldMgr.ecs.addComponent(entity, new FlockComponent(flockEntities, {\n                    separationDist: 10, separationMult: 1, cohesionDist: 10, cohesionMult: 1, alignmentMult: 0.2, inertiaMult: 2.5, speed: batStats.flocksSpeed,\n                }))\n                worldMgr.ecs.addComponent(entity, new MovableStatsComponent(batStats))\n                if (batStats.randomMove) worldMgr.ecs.addComponent(entity, new RandomMoveComponent(Math.max(0, 10 - batStats.randomMoveTime) * 1000))\n                worldMgr.ecs.addComponent(entity, new RaiderScareComponent(RAIDER_SCARE_RANGE.bat))\n                worldMgr.ecs.addComponent(entity, new LastWillComponent(() => {\n                    worldMgr.ecs.removeComponent(entity, RaiderScareComponent)\n                    EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.monster, entity, MAP_MARKER_CHANGE.remove))\n                }))\n                break\n            case EntityType.SLUG:\n                sceneEntity.addAnimated(ResourceManager.getAnimatedData('Creatures/Slug'))\n                worldMgr.ecs.addComponent(entity, new MovableStatsComponent(GameConfig.instance.stats.slug))\n                worldMgr.ecs.addComponent(entity, new MonsterStatsComponent(GameConfig.instance.stats.slug))\n                const healthComponent = worldMgr.ecs.addComponent(entity, new HealthComponent(false, 24, 10, sceneEntity, false, GameConfig.instance.getRockFallDamage(entityType, 0)))\n                worldMgr.sceneMgr.addSprite(healthComponent.healthBarSprite)\n                worldMgr.sceneMgr.addSprite(healthComponent.healthFontSprite)\n                worldMgr.ecs.addComponent(entity, new LastWillComponent(() => {\n                    worldMgr.ecs.removeComponent(entity, WorldTargetComponent)\n                    worldMgr.ecs.removeComponent(entity, HeadingComponent)\n                    worldMgr.ecs.removeComponent(entity, EntityPushedComponent)\n                    worldMgr.ecs.getComponents(entity).get(SlugBehaviorComponent).state = SLUG_BEHAVIOR_STATE.goEnter\n                    sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                    EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.monster, entity, MAP_MARKER_CHANGE.remove))\n                }))\n                const objectKey = entityType.toLowerCase()\n                const objectName = GameConfig.instance.objectNames[objectKey] || ''\n                if (objectName) {\n                    const sfxKey = GameConfig.instance.objTtSFXs[objectKey] || ''\n                    worldMgr.ecs.addComponent(entity, new TooltipComponent(entity, objectName, sfxKey))\n                }\n                break\n            case EntityType.ICE_MONSTER:\n                this.addRockMonsterComponents(sceneEntity, worldMgr, entity, 'Creatures/IceMonster', entityType, GameConfig.instance.stats.iceMonster)\n                break\n            case EntityType.LAVA_MONSTER:\n                this.addRockMonsterComponents(sceneEntity, worldMgr, entity, 'Creatures/LavaMonster', entityType, GameConfig.instance.stats.lavaMonster)\n                break\n            case EntityType.ROCK_MONSTER:\n                this.addRockMonsterComponents(sceneEntity, worldMgr, entity, 'Creatures/RMonster', entityType, GameConfig.instance.stats.rockMonster)\n                break\n            default:\n                throw new Error(`Unexpected entity type: ${entityType}`)\n        }\n        worldMgr.sceneMgr.addSceneEntity(sceneEntity)\n        worldMgr.entityMgr.addEntity(entity, entityType)\n        return entity\n    }\n\n    private static addRockMonsterComponents(sceneEntity: AnimatedSceneEntity, worldMgr: WorldManager, entity: number, aeName: string, entityType: EntityType, stats: MonsterEntityStats) {\n        sceneEntity.addAnimated(ResourceManager.getAnimatedData(aeName))\n        sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.unpowered)\n        const healthComponent = worldMgr.ecs.addComponent(entity, new HealthComponent(false, 24, 10, sceneEntity, false, GameConfig.instance.getRockFallDamage(entityType, 0)))\n        worldMgr.sceneMgr.addSprite(healthComponent.healthBarSprite)\n        worldMgr.sceneMgr.addSprite(healthComponent.healthFontSprite)\n        worldMgr.ecs.addComponent(entity, new LastWillComponent(() => {\n            const components = worldMgr.ecs.getComponents(entity)\n            const numCrystalsEaten = components.get(RockMonsterBehaviorComponent)?.numCrystalsEaten || 0\n            worldMgr.ecs.removeComponent(entity, WorldTargetComponent)\n            worldMgr.ecs.removeComponent(entity, HeadingComponent)\n            worldMgr.ecs.removeComponent(entity, EntityPushedComponent)\n            worldMgr.ecs.removeComponent(entity, RockMonsterBehaviorComponent)\n            sceneEntity.removeAllCarried()\n            sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.crumble, () => {\n                const positionComponent = components.get(PositionComponent)\n                for (let c = 0; c < numCrystalsEaten; c++) {\n                    MaterialSpawner.spawnMaterial(worldMgr, EntityType.CRYSTAL, positionComponent.getPosition2D()) // XXX add random offset and random heading\n                }\n                EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_MONSTER_GONE, positionComponent))\n                worldMgr.ecs.removeComponent(entity, RaiderScareComponent)\n                EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.monster, entity, MAP_MARKER_CHANGE.remove))\n                worldMgr.sceneMgr.disposeSceneEntity(sceneEntity)\n                worldMgr.entityMgr.removeEntity(entity)\n                worldMgr.ecs.removeEntity(entity)\n            })\n        }))\n        worldMgr.ecs.addComponent(entity, new MovableStatsComponent(stats))\n        worldMgr.ecs.addComponent(entity, new MonsterStatsComponent(stats))\n        worldMgr.ecs.addComponent(entity, new SceneSelectionComponent(sceneEntity, {gameEntity: entity, entityType: entityType}, stats))\n        const objectName = GameConfig.instance.objectNames[entityType.toLowerCase()]\n        if (objectName) worldMgr.ecs.addComponent(entity, new TooltipComponent(entity, objectName, GameConfig.instance.objTtSFXs[entityType.toLowerCase()] || ''))\n    }\n}\n","/** Function documentation mostly copied from the following URLs\n *\n * https://kb.rockraidersunited.com/User:Jessietail/NERPs_reference\n * https://web.archive.org/web/20131206122442/http://rru-stuff.org/nerpfuncs.html\n * https://kb.rockraidersunited.com/NERPs_documentation\n *\n */\nimport { WorldManager } from '../game/WorldManager'\nimport { EntityType } from '../game/model/EntityType'\nimport { GAME_RESULT_STATE } from '../game/model/GameResult'\nimport { GameState } from '../game/model/GameState'\nimport { NerpReturnType, NerpScript } from './NerpScript'\nimport { NERP_EXECUTION_INTERVAL } from '../params'\nimport { GameResultEvent, MaterialAmountChanged, MonsterEmergeEvent, NerpMessageEvent, NerpSuppressArrowEvent, RequestedRaidersChanged, WorldLocationEvent } from '../event/WorldEvents'\nimport { PositionComponent } from '../game/component/PositionComponent'\nimport { SurfaceType } from '../game/terrain/SurfaceType'\nimport { MonsterSpawner } from '../game/factory/MonsterSpawner'\nimport { AnimatedSceneEntityComponent } from '../game/component/AnimatedSceneEntityComponent'\nimport { ANIM_ENTITY_ACTIVITY, SLUG_ACTIVITY } from '../game/model/anim/AnimationActivity'\nimport { SLUG_BEHAVIOR_STATE, SlugBehaviorComponent } from '../game/component/SlugBehaviorComponent'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { EventBroker } from '../event/EventBroker'\nimport { SoundManager } from '../audio/SoundManager'\nimport { EventKey } from '../event/EventKeyEnum'\nimport { GuiButtonBlinkEvent, ShowMissionBriefingEvent } from '../event/LocalEvents'\nimport { NerpMessage } from '../resource/fileparser/NerpMsgParser'\nimport { Surface } from '../game/terrain/Surface'\nimport { MaterialSpawner } from '../game/factory/MaterialSpawner'\nimport { PRIORITY_IDENTIFIER } from '../game/model/job/PriorityIdentifier'\nimport { BaseEvent } from '../event/EventTypeMap'\nimport { RaiderTrainings } from '../game/model/raider/RaiderTraining'\nimport { clearIntervalSafe, isNum } from '../core/Util'\nimport { RaiderTools } from '../game/model/raider/RaiderTool'\nimport { JOB_STATE } from '../game/model/job/JobState'\nimport { PRNG } from '../game/factory/PRNG'\nimport { SaveGameManager } from '../resource/SaveGameManager'\n\ninterface IconClickedEntry {\n    iconName: string\n    buttonType: string\n    eventKey?: EventKey\n}\n\n// noinspection JSUnusedGlobalSymbols,JSUnusedLocalSymbols\nexport class NerpRunner {\n    static readonly iconClickedConfig: IconClickedEntry[] = [\n        {iconName: 'dig', buttonType: 'Interface_MenuItem_Dig', eventKey: EventKey.COMMAND_CREATE_DRILL_JOB},\n        {iconName: 'dynamite', buttonType: 'Interface_MenuItem_Dynamite', eventKey: EventKey.COMMAND_CREATE_DYNAMITE_JOB},\n        {iconName: 'goBack', buttonType: 'InterfaceBackButton', eventKey: EventKey.GUI_GO_BACK_BUTTON_CLICKED},\n        {iconName: 'teleport', buttonType: 'Interface_MenuItem_TeleportMan'},\n        {iconName: 'layPath', buttonType: 'Interface_MenuItem_LayPath', eventKey: EventKey.COMMAND_CREATE_POWER_PATH},\n        {iconName: 'placeFence', buttonType: 'Interface_MenuItem_PlaceFence', eventKey: EventKey.COMMAND_PLACE_FENCE},\n        {iconName: 'mount', buttonType: 'Interface_MenuItem_GetIn', eventKey: EventKey.COMMAND_VEHICLE_GET_MAN},\n        {iconName: 'dismount', buttonType: 'Interface_MenuItem_GetOut', eventKey: EventKey.COMMAND_VEHICLE_DRIVER_GET_OUT},\n        {iconName: 'upgradeBuilding', buttonType: 'Interface_MenuItem_UpgradeBuilding', eventKey: EventKey.COMMAND_UPGRADE_BUILDING},\n        {iconName: 'build', buttonType: 'Interface_MenuItem_BuildBuilding', eventKey: EventKey.GUI_BUILD_BUILDING_BUTTON_CLICKED},\n        {iconName: 'teleportPad', buttonType: EntityType.TELEPORT_PAD},\n        {iconName: 'powerStation', buttonType: EntityType.POWER_STATION},\n        {iconName: 'barracks', buttonType: EntityType.BARRACKS},\n        {iconName: 'geodome', buttonType: EntityType.GEODOME},\n        {iconName: 'gunStation', buttonType: EntityType.GUNSTATION},\n        {iconName: 'vehicleTransport', buttonType: EntityType.TELEPORT_BIG},\n        {iconName: 'dynamite', buttonType: 'Interface_MenuItem_Dynamite'},\n        {iconName: 'getTool', buttonType: 'Interface_MenuItem_GetTool', eventKey: EventKey.GUI_GET_TOOL_BUTTON_CLICKED},\n        {iconName: 'getPusher', buttonType: 'Interface_MenuItem_GetPusherGun'}, // XXX Complete list and track all tool types here\n        {iconName: 'getSonicBlaster', buttonType: 'Interface_MenuItem_GetBirdScarer'},\n        {iconName: 'dropSonicBlaster', buttonType: 'Interface_MenuItem_DropBirdScarer'},\n        {iconName: 'train', buttonType: 'Interface_MenuItem_TrainSkill', eventKey: EventKey.GUI_TRAIN_RAIDER_BUTTON_CLICKED},\n        {iconName: 'trainDriver', buttonType: 'Interface_MenuItem_TrainDriver'}, // XXX Complete list and track all raider trainings here\n        {iconName: 'trainSailor', buttonType: 'Interface_MenuItem_TrainSailor'},\n        {iconName: 'trainPilot', buttonType: 'Interface_MenuItem_TrainPilot'},\n        {iconName: 'callToArms', buttonType: 'PanelButton_TopPanel_CallToArms'},\n    ]\n\n    static debug = false\n    static timeAddedAfterSample = 0\n\n    readonly registers = new Array(8).fill(0)\n    readonly timers = new Array(4).fill(0)\n    interval?: NodeJS.Timeout\n    programCounter: number = 0\n    // more state variables and switches\n    messagePermit: boolean = true\n    objectiveSwitch: boolean = true\n    objectiveShowing: boolean = true\n    sampleLengthMultiplier: number = 0\n    timeForNoSample: number = 0\n    currentMessage: number = -1\n    messageTimerMs: number = 0\n    messageSfx?: AudioBufferSourceNode\n    tutoBlocksById: Map<number, Surface[]> = new Map()\n    iconClicked: Map<string, number> = new Map()\n    buildingsTeleported: number = 0\n    numRequestedRaiders: number = 0\n\n    constructor(readonly worldMgr: WorldManager, readonly script: NerpScript, readonly messages: NerpMessage[]) {\n        NerpRunner.timeAddedAfterSample = 0\n        if (NerpRunner.debug) console.log(`Executing following script\\n${this.script.lines.join('\\n')}`)\n        EventBroker.subscribe(EventKey.NERP_MESSAGE_NEXT, () => {\n            this.currentMessage = -1\n            this.messageTimerMs = 0\n            this.messageSfx?.stop()\n            this.messageSfx = undefined\n        })\n        EventBroker.subscribe(EventKey.GAME_RESULT_STATE, () => {\n            this.stop()\n        })\n        EventBroker.subscribe(EventKey.SHOW_MISSION_BRIEFING, (event: ShowMissionBriefingEvent) => {\n            this.objectiveShowing = event.isShowing\n            this.objectiveSwitch = this.objectiveSwitch && event.isShowing\n        })\n        NerpRunner.iconClickedConfig.forEach((iconCLickedEntry: IconClickedEntry) => {\n            if (!iconCLickedEntry.eventKey) return\n            EventBroker.subscribe(iconCLickedEntry.eventKey, () => {\n                const iconName = iconCLickedEntry.iconName.toLowerCase()\n                this.iconClicked.upsert(iconName, (current) => (current || 0) + 1)\n            })\n        })\n        EventBroker.subscribe(EventKey.REQUESTED_RAIDERS_CHANGED, (event: RequestedRaidersChanged) => {\n            const increased = event.numRequested > this.numRequestedRaiders\n            this.numRequestedRaiders = event.numRequested\n            if (!increased) return\n            this.iconClicked.upsert('teleport', (current) => (current || 0) + 1)\n        })\n        EventBroker.subscribe(EventKey.COMMAND_SELECT_BUILD_MODE, (event) => {\n            const iconConfig = NerpRunner.iconClickedConfig.find((c) => c.buttonType.toLowerCase() === event.entityType.toLowerCase())\n            if (iconConfig) this.iconClicked.upsert(iconConfig.iconName.toLowerCase(), (current) => (current || 0) + 1)\n        })\n        EventBroker.subscribe(EventKey.COMMAND_PICK_TOOL, (event) => {\n            const itemKey = RaiderTools.toInterfaceItemKey(event.tool)\n            const iconClickedEntry = NerpRunner.iconClickedConfig.find((cfg) => cfg.buttonType.toLowerCase() === itemKey.toLowerCase())\n            if (!iconClickedEntry) return\n            this.iconClicked.upsert(iconClickedEntry.iconName.toLowerCase(), (current) => (current || 0) + 1)\n        })\n        EventBroker.subscribe(EventKey.COMMAND_TRAIN_RAIDER, (event) => {\n            const iconName = RaiderTrainings.toStatsProperty(event.training).toLowerCase()\n            this.iconClicked.upsert(iconName, (current) => (current || 0) + 1)\n        })\n        EventBroker.subscribe(EventKey.TOGGLE_ALARM, (event) => {\n            this.iconClicked.upsert('callToArms'.toLowerCase(), (current) => (current || 0) + 1)\n        })\n    }\n\n    start() {\n        this.interval = setInterval(() => this.execute(), NERP_EXECUTION_INTERVAL)\n    }\n\n    stop() {\n        this.interval = clearIntervalSafe(this.interval)\n    }\n\n    /**\n     * Internally used to validate and parse a register number.\n     * @param register\n     * @return {number}\n     */\n    checkRegister(register: string): number {\n        const num = Number(register)\n        if (!isNum(num) || num < 0 || num > this.registers.length) throw new Error(`Invalid register (${register}) provided`)\n        return num\n    }\n\n    /**\n     * Internally used to validate and parse a value before setting or adding it with a register.\n     * @param value\n     * @return {number}\n     */\n    checkRegisterValue(value: number): number {\n        if (!isNum(value)) throw new Error(`Invalid register value (${value}) provided`)\n        return value\n    }\n\n    /**\n     * Gets the value currently stored in the given register, internally used to handle all registers with one method.\n     * @param register the register to read\n     * @return {number} returns the value currently stored in the register\n     */\n    getR(register: string): number {\n        const regNum = this.checkRegister(register)\n        return this.registers[regNum]\n    }\n\n    /**\n     * Sets the given value for the given register, internally used to handle all registers with one method.\n     * @param register the register to set\n     * @param value the value to set for the given register\n     */\n    setR(register: string, value: number): void {\n        const regNum = this.checkRegister(register)\n        this.registers[regNum] = this.checkRegisterValue(value)\n    }\n\n    /**\n     * Adds the given value to the given register, internally used to handle all registers with one method.\n     * @param register the register to add to\n     * @param value the value to add to the given register\n     */\n    addR(register: string, value: number): void {\n        const regNum = this.checkRegister(register)\n        this.registers[regNum] += this.checkRegisterValue(value)\n    }\n\n    /**\n     * Subtracts the given value from the given register, internally used to handle all registers with one method.\n     * @param register the register to subtract from\n     * @param value the value to subtract from the given register\n     */\n    subR(register: string, value: number): void {\n        const regNum = this.checkRegister(register)\n        this.registers[regNum] -= this.checkRegisterValue(value)\n    }\n\n    /**\n     * Set the respective timer to the given numerical value. Units are in milliseconds.\n     * @param timer\n     * @param value\n     */\n    setTimer(timer: number, value: number): void {\n        if (isNaN(value)) throw new Error(`Can't set timer to NaN value: ${value}`)\n        this.timers[timer] = new Date().getTime() + value\n    }\n\n    /**\n     * Gets the value of the respective timer. Units are in milliseconds.\n     * @param timer\n     * @return {number}\n     */\n    getTimer(timer: number): number {\n        return new Date().getTime() - this.timers[timer]\n    }\n\n    /**\n     * End the level successfully and show the score screen.\n     */\n    setLevelCompleted(): void {\n        console.log('Nerp runner marks level as complete')\n        EventBroker.publish(new GameResultEvent(GAME_RESULT_STATE.complete))\n    }\n\n    /**\n     * End the level as failure and show the score screen.\n     */\n    setLevelFail(): void {\n        console.log(`NerpRunner marks level as failed; at line: ${this.script.lines[this.programCounter]}`)\n        EventBroker.publish(new GameResultEvent(GAME_RESULT_STATE.failed))\n    }\n\n    /**\n     * Sets tutorial flags\n     * @param value a bitmask to set flags with\n     */\n    setTutorialFlags(value: number): void {\n        // seems like value must be interpreted bitwise and sets a certain flag on each bit\n        // seen so far:\n        // 0 = 0x00 allow any click anywhere anytime\n        // 3 = 0x11 disallow invalid clicks\n        // 4095 = 0x111111111111 set all flags? (seen in Tutorial01 level)\n        if (value === 4095) {\n            // TODO Only used in tutorials\n        } else if (value === 0) {\n            // TODO Reset all flags?\n        } else {\n            console.warn('NERP function \"setTutorialFlags\" not yet implemented', value)\n        }\n    }\n\n    setTutorialPointer(tutoBlockId: number, enabled: number): void {\n        const tutoBlocks = this.tutoBlocksById.getOrUpdate(tutoBlockId, () => [])\n        tutoBlocks.forEach((t) => {\n            if (enabled) {\n                t.mesh.objectPointer?.setTargetPosition(t.getCenterWorld(), t)\n            } else {\n                t.mesh.objectPointer?.hide()\n            }\n        })\n    }\n\n    setMessagePermit(allowMessages: number): void {\n        this.messagePermit = !!allowMessages\n    }\n\n    setBuildingsUpgradeLevel(typeName: EntityType, level: number): void {\n        this.worldMgr.entityMgr.buildings.forEach(b => {\n            if (b.entityType === typeName) b.setLevel(level)\n        })\n    }\n\n    setToolStoreLevel(level: number): void {\n        this.setBuildingsUpgradeLevel(EntityType.TOOLSTATION, level)\n    }\n\n    setTeleportPadLevel(level: number): void {\n        this.setBuildingsUpgradeLevel(EntityType.TELEPORT_PAD, level)\n    }\n\n    setDocksLevel(level: number): void {\n        this.setBuildingsUpgradeLevel(EntityType.DOCKS, level)\n    }\n\n    setPowerStationLevel(level: number): void {\n        this.setBuildingsUpgradeLevel(EntityType.POWER_STATION, level)\n    }\n\n    setBarracksLevel(level: number): void {\n        this.setBuildingsUpgradeLevel(EntityType.BARRACKS, level)\n    }\n\n    /**\n     * Gets the number of tool stores currently built. NOT the total ever built.\n     * @return {number}\n     */\n    getToolStoresBuilt(): number {\n        return this.worldMgr.entityMgr.buildings.count((b) => b.entityType === EntityType.TOOLSTATION)\n    }\n\n    /**\n     * Gets the number of mini-figures on the level. XXX it is NOT tested if this ignores mini-figures in hidden caverns\n     * @return {number}\n     */\n    getMiniFiguresOnLevel(): number {\n        return this.worldMgr.entityMgr.raiders.length\n    }\n\n    getMonstersOnLevel(): number {\n        return this.worldMgr.entityMgr.rockMonsters.length\n    }\n\n    getSmallHelicoptersOnLevel(): number {\n        return this.worldMgr.entityMgr.vehicles.count((v) => v.entityType === EntityType.SMALL_HELI)\n    }\n\n    getSlugsOnLevel(): number {\n        return this.worldMgr.entityMgr.slugs.length\n    }\n\n    generateSlug(): void {\n        const slugHole = PRNG.nerp.sample(this.worldMgr.sceneMgr.terrain.slugHoles)\n        if (!slugHole) return\n        const slug = MonsterSpawner.spawnMonster(this.worldMgr, EntityType.SLUG, slugHole.getRandomPosition(), PRNG.animation.random() * 2 * Math.PI)\n        const behaviorComponent = this.worldMgr.ecs.addComponent(slug, new SlugBehaviorComponent())\n        const components = this.worldMgr.ecs.getComponents(slug)\n        const sceneEntity = components.get(AnimatedSceneEntityComponent)\n        sceneEntity.sceneEntity.setAnimation(SLUG_ACTIVITY.emerge, () => {\n            sceneEntity.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n            behaviorComponent.state = SLUG_BEHAVIOR_STATE.idle\n        })\n        EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_SLUG_EMERGE, components.get(PositionComponent)))\n    }\n\n    /**\n     * Gets the number of crystals currently stored.\n     * @return {number}\n     */\n    getCrystalsCurrentlyStored(): number {\n        return GameState.numCrystal\n    }\n\n    getOreCurrentlyStored(): number {\n        return GameState.numOreValue\n    }\n\n    setMessageTimerValues(sampleLengthMultiplier: number, timeAddedAfterSample: number, timeForNoSample: number): void {\n        this.sampleLengthMultiplier = sampleLengthMultiplier\n        NerpRunner.timeAddedAfterSample = timeAddedAfterSample\n        this.timeForNoSample = timeForNoSample\n    }\n\n    getMessageTimer(): number {\n        return this.messageTimerMs\n    }\n\n    cameraUnlock(): void {\n        this.worldMgr.sceneMgr.birdViewControls.unlockCamera()\n    }\n\n    cameraLockOnObject(recordedEntity: number): void {\n        const entity = this.worldMgr.entityMgr.recordedEntities[recordedEntity - 1]\n        if (!entity) {\n            console.warn(`Invalid recorded entity index ${recordedEntity} given`, this.worldMgr.entityMgr.recordedEntities)\n            return\n        }\n        const sceneEntity = this.worldMgr.ecs.getComponents(entity).get(AnimatedSceneEntityComponent)?.sceneEntity\n        if (!sceneEntity) {\n            console.warn(`Given entity ${entity} has no scene entity to jump to`)\n            return\n        }\n        this.worldMgr.sceneMgr.birdViewControls.lockOnObject(sceneEntity)\n    }\n\n    cameraLockOnMonster(monster: number): void {\n        if (monster < 1) return\n        const entity = this.worldMgr.entityMgr.rockMonsters[monster - 1]\n        if (!entity) {\n            console.warn(`Invalid monster entity index ${monster} given`, this.worldMgr.entityMgr.rockMonsters)\n            return\n        }\n        const sceneEntity = this.worldMgr.ecs.getComponents(entity).get(AnimatedSceneEntityComponent)?.sceneEntity\n        if (!sceneEntity) {\n            console.warn(`Given entity ${entity} has no scene entity to jump to`)\n            return\n        }\n        this.worldMgr.sceneMgr.birdViewControls.lockOnObject(sceneEntity)\n    }\n\n    setMessage(messageNumber: number, arrowDisabled: number): void {\n        if (!this.messagePermit) return\n        if (messageNumber === 0) messageNumber = 1 // XXX Remove workaround for level 07\n        if (messageNumber < 1) {\n            console.warn(`Unexpected message number ${messageNumber} given`)\n            return\n        }\n        const msg = this.messages[messageNumber - 1]\n        if (!msg) {\n            console.warn(`Message ${messageNumber} not found in [${this.messages.map((m) => m.txt)}]`)\n            return\n        }\n        let sampleLength = this.timeForNoSample / 1000\n        if (!SaveGameManager.preferences.muteDevSounds && msg.snd) {\n            this.messageSfx = SoundManager.playVoice(msg.snd) || this.messageSfx\n            sampleLength = this.messageSfx?.buffer?.duration || sampleLength\n        }\n        const sampleTimeoutMs = sampleLength * this.sampleLengthMultiplier + NerpRunner.timeAddedAfterSample\n        this.messageTimerMs = sampleTimeoutMs || GameConfig.instance.main.textPauseTimeMs\n        if (messageNumber !== this.currentMessage) {\n            this.currentMessage = messageNumber\n            if (msg.txt) EventBroker.publish(new NerpMessageEvent(msg.txt, this.messageTimerMs, !!arrowDisabled))\n        }\n        if (!arrowDisabled) this.messageTimerMs = Infinity\n    }\n\n    advanceMessage(): void {\n        EventBroker.publish(new BaseEvent(EventKey.NERP_MESSAGE_NEXT))\n    }\n\n    setRockMonsterAtTutorial(tutoBlockId: number): void {\n        const tutoBlocks = this.tutoBlocksById.getOrUpdate(tutoBlockId, () => [])\n        tutoBlocks.forEach((t) => {\n            EventBroker.publish(new MonsterEmergeEvent(t))\n        })\n    }\n\n    setCongregationAtTutorial(tutoBlockId: number): void {\n        const tutoBlocks = this.tutoBlocksById.getOrUpdate(tutoBlockId, () => [])\n        if (tutoBlocks.length > 1) console.warn(`Invalid amount (${tutoBlocks.length}) of tuto blocks with id ${tutoBlockId} as congregation, using only first one`)\n        const targetBlock = tutoBlocks[0]\n        if (!targetBlock) return\n        GameState.monsterCongregation = targetBlock.getCenterWorld2D()\n    }\n\n    setCameraGotoTutorial(tutoBlockId: number): void {\n        const tutoBlocks = this.tutoBlocksById.getOrUpdate(tutoBlockId, () => [])\n        if (tutoBlocks.length > 1) console.warn(`Invalid amount (${tutoBlocks.length}) of tuto blocks with id ${tutoBlockId} to move camera to, using only first one`)\n        const targetBlock = tutoBlocks[0]\n        if (!targetBlock) return\n        this.worldMgr.sceneMgr.birdViewControls.forceMoveToTarget(targetBlock.getCenterWorld())\n    }\n\n    setTutorialBlockIsGround(tutoBlockId: number, state: number): void {\n        if (state !== 1) console.warn(`Unexpected state (${state}) given for setTutorialBlockIsGround`)\n        this.setTutorialBlock(tutoBlockId, SurfaceType.GROUND)\n    }\n\n    setTutorialBlockIsPath(tutoBlockId: number, state: number): void {\n        if (state !== 1) console.warn(`Unexpected state (${state}) given for setTutorialBlockIsPath`)\n        this.setTutorialBlock(tutoBlockId, SurfaceType.POWER_PATH)\n    }\n\n    private setTutorialBlock(tutoBlockId: number, surfaceType: SurfaceType): void {\n        const tutoBlocks = this.tutoBlocksById.getOrUpdate(tutoBlockId, () => [])\n        tutoBlocks.forEach((s) => {\n            s.setSurfaceType(surfaceType)\n            s.needsMeshUpdate = true\n            s.discover()\n        })\n        this.worldMgr.sceneMgr.terrain.updateSurfaceMeshes()\n    }\n\n    getTutorialBlockIsGround(tutoBlockId: number): number {\n        const tutoBlocks = this.tutoBlocksById.getOrUpdate(tutoBlockId, () => [])\n        return tutoBlocks.count((s) => s.discovered && s.surfaceType.floor)\n    }\n\n    getTutorialBlockIsPath(tutoBlockId: number): number {\n        const tutoBlocks = this.tutoBlocksById.getOrUpdate(tutoBlockId, () => [])\n        return tutoBlocks.count((s) => s.discovered && s.isPath())\n    }\n\n    getTutorialBlockClicks(tutoBlockId: number): number {\n        return GameState.tutoBlockClicks.getOrUpdate(tutoBlockId, () => 0)\n    }\n\n    setTutorialBlockClicks(tutoBlockId: number, numClicks: number): void {\n        GameState.tutoBlockClicks.set(tutoBlockId, numClicks)\n    }\n\n    getUnitAtBlock(tutoBlockId: number): number {\n        const tutoBlocks = this.tutoBlocksById.getOrUpdate(tutoBlockId, () => [])\n        return [...this.worldMgr.entityMgr.raiders, ...this.worldMgr.entityMgr.vehicles].count((e): boolean => {\n            const surface = this.worldMgr.ecs.getComponents(e.entity).get(PositionComponent).surface\n            return tutoBlocks.some((tutoBlock) => tutoBlock.discovered && surface === tutoBlock)\n        })\n    }\n\n    getOxygenLevel(): number {\n        return Math.round(GameState.airLevel * 100)\n    }\n\n    getObjectiveSwitch(): number {\n        return this.objectiveSwitch ? 1 : 0\n    }\n\n    getObjectiveShowing(): number {\n        return this.objectiveShowing ? 1 : 0\n    }\n\n    addPoweredCrystals(numCrystals: number): void {\n        GameState.numCrystal += numCrystals\n        EventBroker.publish(new MaterialAmountChanged())\n    }\n\n    addStoredOre(numOre: number): void {\n        GameState.numOre += numOre\n        EventBroker.publish(new MaterialAmountChanged())\n    }\n\n    disallowAll(): void {\n        // TODO Only used in tutorials\n    }\n\n    getPoweredPowerStationsBuilt(): number {\n        return this.worldMgr.entityMgr.buildings.count((b) => b.isPowered() && b.entityType === EntityType.POWER_STATION)\n    }\n\n    getPoweredBarracksBuilt(): number {\n        return this.worldMgr.entityMgr.buildings.count((b) => b.isPowered() && b.entityType === EntityType.BARRACKS)\n    }\n\n    getRecordObjectAtTutorial(tutoBlockId: number): number {\n        const tutoBlocks = this.tutoBlocksById.getOrUpdate(tutoBlockId, () => [])\n        return this.worldMgr.entityMgr.recordedEntities.findIndex((entity): boolean => {\n            const surface = this.worldMgr.ecs.getComponents(entity).get(PositionComponent).surface\n            return tutoBlocks.some((tutoBlock) => surface === tutoBlock)\n        }) + 1\n    }\n\n    getRecordObjectAmountAtTutorial(tutoBlockId: number): number {\n        const tutoBlocks = this.tutoBlocksById.getOrUpdate(tutoBlockId, () => [])\n        const recordedEntities = this.worldMgr.entityMgr.recordedEntities\n        return recordedEntities.count((entity): boolean => {\n            const surface = this.worldMgr.ecs.getComponents(entity).get(PositionComponent).surface\n            return tutoBlocks.some((tutoBlock) => surface === tutoBlock)\n        })\n    }\n\n    /**\n     * Tutorial01\n     * - If no unit is selected, 0 should be returned\n     * - The return value is stored in register 1 and later compared to the list of recorded objects\n     */\n    getSelectedRecordObject(): number {\n        const recordedIndex = this.worldMgr.entityMgr.recordedEntities.findIndex((entity) => {\n            return !![...this.worldMgr.entityMgr.selection.raiders, ...this.worldMgr.entityMgr.selection.vehicles]\n                .find((e) => e.entity === entity)\n        })\n        return recordedIndex >= 0 ? recordedIndex + 1 : 0\n    }\n\n    getHiddenObjectsFound(): number {\n        return GameState.hiddenObjectsFound\n    }\n\n    getTeleportsBuilt(): number {\n        return this.worldMgr.entityMgr.buildings.count((b) => b.entityType === EntityType.TELEPORT_PAD)\n    }\n\n    getLevel1TeleportsBuilt(): number {\n        return this.worldMgr.entityMgr.buildings.count((b) => b.entityType === EntityType.TELEPORT_PAD && b.level >= 1)\n    }\n\n    getLevel2TeleportsBuilt(): number {\n        return this.worldMgr.entityMgr.buildings.count((b) => b.entityType === EntityType.TELEPORT_PAD && b.level >= 2)\n    }\n\n    getLevel1PowerStationsBuilt(): number {\n        return this.worldMgr.entityMgr.buildings.count((b) => b.entityType === EntityType.POWER_STATION && b.level >= 1)\n    }\n\n    getBarracksBuilt(): number {\n        return this.worldMgr.entityMgr.buildings.count((b) => b.entityType === EntityType.BARRACKS)\n    }\n\n    getLevel1BarracksBuilt(): number {\n        return this.worldMgr.entityMgr.buildings.count((b) => b.entityType === EntityType.BARRACKS && b.level >= 1)\n    }\n\n    getVehicleTeleportsBuilt(): number {\n        return this.worldMgr.entityMgr.buildings.count((b) => b.entityType === EntityType.TELEPORT_BIG)\n    }\n\n    getGunStationsBuilt(): number {\n        return this.worldMgr.entityMgr.buildings.count((b) => b.entityType === EntityType.GUNSTATION)\n    }\n\n    getRandom100(): number {\n        return PRNG.nerp.randInt(100)\n    }\n\n    // noinspection SpellCheckingInspection\n    supressArrow(state: number): void {\n        EventBroker.publish(new NerpSuppressArrowEvent(!!state))\n    }\n\n    setGameSpeed(speed: number, unknown: number): void {\n        if (unknown) console.warn(`Unexpected value (${unknown}) for second parameter given`)\n        GameState.gameSpeedMultiplier = speed / 100\n    }\n\n    setRecordObjectPointer(recordedEntity: number): void {\n        if (recordedEntity < 1) {\n            this.worldMgr.sceneMgr.objectPointer.hide()\n            return\n        }\n        const entity = this.worldMgr.entityMgr.recordedEntities[recordedEntity - 1]\n        if (!entity) {\n            console.warn(`Invalid entity ${recordedEntity} given`)\n            return\n        }\n        const sceneEntity = this.worldMgr.ecs.getComponents(entity).get(AnimatedSceneEntityComponent)?.sceneEntity\n        if (!sceneEntity) {\n            console.warn(`Given entity ${entity} has no scene entity to point to`)\n            return\n        }\n        this.worldMgr.sceneMgr.objectPointer.setTargetObject(sceneEntity)\n    }\n\n    /**\n     * Tutorial01\n     * - Allow to select only raiders\n     */\n    clickOnlyObjects(): void {\n        // TODO Only used in tutorials\n        console.warn('NERP function \"clickOnlyObjects\" not yet implemented')\n    }\n\n    /**\n     * Tutorial01\n     * - Allow to select only surfaces\n     */\n    clickOnlyMap(): void {\n        // TODO Only used in tutorials\n        console.warn('NERP function \"clickOnlyMap\" not yet implemented')\n    }\n\n    /**\n     * Tutorial08\n     */\n    clickOnlyCallToArms(): void {\n        // TODO Only used in tutorials\n        console.warn('NERP function \"clickOnlyMap\" not yet implemented')\n    }\n\n    setCallToArms(args: any[]): void {\n        // TODO Only used in tutorials\n        console.warn('NERP function \"setCallToArms\" not yet implemented', args)\n    }\n\n    setTutorialCrystals(tutoBlockId: number, numOfCrystals: number): void {\n        const tutoBlocks = this.tutoBlocksById.getOrUpdate(tutoBlockId, () => [])\n        tutoBlocks.forEach((t) => {\n            for (let c = 0; c < numOfCrystals; c++) {\n                const crystal = MaterialSpawner.spawnMaterial(this.worldMgr, EntityType.CRYSTAL, t.getRandomPosition(), PRNG.animation.random() * 2 * Math.PI)\n                if (crystal.carryJob) crystal.carryJob.jobState = JOB_STATE.canceled\n            }\n        })\n    }\n\n    setCrystalPriority(targetIndex: number): void {\n        GameState.priorityList.setPriorityIndex(PRIORITY_IDENTIFIER.crystal, 0)\n    }\n\n    cameraZoomOut(zoomLevel: number): void {\n        if (zoomLevel < 0 || zoomLevel > 100) {\n            console.warn(`Invalid camera zoom out level ${zoomLevel}`)\n            return\n        }\n        const targetZoom = Math.round(zoomLevel / 100 * GameConfig.instance.main.maxDist)\n        this.worldMgr.sceneMgr.birdViewControls.setZoom(targetZoom)\n    }\n\n    cameraZoomIn(zoomLevel: number): void {\n        if (zoomLevel < GameConfig.instance.main.minDist || zoomLevel > GameConfig.instance.main.maxDist) {\n            console.warn(`Unexpected camera zoom in level ${zoomLevel}. Must be in range from ${GameConfig.instance.main.minDist} to ${GameConfig.instance.main.maxDist}`)\n            return\n        }\n        // XXX This should be consistent with cameraZoomOut\n        this.worldMgr.sceneMgr.birdViewControls.setZoom(zoomLevel)\n    }\n\n    makeSomeoneOnThisBlockPickUpSomethingOnThisBlock(tutoBlockId: number): void {\n        const tutoBlocks = this.tutoBlocksById.getOrUpdate(tutoBlockId, () => [])\n        tutoBlocks.forEach((t) => {\n            const raider = PRNG.nerp.sample(this.worldMgr.entityMgr.raiders.filter((r) => r.getSurface() === t && r.isReadyToTakeAJob()))\n            if (!raider) return\n            const material = PRNG.nerp.sample(this.worldMgr.entityMgr.materials.filter((m) => m.getSurface() === t && !m.carryJob?.hasFulfiller()))\n            if (!material) return\n            raider.setJob(material.setupCarryJob())\n        })\n    }\n\n    setBuildingsTeleported(numBuildings: number): void {\n        this.buildingsTeleported = numBuildings\n    }\n\n    getBuildingsTeleported(): number {\n        return this.buildingsTeleported\n    }\n\n    getMiniFigureSelected(): number {\n        return this.worldMgr.entityMgr.selection.raiders.length\n    }\n\n    getSmallDiggerSelected(): number {\n        return this.worldMgr.entityMgr.selection.vehicles.count((v) => v.entityType === EntityType.SMALL_DIGGER)\n    }\n\n    getSmallTruckSelected(): number {\n        return this.worldMgr.entityMgr.selection.vehicles.count((v) => v.entityType === EntityType.SMALL_TRUCK)\n    }\n\n    getRapidRiderSelected(): number {\n        return this.worldMgr.entityMgr.selection.vehicles.count((v) => v.entityType === EntityType.SMALL_CAT)\n    }\n\n    getSmallHelicopterSelected(): number {\n        return this.worldMgr.entityMgr.selection.vehicles.count((v) => v.entityType === EntityType.SMALL_HELI)\n    }\n\n    getGraniteGrinderSelected(): number {\n        return this.worldMgr.entityMgr.selection.vehicles.count((v) => v.entityType === EntityType.WALKER_DIGGER)\n    }\n\n    getChromeCrusherSelected(): number {\n        return this.worldMgr.entityMgr.selection.vehicles.count((v) => v.entityType === EntityType.LARGE_DIGGER)\n    }\n\n    getToolStoreSelected(): number {\n        return this.worldMgr.entityMgr.selection.building?.entityType === EntityType.TOOLSTATION ? 1 : 0\n    }\n\n    getTeleportPadSelected(): number {\n        return this.worldMgr.entityMgr.selection.building?.entityType === EntityType.TELEPORT_PAD ? 1 : 0\n    }\n\n    getPowerStationSelected(): number {\n        return this.worldMgr.entityMgr.selection.building?.entityType === EntityType.POWER_STATION ? 1 : 0\n    }\n\n    getBarracksSelected(): number {\n        return this.worldMgr.entityMgr.selection.building?.entityType === EntityType.BARRACKS ? 1 : 0\n    }\n\n    getMiniFigureInSmallDigger(): number {\n        return this.worldMgr.entityMgr.vehicles.count((v) => v.entityType === EntityType.SMALL_DIGGER && !!v.driver)\n    }\n\n    getMiniFigureInSmallTruck(): number {\n        return this.worldMgr.entityMgr.vehicles.count((v) => v.entityType === EntityType.SMALL_TRUCK && !!v.driver)\n    }\n\n    getMiniFigureInRapidRider(): number {\n        return this.worldMgr.entityMgr.vehicles.count((v) => v.entityType === EntityType.SMALL_CAT && !!v.driver)\n    }\n\n    getMiniFigureInSmallHelicopter(): number {\n        return this.worldMgr.entityMgr.vehicles.count((v) => v.entityType === EntityType.SMALL_HELI && !!v.driver)\n    }\n\n    getMiniFigureInGraniteGrinder(): number {\n        return this.worldMgr.entityMgr.vehicles.count((v) => v.entityType === EntityType.WALKER_DIGGER && !!v.driver)\n    }\n\n    getMiniFigureInChromeCrusher(): number {\n        return this.worldMgr.entityMgr.vehicles.count((v) => v.entityType === EntityType.LARGE_DIGGER && !!v.driver)\n    }\n\n    setMonsterAttackPowerStation(state: number): void {\n        GameState.monsterAttackPowerStation = state === 1\n    }\n\n    setMonsterAttackNowT(args: any[]): void {\n        // TODO Only used in tutorials\n        console.warn('NERP function \"setMonsterAttackNowT\" not yet implemented', args)\n    }\n\n    callMethod(methodName: string, methodArgs: number[]): NerpReturnType {\n        if (methodName === 'Stop') {\n            throw new Error('Stop')\n        } else if (methodName === 'TRUE') {\n            return 1\n        } else if (methodName === 'FALSE') {\n            return 0\n        }\n        const setRegisterMatch = methodName.match(/^SetR([0-7])$/)\n        if (setRegisterMatch) {\n            return this.setR(setRegisterMatch[1], methodArgs[0])\n        }\n        const addRegisterMatch = methodName.match(/^AddR([0-7])$/)\n        if (addRegisterMatch) {\n            return this.addR(addRegisterMatch[1], methodArgs[0])\n        }\n        const subRegisterMatch = methodName.match(/^SubR([0-7])$/)\n        if (subRegisterMatch) {\n            return this.subR(subRegisterMatch[1], methodArgs[0])\n        }\n        const getRegisterMatch = methodName.match(/^GetR([0-7])$/)\n        if (getRegisterMatch) {\n            return this.getR(getRegisterMatch[1])\n        }\n        const setTimerMatch = methodName.match(/^SetTimer([0-3])$/)\n        if (setTimerMatch) {\n            const timer = Number(setTimerMatch[1])\n            return this.setTimer(timer, methodArgs[0])\n        }\n        const getTimerMatch = methodName.match(/^GetTimer([0-3])$/)\n        if (getTimerMatch) {\n            const timer = Number(getTimerMatch[1])\n            return this.getTimer(timer)\n        }\n        const flashIconMatch = methodName.match(/^Flash(.+)Icon$/)\n        if (flashIconMatch) {\n            const iconName = flashIconMatch[1]\n            const iconClickedEntry = NerpRunner.iconClickedConfig.find((c) => c.iconName.toLowerCase() === iconName.toLowerCase())\n            if (iconClickedEntry) {\n                EventBroker.publish(new GuiButtonBlinkEvent(iconClickedEntry.buttonType, methodArgs[0] === 1))\n                return\n            } else {\n                console.warn(`Could not flash icon \"${iconName}\"`)\n            }\n        }\n        const setIconClickedMatch = methodName.match(/^Set(.+?)(?:Icon)?(?:Button)?Clicked$/)\n        if (setIconClickedMatch) {\n            const iconName = setIconClickedMatch[1]\n            const iconClickedEntry = NerpRunner.iconClickedConfig.find((c) => c.iconName.toLowerCase() === iconName.toLowerCase())\n            if (iconClickedEntry) {\n                this.iconClicked.set(iconClickedEntry.iconName.toLowerCase(), methodArgs[0])\n                return\n            } else {\n                console.warn(`Could not set icon \"${iconName}\" clicked`)\n            }\n        }\n        const getIconClickedMatch = methodName.match(/^Get(.+?)(?:Icon)?(?:Button)?Clicked$/)\n        if (getIconClickedMatch) {\n            const iconName = getIconClickedMatch[1]\n            const iconClickedEntry = NerpRunner.iconClickedConfig.find((c) => c.iconName.toLowerCase() === iconName.toLowerCase())\n            if (iconClickedEntry) {\n                return this.iconClicked.getOrUpdate(iconClickedEntry.iconName.toLowerCase(), () => 0)\n            } else {\n                console.warn(`Could not get icon \"${iconName}\" clicked`)\n            }\n        }\n        const lMethodName = methodName.toLowerCase()\n        const memberName = Object.getOwnPropertyNames(NerpRunner.prototype).find((name) => name.toLowerCase() === lMethodName) as keyof NerpRunner\n        if (memberName) return (this[memberName] as Function)?.apply(this, methodArgs)\n        throw new Error(`Undefined method: ${methodName}`)\n    }\n\n    execute() {\n        try {\n            this.messageTimerMs = this.messageTimerMs > 0 ? this.messageTimerMs - NERP_EXECUTION_INTERVAL : 0\n            if (NerpRunner.debug) console.log(`Starting execution with registers set to ${this.registers}`)\n            for (this.programCounter = 0; this.programCounter < this.script.statements.length; this.programCounter++) {\n                const statement = this.script.statements[this.programCounter]\n                if (NerpRunner.debug) {\n                    console.log(`${this.programCounter}: ${this.script.lines[this.programCounter]}`)\n                    console.log(statement)\n                }\n                statement.execute(this)\n            }\n        } catch (e) {\n            if ((e as Error).message === 'Stop') {\n                return\n            }\n            console.error(e)\n            console.error('FATAL ERROR! Script execution failed! You can NOT win anymore!')\n            this.stop()\n        }\n    }\n}\n","import { AudioContext, AudioListener, PositionalAudio } from 'three'\nimport { SaveGameManager } from '../resource/SaveGameManager'\nimport { EventKey } from '../event/EventKeyEnum'\nimport { NerpRunner } from '../nerp/NerpRunner'\nimport { EventBroker } from '../event/EventBroker'\nimport { VERBOSE } from '../params'\nimport { PRNG } from '../game/factory/PRNG'\n\nexport class SoundManager {\n    private static readonly MISSING_SFX = ['SurfaceSFX_Tunnel'].map((n) => n.toLowerCase()) // ignore known sfx issues\n    static readonly playingAudio: Map<number, PositionalAudio> = new Map()\n    static readonly sfxBuffersByKey: Map<string, AudioBuffer[]> = new Map()\n    static sceneAudioListener: AudioListener\n    static sfxAudioTarget: GainNode\n    static skipVoiceLines: boolean = false\n    private static audioId: number = 1 // start with 1 for truthiness safety\n\n    static init() {\n        this.sceneAudioListener = new AudioListener() // late init to be compatible with eventual test setup\n        this.playingAudio.forEach((audio) => {\n            if (audio?.isPlaying) audio.stop()\n        })\n        this.playingAudio.clear()\n        EventBroker.subscribe(EventKey.PAUSE_GAME, () => this.playingAudio.forEach((a) => a.pause())) // XXX What if audio was paused for other reasons\n        EventBroker.subscribe(EventKey.UNPAUSE_GAME, () => this.playingAudio.forEach((a) => !a.isPlaying && a.play()))\n    }\n\n    static setupSfxAudioTarget(): GainNode {\n        this.sfxAudioTarget = this.sfxAudioTarget || AudioContext.getContext().createGain()\n        this.sfxAudioTarget.gain.value = SaveGameManager.getSfxVolume()\n        if (SaveGameManager.preferences.toggleSfx) {\n            this.sfxAudioTarget.connect(AudioContext.getContext().destination)\n        } else {\n            this.sfxAudioTarget.disconnect()\n        }\n        return this.sfxAudioTarget\n    }\n\n    static playVoice(soundName: string): AudioBufferSourceNode | undefined {\n        if (this.skipVoiceLines) return undefined\n        const sound = this.playSfxSound(soundName)\n        if (!sound) return undefined\n        this.skipVoiceLines = true\n        sound.addEventListener('ended', () => {\n            setTimeout(() => {\n                this.skipVoiceLines = false\n            }, NerpRunner.timeAddedAfterSample)\n        })\n        return sound\n    }\n\n    static playLoopSound(soundName: string): AudioBufferSourceNode | undefined {\n        const sound = this.playSfxSound(soundName)\n        if (sound) sound.loop = true\n        return sound\n    }\n\n    static playSfxSound(soundName: string): AudioBufferSourceNode | undefined {\n        try {\n            const audioBuffer = this.getSoundBuffer(soundName)\n            if (!audioBuffer) return undefined\n            const source = AudioContext.getContext().createBufferSource()\n            source.buffer = audioBuffer\n            source.connect(this.setupSfxAudioTarget())\n            source.start()\n            return source\n        } catch (e) {\n            console.error(`Could not play sound ${soundName}`, e)\n            return undefined\n        }\n    }\n\n    static getSoundBuffer(sfxName: string): AudioBuffer | undefined {\n        sfxName = sfxName.toLowerCase()\n        if (sfxName === 'sfx_null') return undefined\n        return PRNG.unsafe.sample(this.sfxBuffersByKey.getOrUpdate(sfxName, () => {\n            if (VERBOSE || !this.MISSING_SFX.includes(sfxName)) {\n                console.warn(`Could not find SFX with name '${sfxName}'`)\n            }\n            return []\n        }))\n    }\n\n    static stopAudio(audioId: number | undefined): undefined {\n        if (!audioId) return undefined\n        const audio = this.playingAudio.get(audioId)\n        if (!audio) return undefined\n        if (audio?.isPlaying) audio.stop()\n        this.playingAudio.delete(audioId)\n        return undefined\n    }\n\n    static get nextAudioId(): number {\n        this.audioId++\n        return this.audioId\n    }\n}\n","const _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n/**\n * Generate a [UUID]{@link https://en.wikipedia.org/wiki/Universally_unique_identifier}\n * (universally unique identifier).\n *\n * @return {string} The UUID.\n */\nfunction generateUUID() {\n\n\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\n/**\n * Clamps the given value between min and max.\n *\n * @param {number} value - The value to clamp.\n * @param {number} min - The min value.\n * @param {number} max - The max value.\n * @return {number} The clamped value.\n */\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n/**\n * Computes the Euclidean modulo of the given parameters that\n * is `( ( n % m ) + m ) % m`.\n *\n * @param {number} n - The first parameter.\n * @param {number} m - The second parameter.\n * @return {number} The Euclidean modulo.\n */\nfunction euclideanModulo( n, m ) {\n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n/**\n * Performs a linear mapping from range `<a1, a2>` to range `<b1, b2>`\n * for the given value.\n *\n * @param {number} x - The value to be mapped.\n * @param {number} a1 - Minimum value for range A.\n * @param {number} a2 - Maximum value for range A.\n * @param {number} b1 - Minimum value for range B.\n * @param {number} b2 - Maximum value for range B.\n * @return {number} The mapped value.\n */\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n/**\n * Returns the percentage in the closed interval `[0, 1]` of the given value\n * between the start and end point.\n *\n * @param {number} x - The start point\n * @param {number} y - The end point.\n * @param {number} value - A value between start and end.\n * @return {number} The interpolation factor.\n */\nfunction inverseLerp( x, y, value ) {\n\n\t// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n/**\n * Returns a value linearly interpolated from two known points based on the given interval -\n * `t = 0` will return `x` and `t = 1` will return `y`.\n *\n * @param {number} x - The start point\n * @param {number} y - The end point.\n * @param {number} t - The interpolation factor in the closed interval `[0, 1]`.\n * @return {number} The interpolated value.\n */\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n/**\n * Smoothly interpolate a number from `x` to `y` in  a spring-like manner using a delta\n * time to maintain frame rate independent movement. For details, see\n * [Frame rate independent damping using lerp]{@link http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/}.\n *\n * @param {number} x - The current point.\n * @param {number} y - The target point.\n * @param {number} lambda - A higher lambda value will make the movement more sudden,\n * and a lower value will make the movement more gradual.\n * @param {number} dt - Delta time in seconds.\n * @return {number} The interpolated value.\n */\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n/**\n * Returns a value that alternates between `0` and the given `length` parameter.\n *\n * @param {number} x - The value to pingpong.\n * @param {number} [length=1] - The positive value the function will pingpong to.\n * @return {number} The alternated value.\n */\nfunction pingpong( x, length = 1 ) {\n\n\t// https://www.desmos.com/calculator/vcsjnyz7x4\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n/**\n * Returns a value in the range `[0,1]` that represents the percentage that `x` has\n * moved between `min` and `max`, but smoothed or slowed down the closer `x` is to\n * the `min` and `max`.\n *\n * See [Smoothstep]{@link http://en.wikipedia.org/wiki/Smoothstep} for more details.\n *\n * @param {number} x - The value to evaluate based on its position between min and max.\n * @param {number} min - The min value. Any x value below min will be `0`.\n * @param {number} max - The max value. Any x value above max will be `1`.\n * @return {number} The alternated value.\n */\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\n/**\n * A [variation on smoothstep]{@link https://en.wikipedia.org/wiki/Smoothstep#Variations}\n * that has zero 1st and 2nd order derivatives at x=0 and x=1.\n *\n * @param {number} x - The value to evaluate based on its position between min and max.\n * @param {number} min - The min value. Any x value below min will be `0`.\n * @param {number} max - The max value. Any x value above max will be `1`.\n * @return {number} The alternated value.\n */\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n/**\n * Returns a random integer from `<low, high>` interval.\n *\n * @param {number} low - The lower value boundary.\n * @param {number} high - The upper value boundary\n * @return {number} A random integer.\n */\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n/**\n * Returns a random float from `<low, high>` interval.\n *\n * @param {number} low - The lower value boundary.\n * @param {number} high - The upper value boundary\n * @return {number} A random float.\n */\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n/**\n * Returns a random integer from `<-range/2, range/2>` interval.\n *\n * @param {number} range - Defines the value range.\n * @return {number} A random float.\n */\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n/**\n * Returns a deterministic pseudo-random float in the interval `[0, 1]`.\n *\n * @param {number} [s] - The integer seed.\n * @return {number} A random float.\n */\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} degrees - A value in degrees.\n * @return {number} The converted value in radians.\n */\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\n/**\n * Converts radians to degrees.\n *\n * @param {number} radians - A value in radians.\n * @return {number} The converted value in degrees.\n */\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\n/**\n * Returns `true` if the given number is a power of two.\n *\n * @param {number} value - The value to check.\n * @return {boolean} Whether the given number is a power of two or not.\n */\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\n/**\n * Returns the smallest power of two that is greater than or equal to the given number.\n *\n * @param {number} value - The value to find a POT for.\n * @return {number} The smallest power of two that is greater than or equal to the given number.\n */\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\n/**\n * Returns the largest power of two that is less than or equal to the given number.\n *\n * @param {number} value - The value to find a POT for.\n * @return {number} The largest power of two that is less than or equal to the given number.\n */\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\n/**\n * Sets the given quaternion from the [Intrinsic Proper Euler Angles]{@link https://en.wikipedia.org/wiki/Euler_angles}\n * defined by the given angles and order.\n *\n * Rotations are applied to the axes in the order specified by order:\n * rotation by angle `a` is applied first, then by angle `b`, then by angle `c`.\n *\n * @param {Quaternion} q - The quaternion to set.\n * @param {number} a - The rotation applied to the first axis, in radians.\n * @param {number} b - The rotation applied to the second axis, in radians.\n * @param {number} c - The rotation applied to the third axis, in radians.\n * @param {('XYX'|'XZX'|'YXY'|'YZY'|'ZXZ'|'ZYZ')} order - A string specifying the axes order.\n */\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\n/**\n * Denormalizes the given value according to the given typed array.\n *\n * @param {number} value - The value to denormalize.\n * @param {TypedArray} array - The typed array that defines the data type of the value.\n * @return {number} The denormalize (float) value in the range `[0,1]`.\n */\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\n/**\n * Normalizes the given value according to the given typed array.\n *\n * @param {number} value - The float value in the range `[0,1]` to normalize.\n * @param {TypedArray} array - The typed array that defines the data type of the value.\n * @return {number} The normalize value.\n */\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\n/**\n * @class\n * @classdesc A collection of math utility functions.\n * @hideconstructor\n */\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\t/**\n\t * Generate a [UUID]{@link https://en.wikipedia.org/wiki/Universally_unique_identifier}\n\t * (universally unique identifier).\n\t *\n\t * @static\n\t * @method\n\t * @return {string} The UUID.\n\t */\n\tgenerateUUID: generateUUID,\n\t/**\n\t * Clamps the given value between min and max.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} value - The value to clamp.\n\t * @param {number} min - The min value.\n\t * @param {number} max - The max value.\n\t * @return {number} The clamped value.\n\t */\n\tclamp: clamp,\n\t/**\n\t * Computes the Euclidean modulo of the given parameters that\n\t * is `( ( n % m ) + m ) % m`.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} n - The first parameter.\n\t * @param {number} m - The second parameter.\n\t * @return {number} The Euclidean modulo.\n\t */\n\teuclideanModulo: euclideanModulo,\n\t/**\n\t * Performs a linear mapping from range `<a1, a2>` to range `<b1, b2>`\n\t * for the given value.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} x - The value to be mapped.\n\t * @param {number} a1 - Minimum value for range A.\n\t * @param {number} a2 - Maximum value for range A.\n\t * @param {number} b1 - Minimum value for range B.\n\t * @param {number} b2 - Maximum value for range B.\n\t * @return {number} The mapped value.\n\t */\n\tmapLinear: mapLinear,\n\t/**\n\t * Returns the percentage in the closed interval `[0, 1]` of the given value\n\t * between the start and end point.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} x - The start point\n\t * @param {number} y - The end point.\n\t * @param {number} value - A value between start and end.\n\t * @return {number} The interpolation factor.\n\t */\n\tinverseLerp: inverseLerp,\n\t/**\n\t * Returns a value linearly interpolated from two known points based on the given interval -\n\t * `t = 0` will return `x` and `t = 1` will return `y`.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} x - The start point\n\t * @param {number} y - The end point.\n\t * @param {number} t - The interpolation factor in the closed interval `[0, 1]`.\n\t * @return {number} The interpolated value.\n\t */\n\tlerp: lerp,\n\t/**\n\t * Smoothly interpolate a number from `x` to `y` in  a spring-like manner using a delta\n\t * time to maintain frame rate independent movement. For details, see\n\t * [Frame rate independent damping using lerp]{@link http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/}.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} x - The current point.\n\t * @param {number} y - The target point.\n\t * @param {number} lambda - A higher lambda value will make the movement more sudden,\n\t * and a lower value will make the movement more gradual.\n\t * @param {number} dt - Delta time in seconds.\n\t * @return {number} The interpolated value.\n\t */\n\tdamp: damp,\n\t/**\n\t * Returns a value that alternates between `0` and the given `length` parameter.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} x - The value to pingpong.\n\t * @param {number} [length=1] - The positive value the function will pingpong to.\n\t * @return {number} The alternated value.\n\t */\n\tpingpong: pingpong,\n\t/**\n\t * Returns a value in the range `[0,1]` that represents the percentage that `x` has\n\t * moved between `min` and `max`, but smoothed or slowed down the closer `x` is to\n\t * the `min` and `max`.\n\t *\n\t * See [Smoothstep]{@link http://en.wikipedia.org/wiki/Smoothstep} for more details.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} x - The value to evaluate based on its position between min and max.\n\t * @param {number} min - The min value. Any x value below min will be `0`.\n\t * @param {number} max - The max value. Any x value above max will be `1`.\n\t * @return {number} The alternated value.\n\t */\n\tsmoothstep: smoothstep,\n\t/**\n\t * A [variation on smoothstep]{@link https://en.wikipedia.org/wiki/Smoothstep#Variations}\n\t * that has zero 1st and 2nd order derivatives at x=0 and x=1.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} x - The value to evaluate based on its position between min and max.\n\t * @param {number} min - The min value. Any x value below min will be `0`.\n\t * @param {number} max - The max value. Any x value above max will be `1`.\n\t * @return {number} The alternated value.\n\t */\n\tsmootherstep: smootherstep,\n\t/**\n\t * Returns a random integer from `<low, high>` interval.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} low - The lower value boundary.\n\t * @param {number} high - The upper value boundary\n\t * @return {number} A random integer.\n\t */\n\trandInt: randInt,\n\t/**\n\t * Returns a random float from `<low, high>` interval.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} low - The lower value boundary.\n\t * @param {number} high - The upper value boundary\n\t * @return {number} A random float.\n\t */\n\trandFloat: randFloat,\n\t/**\n\t * Returns a random integer from `<-range/2, range/2>` interval.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} range - Defines the value range.\n\t * @return {number} A random float.\n\t */\n\trandFloatSpread: randFloatSpread,\n\t/**\n\t * Returns a deterministic pseudo-random float in the interval `[0, 1]`.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} [s] - The integer seed.\n\t * @return {number} A random float.\n\t */\n\tseededRandom: seededRandom,\n\t/**\n\t * Converts degrees to radians.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} degrees - A value in degrees.\n\t * @return {number} The converted value in radians.\n\t */\n\tdegToRad: degToRad,\n\t/**\n\t * Converts radians to degrees.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} radians - A value in radians.\n\t * @return {number} The converted value in degrees.\n\t */\n\tradToDeg: radToDeg,\n\t/**\n\t * Returns `true` if the given number is a power of two.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} value - The value to check.\n\t * @return {boolean} Whether the given number is a power of two or not.\n\t */\n\tisPowerOfTwo: isPowerOfTwo,\n\t/**\n\t * Returns the smallest power of two that is greater than or equal to the given number.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} value - The value to find a POT for.\n\t * @return {number} The smallest power of two that is greater than or equal to the given number.\n\t */\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\t/**\n\t * Returns the largest power of two that is less than or equal to the given number.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} value - The value to find a POT for.\n\t * @return {number} The largest power of two that is less than or equal to the given number.\n\t */\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\t/**\n\t * Sets the given quaternion from the [Intrinsic Proper Euler Angles]{@link https://en.wikipedia.org/wiki/Euler_angles}\n\t * defined by the given angles and order.\n\t *\n\t * Rotations are applied to the axes in the order specified by order:\n\t * rotation by angle `a` is applied first, then by angle `b`, then by angle `c`.\n\t *\n\t * @static\n\t * @method\n\t * @param {Quaternion} q - The quaternion to set.\n\t * @param {number} a - The rotation applied to the first axis, in radians.\n\t * @param {number} b - The rotation applied to the second axis, in radians.\n\t * @param {number} c - The rotation applied to the third axis, in radians.\n\t * @param {('XYX'|'XZX'|'YXY'|'YZY'|'ZXZ'|'ZYZ')} order - A string specifying the axes order.\n\t */\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\t/**\n\t * Normalizes the given value according to the given typed array.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} value - The float value in the range `[0,1]` to normalize.\n\t * @param {TypedArray} array - The typed array that defines the data type of the value.\n\t * @return {number} The normalize value.\n\t */\n\tnormalize: normalize,\n\t/**\n\t * Denormalizes the given value according to the given typed array.\n\t *\n\t * @static\n\t * @method\n\t * @param {number} value - The value to denormalize.\n\t * @param {TypedArray} array - The typed array that defines the data type of the value.\n\t * @return {number} The denormalize (float) value in the range `[0,1]`.\n\t */\n\tdenormalize: denormalize\n};\n\nexport {\n\tDEG2RAD,\n\tRAD2DEG,\n\tgenerateUUID,\n\tclamp,\n\teuclideanModulo,\n\tmapLinear,\n\tinverseLerp,\n\tlerp,\n\tdamp,\n\tpingpong,\n\tsmoothstep,\n\tsmootherstep,\n\trandInt,\n\trandFloat,\n\trandFloatSpread,\n\tseededRandom,\n\tdegToRad,\n\tradToDeg,\n\tisPowerOfTwo,\n\tceilPowerOfTwo,\n\tfloorPowerOfTwo,\n\tsetQuaternionFromProperEuler,\n\tnormalize,\n\tdenormalize,\n\tMathUtils\n};\n","import { clamp } from './MathUtils.js';\n\n/**\n * Class for representing a Quaternion. Quaternions are used in three.js to represent rotations.\n *\n * Iterating through a vector instance will yield its components `(x, y, z, w)` in\n * the corresponding order.\n *\n * Note that three.js expects Quaternions to be normalized.\n * ```js\n * const quaternion = new THREE.Quaternion();\n * quaternion.setFromAxisAngle( new THREE.Vector3( 0, 1, 0 ), Math.PI / 2 );\n *\n * const vector = new THREE.Vector3( 1, 0, 0 );\n * vector.applyQuaternion( quaternion );\n * ```\n */\nclass Quaternion {\n\n\t/**\n\t * Constructs a new quaternion.\n\t *\n\t * @param {number} [x=0] - The x value of this quaternion.\n\t * @param {number} [y=0] - The y value of this quaternion.\n\t * @param {number} [z=0] - The z value of this quaternion.\n\t * @param {number} [w=1] - The w value of this quaternion.\n\t */\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\t/**\n\t * Interpolates between two quaternions via SLERP. This implementation assumes the\n\t * quaternion data are managed  in flat arrays.\n\t *\n\t * @param {Array<number>} dst - The destination array.\n\t * @param {number} dstOffset - An offset into the destination array.\n\t * @param {Array<number>} src0 - The source array of the first quaternion.\n\t * @param {number} srcOffset0 - An offset into the first source array.\n\t * @param {Array<number>} src1 -  The source array of the second quaternion.\n\t * @param {number} srcOffset1 - An offset into the second source array.\n\t * @param {number} t - The interpolation factor in the range `[0,1]`.\n\t * @see {@link Quaternion#slerp}\n\t */\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\t/**\n\t * Multiplies two quaternions. This implementation assumes the quaternion data are managed\n\t * in flat arrays.\n\t *\n\t * @param {Array<number>} dst - The destination array.\n\t * @param {number} dstOffset - An offset into the destination array.\n\t * @param {Array<number>} src0 - The source array of the first quaternion.\n\t * @param {number} srcOffset0 - An offset into the first source array.\n\t * @param {Array<number>} src1 -  The source array of the second quaternion.\n\t * @param {number} srcOffset1 - An offset into the second source array.\n\t * @return {Array<number>} The destination array.\n\t * @see {@link Quaternion#multiplyQuaternions}.\n\t */\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\t/**\n\t * The x value of this quaternion.\n\t *\n\t * @type {number}\n\t * @default 0\n\t */\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\t/**\n\t * The y value of this quaternion.\n\t *\n\t * @type {number}\n\t * @default 0\n\t */\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\t/**\n\t * The z value of this quaternion.\n\t *\n\t * @type {number}\n\t * @default 0\n\t */\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\t/**\n\t * The w value of this quaternion.\n\t *\n\t * @type {number}\n\t * @default 1\n\t */\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\t/**\n\t * Sets the quaternion components.\n\t *\n\t * @param {number} x - The x value of this quaternion.\n\t * @param {number} y - The y value of this quaternion.\n\t * @param {number} z - The z value of this quaternion.\n\t * @param {number} w - The w value of this quaternion.\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns a new quaternion with copied values from this instance.\n\t *\n\t * @return {Quaternion} A clone of this instance.\n\t */\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\t/**\n\t * Copies the values of the given quaternion to this instance.\n\t *\n\t * @param {Quaternion} quaternion - The quaternion to copy.\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets this quaternion from the rotation specified by the given\n\t * Euler angles.\n\t *\n\t * @param {Euler} euler - The Euler angles.\n\t * @param {boolean} [update=true] - Whether the internal `onChange` callback should be executed or not.\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets this quaternion from the given axis and angle.\n\t *\n\t * @param {Vector3} axis - The normalized axis.\n\t * @param {number} angle - The angle in radians.\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets this quaternion from the given rotation matrix.\n\t *\n\t * @param {Matrix4} m - A 4x4 matrix of which the upper 3x3 of matrix is a pure rotation matrix (i.e. unscaled).\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets this quaternion to the rotation required to rotate the direction vector\n\t * `vFrom` to the direction vector `vTo`.\n\t *\n\t * @param {Vector3} vFrom - The first (normalized) direction vector.\n\t * @param {Vector3} vTo - The second (normalized) direction vector.\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < 1e-8 ) { // the epsilon value has been discussed in #31286\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\t/**\n\t * Returns the angle between this quaternion and the given one in radians.\n\t *\n\t * @param {Quaternion} q - The quaternion to compute the angle with.\n\t * @return {number} The angle in radians.\n\t */\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\t/**\n\t * Rotates this quaternion by a given angular step to the given quaternion.\n\t * The method ensures that the final quaternion will not overshoot `q`.\n\t *\n\t * @param {Quaternion} q - The target quaternion.\n\t * @param {number} step - The angular step in radians.\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets this quaternion to the identity quaternion; that is, to the\n\t * quaternion that represents \"no rotation\".\n\t *\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\t/**\n\t * Inverts this quaternion via {@link Quaternion#conjugate}. The\n\t * quaternion is assumed to have unit length.\n\t *\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tinvert() {\n\n\t\treturn this.conjugate();\n\n\t}\n\n\t/**\n\t * Returns the rotational conjugate of this quaternion. The conjugate of a\n\t * quaternion represents the same rotation in the opposite direction about\n\t * the rotational axis.\n\t *\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Calculates the dot product of this quaternion and the given one.\n\t *\n\t * @param {Quaternion} v - The quaternion to compute the dot product with.\n\t * @return {number} The result of the dot product.\n\t */\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\t/**\n\t * Computes the squared Euclidean length (straight-line length) of this quaternion,\n\t * considered as a 4 dimensional vector. This can be useful if you are comparing the\n\t * lengths of two quaternions, as this is a slightly more efficient calculation than\n\t * {@link Quaternion#length}.\n\t *\n\t * @return {number} The squared Euclidean length.\n\t */\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\t/**\n\t * Computes the Euclidean length (straight-line length) of this quaternion,\n\t * considered as a 4 dimensional vector.\n\t *\n\t * @return {number} The Euclidean length.\n\t */\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\t/**\n\t * Normalizes this quaternion - that is, calculated the quaternion that performs\n\t * the same rotation as this one, but has a length equal to `1`.\n\t *\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Multiplies this quaternion by the given one.\n\t *\n\t * @param {Quaternion} q - The quaternion.\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\t/**\n\t * Pre-multiplies this quaternion by the given one.\n\t *\n\t * @param {Quaternion} q - The quaternion.\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\t/**\n\t * Multiplies the given quaternions and stores the result in this instance.\n\t *\n\t * @param {Quaternion} a - The first quaternion.\n\t * @param {Quaternion} b - The second quaternion.\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Performs a spherical linear interpolation between quaternions.\n\t *\n\t * @param {Quaternion} qb - The target quaternion.\n\t * @param {number} t - The interpolation factor in the closed interval `[0, 1]`.\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Performs a spherical linear interpolation between the given quaternions\n\t * and stores the result in this quaternion.\n\t *\n\t * @param {Quaternion} qa - The source quaternion.\n\t * @param {Quaternion} qb - The target quaternion.\n\t * @param {number} t - The interpolation factor in the closed interval `[0, 1]`.\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\t/**\n\t * Sets this quaternion to a uniformly random, normalized quaternion.\n\t *\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\trandom() {\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\t/**\n\t * Returns `true` if this quaternion is equal with the given one.\n\t *\n\t * @param {Quaternion} quaternion - The quaternion to test for equality.\n\t * @return {boolean} Whether this quaternion is equal with the given one.\n\t */\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\t/**\n\t * Sets this quaternion's components from the given array.\n\t *\n\t * @param {Array<number>} array - An array holding the quaternion component values.\n\t * @param {number} [offset=0] - The offset into the array.\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Writes the components of this quaternion to the given array. If no array is provided,\n\t * the method returns a new instance.\n\t *\n\t * @param {Array<number>} [array=[]] - The target array holding the quaternion components.\n\t * @param {number} [offset=0] - Index of the first element in the array.\n\t * @return {Array<number>} The quaternion components.\n\t */\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\t/**\n\t * Sets the components of this quaternion from the given buffer attribute.\n\t *\n\t * @param {BufferAttribute} attribute - The buffer attribute holding quaternion data.\n\t * @param {number} index - The index into the attribute.\n\t * @return {Quaternion} A reference to this quaternion.\n\t */\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * This methods defines the serialization result of this class. Returns the\n\t * numerical elements of this quaternion in an array of format `[x, y, z, w]`.\n\t *\n\t * @return {Array<number>} The serialized quaternion.\n\t */\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nexport { Quaternion };\n","import { clamp } from './MathUtils.js';\nimport { Quaternion } from './Quaternion.js';\n\n/**\n * Class representing a 3D vector. A 3D vector is an ordered triplet of numbers\n * (labeled x, y and z), which can be used to represent a number of things, such as:\n *\n * - A point in 3D space.\n * - A direction and length in 3D space. In three.js the length will\n * always be the Euclidean distance(straight-line distance) from `(0, 0, 0)` to `(x, y, z)`\n * and the direction is also measured from `(0, 0, 0)` towards `(x, y, z)`.\n * - Any arbitrary ordered triplet of numbers.\n *\n * There are other things a 3D vector can be used to represent, such as\n * momentum vectors and so on, however these are the most\n * common uses in three.js.\n *\n * Iterating through a vector instance will yield its components `(x, y, z)` in\n * the corresponding order.\n * ```js\n * const a = new THREE.Vector3( 0, 1, 0 );\n *\n * //no arguments; will be initialised to (0, 0, 0)\n * const b = new THREE.Vector3( );\n *\n * const d = a.distanceTo( b );\n * ```\n */\nclass Vector3 {\n\n\t/**\n\t * Constructs a new 3D vector.\n\t *\n\t * @param {number} [x=0] - The x value of this vector.\n\t * @param {number} [y=0] - The y value of this vector.\n\t * @param {number} [z=0] - The z value of this vector.\n\t */\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tVector3.prototype.isVector3 = true;\n\n\t\t/**\n\t\t * The x value of this vector.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.x = x;\n\n\t\t/**\n\t\t * The y value of this vector.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.y = y;\n\n\t\t/**\n\t\t * The z value of this vector.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.z = z;\n\n\t}\n\n\t/**\n\t * Sets the vector components.\n\t *\n\t * @param {number} x - The value of the x component.\n\t * @param {number} y - The value of the y component.\n\t * @param {number} z - The value of the z component.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the vector components to the same value.\n\t *\n\t * @param {number} scalar - The value to set for all vector components.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the vector's x component to the given value\n\t *\n\t * @param {number} x - The value to set.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the vector's y component to the given value\n\t *\n\t * @param {number} y - The value to set.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the vector's z component to the given value\n\t *\n\t * @param {number} z - The value to set.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Allows to set a vector component with an index.\n\t *\n\t * @param {number} index - The component index. `0` equals to x, `1` equals to y, `2` equals to z.\n\t * @param {number} value - The value to set.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns the value of the vector component which matches the given index.\n\t *\n\t * @param {number} index - The component index. `0` equals to x, `1` equals to y, `2` equals to z.\n\t * @return {number} A vector component value.\n\t */\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a new vector with copied values from this instance.\n\t *\n\t * @return {Vector3} A clone of this instance.\n\t */\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\t/**\n\t * Copies the values of the given vector to this instance.\n\t *\n\t * @param {Vector3} v - The vector to copy.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Adds the given vector to this instance.\n\t *\n\t * @param {Vector3} v - The vector to add.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Adds the given scalar value to all components of this instance.\n\t *\n\t * @param {number} s - The scalar to add.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Adds the given vectors and stores the result in this instance.\n\t *\n\t * @param {Vector3} a - The first vector.\n\t * @param {Vector3} b - The second vector.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Adds the given vector scaled by the given factor to this instance.\n\t *\n\t * @param {Vector3|Vector4} v - The vector.\n\t * @param {number} s - The factor that scales `v`.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Subtracts the given vector from this instance.\n\t *\n\t * @param {Vector3} v - The vector to subtract.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Subtracts the given scalar value from all components of this instance.\n\t *\n\t * @param {number} s - The scalar to subtract.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Subtracts the given vectors and stores the result in this instance.\n\t *\n\t * @param {Vector3} a - The first vector.\n\t * @param {Vector3} b - The second vector.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Multiplies the given vector with this instance.\n\t *\n\t * @param {Vector3} v - The vector to multiply.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Multiplies the given scalar value with all components of this instance.\n\t *\n\t * @param {number} scalar - The scalar to multiply.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Multiplies the given vectors and stores the result in this instance.\n\t *\n\t * @param {Vector3} a - The first vector.\n\t * @param {Vector3} b - The second vector.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Applies the given Euler rotation to this vector.\n\t *\n\t * @param {Euler} euler - The Euler angles.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t}\n\n\t/**\n\t * Applies a rotation specified by an axis and an angle to this vector.\n\t *\n\t * @param {Vector3} axis - A normalized vector representing the rotation axis.\n\t * @param {number} angle - The angle in radians.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\t/**\n\t * Multiplies this vector with the given 3x3 matrix.\n\t *\n\t * @param {Matrix3} m - The 3x3 matrix.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Multiplies this vector by the given normal matrix and normalizes\n\t * the result.\n\t *\n\t * @param {Matrix3} m - The normal matrix.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\t/**\n\t * Multiplies this vector (with an implicit 1 in the 4th dimension) by m, and\n\t * divides by perspective.\n\t *\n\t * @param {Matrix4} m - The matrix to apply.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Applies the given Quaternion to this vector.\n\t *\n\t * @param {Quaternion} q - The Quaternion.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Projects this vector from world space into the camera's normalized\n\t * device coordinate (NDC) space.\n\t *\n\t * @param {Camera} camera - The camera.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\t/**\n\t * Unprojects this vector from the camera's normalized device coordinate (NDC)\n\t * space into world space.\n\t *\n\t * @param {Camera} camera - The camera.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\t/**\n\t * Transforms the direction of this vector by a matrix (the upper left 3 x 3\n\t * subset of the given 4x4 matrix and then normalizes the result.\n\t *\n\t * @param {Matrix4} m - The matrix.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\t/**\n\t * Divides this instance by the given vector.\n\t *\n\t * @param {Vector3} v - The vector to divide.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Divides this vector by the given scalar.\n\t *\n\t * @param {number} scalar - The scalar to divide.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\t/**\n\t * If this vector's x, y or z value is greater than the given vector's x, y or z\n\t * value, replace that value with the corresponding min value.\n\t *\n\t * @param {Vector3} v - The vector.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * If this vector's x, y or z value is less than the given vector's x, y or z\n\t * value, replace that value with the corresponding max value.\n\t *\n\t * @param {Vector3} v - The vector.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * If this vector's x, y or z value is greater than the max vector's x, y or z\n\t * value, it is replaced by the corresponding value.\n\t * If this vector's x, y or z value is less than the min vector's x, y or z value,\n\t * it is replaced by the corresponding value.\n\t *\n\t * @param {Vector3} min - The minimum x, y and z values.\n\t * @param {Vector3} max - The maximum x, y and z values in the desired range.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * If this vector's x, y or z values are greater than the max value, they are\n\t * replaced by the max value.\n\t * If this vector's x, y or z values are less than the min value, they are\n\t * replaced by the min value.\n\t *\n\t * @param {number} minVal - The minimum value the components will be clamped to.\n\t * @param {number} maxVal - The maximum value the components will be clamped to.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * If this vector's length is greater than the max value, it is replaced by\n\t * the max value.\n\t * If this vector's length is less than the min value, it is replaced by the\n\t * min value.\n\t *\n\t * @param {number} min - The minimum value the vector length will be clamped to.\n\t * @param {number} max - The maximum value the vector length will be clamped to.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\t/**\n\t * The components of this vector are rounded down to the nearest integer value.\n\t *\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * The components of this vector are rounded up to the nearest integer value.\n\t *\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * The components of this vector are rounded to the nearest integer value\n\t *\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * The components of this vector are rounded towards zero (up if negative,\n\t * down if positive) to an integer value.\n\t *\n\t * @return {Vector3} A reference to this vector.\n\t */\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Inverts this vector - i.e. sets x = -x, y = -y and z = -z.\n\t *\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Calculates the dot product of the given vector with this instance.\n\t *\n\t * @param {Vector3} v - The vector to compute the dot product with.\n\t * @return {number} The result of the dot product.\n\t */\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\t/**\n\t * Computes the square of the Euclidean length (straight-line length) from\n\t * (0, 0, 0) to (x, y, z). If you are comparing the lengths of vectors, you should\n\t * compare the length squared instead as it is slightly more efficient to calculate.\n\t *\n\t * @return {number} The square length of this vector.\n\t */\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\t/**\n\t * Computes the  Euclidean length (straight-line length) from (0, 0, 0) to (x, y, z).\n\t *\n\t * @return {number} The length of this vector.\n\t */\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\t/**\n\t * Computes the Manhattan length of this vector.\n\t *\n\t * @return {number} The length of this vector.\n\t */\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\t/**\n\t * Converts this vector to a unit vector - that is, sets it equal to a vector\n\t * with the same direction as this one, but with a vector length of `1`.\n\t *\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\t/**\n\t * Sets this vector to a vector with the same direction as this one, but\n\t * with the specified length.\n\t *\n\t * @param {number} length - The new length of this vector.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\t/**\n\t * Linearly interpolates between the given vector and this instance, where\n\t * alpha is the percent distance along the line - alpha = 0 will be this\n\t * vector, and alpha = 1 will be the given one.\n\t *\n\t * @param {Vector3} v - The vector to interpolate towards.\n\t * @param {number} alpha - The interpolation factor, typically in the closed interval `[0, 1]`.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Linearly interpolates between the given vectors, where alpha is the percent\n\t * distance along the line - alpha = 0 will be first vector, and alpha = 1 will\n\t * be the second one. The result is stored in this instance.\n\t *\n\t * @param {Vector3} v1 - The first vector.\n\t * @param {Vector3} v2 - The second vector.\n\t * @param {number} alpha - The interpolation factor, typically in the closed interval `[0, 1]`.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Calculates the cross product of the given vector with this instance.\n\t *\n\t * @param {Vector3} v - The vector to compute the cross product with.\n\t * @return {Vector3} The result of the cross product.\n\t */\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\t/**\n\t * Calculates the cross product of the given vectors and stores the result\n\t * in this instance.\n\t *\n\t * @param {Vector3} a - The first vector.\n\t * @param {Vector3} b - The second vector.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Projects this vector onto the given one.\n\t *\n\t * @param {Vector3} v - The vector to project to.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\t/**\n\t * Projects this vector onto a plane by subtracting this\n\t * vector projected onto the plane's normal from this vector.\n\t *\n\t * @param {Vector3} planeNormal - The plane normal.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector );\n\n\t}\n\n\t/**\n\t * Reflects this vector off a plane orthogonal to the given normal vector.\n\t *\n\t * @param {Vector3} normal - The (normalized) normal vector.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\treflect( normal ) {\n\n\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\t/**\n\t * Returns the angle between the given vector and this instance in radians.\n\t *\n\t * @param {Vector3} v - The vector to compute the angle with.\n\t * @return {number} The angle in radians.\n\t */\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\t/**\n\t * Computes the distance from the given vector to this instance.\n\t *\n\t * @param {Vector3} v - The vector to compute the distance to.\n\t * @return {number} The distance.\n\t */\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\t/**\n\t * Computes the squared distance from the given vector to this instance.\n\t * If you are just comparing the distance with another distance, you should compare\n\t * the distance squared instead as it is slightly more efficient to calculate.\n\t *\n\t * @param {Vector3} v - The vector to compute the squared distance to.\n\t * @return {number} The squared distance.\n\t */\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\t/**\n\t * Computes the Manhattan distance from the given vector to this instance.\n\t *\n\t * @param {Vector3} v - The vector to compute the Manhattan distance to.\n\t * @return {number} The Manhattan distance.\n\t */\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\t/**\n\t * Sets the vector components from the given spherical coordinates.\n\t *\n\t * @param {Spherical} s - The spherical coordinates.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\t/**\n\t * Sets the vector components from the given spherical coordinates.\n\t *\n\t * @param {number} radius - The radius.\n\t * @param {number} phi - The phi angle in radians.\n\t * @param {number} theta - The theta angle in radians.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the vector components from the given cylindrical coordinates.\n\t *\n\t * @param {Cylindrical} c - The cylindrical coordinates.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\t/**\n\t * Sets the vector components from the given cylindrical coordinates.\n\t *\n\t * @param {number} radius - The radius.\n\t * @param {number} theta - The theta angle in radians.\n\t * @param {number} y - The y value.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the vector components to the position elements of the\n\t * given transformation matrix.\n\t *\n\t * @param {Matrix4} m - The 4x4 matrix.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the vector components to the scale elements of the\n\t * given transformation matrix.\n\t *\n\t * @param {Matrix4} m - The 4x4 matrix.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the vector components from the specified matrix column.\n\t *\n\t * @param {Matrix4} m - The 4x4 matrix.\n\t * @param {number} index - The column index.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\t/**\n\t * Sets the vector components from the specified matrix column.\n\t *\n\t * @param {Matrix3} m - The 3x3 matrix.\n\t * @param {number} index - The column index.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\t/**\n\t * Sets the vector components from the given Euler angles.\n\t *\n\t * @param {Euler} e - The Euler angles to set.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the vector components from the RGB components of the\n\t * given color.\n\t *\n\t * @param {Color} c - The color to set.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns `true` if this vector is equal with the given one.\n\t *\n\t * @param {Vector3} v - The vector to test for equality.\n\t * @return {boolean} Whether this vector is equal with the given one.\n\t */\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\t/**\n\t * Sets this vector's x value to be `array[ offset ]`, y value to be `array[ offset + 1 ]`\n\t * and z value to be `array[ offset + 2 ]`.\n\t *\n\t * @param {Array<number>} array - An array holding the vector component values.\n\t * @param {number} [offset=0] - The offset into the array.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Writes the components of this vector to the given array. If no array is provided,\n\t * the method returns a new instance.\n\t *\n\t * @param {Array<number>} [array=[]] - The target array holding the vector components.\n\t * @param {number} [offset=0] - Index of the first element in the array.\n\t * @return {Array<number>} The vector components.\n\t */\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\t/**\n\t * Sets the components of this vector from the given buffer attribute.\n\t *\n\t * @param {BufferAttribute} attribute - The buffer attribute holding vector data.\n\t * @param {number} index - The index into the attribute.\n\t * @return {Vector3} A reference to this vector.\n\t */\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets each component of this vector to a pseudo-random value between `0` and\n\t * `1`, excluding `1`.\n\t *\n\t * @return {Vector3} A reference to this vector.\n\t */\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets this vector to a uniformly random point on a unit sphere.\n\t *\n\t * @return {Vector3} A reference to this vector.\n\t */\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nexport { Vector3 };\n","import { clamp } from './MathUtils.js';\n\n/**\n * Class representing a 2D vector. A 2D vector is an ordered pair of numbers\n * (labeled x and y), which can be used to represent a number of things, such as:\n *\n * - A point in 2D space (i.e. a position on a plane).\n * - A direction and length across a plane. In three.js the length will\n * always be the Euclidean distance(straight-line distance) from `(0, 0)` to `(x, y)`\n * and the direction is also measured from `(0, 0)` towards `(x, y)`.\n * - Any arbitrary ordered pair of numbers.\n *\n * There are other things a 2D vector can be used to represent, such as\n * momentum vectors, complex numbers and so on, however these are the most\n * common uses in three.js.\n *\n * Iterating through a vector instance will yield its components `(x, y)` in\n * the corresponding order.\n * ```js\n * const a = new THREE.Vector2( 0, 1 );\n *\n * //no arguments; will be initialised to (0, 0)\n * const b = new THREE.Vector2( );\n *\n * const d = a.distanceTo( b );\n * ```\n */\nclass Vector2 {\n\n\t/**\n\t * Constructs a new 2D vector.\n\t *\n\t * @param {number} [x=0] - The x value of this vector.\n\t * @param {number} [y=0] - The y value of this vector.\n\t */\n\tconstructor( x = 0, y = 0 ) {\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tVector2.prototype.isVector2 = true;\n\n\t\t/**\n\t\t * The x value of this vector.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.x = x;\n\n\t\t/**\n\t\t * The y value of this vector.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.y = y;\n\n\t}\n\n\t/**\n\t * Alias for {@link Vector2#x}.\n\t *\n\t * @type {number}\n\t */\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\t/**\n\t * Alias for {@link Vector2#y}.\n\t *\n\t * @type {number}\n\t */\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\t/**\n\t * Sets the vector components.\n\t *\n\t * @param {number} x - The value of the x component.\n\t * @param {number} y - The value of the y component.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the vector components to the same value.\n\t *\n\t * @param {number} scalar - The value to set for all vector components.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the vector's x component to the given value\n\t *\n\t * @param {number} x - The value to set.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the vector's y component to the given value\n\t *\n\t * @param {number} y - The value to set.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Allows to set a vector component with an index.\n\t *\n\t * @param {number} index - The component index. `0` equals to x, `1` equals to y.\n\t * @param {number} value - The value to set.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns the value of the vector component which matches the given index.\n\t *\n\t * @param {number} index - The component index. `0` equals to x, `1` equals to y.\n\t * @return {number} A vector component value.\n\t */\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a new vector with copied values from this instance.\n\t *\n\t * @return {Vector2} A clone of this instance.\n\t */\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\t/**\n\t * Copies the values of the given vector to this instance.\n\t *\n\t * @param {Vector2} v - The vector to copy.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Adds the given vector to this instance.\n\t *\n\t * @param {Vector2} v - The vector to add.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Adds the given scalar value to all components of this instance.\n\t *\n\t * @param {number} s - The scalar to add.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Adds the given vectors and stores the result in this instance.\n\t *\n\t * @param {Vector2} a - The first vector.\n\t * @param {Vector2} b - The second vector.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Adds the given vector scaled by the given factor to this instance.\n\t *\n\t * @param {Vector2} v - The vector.\n\t * @param {number} s - The factor that scales `v`.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Subtracts the given vector from this instance.\n\t *\n\t * @param {Vector2} v - The vector to subtract.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Subtracts the given scalar value from all components of this instance.\n\t *\n\t * @param {number} s - The scalar to subtract.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Subtracts the given vectors and stores the result in this instance.\n\t *\n\t * @param {Vector2} a - The first vector.\n\t * @param {Vector2} b - The second vector.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Multiplies the given vector with this instance.\n\t *\n\t * @param {Vector2} v - The vector to multiply.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Multiplies the given scalar value with all components of this instance.\n\t *\n\t * @param {number} scalar - The scalar to multiply.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Divides this instance by the given vector.\n\t *\n\t * @param {Vector2} v - The vector to divide.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Divides this vector by the given scalar.\n\t *\n\t * @param {number} scalar - The scalar to divide.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\t/**\n\t * Multiplies this vector (with an implicit 1 as the 3rd component) by\n\t * the given 3x3 matrix.\n\t *\n\t * @param {Matrix3} m - The matrix to apply.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * If this vector's x or y value is greater than the given vector's x or y\n\t * value, replace that value with the corresponding min value.\n\t *\n\t * @param {Vector2} v - The vector.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * If this vector's x or y value is less than the given vector's x or y\n\t * value, replace that value with the corresponding max value.\n\t *\n\t * @param {Vector2} v - The vector.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * If this vector's x or y value is greater than the max vector's x or y\n\t * value, it is replaced by the corresponding value.\n\t * If this vector's x or y value is less than the min vector's x or y value,\n\t * it is replaced by the corresponding value.\n\t *\n\t * @param {Vector2} min - The minimum x and y values.\n\t * @param {Vector2} max - The maximum x and y values in the desired range.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * If this vector's x or y values are greater than the max value, they are\n\t * replaced by the max value.\n\t * If this vector's x or y values are less than the min value, they are\n\t * replaced by the min value.\n\t *\n\t * @param {number} minVal - The minimum value the components will be clamped to.\n\t * @param {number} maxVal - The maximum value the components will be clamped to.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * If this vector's length is greater than the max value, it is replaced by\n\t * the max value.\n\t * If this vector's length is less than the min value, it is replaced by the\n\t * min value.\n\t *\n\t * @param {number} min - The minimum value the vector length will be clamped to.\n\t * @param {number} max - The maximum value the vector length will be clamped to.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\t/**\n\t * The components of this vector are rounded down to the nearest integer value.\n\t *\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * The components of this vector are rounded up to the nearest integer value.\n\t *\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * The components of this vector are rounded to the nearest integer value\n\t *\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * The components of this vector are rounded towards zero (up if negative,\n\t * down if positive) to an integer value.\n\t *\n\t * @return {Vector2} A reference to this vector.\n\t */\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Inverts this vector - i.e. sets x = -x and y = -y.\n\t *\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Calculates the dot product of the given vector with this instance.\n\t *\n\t * @param {Vector2} v - The vector to compute the dot product with.\n\t * @return {number} The result of the dot product.\n\t */\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\t/**\n\t * Calculates the cross product of the given vector with this instance.\n\t *\n\t * @param {Vector2} v - The vector to compute the cross product with.\n\t * @return {number} The result of the cross product.\n\t */\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\t/**\n\t * Computes the square of the Euclidean length (straight-line length) from\n\t * (0, 0) to (x, y). If you are comparing the lengths of vectors, you should\n\t * compare the length squared instead as it is slightly more efficient to calculate.\n\t *\n\t * @return {number} The square length of this vector.\n\t */\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\t/**\n\t * Computes the  Euclidean length (straight-line length) from (0, 0) to (x, y).\n\t *\n\t * @return {number} The length of this vector.\n\t */\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\t/**\n\t * Computes the Manhattan length of this vector.\n\t *\n\t * @return {number} The length of this vector.\n\t */\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\t/**\n\t * Converts this vector to a unit vector - that is, sets it equal to a vector\n\t * with the same direction as this one, but with a vector length of `1`.\n\t *\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\t/**\n\t * Computes the angle in radians of this vector with respect to the positive x-axis.\n\t *\n\t * @return {number} The angle in radians.\n\t */\n\tangle() {\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\t/**\n\t * Returns the angle between the given vector and this instance in radians.\n\t *\n\t * @param {Vector2} v - The vector to compute the angle with.\n\t * @return {number} The angle in radians.\n\t */\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\t/**\n\t * Computes the distance from the given vector to this instance.\n\t *\n\t * @param {Vector2} v - The vector to compute the distance to.\n\t * @return {number} The distance.\n\t */\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\t/**\n\t * Computes the squared distance from the given vector to this instance.\n\t * If you are just comparing the distance with another distance, you should compare\n\t * the distance squared instead as it is slightly more efficient to calculate.\n\t *\n\t * @param {Vector2} v - The vector to compute the squared distance to.\n\t * @return {number} The squared distance.\n\t */\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\t/**\n\t * Computes the Manhattan distance from the given vector to this instance.\n\t *\n\t * @param {Vector2} v - The vector to compute the Manhattan distance to.\n\t * @return {number} The Manhattan distance.\n\t */\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\t/**\n\t * Sets this vector to a vector with the same direction as this one, but\n\t * with the specified length.\n\t *\n\t * @param {number} length - The new length of this vector.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\t/**\n\t * Linearly interpolates between the given vector and this instance, where\n\t * alpha is the percent distance along the line - alpha = 0 will be this\n\t * vector, and alpha = 1 will be the given one.\n\t *\n\t * @param {Vector2} v - The vector to interpolate towards.\n\t * @param {number} alpha - The interpolation factor, typically in the closed interval `[0, 1]`.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Linearly interpolates between the given vectors, where alpha is the percent\n\t * distance along the line - alpha = 0 will be first vector, and alpha = 1 will\n\t * be the second one. The result is stored in this instance.\n\t *\n\t * @param {Vector2} v1 - The first vector.\n\t * @param {Vector2} v2 - The second vector.\n\t * @param {number} alpha - The interpolation factor, typically in the closed interval `[0, 1]`.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns `true` if this vector is equal with the given one.\n\t *\n\t * @param {Vector2} v - The vector to test for equality.\n\t * @return {boolean} Whether this vector is equal with the given one.\n\t */\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\t/**\n\t * Sets this vector's x value to be `array[ offset ]` and y\n\t * value to be `array[ offset + 1 ]`.\n\t *\n\t * @param {Array<number>} array - An array holding the vector component values.\n\t * @param {number} [offset=0] - The offset into the array.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Writes the components of this vector to the given array. If no array is provided,\n\t * the method returns a new instance.\n\t *\n\t * @param {Array<number>} [array=[]] - The target array holding the vector components.\n\t * @param {number} [offset=0] - Index of the first element in the array.\n\t * @return {Array<number>} The vector components.\n\t */\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\t/**\n\t * Sets the components of this vector from the given buffer attribute.\n\t *\n\t * @param {BufferAttribute} attribute - The buffer attribute holding vector data.\n\t * @param {number} index - The index into the attribute.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Rotates this vector around the given center by the given angle.\n\t *\n\t * @param {Vector2} center - The point around which to rotate.\n\t * @param {number} angle - The angle to rotate, in radians.\n\t * @return {Vector2} A reference to this vector.\n\t */\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets each component of this vector to a pseudo-random value between `0` and\n\t * `1`, excluding `1`.\n\t *\n\t * @return {Vector2} A reference to this vector.\n\t */\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nexport { Vector2 };\n","export const REVISION = '180';\n\n/**\n * Represents mouse buttons and interaction types in context of controls.\n *\n * @type {ConstantsMouse}\n * @constant\n */\nexport const MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\n\n/**\n * Represents touch interaction types in context of controls.\n *\n * @type {ConstantsTouch}\n * @constant\n */\nexport const TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\n\n/**\n * Disables face culling.\n *\n * @type {number}\n * @constant\n */\nexport const CullFaceNone = 0;\n\n/**\n * Culls back faces.\n *\n * @type {number}\n * @constant\n */\nexport const CullFaceBack = 1;\n\n/**\n * Culls front faces.\n *\n * @type {number}\n * @constant\n */\nexport const CullFaceFront = 2;\n\n/**\n * Culls both front and back faces.\n *\n * @type {number}\n * @constant\n */\nexport const CullFaceFrontBack = 3;\n\n/**\n * Gives unfiltered shadow maps - fastest, but lowest quality.\n *\n * @type {number}\n * @constant\n */\nexport const BasicShadowMap = 0;\n\n/**\n * Filters shadow maps using the Percentage-Closer Filtering (PCF) algorithm.\n *\n * @type {number}\n * @constant\n */\nexport const PCFShadowMap = 1;\n\n/**\n * Filters shadow maps using the Percentage-Closer Filtering (PCF) algorithm with\n * better soft shadows especially when using low-resolution shadow maps.\n *\n * @type {number}\n * @constant\n */\nexport const PCFSoftShadowMap = 2;\n\n/**\n * Filters shadow maps using the Variance Shadow Map (VSM) algorithm.\n * When using VSMShadowMap all shadow receivers will also cast shadows.\n *\n * @type {number}\n * @constant\n */\nexport const VSMShadowMap = 3;\n\n/**\n * Only front faces are rendered.\n *\n * @type {number}\n * @constant\n */\nexport const FrontSide = 0;\n\n/**\n * Only back faces are rendered.\n *\n * @type {number}\n * @constant\n */\nexport const BackSide = 1;\n\n/**\n * Both front and back faces are rendered.\n *\n * @type {number}\n * @constant\n */\nexport const DoubleSide = 2;\n\n/**\n * No blending is performed which effectively disables\n * alpha transparency.\n *\n * @type {number}\n * @constant\n */\nexport const NoBlending = 0;\n\n/**\n * The default blending.\n *\n * @type {number}\n * @constant\n */\nexport const NormalBlending = 1;\n\n/**\n * Represents additive blending.\n *\n * @type {number}\n * @constant\n */\nexport const AdditiveBlending = 2;\n\n/**\n * Represents subtractive blending.\n *\n * @type {number}\n * @constant\n */\nexport const SubtractiveBlending = 3;\n\n/**\n * Represents multiply blending.\n *\n * @type {number}\n * @constant\n */\nexport const MultiplyBlending = 4;\n\n/**\n * Represents custom blending.\n *\n * @type {number}\n * @constant\n */\nexport const CustomBlending = 5;\n\n/**\n * A `source + destination` blending equation.\n *\n * @type {number}\n * @constant\n */\nexport const AddEquation = 100;\n\n/**\n * A `source - destination` blending equation.\n *\n * @type {number}\n * @constant\n */\nexport const SubtractEquation = 101;\n\n/**\n * A `destination - source` blending equation.\n *\n * @type {number}\n * @constant\n */\nexport const ReverseSubtractEquation = 102;\n\n/**\n * A blend equation that uses the minimum of source and destination.\n *\n * @type {number}\n * @constant\n */\nexport const MinEquation = 103;\n\n/**\n * A blend equation that uses the maximum of source and destination.\n *\n * @type {number}\n * @constant\n */\nexport const MaxEquation = 104;\n\n/**\n * Multiplies all colors by `0`.\n *\n * @type {number}\n * @constant\n */\nexport const ZeroFactor = 200;\n\n/**\n * Multiplies all colors by `1`.\n *\n * @type {number}\n * @constant\n */\nexport const OneFactor = 201;\n\n/**\n * Multiplies all colors by the source colors.\n *\n * @type {number}\n * @constant\n */\nexport const SrcColorFactor = 202;\n\n/**\n * Multiplies all colors by `1` minus each source color.\n *\n * @type {number}\n * @constant\n */\nexport const OneMinusSrcColorFactor = 203;\n\n/**\n * Multiplies all colors by the source alpha value.\n *\n * @type {number}\n * @constant\n */\nexport const SrcAlphaFactor = 204;\n\n/**\n * Multiplies all colors by 1 minus the source alpha value.\n *\n * @type {number}\n * @constant\n */\nexport const OneMinusSrcAlphaFactor = 205;\n\n/**\n * Multiplies all colors by the destination alpha value.\n *\n * @type {number}\n * @constant\n */\nexport const DstAlphaFactor = 206;\n\n/**\n * Multiplies all colors by `1` minus the destination alpha value.\n *\n * @type {number}\n * @constant\n */\nexport const OneMinusDstAlphaFactor = 207;\n\n/**\n * Multiplies all colors by the destination color.\n *\n * @type {number}\n * @constant\n */\nexport const DstColorFactor = 208;\n\n/**\n * Multiplies all colors by `1` minus each destination color.\n *\n * @type {number}\n * @constant\n */\nexport const OneMinusDstColorFactor = 209;\n\n/**\n * Multiplies the RGB colors by the smaller of either the source alpha\n * value or the value of `1` minus the destination alpha value. The alpha\n * value is multiplied by `1`.\n *\n * @type {number}\n * @constant\n */\nexport const SrcAlphaSaturateFactor = 210;\n\n/**\n * Multiplies all colors by a constant color.\n *\n * @type {number}\n * @constant\n */\nexport const ConstantColorFactor = 211;\n\n/**\n * Multiplies all colors by `1` minus a constant color.\n *\n * @type {number}\n * @constant\n */\nexport const OneMinusConstantColorFactor = 212;\n\n/**\n * Multiplies all colors by a constant alpha value.\n *\n * @type {number}\n * @constant\n */\nexport const ConstantAlphaFactor = 213;\n\n/**\n * Multiplies all colors by 1 minus a constant alpha value.\n *\n * @type {number}\n * @constant\n */\nexport const OneMinusConstantAlphaFactor = 214;\n\n/**\n * Never pass.\n *\n * @type {number}\n * @constant\n */\nexport const NeverDepth = 0;\n\n/**\n * Always pass.\n *\n * @type {number}\n * @constant\n */\nexport const AlwaysDepth = 1;\n\n/**\n * Pass if the incoming value is less than the depth buffer value.\n *\n * @type {number}\n * @constant\n */\nexport const LessDepth = 2;\n\n/**\n * Pass if the incoming value is less than or equal to the depth buffer value.\n *\n * @type {number}\n * @constant\n */\nexport const LessEqualDepth = 3;\n\n/**\n * Pass if the incoming value equals the depth buffer value.\n *\n * @type {number}\n * @constant\n */\nexport const EqualDepth = 4;\n\n/**\n * Pass if the incoming value is greater than or equal to the depth buffer value.\n *\n * @type {number}\n * @constant\n */\nexport const GreaterEqualDepth = 5;\n\n/**\n * Pass if the incoming value is greater than the depth buffer value.\n *\n * @type {number}\n * @constant\n */\nexport const GreaterDepth = 6;\n\n/**\n * Pass if the incoming value is not equal to the depth buffer value.\n *\n * @type {number}\n * @constant\n */\nexport const NotEqualDepth = 7;\n\n/**\n * Multiplies the environment map color with the surface color.\n *\n * @type {number}\n * @constant\n */\nexport const MultiplyOperation = 0;\n\n/**\n * Uses reflectivity to blend between the two colors.\n *\n * @type {number}\n * @constant\n */\nexport const MixOperation = 1;\n\n/**\n * Adds the two colors.\n *\n * @type {number}\n * @constant\n */\nexport const AddOperation = 2;\n\n/**\n * No tone mapping is applied.\n *\n * @type {number}\n * @constant\n */\nexport const NoToneMapping = 0;\n\n/**\n * Linear tone mapping.\n *\n * @type {number}\n * @constant\n */\nexport const LinearToneMapping = 1;\n\n/**\n * Reinhard tone mapping.\n *\n * @type {number}\n * @constant\n */\nexport const ReinhardToneMapping = 2;\n\n/**\n * Cineon tone mapping.\n *\n * @type {number}\n * @constant\n */\nexport const CineonToneMapping = 3;\n\n/**\n * ACES Filmic tone mapping.\n *\n * @type {number}\n * @constant\n */\nexport const ACESFilmicToneMapping = 4;\n\n/**\n * Custom tone mapping.\n *\n * Expects a custom implementation by modifying shader code of the material's fragment shader.\n *\n * @type {number}\n * @constant\n */\nexport const CustomToneMapping = 5;\n\n/**\n * AgX tone mapping.\n *\n * @type {number}\n * @constant\n */\nexport const AgXToneMapping = 6;\n\n/**\n * Neutral tone mapping.\n *\n * Implementation based on the Khronos 3D Commerce Group standard tone mapping.\n *\n * @type {number}\n * @constant\n */\nexport const NeutralToneMapping = 7;\n\n/**\n * The skinned mesh shares the same world space as the skeleton.\n *\n * @type {string}\n * @constant\n */\nexport const AttachedBindMode = 'attached';\n\n/**\n * The skinned mesh does not share the same world space as the skeleton.\n * This is useful when a skeleton is shared across multiple skinned meshes.\n *\n * @type {string}\n * @constant\n */\nexport const DetachedBindMode = 'detached';\n\n/**\n * Maps textures using the geometry's UV coordinates.\n *\n * @type {number}\n * @constant\n */\nexport const UVMapping = 300;\n\n/**\n * Reflection mapping for cube textures.\n *\n * @type {number}\n * @constant\n */\nexport const CubeReflectionMapping = 301;\n\n/**\n * Refraction mapping for cube textures.\n *\n * @type {number}\n * @constant\n */\nexport const CubeRefractionMapping = 302;\n\n/**\n * Reflection mapping for equirectangular textures.\n *\n * @type {number}\n * @constant\n */\nexport const EquirectangularReflectionMapping = 303;\n\n/**\n * Refraction mapping for equirectangular textures.\n *\n * @type {number}\n * @constant\n */\nexport const EquirectangularRefractionMapping = 304;\n\n/**\n * Reflection mapping for PMREM textures.\n *\n * @type {number}\n * @constant\n */\nexport const CubeUVReflectionMapping = 306;\n\n/**\n * The texture will simply repeat to infinity.\n *\n * @type {number}\n * @constant\n */\nexport const RepeatWrapping = 1000;\n\n/**\n * The last pixel of the texture stretches to the edge of the mesh.\n *\n * @type {number}\n * @constant\n */\nexport const ClampToEdgeWrapping = 1001;\n\n/**\n * The texture will repeats to infinity, mirroring on each repeat.\n *\n * @type {number}\n * @constant\n */\nexport const MirroredRepeatWrapping = 1002;\n\n/**\n * Returns the value of the texture element that is nearest (in Manhattan distance)\n * to the specified texture coordinates.\n *\n * @type {number}\n * @constant\n */\nexport const NearestFilter = 1003;\n\n/**\n * Chooses the mipmap that most closely matches the size of the pixel being textured\n * and uses the `NearestFilter` criterion (the texel nearest to the center of the pixel)\n * to produce a texture value.\n *\n * @type {number}\n * @constant\n */\nexport const NearestMipmapNearestFilter = 1004;\nexport const NearestMipMapNearestFilter = 1004; // legacy\n\n/**\n * Chooses the two mipmaps that most closely match the size of the pixel being textured and\n * uses the `NearestFilter` criterion to produce a texture value from each mipmap.\n * The final texture value is a weighted average of those two values.\n *\n * @type {number}\n * @constant\n */\nexport const NearestMipmapLinearFilter = 1005;\nexport const NearestMipMapLinearFilter = 1005; // legacy\n\n/**\n * Returns the weighted average of the four texture elements that are closest to the specified\n * texture coordinates, and can include items wrapped or repeated from other parts of a texture,\n * depending on the values of `wrapS` and `wrapT`, and on the exact mapping.\n *\n * @type {number}\n * @constant\n */\nexport const LinearFilter = 1006;\n\n/**\n * Chooses the mipmap that most closely matches the size of the pixel being textured and uses\n * the `LinearFilter` criterion (a weighted average of the four texels that are closest to the\n * center of the pixel) to produce a texture value.\n *\n * @type {number}\n * @constant\n */\nexport const LinearMipmapNearestFilter = 1007;\nexport const LinearMipMapNearestFilter = 1007; // legacy\n\n/**\n * Chooses the two mipmaps that most closely match the size of the pixel being textured and uses\n * the `LinearFilter` criterion to produce a texture value from each mipmap. The final texture value\n * is a weighted average of those two values.\n *\n * @type {number}\n * @constant\n */\nexport const LinearMipmapLinearFilter = 1008;\nexport const LinearMipMapLinearFilter = 1008; // legacy\n\n/**\n * An unsigned byte data type for textures.\n *\n * @type {number}\n * @constant\n */\nexport const UnsignedByteType = 1009;\n\n/**\n * A byte data type for textures.\n *\n * @type {number}\n * @constant\n */\nexport const ByteType = 1010;\n\n/**\n * A short data type for textures.\n *\n * @type {number}\n * @constant\n */\nexport const ShortType = 1011;\n\n/**\n * An unsigned short data type for textures.\n *\n * @type {number}\n * @constant\n */\nexport const UnsignedShortType = 1012;\n\n/**\n * An int data type for textures.\n *\n * @type {number}\n * @constant\n */\nexport const IntType = 1013;\n\n/**\n * An unsigned int data type for textures.\n *\n * @type {number}\n * @constant\n */\nexport const UnsignedIntType = 1014;\n\n/**\n * A float data type for textures.\n *\n * @type {number}\n * @constant\n */\nexport const FloatType = 1015;\n\n/**\n * A half float data type for textures.\n *\n * @type {number}\n * @constant\n */\nexport const HalfFloatType = 1016;\n\n/**\n * An unsigned short 4_4_4_4 (packed) data type for textures.\n *\n * @type {number}\n * @constant\n */\nexport const UnsignedShort4444Type = 1017;\n\n/**\n * An unsigned short 5_5_5_1 (packed) data type for textures.\n *\n * @type {number}\n * @constant\n */\nexport const UnsignedShort5551Type = 1018;\n\n/**\n * An unsigned int 24_8 data type for textures.\n *\n * @type {number}\n * @constant\n */\nexport const UnsignedInt248Type = 1020;\n\n/**\n * An unsigned int 5_9_9_9 (packed) data type for textures.\n *\n * @type {number}\n * @constant\n */\nexport const UnsignedInt5999Type = 35902;\n\n/**\n * An unsigned int 10_11_11 (packed) data type for textures.\n *\n * @type {number}\n * @constant\n */\nexport const UnsignedInt101111Type = 35899;\n\n/**\n * Discards the red, green and blue components and reads just the alpha component.\n *\n * @type {number}\n * @constant\n */\nexport const AlphaFormat = 1021;\n\n/**\n * Discards the alpha component and reads the red, green and blue component.\n *\n * @type {number}\n * @constant\n */\nexport const RGBFormat = 1022;\n\n/**\n * Reads the red, green, blue and alpha components.\n *\n * @type {number}\n * @constant\n */\nexport const RGBAFormat = 1023;\n\n/**\n * Reads each element as a single depth value, converts it to floating point, and clamps to the range `[0,1]`.\n *\n * @type {number}\n * @constant\n */\nexport const DepthFormat = 1026;\n\n/**\n * Reads each element is a pair of depth and stencil values. The depth component of the pair is interpreted as\n * in `DepthFormat`. The stencil component is interpreted based on the depth + stencil internal format.\n *\n * @type {number}\n * @constant\n */\nexport const DepthStencilFormat = 1027;\n\n/**\n * Discards the green, blue and alpha components and reads just the red component.\n *\n * @type {number}\n * @constant\n */\nexport const RedFormat = 1028;\n\n/**\n * Discards the green, blue and alpha components and reads just the red component. The texels are read as integers instead of floating point.\n *\n * @type {number}\n * @constant\n */\nexport const RedIntegerFormat = 1029;\n\n/**\n * Discards the alpha, and blue components and reads the red, and green components.\n *\n * @type {number}\n * @constant\n */\nexport const RGFormat = 1030;\n\n/**\n * Discards the alpha, and blue components and reads the red, and green components. The texels are read as integers instead of floating point.\n *\n * @type {number}\n * @constant\n */\nexport const RGIntegerFormat = 1031;\n\n/**\n * Discards the alpha component and reads the red, green and blue component. The texels are read as integers instead of floating point.\n *\n * @type {number}\n * @constant\n */\nexport const RGBIntegerFormat = 1032;\n\n/**\n * Reads the red, green, blue and alpha components. The texels are read as integers instead of floating point.\n *\n * @type {number}\n * @constant\n */\nexport const RGBAIntegerFormat = 1033;\n\n/**\n * A DXT1-compressed image in an RGB image format.\n *\n * @type {number}\n * @constant\n */\nexport const RGB_S3TC_DXT1_Format = 33776;\n\n/**\n * A DXT1-compressed image in an RGB image format with a simple on/off alpha value.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_S3TC_DXT1_Format = 33777;\n\n/**\n * A DXT3-compressed image in an RGBA image format. Compared to a 32-bit RGBA texture, it offers 4:1 compression.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_S3TC_DXT3_Format = 33778;\n\n/**\n * A DXT5-compressed image in an RGBA image format. It also provides a 4:1 compression, but differs to the DXT3\n * compression in how the alpha compression is done.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_S3TC_DXT5_Format = 33779;\n\n/**\n * PVRTC RGB compression in 4-bit mode. One block for each 4×4 pixels.\n *\n * @type {number}\n * @constant\n */\nexport const RGB_PVRTC_4BPPV1_Format = 35840;\n\n/**\n * PVRTC RGB compression in 2-bit mode. One block for each 8×4 pixels.\n *\n * @type {number}\n * @constant\n */\nexport const RGB_PVRTC_2BPPV1_Format = 35841;\n\n/**\n * PVRTC RGBA compression in 4-bit mode. One block for each 4×4 pixels.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_PVRTC_4BPPV1_Format = 35842;\n\n/**\n * PVRTC RGBA compression in 2-bit mode. One block for each 8×4 pixels.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_PVRTC_2BPPV1_Format = 35843;\n\n/**\n * ETC1 RGB format.\n *\n * @type {number}\n * @constant\n */\nexport const RGB_ETC1_Format = 36196;\n\n/**\n * ETC2 RGB format.\n *\n * @type {number}\n * @constant\n */\nexport const RGB_ETC2_Format = 37492;\n\n/**\n * ETC2 RGBA format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_ETC2_EAC_Format = 37496;\n\n/**\n * ASTC RGBA 4x4 format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_ASTC_4x4_Format = 37808;\n\n/**\n * ASTC RGBA 5x4 format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_ASTC_5x4_Format = 37809;\n\n/**\n * ASTC RGBA 5x5 format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_ASTC_5x5_Format = 37810;\n\n/**\n * ASTC RGBA 6x5 format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_ASTC_6x5_Format = 37811;\n\n/**\n * ASTC RGBA 6x6 format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_ASTC_6x6_Format = 37812;\n\n/**\n * ASTC RGBA 8x5 format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_ASTC_8x5_Format = 37813;\n\n/**\n * ASTC RGBA 8x6 format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_ASTC_8x6_Format = 37814;\n\n/**\n * ASTC RGBA 8x8 format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_ASTC_8x8_Format = 37815;\n\n/**\n * ASTC RGBA 10x5 format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_ASTC_10x5_Format = 37816;\n\n/**\n * ASTC RGBA 10x6 format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_ASTC_10x6_Format = 37817;\n\n/**\n * ASTC RGBA 10x8 format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_ASTC_10x8_Format = 37818;\n\n/**\n * ASTC RGBA 10x10 format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_ASTC_10x10_Format = 37819;\n\n/**\n * ASTC RGBA 12x10 format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_ASTC_12x10_Format = 37820;\n\n/**\n * ASTC RGBA 12x12 format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_ASTC_12x12_Format = 37821;\n\n/**\n * BPTC RGBA format.\n *\n * @type {number}\n * @constant\n */\nexport const RGBA_BPTC_Format = 36492;\n\n/**\n * BPTC Signed RGB format.\n *\n * @type {number}\n * @constant\n */\nexport const RGB_BPTC_SIGNED_Format = 36494;\n\n/**\n * BPTC Unsigned RGB format.\n *\n * @type {number}\n * @constant\n */\nexport const RGB_BPTC_UNSIGNED_Format = 36495;\n\n/**\n * RGTC1 Red format.\n *\n * @type {number}\n * @constant\n */\nexport const RED_RGTC1_Format = 36283;\n\n/**\n * RGTC1 Signed Red format.\n *\n * @type {number}\n * @constant\n */\nexport const SIGNED_RED_RGTC1_Format = 36284;\n\n/**\n * RGTC2 Red Green format.\n *\n * @type {number}\n * @constant\n */\nexport const RED_GREEN_RGTC2_Format = 36285;\n\n/**\n * RGTC2 Signed Red Green format.\n *\n * @type {number}\n * @constant\n */\nexport const SIGNED_RED_GREEN_RGTC2_Format = 36286;\n\n/**\n * Animations are played once.\n *\n * @type {number}\n * @constant\n */\nexport const LoopOnce = 2200;\n\n/**\n * Animations are played with a chosen number of repetitions, each time jumping from\n * the end of the clip directly to its beginning.\n *\n * @type {number}\n * @constant\n */\nexport const LoopRepeat = 2201;\n\n/**\n * Animations are played with a chosen number of repetitions, alternately playing forward\n * and backward.\n *\n * @type {number}\n * @constant\n */\nexport const LoopPingPong = 2202;\n\n/**\n * Discrete interpolation mode for keyframe tracks.\n *\n * @type {number}\n * @constant\n */\nexport const InterpolateDiscrete = 2300;\n\n/**\n * Linear interpolation mode for keyframe tracks.\n *\n * @type {number}\n * @constant\n */\nexport const InterpolateLinear = 2301;\n\n/**\n * Smooth interpolation mode for keyframe tracks.\n *\n * @type {number}\n * @constant\n */\nexport const InterpolateSmooth = 2302;\n\n/**\n * Zero curvature ending for animations.\n *\n * @type {number}\n * @constant\n */\nexport const ZeroCurvatureEnding = 2400;\n\n/**\n * Zero slope ending for animations.\n *\n * @type {number}\n * @constant\n */\nexport const ZeroSlopeEnding = 2401;\n\n/**\n * Wrap around ending for animations.\n *\n * @type {number}\n * @constant\n */\nexport const WrapAroundEnding = 2402;\n\n/**\n * Default animation blend mode.\n *\n * @type {number}\n * @constant\n */\nexport const NormalAnimationBlendMode = 2500;\n\n/**\n * Additive animation blend mode. Can be used to layer motions on top of\n * each other to build complex performances from smaller re-usable assets.\n *\n * @type {number}\n * @constant\n */\nexport const AdditiveAnimationBlendMode = 2501;\n\n/**\n * For every three vertices draw a single triangle.\n *\n * @type {number}\n * @constant\n */\nexport const TrianglesDrawMode = 0;\n\n/**\n * For each vertex draw a triangle from the last three vertices.\n *\n * @type {number}\n * @constant\n */\nexport const TriangleStripDrawMode = 1;\n\n/**\n * For each vertex draw a triangle from the first vertex and the last two vertices.\n *\n * @type {number}\n * @constant\n */\nexport const TriangleFanDrawMode = 2;\n\n/**\n * Basic depth packing.\n *\n * @type {number}\n * @constant\n */\nexport const BasicDepthPacking = 3200;\n\n/**\n * A depth value is packed into 32 bit RGBA.\n *\n * @type {number}\n * @constant\n */\nexport const RGBADepthPacking = 3201;\n\n/**\n * A depth value is packed into 24 bit RGB.\n *\n * @type {number}\n * @constant\n */\nexport const RGBDepthPacking = 3202;\n\n/**\n * A depth value is packed into 16 bit RG.\n *\n * @type {number}\n * @constant\n */\nexport const RGDepthPacking = 3203;\n\n/**\n * Normal information is relative to the underlying surface.\n *\n * @type {number}\n * @constant\n */\nexport const TangentSpaceNormalMap = 0;\n\n/**\n * Normal information is relative to the object orientation.\n *\n * @type {number}\n * @constant\n */\nexport const ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\n\n/**\n * No color space.\n *\n * @type {string}\n * @constant\n */\nexport const NoColorSpace = '';\n\n/**\n * sRGB color space.\n *\n * @type {string}\n * @constant\n */\nexport const SRGBColorSpace = 'srgb';\n\n/**\n * sRGB-linear color space.\n *\n * @type {string}\n * @constant\n */\nexport const LinearSRGBColorSpace = 'srgb-linear';\n\n/**\n * Linear transfer function.\n *\n * @type {string}\n * @constant\n */\nexport const LinearTransfer = 'linear';\n\n/**\n * sRGB transfer function.\n *\n * @type {string}\n * @constant\n */\nexport const SRGBTransfer = 'srgb';\n\n/**\n * Sets the stencil buffer value to `0`.\n *\n * @type {number}\n * @constant\n */\nexport const ZeroStencilOp = 0;\n\n/**\n * Keeps the current value.\n *\n * @type {number}\n * @constant\n */\nexport const KeepStencilOp = 7680;\n\n/**\n * Sets the stencil buffer value to the specified reference value.\n *\n * @type {number}\n * @constant\n */\nexport const ReplaceStencilOp = 7681;\n\n/**\n * Increments the current stencil buffer value. Clamps to the maximum representable unsigned value.\n *\n * @type {number}\n * @constant\n */\nexport const IncrementStencilOp = 7682;\n\n/**\n * Decrements the current stencil buffer value. Clamps to `0`.\n *\n * @type {number}\n * @constant\n */\nexport const DecrementStencilOp = 7683;\n\n/**\n * Increments the current stencil buffer value. Wraps stencil buffer value to zero when incrementing\n * the maximum representable unsigned value.\n *\n * @type {number}\n * @constant\n */\nexport const IncrementWrapStencilOp = 34055;\n\n/**\n * Decrements the current stencil buffer value. Wraps stencil buffer value to the maximum representable\n * unsigned value when decrementing a stencil buffer value of `0`.\n *\n * @type {number}\n * @constant\n */\nexport const DecrementWrapStencilOp = 34056;\n\n/**\n * Inverts the current stencil buffer value bitwise.\n *\n * @type {number}\n * @constant\n */\nexport const InvertStencilOp = 5386;\n\n/**\n * Will never return true.\n *\n * @type {number}\n * @constant\n */\nexport const NeverStencilFunc = 512;\n\n/**\n * Will return true if the stencil reference value is less than the current stencil value.\n *\n * @type {number}\n * @constant\n */\nexport const LessStencilFunc = 513;\n\n/**\n * Will return true if the stencil reference value is equal to the current stencil value.\n *\n * @type {number}\n * @constant\n */\nexport const EqualStencilFunc = 514;\n\n/**\n * Will return true if the stencil reference value is less than or equal to the current stencil value.\n *\n * @type {number}\n * @constant\n */\nexport const LessEqualStencilFunc = 515;\n\n/**\n * Will return true if the stencil reference value is greater than the current stencil value.\n *\n * @type {number}\n * @constant\n */\nexport const GreaterStencilFunc = 516;\n\n/**\n * Will return true if the stencil reference value is not equal to the current stencil value.\n *\n * @type {number}\n * @constant\n */\nexport const NotEqualStencilFunc = 517;\n\n/**\n * Will return true if the stencil reference value is greater than or equal to the current stencil value.\n *\n * @type {number}\n * @constant\n */\nexport const GreaterEqualStencilFunc = 518;\n\n/**\n * Will always return true.\n *\n * @type {number}\n * @constant\n */\nexport const AlwaysStencilFunc = 519;\n\n/**\n * Never pass.\n *\n * @type {number}\n * @constant\n */\nexport const NeverCompare = 512;\n\n/**\n * Pass if the incoming value is less than the texture value.\n *\n * @type {number}\n * @constant\n */\nexport const LessCompare = 513;\n\n/**\n * Pass if the incoming value equals the texture value.\n *\n * @type {number}\n * @constant\n */\nexport const EqualCompare = 514;\n\n/**\n * Pass if the incoming value is less than or equal to the texture value.\n *\n * @type {number}\n * @constant\n */\nexport const LessEqualCompare = 515;\n\n/**\n * Pass if the incoming value is greater than the texture value.\n *\n * @type {number}\n * @constant\n */\nexport const GreaterCompare = 516;\n\n/**\n * Pass if the incoming value is not equal to the texture value.\n *\n * @type {number}\n * @constant\n */\nexport const NotEqualCompare = 517;\n\n/**\n * Pass if the incoming value is greater than or equal to the texture value.\n *\n * @type {number}\n * @constant\n */\nexport const GreaterEqualCompare = 518;\n\n/**\n * Always pass.\n *\n * @type {number}\n * @constant\n */\nexport const AlwaysCompare = 519;\n\n/**\n * The contents are intended to be specified once by the application, and used many\n * times as the source for drawing and image specification commands.\n *\n * @type {number}\n * @constant\n */\nexport const StaticDrawUsage = 35044;\n\n/**\n * The contents are intended to be respecified repeatedly by the application, and\n * used many times as the source for drawing and image specification commands.\n *\n * @type {number}\n * @constant\n */\nexport const DynamicDrawUsage = 35048;\n\n/**\n * The contents are intended to be specified once by the application, and used at most\n * a few times as the source for drawing and image specification commands.\n *\n * @type {number}\n * @constant\n */\nexport const StreamDrawUsage = 35040;\n\n/**\n * The contents are intended to be specified once by reading data from the 3D API, and queried\n * many times by the application.\n *\n * @type {number}\n * @constant\n */\nexport const StaticReadUsage = 35045;\n\n/**\n * The contents are intended to be respecified repeatedly by reading data from the 3D API, and queried\n * many times by the application.\n *\n * @type {number}\n * @constant\n */\nexport const DynamicReadUsage = 35049;\n\n/**\n * The contents are intended to be specified once by reading data from the 3D API, and queried at most\n * a few times by the application\n *\n * @type {number}\n * @constant\n */\nexport const StreamReadUsage = 35041;\n\n/**\n * The contents are intended to be specified once by reading data from the 3D API, and used many times as\n * the source for WebGL drawing and image specification commands.\n *\n * @type {number}\n * @constant\n */\nexport const StaticCopyUsage = 35046;\n\n/**\n * The contents are intended to be respecified repeatedly by reading data from the 3D API, and used many times\n * as the source for WebGL drawing and image specification commands.\n *\n * @type {number}\n * @constant\n */\nexport const DynamicCopyUsage = 35050;\n\n/**\n * The contents are intended to be specified once by reading data from the 3D API, and used at most a few times\n * as the source for WebGL drawing and image specification commands.\n *\n * @type {number}\n * @constant\n */\nexport const StreamCopyUsage = 35042;\n\n/**\n * GLSL 1 shader code.\n *\n * @type {string}\n * @constant\n */\nexport const GLSL1 = '100';\n\n/**\n * GLSL 3 shader code.\n *\n * @type {string}\n * @constant\n */\nexport const GLSL3 = '300 es';\n\n/**\n * WebGL coordinate system.\n *\n * @type {number}\n * @constant\n */\nexport const WebGLCoordinateSystem = 2000;\n\n/**\n * WebGPU coordinate system.\n *\n * @type {number}\n * @constant\n */\nexport const WebGPUCoordinateSystem = 2001;\n\n/**\n * Represents the different timestamp query types.\n *\n * @type {ConstantsTimestampQuery}\n * @constant\n */\nexport const TimestampQuery = {\n\tCOMPUTE: 'compute',\n\tRENDER: 'render'\n};\n\n/**\n * Represents mouse buttons and interaction types in context of controls.\n *\n * @type {ConstantsInterpolationSamplingType}\n * @constant\n */\nexport const InterpolationSamplingType = {\n\tPERSPECTIVE: 'perspective',\n\tLINEAR: 'linear',\n\tFLAT: 'flat'\n};\n\n/**\n * Represents the different interpolation sampling modes.\n *\n * @type {ConstantsInterpolationSamplingMode}\n * @constant\n */\nexport const InterpolationSamplingMode = {\n\tNORMAL: 'normal',\n\tCENTROID: 'centroid',\n\tSAMPLE: 'sample',\n\tFIRST: 'first',\n\tEITHER: 'either'\n};\n\n/**\n * This type represents mouse buttons and interaction types in context of controls.\n *\n * @typedef {Object} ConstantsMouse\n * @property {number} MIDDLE - The left mouse button.\n * @property {number} LEFT - The middle mouse button.\n * @property {number} RIGHT - The right mouse button.\n * @property {number} ROTATE - A rotate interaction.\n * @property {number} DOLLY - A dolly interaction.\n * @property {number} PAN - A pan interaction.\n **/\n\n/**\n * This type represents touch interaction types in context of controls.\n *\n * @typedef {Object} ConstantsTouch\n * @property {number} ROTATE - A rotate interaction.\n * @property {number} PAN - A pan interaction.\n * @property {number} DOLLY_PAN - The dolly-pan interaction.\n * @property {number} DOLLY_ROTATE - A dolly-rotate interaction.\n **/\n\n/**\n * This type represents the different timestamp query types.\n *\n * @typedef {Object} ConstantsTimestampQuery\n * @property {string} COMPUTE - A `compute` timestamp query.\n * @property {string} RENDER - A `render` timestamp query.\n **/\n\n/**\n * Represents the different interpolation sampling types.\n *\n * @typedef {Object} ConstantsInterpolationSamplingType\n * @property {string} PERSPECTIVE - Perspective-correct interpolation.\n * @property {string} LINEAR - Linear interpolation.\n * @property {string} FLAT - Flat interpolation.\n */\n\n/**\n * Represents the different interpolation sampling modes.\n *\n * @typedef {Object} ConstantsInterpolationSamplingMode\n * @property {string} NORMAL - Normal sampling mode.\n * @property {string} CENTROID - Centroid sampling mode.\n * @property {string} SAMPLE - Sample-specific sampling mode.\n * @property {string} FIRST - Flat interpolation using the first vertex.\n * @property {string} EITHER - Flat interpolation using either vertex.\n */\n","import { Vector3 } from '../math/Vector3.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { denormalize, normalize } from '../math/MathUtils.js';\nimport { StaticDrawUsage, FloatType } from '../constants.js';\nimport { fromHalfFloat, toHalfFloat } from '../extras/DataUtils.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector2();\n\nlet _id = 0;\n\n/**\n * This class stores data for an attribute (such as vertex positions, face\n * indices, normals, colors, UVs, and any custom attributes ) associated with\n * a geometry, which allows for more efficient passing of data to the GPU.\n *\n * When working with vector-like data, the `fromBufferAttribute( attribute, index )`\n * helper methods on vector and color class might be helpful. E.g. {@link Vector3#fromBufferAttribute}.\n */\nclass BufferAttribute {\n\n\t/**\n\t * Constructs a new buffer attribute.\n\t *\n\t * @param {TypedArray} array - The array holding the attribute data.\n\t * @param {number} itemSize - The item size.\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\n\t */\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isBufferAttribute = true;\n\n\t\t/**\n\t\t * The ID of the buffer attribute.\n\t\t *\n\t\t * @name BufferAttribute#id\n\t\t * @type {number}\n\t\t * @readonly\n\t\t */\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\t/**\n\t\t * The name of the buffer attribute.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tthis.name = '';\n\n\t\t/**\n\t\t * The array holding the attribute data. It should have `itemSize * numVertices`\n\t\t * elements, where `numVertices` is the number of vertices in the associated geometry.\n\t\t *\n\t\t * @type {TypedArray}\n\t\t */\n\t\tthis.array = array;\n\n\t\t/**\n\t\t * The number of values of the array that should be associated with a particular vertex.\n\t\t * For instance, if this attribute is storing a 3-component vector (such as a position,\n\t\t * normal, or color), then the value should be `3`.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.itemSize = itemSize;\n\n\t\t/**\n\t\t * Represents the number of items this buffer attribute stores. It is internally computed\n\t\t * by dividing the `array` length by the `itemSize`.\n\t\t *\n\t\t * @type {number}\n\t\t * @readonly\n\t\t */\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\n\t\t/**\n\t\t * Applies to integer data only. Indicates how the underlying data in the buffer maps to\n\t\t * the values in the GLSL code. For instance, if `array` is an instance of `UInt16Array`,\n\t\t * and `normalized` is `true`, the values `0 - +65535` in the array data will be mapped to\n\t\t * `0.0f - +1.0f` in the GLSL attribute. If `normalized` is `false`, the values will be converted\n\t\t * to floats unmodified, i.e. `65535` becomes `65535.0f`.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.normalized = normalized;\n\n\t\t/**\n\t\t * Defines the intended usage pattern of the data store for optimization purposes.\n\t\t *\n\t\t * Note: After the initial use of a buffer, its usage cannot be changed. Instead,\n\t\t * instantiate a new one and set the desired usage before the next render.\n\t\t *\n\t\t * @type {(StaticDrawUsage|DynamicDrawUsage|StreamDrawUsage|StaticReadUsage|DynamicReadUsage|StreamReadUsage|StaticCopyUsage|DynamicCopyUsage|StreamCopyUsage)}\n\t\t * @default StaticDrawUsage\n\t\t */\n\t\tthis.usage = StaticDrawUsage;\n\n\t\t/**\n\t\t * This can be used to only update some components of stored vectors (for example, just the\n\t\t * component related to color). Use the `addUpdateRange()` function to add ranges to this array.\n\t\t *\n\t\t * @type {Array<Object>}\n\t\t */\n\t\tthis.updateRanges = [];\n\n\t\t/**\n\t\t * Configures the bound GPU type for use in shaders.\n\t\t *\n\t\t * Note: this only has an effect for integer arrays and is not configurable for float arrays.\n\t\t * For lower precision float types, use `Float16BufferAttribute`.\n\t\t *\n\t\t * @type {(FloatType|IntType)}\n\t\t * @default FloatType\n\t\t */\n\t\tthis.gpuType = FloatType;\n\n\t\t/**\n\t\t * A version number, incremented every time the `needsUpdate` is set to `true`.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.version = 0;\n\n\t}\n\n\t/**\n\t * A callback function that is executed after the renderer has transferred the attribute\n\t * array data to the GPU.\n\t */\n\tonUploadCallback() {}\n\n\t/**\n\t * Flag to indicate that this attribute has changed and should be re-sent to\n\t * the GPU. Set this to `true` when you modify the value of the array.\n\t *\n\t * @type {number}\n\t * @default false\n\t * @param {boolean} value\n\t */\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\t/**\n\t * Sets the usage of this buffer attribute.\n\t *\n\t * @param {(StaticDrawUsage|DynamicDrawUsage|StreamDrawUsage|StaticReadUsage|DynamicReadUsage|StreamReadUsage|StaticCopyUsage|DynamicCopyUsage|StreamCopyUsage)} value - The usage to set.\n\t * @return {BufferAttribute} A reference to this buffer attribute.\n\t */\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Adds a range of data in the data array to be updated on the GPU.\n\t *\n\t * @param {number} start - Position at which to start update.\n\t * @param {number} count - The number of components to update.\n\t */\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\t/**\n\t * Clears the update ranges.\n\t */\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\t/**\n\t * Copies the values of the given buffer attribute to this instance.\n\t *\n\t * @param {BufferAttribute} source - The buffer attribute to copy.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Copies a vector from the given buffer attribute to this one. The start\n\t * and destination position in the attribute buffers are represented by the\n\t * given indices.\n\t *\n\t * @param {number} index1 - The destination index into this buffer attribute.\n\t * @param {BufferAttribute} attribute - The buffer attribute to copy from.\n\t * @param {number} index2 - The source index into the given buffer attribute.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Copies the given array data into this buffer attribute.\n\t *\n\t * @param {(TypedArray|Array)} array - The array to copy.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Applies the given 3x3 matrix to the given attribute. Works with\n\t * item size `2` and `3`.\n\t *\n\t * @param {Matrix3} m - The matrix to apply.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2.fromBufferAttribute( this, i );\n\t\t\t\t_vector2.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2.x, _vector2.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( this, i );\n\t\t\t\t_vector.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Applies the given 4x4 matrix to the given attribute. Only works with\n\t * item size `3`.\n\t *\n\t * @param {Matrix4} m - The matrix to apply.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( this, i );\n\n\t\t\t_vector.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Applies the given 3x3 normal matrix to the given attribute. Only works with\n\t * item size `3`.\n\t *\n\t * @param {Matrix3} m - The normal matrix to apply.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( this, i );\n\n\t\t\t_vector.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Applies the given 4x4 matrix to the given attribute. Only works with\n\t * item size `3` and with direction vectors.\n\t *\n\t * @param {Matrix4} m - The matrix to apply.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( this, i );\n\n\t\t\t_vector.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the given array data in the buffer attribute.\n\t *\n\t * @param {(TypedArray|Array)} value - The array data to set.\n\t * @param {number} [offset=0] - The offset in this buffer attribute's array.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns the given component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} component - The component index.\n\t * @return {number} The returned value.\n\t */\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\t/**\n\t * Sets the given value to the given component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} component - The component index.\n\t * @param {number} value - The value to set.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns the x component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @return {number} The x component.\n\t */\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\t/**\n\t * Sets the x component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} x - The value to set.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns the y component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @return {number} The y component.\n\t */\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\t/**\n\t * Sets the y component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} y - The value to set.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns the z component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @return {number} The z component.\n\t */\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\t/**\n\t * Sets the z component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} z - The value to set.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns the w component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @return {number} The w component.\n\t */\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\t/**\n\t * Sets the w component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} w - The value to set.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the x and y component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} x - The value for the x component to set.\n\t * @param {number} y - The value for the y component to set.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the x, y and z component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} x - The value for the x component to set.\n\t * @param {number} y - The value for the y component to set.\n\t * @param {number} z - The value for the z component to set.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the x, y, z and w component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} x - The value for the x component to set.\n\t * @param {number} y - The value for the y component to set.\n\t * @param {number} z - The value for the z component to set.\n\t * @param {number} w - The value for the w component to set.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the given callback function that is executed after the Renderer has transferred\n\t * the attribute array data to the GPU. Can be used to perform clean-up operations after\n\t * the upload when attribute data are not needed anymore on the CPU side.\n\t *\n\t * @param {Function} callback - The `onUpload()` callback.\n\t * @return {BufferAttribute} A reference to this instance.\n\t */\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns a new buffer attribute with copied values from this instance.\n\t *\n\t * @return {BufferAttribute} A clone of this instance.\n\t */\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\t/**\n\t * Serializes the buffer attribute into JSON.\n\t *\n\t * @return {Object} A JSON object representing the serialized buffer attribute.\n\t */\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Convenient class that can be used when creating a `Int8` buffer attribute with\n * a plain `Array` instance.\n *\n * @augments BufferAttribute\n */\nclass Int8BufferAttribute extends BufferAttribute {\n\n\t/**\n\t * Constructs a new buffer attribute.\n\t *\n\t * @param {(Array<number>|Int8Array)} array - The array holding the attribute data.\n\t * @param {number} itemSize - The item size.\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\n\t */\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\n/**\n * Convenient class that can be used when creating a `UInt8` buffer attribute with\n * a plain `Array` instance.\n *\n * @augments BufferAttribute\n */\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\t/**\n\t * Constructs a new buffer attribute.\n\t *\n\t * @param {(Array<number>|Uint8Array)} array - The array holding the attribute data.\n\t * @param {number} itemSize - The item size.\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\n\t */\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\n/**\n * Convenient class that can be used when creating a `UInt8Clamped` buffer attribute with\n * a plain `Array` instance.\n *\n * @augments BufferAttribute\n */\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\t/**\n\t * Constructs a new buffer attribute.\n\t *\n\t * @param {(Array<number>|Uint8ClampedArray)} array - The array holding the attribute data.\n\t * @param {number} itemSize - The item size.\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\n\t */\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\n/**\n * Convenient class that can be used when creating a `Int16` buffer attribute with\n * a plain `Array` instance.\n *\n * @augments BufferAttribute\n */\nclass Int16BufferAttribute extends BufferAttribute {\n\n\t/**\n\t * Constructs a new buffer attribute.\n\t *\n\t * @param {(Array<number>|Int16Array)} array - The array holding the attribute data.\n\t * @param {number} itemSize - The item size.\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\n\t */\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\n/**\n * Convenient class that can be used when creating a `UInt16` buffer attribute with\n * a plain `Array` instance.\n *\n * @augments BufferAttribute\n */\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\t/**\n\t * Constructs a new buffer attribute.\n\t *\n\t * @param {(Array<number>|Uint16Array)} array - The array holding the attribute data.\n\t * @param {number} itemSize - The item size.\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\n\t */\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\n/**\n * Convenient class that can be used when creating a `Int32` buffer attribute with\n * a plain `Array` instance.\n *\n * @augments BufferAttribute\n */\nclass Int32BufferAttribute extends BufferAttribute {\n\n\t/**\n\t * Constructs a new buffer attribute.\n\t *\n\t * @param {(Array<number>|Int32Array)} array - The array holding the attribute data.\n\t * @param {number} itemSize - The item size.\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\n\t */\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\n/**\n * Convenient class that can be used when creating a `UInt32` buffer attribute with\n * a plain `Array` instance.\n *\n * @augments BufferAttribute\n */\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\t/**\n\t * Constructs a new buffer attribute.\n\t *\n\t * @param {(Array<number>|Uint32Array)} array - The array holding the attribute data.\n\t * @param {number} itemSize - The item size.\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\n\t */\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\n/**\n * Convenient class that can be used when creating a `Float16` buffer attribute with\n * a plain `Array` instance.\n *\n * This class automatically converts to and from FP16 via `Uint16Array` since `Float16Array`\n * browser support is still problematic.\n *\n * @augments BufferAttribute\n */\nclass Float16BufferAttribute extends BufferAttribute {\n\n\t/**\n\t * Constructs a new buffer attribute.\n\t *\n\t * @param {(Array<number>|Uint16Array)} array - The array holding the attribute data.\n\t * @param {number} itemSize - The item size.\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\n\t */\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Convenient class that can be used when creating a `Float32` buffer attribute with\n * a plain `Array` instance.\n *\n * @augments BufferAttribute\n */\nclass Float32BufferAttribute extends BufferAttribute {\n\n\t/**\n\t * Constructs a new buffer attribute.\n\t *\n\t * @param {(Array<number>|Float32Array)} array - The array holding the attribute data.\n\t * @param {number} itemSize - The item size.\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\n\t */\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\n//\n\nexport {\n\tFloat32BufferAttribute,\n\tFloat16BufferAttribute,\n\tUint32BufferAttribute,\n\tInt32BufferAttribute,\n\tUint16BufferAttribute,\n\tInt16BufferAttribute,\n\tUint8ClampedBufferAttribute,\n\tUint8BufferAttribute,\n\tInt8BufferAttribute,\n\tBufferAttribute\n};\n","export const WALL_TYPE = {\n    floor: 0,\n    corner: 1,\n    wall: 2,\n    invertedCorner: 3,\n    roof: 4,\n    weirdCrevice: 20,\n} as const\nexport type WallType = typeof WALL_TYPE[keyof typeof WALL_TYPE]\n","import { BufferGeometry, Vector2, Vector3 } from 'three'\nimport { BufferAttribute } from 'three/src/core/BufferAttribute'\nimport { WALL_TYPE, WallType } from './WallType'\nimport { TILESIZE } from '../../params'\n\nexport class SurfaceGeometry extends BufferGeometry {\n    constructor() {\n        super()\n        this.setAttribute('position', new BufferAttribute(new Float32Array(18), 3))\n        this.setAttribute('normal', new BufferAttribute(new Float32Array(18), 3))\n        this.setAttribute('uv', new BufferAttribute(new Float32Array(12), 2))\n    }\n\n    setHeights(wallType: WallType, topLeft: SurfaceVertex, topRight: SurfaceVertex, bottomRight: SurfaceVertex, bottomLeft: SurfaceVertex) {\n        const uvOffset = SurfaceGeometry.determineUvOffset(wallType, topLeft.high, bottomRight.high, topRight.high, bottomLeft.high)\n\n        const topLeftVertex = new Vector3(0, topLeft.height, 0).multiplyScalar(TILESIZE)\n        const topRightVertex = new Vector3(1, topRight.height, 0).multiplyScalar(TILESIZE)\n        const bottomRightVertex = new Vector3(1, bottomRight.height, 1).multiplyScalar(TILESIZE)\n        const bottomLeftVertex = new Vector3(0, bottomLeft.height, 1).multiplyScalar(TILESIZE)\n\n        const vertices: Vector3[] = []\n        const normals: Vector3[] = []\n\n        function addFaceAndNormals(a: Vector3, b: Vector3, c: Vector3) {\n            vertices.push(a, b, c)\n            const normal = new Vector3().subVectors(c, b)\n            normal.cross(new Vector3().subVectors(a, b))\n            normal.normalize()\n            normals.push(normal, normal, normal)\n        }\n\n        const uvIndexes = []\n        if (topRight.high !== bottomLeft.high ||\n            (wallType === WALL_TYPE.wall || wallType === WALL_TYPE.weirdCrevice) && !(topRight.high && bottomLeft.high)) {\n            uvIndexes.push(1, 3, 2)\n            uvIndexes.push(1, 0, 3)\n            addFaceAndNormals(topRightVertex, bottomLeftVertex, bottomRightVertex)\n            addFaceAndNormals(topRightVertex, topLeftVertex, bottomLeftVertex)\n        } else {\n            uvIndexes.push(0, 3, 2)\n            uvIndexes.push(0, 2, 1)\n            addFaceAndNormals(topLeftVertex, bottomLeftVertex, bottomRightVertex)\n            addFaceAndNormals(topLeftVertex, bottomRightVertex, topRightVertex)\n        }\n\n        const uv = [\n            new Vector2(0, 1),\n            new Vector2(1, 1),\n            new Vector2(1, 0),\n            new Vector2(0, 0),\n        ]\n        const vertexUvs = uvIndexes.map(i => uv[(i + uvOffset) % 4])\n        this.setAttributes(vertices, normals, vertexUvs)\n    }\n\n    private static determineUvOffset(wallType: WallType, topLeftHigh: boolean, bottomRightHigh: boolean, topRightHigh: boolean, bottomLeftHigh: boolean) {\n        let uvOffset = 0\n        // not-rotated\n        // 1 ?\n        // ? 0\n        if (topLeftHigh && !bottomRightHigh &&\n            (wallType === WALL_TYPE.invertedCorner || (wallType === WALL_TYPE.wall || wallType === WALL_TYPE.weirdCrevice) === (topRightHigh))) {\n            uvOffset = 0\n        }\n        // 90 clock-wise\n        // ? 1\n        // 0 ?\n        if (topRightHigh && !bottomLeftHigh &&\n            (wallType === WALL_TYPE.invertedCorner || (wallType === WALL_TYPE.wall || wallType === WALL_TYPE.weirdCrevice) === (bottomRightHigh))) {\n            uvOffset = 3\n        }\n        // 180 clock-wise\n        // 0 ?\n        // ? 1\n        if (bottomRightHigh && !topLeftHigh &&\n            (wallType === WALL_TYPE.invertedCorner || (wallType === WALL_TYPE.wall || wallType === WALL_TYPE.weirdCrevice) === (bottomLeftHigh))) {\n            uvOffset = 2\n        }\n        // 270 clock-wise\n        // ? 0\n        // 1 ?\n        if (bottomLeftHigh && !topRightHigh &&\n            (wallType === WALL_TYPE.invertedCorner || (wallType === WALL_TYPE.wall || wallType === WALL_TYPE.weirdCrevice) === (topLeftHigh))) {\n            uvOffset = 1\n        }\n        if (wallType === WALL_TYPE.wall || wallType === WALL_TYPE.weirdCrevice) {\n            if (topLeftHigh && bottomRightHigh) {\n                uvOffset = 0\n            }\n            if (topRightHigh && bottomLeftHigh) {\n                uvOffset = 3\n            }\n        }\n        return uvOffset\n    }\n\n    private setAttributes(vertices: Vector3[], normals: Vector3[], vertexUvs: Vector2[]) {\n        const positionAttribute = this.attributes.position as BufferAttribute\n        SurfaceGeometry.copyVectorsToBuffer(positionAttribute, vertices, 3)\n        const normalAttribute = this.attributes.normal as BufferAttribute\n        SurfaceGeometry.copyVectorsToBuffer(normalAttribute, normals, 3)\n        const uvAttribute = this.attributes.uv as BufferAttribute\n        SurfaceGeometry.copyVectorsToBuffer(uvAttribute, vertexUvs, 2)\n        this.computeBoundingBox()\n        this.computeBoundingSphere()\n    }\n\n    private static copyVectorsToBuffer(bufferAttribute: BufferAttribute, vectors: Vector2[] | Vector3[], dimensions: number) {\n        const array = bufferAttribute.array\n        let offset = 0\n        for (let i = 0, l = vectors.length; i < l; i++) {\n            vectors[i].toArray(array, offset)\n            offset += dimensions\n        }\n        bufferAttribute.needsUpdate = true\n    }\n}\n\nexport class SurfaceVertex {\n    highNum: number\n    height: number\n\n    constructor(readonly high: boolean, seamProgress: number, readonly offset: number) {\n        this.highNum = Number(this.high) * seamProgress\n        this.height = this.highNum + this.offset\n    }\n\n    flipY(): SurfaceVertex {\n        const result = new SurfaceVertex(this.high, 1, 1 - this.offset)\n        result.height *= -1\n        return result\n    }\n}\n","import { BackSide, BufferGeometry, Group, Mesh, MeshPhongMaterial, Texture, Vector3 } from 'three'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { SurfaceGeometry, SurfaceVertex } from './SurfaceGeometry'\nimport { WALL_TYPE, WallType } from './WallType'\nimport { ObjectPointer } from '../../scene/ObjectPointer'\nimport { Surface } from './Surface'\nimport { TILESIZE } from '../../params'\nimport { SequenceTextureMaterial } from '../../scene/SequenceTextureMaterial'\n\nexport interface SurfaceMeshUserData {\n    selectable?: Surface\n    surface?: Surface\n}\n\nexport class SurfaceMesh extends Group {\n    proMeshEnabled: boolean = false\n    lowMesh: SurfaceMeshLow\n    objectPointer?: ObjectPointer // Only available for surfaces with tuto block id\n    proMesh?: SurfaceMeshPro\n\n    constructor(readonly x: number, readonly y: number, readonly userData: SurfaceMeshUserData) {\n        super()\n        this.position.set(x, 0, y).multiplyScalar(TILESIZE)\n        this.lowMesh = new SurfaceMeshLow(x, y, userData)\n        this.add(this.lowMesh)\n    }\n\n    setProMeshEnabled(state: boolean) {\n        this.proMeshEnabled = state\n        if (this.proMesh) this.proMesh.visible = this.proMeshEnabled\n        this.lowMesh.visible = !this.proMesh?.visible\n    }\n\n    setHighlightColor(hex: number) {\n        this.lowMesh.setHighlightColor(hex)\n        this.proMesh?.material.forEach((m) => m.color.setHex(hex))\n    }\n\n    setTexture(textureFilepath: string, textureRotation: number) {\n        this.lowMesh.setTexture(textureFilepath, textureRotation)\n    }\n\n    updateProMesh(proMeshFilepath: string) {\n        const surface = this.userData.surface!\n        // TODO Keep the shape of the surface separately\n        const adjacent = surface.terrain.getAdjacent(this.x, this.y)\n        const topLeftVertex = surface.getVertex(this.x, this.y, adjacent.left, adjacent.topLeft, adjacent.top)\n        const topRightVertex = surface.getVertex(this.x + 1, this.y, adjacent.top, adjacent.topRight, adjacent.right)\n        const bottomRightVertex = surface.getVertex(this.x + 1, this.y + 1, adjacent.right, adjacent.bottomRight, adjacent.bottom)\n        const bottomLeftVertex = surface.getVertex(this.x, this.y + 1, adjacent.bottom, adjacent.bottomLeft, adjacent.left)\n        if (this.proMesh) {\n            this.remove(this.proMesh)\n            this.proMesh.dispose()\n            this.proMesh = undefined\n        }\n        if (surface.wallType === WALL_TYPE.corner || surface.wallType === WALL_TYPE.wall || surface.wallType === WALL_TYPE.invertedCorner ||\n            (surface.wallType === WALL_TYPE.floor && surface.hasRubble())) {\n            this.proMesh = ResourceManager.proMeshes.get(proMeshFilepath)?.clone(true)\n            if (!this.proMesh) console.warn(`Could not find surface pro mesh for \"${proMeshFilepath}\"`)\n        }\n        if (this.proMesh) {\n            this.proMesh.userData = this.userData\n            const wallAngle = SurfaceMesh.getWallAngle(surface.wallType, topLeftVertex.high, topRightVertex.high, bottomRightVertex.high, bottomLeftVertex.high)\n            this.proMesh.rotation.y = wallAngle\n            const posY = (topLeftVertex.offset + topRightVertex.offset + bottomRightVertex.offset + bottomLeftVertex.offset) / 4\n            this.proMesh.position.set(0.5, posY, 0.5).multiplyScalar(TILESIZE)\n            this.add(this.proMesh)\n            // Tear pro mesh to fit surface map offsets and close gaps in terrain\n            const rotationIndex = (Math.round(wallAngle / (Math.PI / 2)) + 8) % 4\n            SurfaceMesh.tearGeometryPositionsByVertexOffsets(this.proMesh.geometry, topLeftVertex.offset, bottomLeftVertex.offset, bottomRightVertex.offset, topRightVertex.offset, rotationIndex)\n        }\n        if (this.proMesh) this.proMesh.visible = this.proMeshEnabled\n        this.lowMesh.visible = !this.proMesh?.visible\n    }\n\n    private static getWallAngle(wallType: WallType, topLeftHigh: boolean, topRightHigh: boolean, bottomRightHigh: boolean, bottomLeftHigh: boolean): number {\n        switch (wallType) {\n            case WALL_TYPE.corner:\n                if (topLeftHigh) return Math.PI / 2\n                else if (bottomLeftHigh) return Math.PI\n                else if (bottomRightHigh) return -Math.PI / 2\n                return 0\n            case WALL_TYPE.invertedCorner:\n                if (!topLeftHigh) return -Math.PI / 2\n                else if (!bottomLeftHigh) return 0\n                else if (!bottomRightHigh) return Math.PI / 2\n                return Math.PI\n            case WALL_TYPE.wall:\n                if (topLeftHigh && topRightHigh) return 0\n                else if (topLeftHigh && bottomLeftHigh) return Math.PI / 2\n                else if (topRightHigh && bottomRightHigh) return -Math.PI / 2\n                else return Math.PI\n        }\n        return 0\n    }\n\n    private static tearGeometryPositionsByVertexOffsets(geo: BufferGeometry, topLeftOffset: number, bottomLeftOffset: number, bottomRightOffset: number, topRightOffset: number, rotationIndex: number) {\n        const geoPos = geo.getAttribute('position')\n        if (geoPos.itemSize !== 3) console.warn(`Unexpected item size (${geoPos.itemSize}) given; expected 3 instead`)\n        const frontLeft = new Vector3(100, 0, 100)\n        const backLeft = new Vector3(100, 0, -100)\n        const frontRight = new Vector3(-100, 0, 100)\n        const backRight = new Vector3(-100, 0, -100)\n        const nearThreshold = 5\n        for (let c = 1; c < geoPos.array.length; c += 3) {\n            const x = geoPos.array[c - 1]\n            const y = geoPos.array[c]\n            const z = geoPos.array[c + 1]\n            if (z < frontLeft.z - nearThreshold || (Math.abs(z - frontLeft.z) <= nearThreshold && x < frontLeft.x - nearThreshold)) {\n                frontLeft.set(x, y, z)\n            }\n            if (z > backLeft.z + nearThreshold || (Math.abs(z - backLeft.z) <= nearThreshold && x < backLeft.x - nearThreshold)) {\n                backLeft.set(x, y, z)\n            }\n            if (z < frontRight.z - nearThreshold || (Math.abs(z - frontRight.z) <= nearThreshold && x > frontRight.x + nearThreshold)) {\n                frontRight.set(x, y, z)\n            }\n            if (z > backRight.z + nearThreshold || (Math.abs(z - backRight.z) <= nearThreshold && x > backRight.x + nearThreshold)) {\n                backRight.set(x, y, z)\n            }\n        }\n        const nearTopLeft = []\n        const nearBottomLeft = []\n        const nearBottomRight = []\n        const nearTopRight = []\n        const nearOthers = []\n        for (let c = 1; c < geoPos.array.length; c += geoPos.itemSize) {\n            const x = geoPos.array[c - 1]\n            const y = geoPos.array[c]\n            const z = geoPos.array[c + 1]\n            if (Math.abs(x - frontLeft.x) < nearThreshold && Math.abs(y - frontLeft.y) < nearThreshold && Math.abs(z - frontLeft.z) < nearThreshold) {\n                nearTopLeft.push({x, y, z, index: c})\n            } else if (Math.abs(x - backLeft.x) < nearThreshold && Math.abs(y - backLeft.y) < nearThreshold && Math.abs(z - backLeft.z) < nearThreshold) {\n                nearBottomLeft.push({x, y, z, index: c})\n            } else if (Math.abs(x - backRight.x) < nearThreshold && Math.abs(y - backRight.y) < nearThreshold && Math.abs(z - backRight.z) < nearThreshold) {\n                nearBottomRight.push({x, y, z, index: c})\n            } else if (Math.abs(x - frontRight.x) < nearThreshold && Math.abs(y - frontRight.y) < nearThreshold && Math.abs(z - frontRight.z) < nearThreshold) {\n                nearTopRight.push({x, y, z, index: c})\n            } else {\n                nearOthers.push({x, y, z, index: c})\n            }\n        }\n        const offset = [topLeftOffset, bottomLeftOffset, bottomRightOffset, topRightOffset]\n        const posY = offset.reduce((p, c) => p + c, 0) / offset.length\n        nearTopLeft.forEach((e) => {\n            geoPos.array[e.index] += (offset[rotationIndex] - posY) * TILESIZE\n        })\n        nearBottomLeft.forEach((e) => {\n            geoPos.array[e.index] += (offset[(rotationIndex + 1) % 4] - posY) * TILESIZE\n        })\n        nearBottomRight.forEach((e) => {\n            geoPos.array[e.index] += (offset[(rotationIndex + 2) % 4] - posY) * TILESIZE\n        })\n        nearTopRight.forEach((e) => {\n            geoPos.array[e.index] += (offset[(rotationIndex + 3) % 4] - posY) * TILESIZE\n        })\n        const avgFrontLeft = this.avgVec(nearTopLeft)\n        const avgBackLeft = this.avgVec(nearBottomLeft)\n        const avgFrontRight = this.avgVec(nearTopRight)\n        nearOthers.forEach((point) => {\n            const dx = avgFrontRight.x - avgFrontLeft.x\n            const dz = avgBackLeft.z - avgFrontLeft.z\n            if (dx === 0 || dz === 0) return\n            const t1 = (point.x - avgFrontLeft.x) / dx\n            const t2 = (point.z - avgFrontLeft.z) / dz\n            const yOffset = (1 - t1) * (1 - t2) * offset[rotationIndex] +\n                t1 * (1 - t2) * offset[(rotationIndex + 3) % 4] +\n                (1 - t1) * t2 * offset[(rotationIndex + 1) % 4] +\n                t1 * t2 * offset[(rotationIndex + 2) % 4]\n            geoPos.array[point.index] += (yOffset - posY) * TILESIZE\n        })\n        geo.setAttribute('position', geoPos)\n    }\n\n    private static avgVec(vecList: { x: number, y: number, z: number }[]): { x: number, y: number, z: number } {\n        const avgVec = vecList.reduce((p, c) => ({x: p.x + c.x, y: p.y + c.y, z: p.z + c.z}), {x: 0, y: 0, z: 0})\n        avgVec.x /= vecList.length\n        avgVec.y /= vecList.length\n        avgVec.z /= vecList.length\n        return avgVec\n    }\n\n    setHeights(wallType: WallType, topLeft: SurfaceVertex, topRight: SurfaceVertex, bottomRight: SurfaceVertex, bottomLeft: SurfaceVertex) {\n        this.lowMesh.setHeights(wallType, topLeft, topRight, bottomRight, bottomLeft)\n    }\n\n    dispose() {\n        this.removeFromParent()\n        this.lowMesh.dispose()\n        this.proMesh?.dispose()\n    }\n}\n\nclass SurfaceMeshLow extends Mesh<SurfaceGeometry, MeshPhongMaterial> {\n    declare userData: SurfaceMeshUserData\n\n    constructor(x: number, y: number, userData: SurfaceMeshUserData) {\n        super(new SurfaceGeometry(), new MeshPhongMaterial({shininess: 0}))\n        this.userData = userData\n    }\n\n    setHighlightColor(hex: number) {\n        this.material.color.setHex(hex)\n    }\n\n    setTexture(textureFilepath: string, textureRotation: number) {\n        this.material.map?.dispose()\n        this.material.map = ResourceManager.getSurfaceTexture(textureFilepath, textureRotation) ?? null\n        this.material.needsUpdate = true\n    }\n\n    setHeights(wallType: WallType, topLeft: SurfaceVertex, topRight: SurfaceVertex, bottomRight: SurfaceVertex, bottomLeft: SurfaceVertex) {\n        this.geometry.setHeights(wallType, topLeft, topRight, bottomRight, bottomLeft)\n    }\n\n    dispose() {\n        this.removeFromParent()\n        this.geometry.dispose()\n        this.material.dispose()\n    }\n}\n\nexport class SurfaceMeshPro extends Mesh<BufferGeometry, SequenceTextureMaterial[]> {\n    clone(recursive?: boolean): this {\n        const clone = super.clone(recursive)\n        clone.geometry = this.geometry.clone()\n        clone.material = clone.material.map((m) => m.clone())\n        return clone\n    }\n\n    dispose() {\n        this.removeFromParent()\n        this.geometry?.dispose()\n        this.material?.forEach((m) => m.dispose())\n    }\n}\n\nexport class RoofMesh extends Mesh<SurfaceGeometry, MeshPhongMaterial> {\n    constructor(x: number, y: number, texture: Texture | null) { // three.js uses null instead of undefined\n        super(new SurfaceGeometry(), new MeshPhongMaterial({shininess: 0, side: BackSide, map: texture}))\n        this.position.set(x, 3, y).multiplyScalar(TILESIZE)\n    }\n\n    setHeights(wallType: WallType, topLeft: SurfaceVertex, topRight: SurfaceVertex, bottomRight: SurfaceVertex, bottomLeft: SurfaceVertex) {\n        this.geometry.setHeights(wallType, topLeft.flipY(), topRight.flipY(), bottomRight.flipY(), bottomLeft.flipY())\n    }\n\n    dispose() {\n        this.removeFromParent()\n        this.geometry.dispose()\n        this.material.dispose()\n    }\n}\n","import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInstancedBufferAttribute,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tTrianglesDrawMode,\n\tVector3,\n} from 'three';\n\n/**\n * @module BufferGeometryUtils\n * @three_import import * as BufferGeometryUtils from 'three/addons/utils/BufferGeometryUtils.js';\n */\n\n/**\n * Computes vertex tangents using the MikkTSpace algorithm. MikkTSpace generates the same tangents consistently,\n * and is used in most modelling tools and normal map bakers. Use MikkTSpace for materials with normal maps,\n * because inconsistent tangents may lead to subtle visual issues in the normal map, particularly around mirrored\n * UV seams.\n *\n * In comparison to this method, {@link BufferGeometry#computeTangents} (a custom algorithm) generates tangents that\n * probably will not match the tangents in other software. The custom algorithm is sufficient for general use with a\n * custom material, and may be faster than MikkTSpace.\n *\n * Returns the original BufferGeometry. Indexed geometries will be de-indexed. Requires position, normal, and uv attributes.\n *\n * @param {BufferGeometry} geometry - The geometry to compute tangents for.\n * @param {Object} MikkTSpace - Instance of `examples/jsm/libs/mikktspace.module.js`, or `mikktspace` npm package.\n * Await `MikkTSpace.ready` before use.\n * @param {boolean} [negateSign=true] - Whether to negate the sign component (.w) of each tangent.\n * Required for normal map conventions in some formats, including glTF.\n * @return {BufferGeometry} The updated geometry.\n */\nfunction computeMikkTSpaceTangents( geometry, MikkTSpace, negateSign = true ) {\n\n\tif ( ! MikkTSpace || ! MikkTSpace.isReady ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Initialized MikkTSpace library required.' );\n\n\t}\n\n\tif ( ! geometry.hasAttribute( 'position' ) || ! geometry.hasAttribute( 'normal' ) || ! geometry.hasAttribute( 'uv' ) ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Tangents require \"position\", \"normal\", and \"uv\" attributes.' );\n\n\t}\n\n\tfunction getAttributeArray( attribute ) {\n\n\t\tif ( attribute.normalized || attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconst dstArray = new Float32Array( attribute.count * attribute.itemSize );\n\n\t\t\tfor ( let i = 0, j = 0; i < attribute.count; i ++ ) {\n\n\t\t\t\tdstArray[ j ++ ] = attribute.getX( i );\n\t\t\t\tdstArray[ j ++ ] = attribute.getY( i );\n\n\t\t\t\tif ( attribute.itemSize > 2 ) {\n\n\t\t\t\t\tdstArray[ j ++ ] = attribute.getZ( i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t\tif ( attribute.array instanceof Float32Array ) {\n\n\t\t\treturn attribute.array;\n\n\t\t}\n\n\t\treturn new Float32Array( attribute.array );\n\n\t}\n\n\t// MikkTSpace algorithm requires non-indexed input.\n\n\tconst _geometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\n\t// Compute vertex tangents.\n\n\tconst tangents = MikkTSpace.generateTangents(\n\n\t\tgetAttributeArray( _geometry.attributes.position ),\n\t\tgetAttributeArray( _geometry.attributes.normal ),\n\t\tgetAttributeArray( _geometry.attributes.uv )\n\n\t);\n\n\t// Texture coordinate convention of glTF differs from the apparent\n\t// default of the MikkTSpace library; .w component must be flipped.\n\n\tif ( negateSign ) {\n\n\t\tfor ( let i = 3; i < tangents.length; i += 4 ) {\n\n\t\t\ttangents[ i ] *= - 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\t_geometry.setAttribute( 'tangent', new BufferAttribute( tangents, 4 ) );\n\n\tif ( geometry !== _geometry ) {\n\n\t\tgeometry.copy( _geometry );\n\n\t}\n\n\treturn geometry;\n\n}\n\n/**\n * Merges a set of geometries into a single instance. All geometries must have compatible attributes.\n *\n * @param {Array<BufferGeometry>} geometries - The geometries to merge.\n * @param {boolean} [useGroups=false] - Whether to use groups or not.\n * @return {?BufferGeometry} The merged geometry. Returns `null` if the merge does not succeed.\n */\nfunction mergeGeometries( geometries, useGroups = false ) {\n\n\tconst isIndexed = geometries[ 0 ].index !== null;\n\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\tconst morphAttributesUsed = new Set( Object.keys( geometries[ 0 ].morphAttributes ) );\n\n\tconst attributes = {};\n\tconst morphAttributes = {};\n\n\tconst morphTargetsRelative = geometries[ 0 ].morphTargetsRelative;\n\n\tconst mergedGeometry = new BufferGeometry();\n\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\tconst geometry = geometries[ i ];\n\t\tlet attributesCount = 0;\n\n\t\t// ensure that all geometries are indexed, or none\n\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather attributes, exit early if they're different\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tif ( ! attributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( attributes[ name ] === undefined ) attributes[ name ] = [];\n\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\n\t\t\tattributesCount ++;\n\n\t\t}\n\n\t\t// ensure geometries have the same number of attributes\n\n\t\tif ( attributesCount !== attributesUsed.size ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. Make sure all geometries have the same number of attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather morph attributes, exit early if they're different\n\n\t\tif ( morphTargetsRelative !== geometry.morphTargetsRelative ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. .morphTargetsRelative must be consistent throughout all geometries.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tif ( ! morphAttributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '.  .morphAttributes must be consistent throughout all geometries.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( morphAttributes[ name ] === undefined ) morphAttributes[ name ] = [];\n\n\t\t\tmorphAttributes[ name ].push( geometry.morphAttributes[ name ] );\n\n\t\t}\n\n\t\tif ( useGroups ) {\n\n\t\t\tlet count;\n\n\t\t\tif ( isIndexed ) {\n\n\t\t\t\tcount = geometry.index.count;\n\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. The geometry must have either an index or a position attribute' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.addGroup( offset, count, i );\n\n\t\t\toffset += count;\n\n\t\t}\n\n\t}\n\n\t// merge indices\n\n\tif ( isIndexed ) {\n\n\t\tlet indexOffset = 0;\n\t\tconst mergedIndex = [];\n\n\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\tconst index = geometries[ i ].index;\n\n\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\n\n\t\t\t\tmergedIndex.push( index.getX( j ) + indexOffset );\n\n\t\t\t}\n\n\t\t\tindexOffset += geometries[ i ].attributes.position.count;\n\n\t\t}\n\n\t\tmergedGeometry.setIndex( mergedIndex );\n\n\t}\n\n\t// merge attributes\n\n\tfor ( const name in attributes ) {\n\n\t\tconst mergedAttribute = mergeAttributes( attributes[ name ] );\n\n\t\tif ( ! mergedAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' attribute.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tmergedGeometry.setAttribute( name, mergedAttribute );\n\n\t}\n\n\t// merge morph attributes\n\n\tfor ( const name in morphAttributes ) {\n\n\t\tconst numMorphTargets = morphAttributes[ name ][ 0 ].length;\n\n\t\tif ( numMorphTargets === 0 ) break;\n\n\t\tmergedGeometry.morphAttributes = mergedGeometry.morphAttributes || {};\n\t\tmergedGeometry.morphAttributes[ name ] = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; ++ i ) {\n\n\t\t\tconst morphAttributesToMerge = [];\n\n\t\t\tfor ( let j = 0; j < morphAttributes[ name ].length; ++ j ) {\n\n\t\t\t\tmorphAttributesToMerge.push( morphAttributes[ name ][ j ][ i ] );\n\n\t\t\t}\n\n\t\t\tconst mergedMorphAttribute = mergeAttributes( morphAttributesToMerge );\n\n\t\t\tif ( ! mergedMorphAttribute ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' morphAttribute.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.morphAttributes[ name ].push( mergedMorphAttribute );\n\n\t\t}\n\n\t}\n\n\treturn mergedGeometry;\n\n}\n\n/**\n * Merges a set of attributes into a single instance. All attributes must have compatible properties and types.\n * Instances of {@link InterleavedBufferAttribute} are not supported.\n *\n * @param {Array<BufferAttribute>} attributes - The attributes to merge.\n * @return {?BufferAttribute} The merged attribute. Returns `null` if the merge does not succeed.\n */\nfunction mergeAttributes( attributes ) {\n\n\tlet TypedArray;\n\tlet itemSize;\n\tlet normalized;\n\tlet gpuType = - 1;\n\tlet arrayLength = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( itemSize === undefined ) itemSize = attribute.itemSize;\n\t\tif ( itemSize !== attribute.itemSize ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( normalized === undefined ) normalized = attribute.normalized;\n\t\tif ( normalized !== attribute.normalized ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( gpuType === - 1 ) gpuType = attribute.gpuType;\n\t\tif ( gpuType !== attribute.gpuType ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.count * itemSize;\n\n\t}\n\n\tconst array = new TypedArray( arrayLength );\n\tconst result = new BufferAttribute( array, itemSize, normalized );\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconst tupleOffset = offset / itemSize;\n\t\t\tfor ( let j = 0, l = attribute.count; j < l; j ++ ) {\n\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tconst value = attribute.getComponent( j, c );\n\t\t\t\t\tresult.setComponent( j + tupleOffset, c, value );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tarray.set( attribute.array, offset );\n\n\t\t}\n\n\t\toffset += attribute.count * itemSize;\n\n\t}\n\n\tif ( gpuType !== undefined ) {\n\n\t\tresult.gpuType = gpuType;\n\n\t}\n\n\treturn result;\n\n}\n\n/**\n * Performs a deep clone of the given buffer attribute.\n *\n * @param {BufferAttribute} attribute - The attribute to clone.\n * @return {BufferAttribute} The cloned attribute.\n */\nfunction deepCloneAttribute( attribute ) {\n\n\tif ( attribute.isInstancedInterleavedBufferAttribute || attribute.isInterleavedBufferAttribute ) {\n\n\t\treturn deinterleaveAttribute( attribute );\n\n\t}\n\n\tif ( attribute.isInstancedBufferAttribute ) {\n\n\t\treturn new InstancedBufferAttribute().copy( attribute );\n\n\t}\n\n\treturn new BufferAttribute().copy( attribute );\n\n}\n\n/**\n * Interleaves a set of attributes and returns a new array of corresponding attributes that share a\n * single {@link InterleavedBuffer} instance. All attributes must have compatible types.\n *\n * @param {Array<BufferAttribute>} attributes - The attributes to interleave.\n * @return {?Array<InterleavedBufferAttribute>} An array of interleaved attributes. If interleave does not succeed, the method returns `null`.\n */\nfunction interleaveAttributes( attributes ) {\n\n\t// Interleaves the provided attributes into an InterleavedBuffer and returns\n\t// a set of InterleavedBufferAttributes for each attribute\n\tlet TypedArray;\n\tlet arrayLength = 0;\n\tlet stride = 0;\n\n\t// calculate the length and type of the interleavedBuffer\n\tfor ( let i = 0, l = attributes.length; i < l; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'AttributeBuffers of different types cannot be interleaved' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\t\tstride += attribute.itemSize;\n\n\t}\n\n\t// Create the set of buffer attributes\n\tconst interleavedBuffer = new InterleavedBuffer( new TypedArray( arrayLength ), stride );\n\tlet offset = 0;\n\tconst res = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\tfor ( let j = 0, l = attributes.length; j < l; j ++ ) {\n\n\t\tconst attribute = attributes[ j ];\n\t\tconst itemSize = attribute.itemSize;\n\t\tconst count = attribute.count;\n\t\tconst iba = new InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, attribute.normalized );\n\t\tres.push( iba );\n\n\t\toffset += itemSize;\n\n\t\t// Move the data for each attribute into the new interleavedBuffer\n\t\t// at the appropriate offset\n\t\tfor ( let c = 0; c < count; c ++ ) {\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\tiba[ setters[ k ] ]( c, attribute[ getters[ k ] ]( c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\n/**\n * Returns a new, non-interleaved version of the given attribute.\n *\n * @param {InterleavedBufferAttribute} attribute - The interleaved attribute.\n * @return {BufferAttribute} The non-interleaved attribute.\n */\nfunction deinterleaveAttribute( attribute ) {\n\n\tconst cons = attribute.data.array.constructor;\n\tconst count = attribute.count;\n\tconst itemSize = attribute.itemSize;\n\tconst normalized = attribute.normalized;\n\n\tconst array = new cons( count * itemSize );\n\tlet newAttribute;\n\tif ( attribute.isInstancedInterleavedBufferAttribute ) {\n\n\t\tnewAttribute = new InstancedBufferAttribute( array, itemSize, normalized, attribute.meshPerAttribute );\n\n\t} else {\n\n\t\tnewAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t}\n\n\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\tnewAttribute.setX( i, attribute.getX( i ) );\n\n\t\tif ( itemSize >= 2 ) {\n\n\t\t\tnewAttribute.setY( i, attribute.getY( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 3 ) {\n\n\t\t\tnewAttribute.setZ( i, attribute.getZ( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 4 ) {\n\n\t\t\tnewAttribute.setW( i, attribute.getW( i ) );\n\n\t\t}\n\n\t}\n\n\treturn newAttribute;\n\n}\n\n/**\n * Deinterleaves all attributes on the given geometry.\n *\n * @param {BufferGeometry} geometry - The geometry to deinterleave.\n */\nfunction deinterleaveGeometry( geometry ) {\n\n\tconst attributes = geometry.attributes;\n\tconst morphTargets = geometry.morphTargets;\n\tconst attrMap = new Map();\n\n\tfor ( const key in attributes ) {\n\n\t\tconst attr = attributes[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tattributes[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n\tfor ( const key in morphTargets ) {\n\n\t\tconst attr = morphTargets[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tmorphTargets[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Returns the amount of bytes used by all attributes to represent the geometry.\n *\n * @param {BufferGeometry} geometry - The geometry.\n * @return {number} The estimate bytes used.\n */\nfunction estimateBytesUsed( geometry ) {\n\n\t// Return the estimated memory used by this geometry in bytes\n\t// Calculate using itemSize, count, and BYTES_PER_ELEMENT to account\n\t// for InterleavedBufferAttributes.\n\tlet mem = 0;\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst attr = geometry.getAttribute( name );\n\t\tmem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;\n\n\t}\n\n\tconst indices = geometry.getIndex();\n\tmem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;\n\treturn mem;\n\n}\n\n/**\n * Returns a new geometry with vertices for which all similar vertex attributes (within tolerance) are merged.\n *\n * @param {BufferGeometry} geometry - The geometry to merge vertices for.\n * @param {number} [tolerance=1e-4] - The tolerance value.\n * @return {BufferGeometry} - The new geometry with merged vertices.\n */\nfunction mergeVertices( geometry, tolerance = 1e-4 ) {\n\n\ttolerance = Math.max( tolerance, Number.EPSILON );\n\n\t// Generate an index buffer if the geometry doesn't have one, or optimize it\n\t// if it's already available.\n\tconst hashToIndex = {};\n\tconst indices = geometry.getIndex();\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst vertexCount = indices ? indices.count : positions.count;\n\n\t// next value for triangle indices\n\tlet nextIndex = 0;\n\n\t// attributes and new attribute arrays\n\tconst attributeNames = Object.keys( geometry.attributes );\n\tconst tmpAttributes = {};\n\tconst tmpMorphAttributes = {};\n\tconst newIndices = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\t// Initialize the arrays, allocating space conservatively. Extra\n\t// space will be trimmed in the last step.\n\tfor ( let i = 0, l = attributeNames.length; i < l; i ++ ) {\n\n\t\tconst name = attributeNames[ i ];\n\t\tconst attr = geometry.attributes[ name ];\n\n\t\ttmpAttributes[ name ] = new attr.constructor(\n\t\t\tnew attr.array.constructor( attr.count * attr.itemSize ),\n\t\t\tattr.itemSize,\n\t\t\tattr.normalized\n\t\t);\n\n\t\tconst morphAttributes = geometry.morphAttributes[ name ];\n\t\tif ( morphAttributes ) {\n\n\t\t\tif ( ! tmpMorphAttributes[ name ] ) tmpMorphAttributes[ name ] = [];\n\t\t\tmorphAttributes.forEach( ( morphAttr, i ) => {\n\n\t\t\t\tconst array = new morphAttr.array.constructor( morphAttr.count * morphAttr.itemSize );\n\t\t\t\ttmpMorphAttributes[ name ][ i ] = new morphAttr.constructor( array, morphAttr.itemSize, morphAttr.normalized );\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t// convert the error tolerance to an amount of decimal places to truncate to\n\tconst halfTolerance = tolerance * 0.5;\n\tconst exponent = Math.log10( 1 / tolerance );\n\tconst hashMultiplier = Math.pow( 10, exponent );\n\tconst hashAdditive = halfTolerance * hashMultiplier;\n\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\tconst index = indices ? indices.getX( i ) : i;\n\n\t\t// Generate a hash for the vertex attributes at the current index 'i'\n\t\tlet hash = '';\n\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\tconst name = attributeNames[ j ];\n\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\tconst itemSize = attribute.itemSize;\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t// double tilde truncates the decimal value\n\t\t\t\thash += `${ ~ ~ ( attribute[ getters[ k ] ]( index ) * hashMultiplier + hashAdditive ) },`;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add another reference to the vertex if it's already\n\t\t// used by another index\n\t\tif ( hash in hashToIndex ) {\n\n\t\t\tnewIndices.push( hashToIndex[ hash ] );\n\n\t\t} else {\n\n\t\t\t// copy data to the new index in the temporary attributes\n\t\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\t\tconst name = attributeNames[ j ];\n\t\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\t\tconst morphAttributes = geometry.morphAttributes[ name ];\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst newArray = tmpAttributes[ name ];\n\t\t\t\tconst newMorphArrays = tmpMorphAttributes[ name ];\n\n\t\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\tconst getterFunc = getters[ k ];\n\t\t\t\t\tconst setterFunc = setters[ k ];\n\t\t\t\t\tnewArray[ setterFunc ]( nextIndex, attribute[ getterFunc ]( index ) );\n\n\t\t\t\t\tif ( morphAttributes ) {\n\n\t\t\t\t\t\tfor ( let m = 0, ml = morphAttributes.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tnewMorphArrays[ m ][ setterFunc ]( nextIndex, morphAttributes[ m ][ getterFunc ]( index ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\thashToIndex[ hash ] = nextIndex;\n\t\t\tnewIndices.push( nextIndex );\n\t\t\tnextIndex ++;\n\n\t\t}\n\n\t}\n\n\t// generate result BufferGeometry\n\tconst result = geometry.clone();\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst tmpAttribute = tmpAttributes[ name ];\n\n\t\tresult.setAttribute( name, new tmpAttribute.constructor(\n\t\t\ttmpAttribute.array.slice( 0, nextIndex * tmpAttribute.itemSize ),\n\t\t\ttmpAttribute.itemSize,\n\t\t\ttmpAttribute.normalized,\n\t\t) );\n\n\t\tif ( ! ( name in tmpMorphAttributes ) ) continue;\n\n\t\tfor ( let j = 0; j < tmpMorphAttributes[ name ].length; j ++ ) {\n\n\t\t\tconst tmpMorphAttribute = tmpMorphAttributes[ name ][ j ];\n\n\t\t\tresult.morphAttributes[ name ][ j ] = new tmpMorphAttribute.constructor(\n\t\t\t\ttmpMorphAttribute.array.slice( 0, nextIndex * tmpMorphAttribute.itemSize ),\n\t\t\t\ttmpMorphAttribute.itemSize,\n\t\t\t\ttmpMorphAttribute.normalized,\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tresult.setIndex( newIndices );\n\n\treturn result;\n\n}\n\n/**\n * Returns a new indexed geometry based on `TrianglesDrawMode` draw mode.\n * This mode corresponds to the `gl.TRIANGLES` primitive in WebGL.\n *\n * @param {BufferGeometry} geometry - The geometry to convert.\n * @param {number} drawMode - The current draw mode.\n * @return {BufferGeometry} The new geometry using `TrianglesDrawMode`.\n */\nfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\tif ( drawMode === TrianglesDrawMode ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.' );\n\t\treturn geometry;\n\n\t}\n\n\tif ( drawMode === TriangleFanDrawMode || drawMode === TriangleStripDrawMode ) {\n\n\t\tlet index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tconst indices = [];\n\n\t\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( let i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst numberOfTriangles = index.count - 2;\n\t\tconst newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( let i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( let i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tconst newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\t\tnewGeometry.clearGroups();\n\n\t\treturn newGeometry;\n\n\t} else {\n\n\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:', drawMode );\n\t\treturn geometry;\n\n\t}\n\n}\n\n/**\n * Calculates the morphed attributes of a morphed/skinned BufferGeometry.\n *\n * Helpful for Raytracing or Decals (i.e. a `DecalGeometry` applied to a morphed Object with a `BufferGeometry`\n * will use the original `BufferGeometry`, not the morphed/skinned one, generating an incorrect result.\n * Using this function to create a shadow `Object3`D the `DecalGeometry` can be correctly generated).\n *\n * @param {Mesh|Line|Points} object - The 3D object to compute morph attributes for.\n * @return {Object} An object with original position/normal attributes and morphed ones.\n */\nfunction computeMorphedAttributes( object ) {\n\n\tconst _vA = new Vector3();\n\tconst _vB = new Vector3();\n\tconst _vC = new Vector3();\n\n\tconst _tempA = new Vector3();\n\tconst _tempB = new Vector3();\n\tconst _tempC = new Vector3();\n\n\tconst _morphA = new Vector3();\n\tconst _morphB = new Vector3();\n\tconst _morphC = new Vector3();\n\n\tfunction _calculateMorphedAttributeData(\n\t\tobject,\n\t\tattribute,\n\t\tmorphAttribute,\n\t\tmorphTargetsRelative,\n\t\ta,\n\t\tb,\n\t\tc,\n\t\tmodifiedAttributeArray\n\t) {\n\n\t\t_vA.fromBufferAttribute( attribute, a );\n\t\t_vB.fromBufferAttribute( attribute, b );\n\t\t_vC.fromBufferAttribute( attribute, c );\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif ( morphAttribute && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morph = morphAttribute[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morph, a );\n\t\t\t\t_tempB.fromBufferAttribute( morph, b );\n\t\t\t\t_tempC.fromBufferAttribute( morph, c );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_vA.add( _morphA );\n\t\t\t_vB.add( _morphB );\n\t\t\t_vC.add( _morphC );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tobject.applyBoneTransform( a, _vA );\n\t\t\tobject.applyBoneTransform( b, _vB );\n\t\t\tobject.applyBoneTransform( c, _vC );\n\n\t\t}\n\n\t\tmodifiedAttributeArray[ a * 3 + 0 ] = _vA.x;\n\t\tmodifiedAttributeArray[ a * 3 + 1 ] = _vA.y;\n\t\tmodifiedAttributeArray[ a * 3 + 2 ] = _vA.z;\n\t\tmodifiedAttributeArray[ b * 3 + 0 ] = _vB.x;\n\t\tmodifiedAttributeArray[ b * 3 + 1 ] = _vB.y;\n\t\tmodifiedAttributeArray[ b * 3 + 2 ] = _vB.z;\n\t\tmodifiedAttributeArray[ c * 3 + 0 ] = _vC.x;\n\t\tmodifiedAttributeArray[ c * 3 + 1 ] = _vC.y;\n\t\tmodifiedAttributeArray[ c * 3 + 2 ] = _vC.z;\n\n\t}\n\n\tconst geometry = object.geometry;\n\tconst material = object.material;\n\n\tlet a, b, c;\n\tconst index = geometry.index;\n\tconst positionAttribute = geometry.attributes.position;\n\tconst morphPosition = geometry.morphAttributes.position;\n\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\tconst normalAttribute = geometry.attributes.normal;\n\tconst morphNormal = geometry.morphAttributes.position;\n\n\tconst groups = geometry.groups;\n\tconst drawRange = geometry.drawRange;\n\tlet i, j, il, jl;\n\tlet group;\n\tlet start, end;\n\n\tconst modifiedPosition = new Float32Array( positionAttribute.count * positionAttribute.itemSize );\n\tconst modifiedNormal = new Float32Array( normalAttribute.count * normalAttribute.itemSize );\n\n\tif ( index !== null ) {\n\n\t\t// indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = index.getX( i );\n\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// non-indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = j;\n\t\t\t\t\tb = j + 1;\n\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = i;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst morphedPositionAttribute = new Float32BufferAttribute( modifiedPosition, 3 );\n\tconst morphedNormalAttribute = new Float32BufferAttribute( modifiedNormal, 3 );\n\n\treturn {\n\n\t\tpositionAttribute: positionAttribute,\n\t\tnormalAttribute: normalAttribute,\n\t\tmorphedPositionAttribute: morphedPositionAttribute,\n\t\tmorphedNormalAttribute: morphedNormalAttribute\n\n\t};\n\n}\n\n/**\n * Merges the {@link BufferGeometry#groups} for the given geometry.\n *\n * @param {BufferGeometry} geometry - The geometry to modify.\n * @return {BufferGeometry} - The updated geometry\n */\nfunction mergeGroups( geometry ) {\n\n\tif ( geometry.groups.length === 0 ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge.' );\n\t\treturn geometry;\n\n\t}\n\n\tlet groups = geometry.groups;\n\n\t// sort groups by material index\n\n\tgroups = groups.sort( ( a, b ) => {\n\n\t\tif ( a.materialIndex !== b.materialIndex ) return a.materialIndex - b.materialIndex;\n\n\t\treturn a.start - b.start;\n\n\t} );\n\n\t// create index for non-indexed geometries\n\n\tif ( geometry.getIndex() === null ) {\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\t\tconst indices = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i += 3 ) {\n\n\t\t\tindices.push( i, i + 1, i + 2 );\n\n\t\t}\n\n\t\tgeometry.setIndex( indices );\n\n\t}\n\n\t// sort index\n\n\tconst index = geometry.getIndex();\n\n\tconst newIndices = [];\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tconst groupStart = group.start;\n\t\tconst groupLength = groupStart + group.count;\n\n\t\tfor ( let j = groupStart; j < groupLength; j ++ ) {\n\n\t\t\tnewIndices.push( index.getX( j ) );\n\n\t\t}\n\n\t}\n\n\tgeometry.dispose(); // Required to force buffer recreation\n\tgeometry.setIndex( newIndices );\n\n\t// update groups indices\n\n\tlet start = 0;\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tgroup.start = start;\n\t\tstart += group.count;\n\n\t}\n\n\t// merge groups\n\n\tlet currentGroup = groups[ 0 ];\n\n\tgeometry.groups = [ currentGroup ];\n\n\tfor ( let i = 1; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tif ( currentGroup.materialIndex === group.materialIndex ) {\n\n\t\t\tcurrentGroup.count += group.count;\n\n\t\t} else {\n\n\t\t\tcurrentGroup = group;\n\t\t\tgeometry.groups.push( currentGroup );\n\n\t\t}\n\n\t}\n\n\treturn geometry;\n\n}\n\n/**\n * Modifies the supplied geometry if it is non-indexed, otherwise creates a new,\n * non-indexed geometry. Returns the geometry with smooth normals everywhere except\n * faces that meet at an angle greater than the crease angle.\n *\n * @param {BufferGeometry} geometry - The geometry to modify.\n * @param {number} [creaseAngle=Math.PI/3] - The crease angle in radians.\n * @return {BufferGeometry} - The updated geometry\n */\nfunction toCreasedNormals( geometry, creaseAngle = Math.PI / 3 /* 60 degrees */ ) {\n\n\tconst creaseDot = Math.cos( creaseAngle );\n\tconst hashMultiplier = ( 1 + 1e-10 ) * 1e2;\n\n\t// reusable vectors\n\tconst verts = [ new Vector3(), new Vector3(), new Vector3() ];\n\tconst tempVec1 = new Vector3();\n\tconst tempVec2 = new Vector3();\n\tconst tempNorm = new Vector3();\n\tconst tempNorm2 = new Vector3();\n\n\t// hashes a vector\n\tfunction hashVertex( v ) {\n\n\t\tconst x = ~ ~ ( v.x * hashMultiplier );\n\t\tconst y = ~ ~ ( v.y * hashMultiplier );\n\t\tconst z = ~ ~ ( v.z * hashMultiplier );\n\t\treturn `${x},${y},${z}`;\n\n\t}\n\n\t// BufferGeometry.toNonIndexed() warns if the geometry is non-indexed\n\t// and returns the original geometry\n\tconst resultGeometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\tconst posAttr = resultGeometry.attributes.position;\n\tconst vertexMap = {};\n\n\t// find all the normals shared by commonly located vertices\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\t// add the normal to the map for all vertices\n\t\tconst normal = new Vector3().crossVectors( tempVec1, tempVec2 ).normalize();\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tif ( ! ( hash in vertexMap ) ) {\n\n\t\t\t\tvertexMap[ hash ] = [];\n\n\t\t\t}\n\n\t\t\tvertexMap[ hash ].push( normal );\n\n\t\t}\n\n\t}\n\n\t// average normals from all vertices that share a common location if they are within the\n\t// provided crease threshold\n\tconst normalArray = new Float32Array( posAttr.count * 3 );\n\tconst normAttr = new BufferAttribute( normalArray, 3, false );\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\t// get the face normal for this vertex\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\ttempNorm.crossVectors( tempVec1, tempVec2 ).normalize();\n\n\t\t// average all normals that meet the threshold and set the normal value\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tconst otherNormals = vertexMap[ hash ];\n\t\t\ttempNorm2.set( 0, 0, 0 );\n\n\t\t\tfor ( let k = 0, lk = otherNormals.length; k < lk; k ++ ) {\n\n\t\t\t\tconst otherNorm = otherNormals[ k ];\n\t\t\t\tif ( tempNorm.dot( otherNorm ) > creaseDot ) {\n\n\t\t\t\t\ttempNorm2.add( otherNorm );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttempNorm2.normalize();\n\t\t\tnormAttr.setXYZ( i3 + n, tempNorm2.x, tempNorm2.y, tempNorm2.z );\n\n\t\t}\n\n\t}\n\n\tresultGeometry.setAttribute( 'normal', normAttr );\n\treturn resultGeometry;\n\n}\n\nexport {\n\tcomputeMikkTSpaceTangents,\n\tmergeGeometries,\n\tmergeAttributes,\n\tdeepCloneAttribute,\n\tdeinterleaveAttribute,\n\tdeinterleaveGeometry,\n\tinterleaveAttributes,\n\testimateBytesUsed,\n\tmergeVertices,\n\ttoTrianglesDrawMode,\n\tcomputeMorphedAttributes,\n\tmergeGroups,\n\ttoCreasedNormals\n};\n","import { getFilename } from '../core/Util'\nimport { BitmapWorkerPool } from '../worker/BitmapWorkerPool'\nimport { LevelObjectiveTexts, ObjectiveTextParser } from './fileparser/ObjectiveTextParser'\nimport { WadParser } from './fileparser/WadParser'\nimport { LWOUVParser, UVData } from './fileparser/LWOUVParser'\nimport { AudioContext, BufferGeometry, NearestFilter, RepeatWrapping, SRGBColorSpace, Texture } from 'three'\nimport { AVIFile, AVIParser } from './fileparser/avi/AVIParser'\nimport { AssetRegistry } from './AssetRegistry'\nimport { ResourceManager } from './ResourceManager'\nimport { BitmapWithPalette } from './fileparser/BitmapWithPalette'\nimport { FlhParser } from './fileparser/FlhParser'\nimport { imgDataToCanvas } from '../core/ImageHelper'\nimport { SoundManager } from '../audio/SoundManager'\nimport { BitmapFontData } from '../core/BitmapFont'\nimport { BitmapFontWorkerPool } from '../worker/BitmapFontWorkerPool'\nimport { TerrainMapData } from '../game/terrain/TerrainMapData'\nimport { ObjectListEntryCfg } from '../cfg/ObjectListEntryCfg'\nimport { SpriteImage } from '../core/Sprite'\nimport { SurfaceMeshPro } from '../game/terrain/SurfaceMesh'\nimport { LWOBParser, LWOBTextureLoader } from './fileparser/LWOBParser'\nimport { mergeGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils'\n\nexport abstract class AssetLoader<T> {\n    readonly lAssetName: string\n    assetRegistry!: AssetRegistry\n    data?: Promise<T>\n\n    constructor(assetName: string, readonly optional: boolean = false) {\n        this.lAssetName = assetName.toLowerCase()\n    }\n\n    abstract exec(): Promise<T>\n\n    async load(): Promise<void> {\n        if (!this.data) this.data = this.exec()\n        await this.data\n    }\n\n    async wait(): Promise<T> {\n        if (!this.data) throw new Error('Asset loading not yet started')\n        return this.data\n    }\n}\n\nexport class ImageAssetLoader extends AssetLoader<BitmapWithPalette> {\n    async exec(): Promise<BitmapWithPalette> {\n        const data = this.assetRegistry.vfs.getFile(this.lAssetName).toBuffer()\n        const bitmap = await BitmapWorkerPool.instance.decodeBitmap(data)\n        ResourceManager.resourceByName.set(this.lAssetName, bitmap) // TODO Add image to cache instead\n        return bitmap\n    }\n}\n\nexport class TextureAssetLoader extends AssetLoader<BitmapWithPalette> {\n    async exec(): Promise<BitmapWithPalette> {\n        const data = this.assetRegistry.vfs.getFile(this.lAssetName).toBuffer()\n        const alphaIndexMatch = this.lAssetName.match(/(.*a)(\\d+)(_.+)/i)\n        let assetName: string = this.lAssetName, bitmap: BitmapWithPalette\n        if (alphaIndexMatch) {\n            assetName = alphaIndexMatch[1] + alphaIndexMatch[3]\n            const alphaIndex = Number(alphaIndexMatch[2])\n            bitmap = await BitmapWorkerPool.instance.decodeBitmapWithAlphaIndex(data, alphaIndex)\n        } else if (this.lAssetName.match(/\\/a.*\\d.*/i)) {\n            bitmap = await BitmapWorkerPool.instance.decodeBitmapWithAlpha(data)\n        } else {\n            bitmap = await BitmapWorkerPool.instance.decodeBitmap(data)\n        }\n        ResourceManager.resourceByName.set(assetName, bitmap) // TODO Add texture to cache instead\n        return bitmap\n    }\n}\n\nexport class AlphaImageAssetLoader extends AssetLoader<BitmapWithPalette> {\n    async exec(): Promise<BitmapWithPalette> {\n        const data = this.assetRegistry.vfs.getFile(this.lAssetName).toBuffer()\n        const bitmap = await BitmapWorkerPool.instance.decodeBitmapWithAlpha(data)\n        const alphaIndexMatch = this.lAssetName.match(/(.*a)(\\d+)(_.+)/i)\n        const assetName = alphaIndexMatch ? alphaIndexMatch[1] + alphaIndexMatch[3] : this.lAssetName\n        ResourceManager.resourceByName.set(assetName, bitmap) // TODO Add image to cache instead\n        return bitmap\n    }\n}\n\nexport class AlphaTranslucentImageAssetLoader extends AssetLoader<BitmapWithPalette> {\n    async exec(): Promise<BitmapWithPalette> {\n        const data = this.assetRegistry.vfs.getFile(this.lAssetName).toBuffer()\n        const bitmap = await BitmapWorkerPool.instance.decodeBitmapWithAlphaTranslucent(data)\n        const alphaIndexMatch = this.lAssetName.match(/(.*a)(\\d+)(_.+)/i)\n        const assetName = alphaIndexMatch ? alphaIndexMatch[1] + alphaIndexMatch[3] : this.lAssetName\n        ResourceManager.resourceByName.set(assetName, bitmap) // TODO Add image to cache instead\n        return bitmap\n    }\n}\n\nexport class FontAssetLoader extends AssetLoader<BitmapFontData> {\n    constructor(assetName: string, readonly charHeight: number) {\n        super(assetName, false)\n    }\n\n    async exec(): Promise<BitmapFontData> {\n        const data = this.assetRegistry.vfs.getFile(this.lAssetName).toBuffer()\n        const bitmap = await BitmapWorkerPool.instance.decodeBitmap(data)\n        const fontData = new BitmapFontData(bitmap, this.charHeight)\n        await BitmapFontWorkerPool.instance.addFont(this.lAssetName, fontData)\n        return fontData\n    }\n}\n\nexport class NerpScriptAssetLoader extends AssetLoader<string> {\n    async exec(): Promise<string> {\n        const script = this.assetRegistry.vfs.getFile(this.lAssetName).toText()\n        ResourceManager.resourceByName.set(this.lAssetName, script) // TODO Add to specific cache\n        return script\n    }\n}\n\nexport class ObjectiveTextsAssetLoader extends AssetLoader<LevelObjectiveTexts> {\n    async exec(): Promise<LevelObjectiveTexts> {\n        const text = this.assetRegistry.vfs.getFile(this.lAssetName).toText()\n        const objectives = new ObjectiveTextParser().parseObjectiveTextFile(text) // TODO Turn ObjectiveTextParser into an AssetLoader\n        ResourceManager.resourceByName.set(this.lAssetName, objectives) // TODO Add to specific cache\n        return objectives\n    }\n}\n\nexport class MapAssetLoader extends AssetLoader<TerrainMapData> {\n    async exec(): Promise<TerrainMapData> {\n        const view = this.assetRegistry.vfs.getFile(this.lAssetName).toArray()\n        if (view.length < 13 || String.fromCharCode(...view.slice(0, 3)) !== 'MAP') {\n            throw new Error(`Invalid map data provided for: ${name}`)\n        }\n        const map = WadParser.parseMap(view) // TODO Turn WadParser into an AssetLoader\n        ResourceManager.resourceByName.set(this.lAssetName, map) // TODO Add to specific cache\n        return map\n    }\n}\n\nexport class ObjectListAssetLoader extends AssetLoader<Map<string, ObjectListEntryCfg>> {\n    async exec(): Promise<Map<string, ObjectListEntryCfg>> {\n        const data = this.assetRegistry.vfs.getFile(this.lAssetName).toText()\n        const objectList = WadParser.parseObjectList(data) // TODO Turn WadParser into an AssetLoader\n        ResourceManager.resourceByName.set(this.lAssetName, objectList) // TODO Add to specific cache\n        return objectList\n    }\n}\n\nexport class SoundAssetLoader extends AssetLoader<AudioBuffer> {\n    constructor(assetName: string, readonly sndKeys: string[]) {\n        super(assetName, true)\n    }\n\n    async exec(): Promise<AudioBuffer> {\n        let data: ArrayBuffer | undefined\n        const errors: unknown[] = []\n        try {\n            data = this.assetRegistry.vfs.getFile(this.lAssetName).toBuffer()\n        } catch (e2) {\n            errors.push(e2)\n            try {\n                data = this.assetRegistry.vfs.getFile(`Data/${(this.lAssetName)}`).toBuffer()\n            } catch (e) {\n                errors.push(e)\n            }\n            if (!data) return Promise.reject(`Could not find sound ${(this.lAssetName)}:\\n` + errors.join('\\n'))\n        }\n        const audioBuffer = await AudioContext.getContext().decodeAudioData(data)\n        ResourceManager.resourceByName.set(this.lAssetName, audioBuffer) // TODO Add only to sound buffer\n        this.sndKeys.forEach((sndKey) => SoundManager.sfxBuffersByKey.getOrUpdate(sndKey, () => []).push(audioBuffer))\n        return audioBuffer\n    }\n}\n\nexport class LWOAssetLoader extends AssetLoader<ArrayBuffer> {\n    async exec(): Promise<ArrayBuffer> {\n        let data: ArrayBuffer\n        try {\n            data = this.assetRegistry.vfs.getFile(this.lAssetName).toBuffer()\n        } catch (e) {\n            try {\n                data = this.assetRegistry.vfs.getFile(`world/shared/${getFilename(this.lAssetName)}`).toBuffer()\n            } catch (e) {\n                return Promise.reject(`Could not load LWO file ${(this.lAssetName)}; Error: ${e}`)\n            }\n        }\n        // TODO Parse LWO file here?\n        ResourceManager.resourceByName.set(this.lAssetName, data) // TODO Add to specific cache\n        return data\n    }\n}\n\nexport class FlhAssetLoader extends AssetLoader<SpriteImage[]> {\n    constructor(assetName: string, optional: boolean, readonly interFrameMode: boolean) {\n        super(assetName, optional)\n    }\n\n    async exec(): Promise<SpriteImage[]> {\n        let flhContent: DataView\n        try {\n            flhContent = this.assetRegistry.vfs.getFile(this.lAssetName).toDataView()\n        } catch (e) {\n            try {\n                flhContent = this.assetRegistry.vfs.getFile(this.lAssetName).toDataView()\n            } catch (e) {\n                flhContent = this.assetRegistry.vfs.getFile(`Data/${(this.lAssetName)}`).toDataView()\n            }\n        }\n        const imgData = new FlhParser(flhContent, this.interFrameMode).parse()\n        const images = imgData.map((i) => imgDataToCanvas(i))\n        ResourceManager.resourceByName.set(this.lAssetName, images) // TODO Add images to cache instead\n        return images\n    }\n}\n\nexport class UVAssetLoader extends AssetLoader<UVData> {\n    async exec(): Promise<UVData> {\n        const uvContent = this.assetRegistry.vfs.getFile(this.lAssetName).toText()\n        const data = new LWOUVParser().parse(uvContent)\n        ResourceManager.resourceByName.set(this.lAssetName, data) // TODO Add data to specific cache instead\n        return data\n    }\n}\n\nexport class AVIAssetLoader extends AssetLoader<AVIFile> {\n    async exec(): Promise<AVIFile> {\n        const dataView = this.assetRegistry.vfs.getFile(`Data/${this.lAssetName}`).toDataView()\n        const data = new AVIParser(dataView).parse()\n        ResourceManager.resourceByName.set(this.lAssetName, data) // TODO Add data to specific cache instead\n        return data\n    }\n}\n\nexport class CreditsAssetLoader extends AssetLoader<string> {\n    async exec(): Promise<string> {\n        const data = this.assetRegistry.vfs.getFile(this.assetRegistry.vfs.filterEntryNames(this.lAssetName)[0]).toText() // TODO Assert array length before accessing\n        ResourceManager.resourceByName.set(this.lAssetName, data) // TODO Add data to specific cache instead\n        return data\n    }\n}\n\nclass ProMeshTextureLoader extends LWOBTextureLoader {\n    constructor(readonly assetRegistry: AssetRegistry, readonly flipY: boolean, readonly theme: string, readonly num: string) {\n        super()\n    }\n\n    load(_textureFilename: string, onLoad: (textures: Texture[]) => void): void {\n        this.loadFromVfs().then((textures) => onLoad(textures))\n    }\n\n    async loadFromVfs(): Promise<Texture[]> {\n        const textureFilePaths = this.assetRegistry.vfs.filterEntryNames(`World/WorldTextures/.+${this.theme}${this.num}.bmp`)\n        return Promise.all(textureFilePaths.map(async (f) => {\n            const imgData = await this.assetRegistry.getLoader<TextureAssetLoader>(f).wait()\n            return this.createTexture(imgData, f)\n        }))\n    }\n\n    private createTexture(imgData: ImageData, textureFilepath: string): Texture {\n        // without repeat wrapping some entities are not fully textured\n        const texture = new Texture(imgData, Texture.DEFAULT_MAPPING, RepeatWrapping, RepeatWrapping)\n        texture.name = textureFilepath\n        texture.needsUpdate = true // without everything is just dark\n        texture.colorSpace = SRGBColorSpace\n        texture.magFilter = NearestFilter\n        if (this.flipY) texture.rotation += Math.PI\n        return texture\n    }\n}\n\nexport class ProMeshLoader extends AssetLoader<SurfaceMeshPro> {\n    constructor(readonly theme: string, readonly num: string) {\n        super(`world/promeshes/${theme === 'ice' ? `${theme}/${theme}` : theme}pm${num}`, true) // ice in subfolder\n    }\n\n    async exec(): Promise<SurfaceMeshPro> {\n        const meshFilePathA = `${this.lAssetName}a.lwo`\n        if (!this.assetRegistry.vfs.hasEntry(meshFilePathA)) return Promise.reject(`Cannot load pro mesh, missing \"${meshFilePathA}\"`)\n        const meshFilePathB = `${this.lAssetName}b.lwo`\n        if (!this.assetRegistry.vfs.hasEntry(meshFilePathB)) return Promise.reject(`Cannot load pro mesh, missing \"${meshFilePathB}\"`)\n        const meshFileContentA = this.assetRegistry.vfs.getFile(meshFilePathA)\n        const meshFileContentB = this.assetRegistry.vfs.getFile(meshFilePathB)\n        const proMeshTextureLoaderA = new ProMeshTextureLoader(this.assetRegistry, false, this.theme, this.num)\n        const lwoDataA = new LWOBParser(meshFileContentA.toBuffer(), proMeshTextureLoaderA, undefined).parse()\n        if (!lwoDataA) return Promise.reject('Cannot parse pro mesh A')\n        const proMeshTextureLoaderB = new ProMeshTextureLoader(this.assetRegistry, true, this.theme, this.num)\n        const lwoDataB = new LWOBParser(meshFileContentB.toBuffer(), proMeshTextureLoaderB, undefined).parse()\n        if (!lwoDataB) return Promise.reject('Cannot parse pro mesh B')\n        this.assembleGeometries(lwoDataA.geometry, lwoDataB.geometry)\n        const proMesh = new SurfaceMeshPro(mergeGeometries([lwoDataA.geometry, lwoDataB.geometry], true), [...lwoDataA.material, ...lwoDataB.material])\n        proMesh.position.set(0.5, 0, 0.5)\n        ResourceManager.proMeshes.set(this.lAssetName, proMesh)\n        return proMesh\n    }\n\n    assembleGeometries(geoA: BufferGeometry, geoB: BufferGeometry) {\n        const scale1 = 0.4 // XXX ???\n        const scale2 = 0.566 // XXX ???\n        if (this.num.startsWith('0') || this.num.startsWith('2') || this.num === '40') { // walls\n            geoA.scale(scale1, scale2, scale1)\n            geoA.rotateY(Math.PI)\n            geoA.rotateX(-Math.PI / 4)\n            geoA.translate(-20, 0, 20)\n            geoB.scale(scale1, scale2, scale1)\n            geoB.rotateY(Math.PI)\n            geoB.rotateX(Math.PI / 4)\n            geoB.rotateZ(Math.PI)\n            geoB.translate(20, 40, -20)\n        } else if (this.num === '10') { // rubble\n            geoA.scale(scale1, scale1, scale1)\n            geoA.rotateX(Math.PI / 2)\n            geoA.translate(20, 0, -20)\n            geoB.scale(scale1, scale1, scale1)\n            geoB.rotateX(Math.PI / 2)\n            geoB.rotateY(Math.PI)\n            geoB.translate(-20, 0, 20)\n        } else if (this.num.startsWith('3')) { // inverted corner\n            geoA.scale(scale2, scale1, scale1)\n            geoA.rotateY(Math.PI / 2)\n            geoA.rotateZ(-Math.PI / 2)\n            geoA.rotateX(Math.PI / 4)\n            geoA.translate(-20, 40, -20)\n            geoB.scale(scale1, scale2, scale1)\n            geoB.rotateY(Math.PI / 2)\n            geoB.rotateX(Math.PI)\n            geoB.rotateZ(-Math.PI / 4)\n            geoB.translate(20, 40, 20)\n        } else if (this.num.startsWith('5')) { // corner\n            geoA.scale(scale1, scale2, scale1)\n            geoA.rotateX(Math.PI / 4)\n            geoA.rotateY(Math.PI / 2)\n            geoA.translate(-20, 0, -20)\n            geoB.scale(scale2, scale1, scale1)\n            geoB.rotateY(Math.PI)\n            geoB.rotateZ(Math.PI / 2)\n            geoB.rotateX(-Math.PI / 4)\n            geoB.translate(20, 0, 20)\n        } else {\n            console.warn(`Unexpected num (${(this.num)}) given`)\n        }\n    }\n}\n","import { iGet } from '../core/Util'\nimport { VERBOSE } from '../params'\nimport { ANIM_ENTITY_ACTIVITY } from '../game/model/anim/AnimationActivity'\n\nexport class AnimEntityData {\n    scale: number = 1\n    carryNullName: string = ''\n    carryNullFrames: number = 0\n    depositNullName: string = ''\n    toolNullName: string = ''\n    wheelMesh: string = ''\n    wheelRadius: number = 0\n    wheelNullName: string = ''\n    drillNullName: string = ''\n    driverNullName: string = ''\n    cameraNullName: string = ''\n    cameraNullFrames: number = 0\n    readonly highPolyBodies: Record<string, string> = {}\n    readonly mediumPolyBodies: Record<string, string> = {}\n    readonly lowPolyBodies: Record<string, string> = {}\n    readonly fPPolyBodies: Record<string, Record<string, string>> = {}\n    fireNullName: string = ''\n    xPivotName: string = ''\n    yPivotName: string = ''\n    pivotMaxZ: number | undefined\n    pivotMinZ: number | undefined\n    readonly animations: AnimEntityAnimationData[] = []\n    readonly upgradesByLevel: Map<string, AnimEntityUpgradeData[]> = new Map()\n}\n\nexport interface AnimEntityAnimationData {\n    name: string\n    file: string\n    transcoef: number\n    looping: boolean\n    trigger: number\n}\n\nexport class AnimEntityUpgradeData {\n    constructor(\n        readonly lNameType: string,\n        readonly lUpgradeFilepath: string,\n        readonly parentNullName: string,\n        readonly parentNullIndex: number,\n    ) {\n    }\n}\n\nexport class AnimEntityParser {\n    readonly animEntityData: AnimEntityData = new AnimEntityData()\n    readonly knownAnimations: string[] = []\n\n    constructor(readonly cfgRoot: object, readonly path: string, readonly verbose: boolean = false) {\n    }\n\n    parse(): AnimEntityData {\n        Object.entries<any>(this.cfgRoot).forEach(([rootKey, value]) => {\n            if (rootKey.equalsIgnoreCase('Scale')) {\n                this.animEntityData.scale = Number(value)\n            } else if (rootKey.equalsIgnoreCase('CarryNullName')) {\n                this.animEntityData.carryNullName = value.toLowerCase()\n            } else if (rootKey.equalsIgnoreCase('CarryNullFrames')) {\n                this.animEntityData.carryNullFrames = Number(value)\n            } else if (rootKey.equalsIgnoreCase('Shape')) {\n                if (this.verbose) console.warn('TODO Derive buildings shape from this value') // XXX derive buildings surfaces shape from this value\n            } else if (rootKey.equalsIgnoreCase('DepositNullName')) {\n                this.animEntityData.depositNullName = value.toLowerCase()\n            } else if (rootKey.equalsIgnoreCase('ToolNullName')) {\n                this.animEntityData.toolNullName = value.toLowerCase()\n            } else if (rootKey.equalsIgnoreCase('WheelMesh')) {\n                if (!'NULL_OBJECT'.equalsIgnoreCase(value)) this.animEntityData.wheelMesh = this.path + value\n            } else if (rootKey.equalsIgnoreCase('WheelRadius')) {\n                this.animEntityData.wheelRadius = Number(value)\n            } else if (rootKey.equalsIgnoreCase('WheelNullName')) {\n                this.animEntityData.wheelNullName = value.toLowerCase()\n            } else if (rootKey.equalsIgnoreCase('DrillNullName')) {\n                this.animEntityData.drillNullName = value.toLowerCase()\n            } else if (rootKey.equalsIgnoreCase('DriverNullName')) {\n                this.animEntityData.driverNullName = value.toLowerCase()\n            } else if (rootKey.equalsIgnoreCase('CameraNullName')) {\n                this.animEntityData.cameraNullName = value.toLowerCase()\n            } else if (rootKey.equalsIgnoreCase('CameraNullFrames')) {\n                this.animEntityData.cameraNullFrames = Number(value)\n            } else if (rootKey.equalsIgnoreCase('CameraFlipDir')) {\n                // XXX what is this? flip upside down when hanging from rm?\n            } else if (rootKey.equalsIgnoreCase('HighPoly')) {\n                this.parsePolyBodies(value, this.animEntityData.highPolyBodies)\n            } else if (rootKey.equalsIgnoreCase('MediumPoly')) {\n                this.parsePolyBodies(value, this.animEntityData.mediumPolyBodies)\n            } else if (rootKey.equalsIgnoreCase('LowPoly')) {\n                this.parsePolyBodies(value, this.animEntityData.lowPolyBodies)\n            } else if (rootKey.equalsIgnoreCase('FPPoly')) {\n                ['camera1', 'camera2'].forEach((cameraName) => {\n                    this.animEntityData.fPPolyBodies[cameraName] = this.animEntityData.fPPolyBodies[cameraName] ?? {}\n                    this.parsePolyBodies(iGet(value, cameraName), this.animEntityData.fPPolyBodies[cameraName])\n                })\n            } else if (rootKey.equalsIgnoreCase('Activities')) {\n                this.parseActivities(value)\n            } else if (rootKey.equalsIgnoreCase('Upgrades')) {\n                this.parseUpgrades(value)\n            } else if (value['lwsfile']) { // some activities are not listed in the Activities section... try parse them anyway\n                if (!this.knownAnimations.includes(rootKey)) {\n                    try {\n                        if (rootKey.equalsIgnoreCase('stand')) { // XXX workaround for walkerlegs.ae\n                            this.parseActivityEntry(value, ANIM_ENTITY_ACTIVITY.stand)\n                        } else {\n                            // XXX What does it mean to have activities given outside of listing?\n                            this.parseActivityEntry(value, rootKey)\n                        }\n                    } catch (e) {\n                        if (this.verbose) console.warn(`Could not parse unlisted activity: ${rootKey}`, value, e)\n                    }\n                }\n            } else if (this.parseUpgradeEntry(rootKey, value)) {\n                if (VERBOSE) console.warn(`Entity has upgrade defined outside of upgrades group`, value)\n            } else if (rootKey.equalsIgnoreCase('FireNullName')) {\n                this.animEntityData.fireNullName = value.toLowerCase()\n            } else if (rootKey.equalsIgnoreCase('xPivot')) {\n                this.animEntityData.xPivotName = value.toLowerCase()\n            } else if (rootKey.equalsIgnoreCase('yPivot')) {\n                this.animEntityData.yPivotName = value.toLowerCase()\n            } else if (rootKey.equalsIgnoreCase('PivotMaxZ')) {\n                this.animEntityData.pivotMaxZ = value\n            } else if (rootKey.equalsIgnoreCase('PivotMinZ')) {\n                this.animEntityData.pivotMinZ = value\n            } else if (this.verbose) {\n                console.warn(`Unhandled animated entity key found: ${rootKey}`, value)\n            }\n        })\n\n        return this.animEntityData\n    }\n\n    private parsePolyBodies(value: object, polyBodies: Record<string, string>) {\n        Object.entries(value).forEach(([key, fileName]) => {\n            const polyKey = key.startsWith('!') ? key.slice(1) : key\n            polyBodies[polyKey.toLowerCase()] = 'NULL'.equalsIgnoreCase(fileName) ? 'hidden' : `${fileName}.lwo`\n        })\n    }\n\n    private parseActivities(value: any) {\n        Object.entries<string>(value).forEach(([activityName, keyName]) => {\n            try {\n                this.knownAnimations.push(keyName.toLowerCase())\n                const act = iGet(this.cfgRoot, keyName)\n                this.parseActivityEntry(act, activityName.toLowerCase())\n            } catch (e) {\n                console.error(e)\n                console.log(this.cfgRoot)\n                console.log(value)\n                console.log(activityName)\n            }\n        })\n    }\n\n    private parseActivityEntry(act: any, lActivityName: string) {\n        const file = iGet(act, 'FILE')\n        const isLws = iGet(act, 'LWSFILE') === true\n        const transcoef = iGet(act, 'TRANSCOEF')\n        const looping = iGet(act, 'LOOPING') === true\n        const trigger = iGet(act, 'TRIGGER') ?? 0\n        if (isLws) {\n            if (lActivityName.startsWith('!')) lActivityName = lActivityName.slice(1) // XXX What's the meaning of leading ! for activities???\n            this.animEntityData.animations.push({name: lActivityName, file: this.path + file.toLowerCase(), transcoef, looping, trigger})\n        } else {\n            console.error('Found activity which is not an LWS file')\n        }\n    }\n\n    private parseUpgrades(value: object) {\n        Object.entries(value).forEach(([levelKey, upgradesCfg]) => {\n            if (!this.parseUpgradeEntry(levelKey, upgradesCfg)) {\n                console.warn(`Unexpected upgrade level key: ${levelKey}`)\n            }\n        })\n    }\n\n    private parseUpgradeEntry(levelKey: string, upgradesCfg: any): boolean {\n        const match = levelKey.match(/level(\\d\\d\\d\\d)/i) // [carry] [scan] [speed] [drill]\n        if (!match) return false\n        const upgradesByLevel: AnimEntityUpgradeData[] = []\n        Object.entries<[string, number][] | [string, number]>(upgradesCfg).forEach(([upgradeTypeName, upgradeEntry]) => {\n            const upgradeEntries: [string, number][] = Array.isArray(upgradeEntry[0]) ? upgradeEntry as [string, number][] : [upgradeEntry as [string, number]]\n            upgradeEntries.forEach((upgradeTypeEntry) => {\n                const lNameType = upgradeTypeName.toLowerCase()\n                upgradesByLevel.push(new AnimEntityUpgradeData(lNameType, this.path + lNameType, upgradeTypeEntry[0], upgradeTypeEntry[1] - 1))\n            })\n        })\n        this.animEntityData.upgradesByLevel.set(match[1], upgradesByLevel)\n        return true\n    }\n}\n","/**\n * This loader loads LWSC files exported from LW\n *\n * File format description: http://www.martinreddy.net/gfx/3d/LWSC.txt\n */\n\nimport { Euler, KeyframeTrack, Matrix4, NumberKeyframeTrack, Quaternion, QuaternionKeyframeTrack, StringKeyframeTrack, Vector3, VectorKeyframeTrack } from 'three'\nimport { degToRad } from 'three/src/math/MathUtils'\nimport { getFilename } from '../../core/Util'\nimport { VERBOSE } from '../../params'\n\nexport class LWSCData {\n    filePath: string = ''\n    framesPerSecond: number = 25\n    durationSeconds: number = 0\n    readonly objects: LWSCObject[] = []\n}\n\nexport class LWSCObject {\n    fileName: string = ''\n    lowerName: string = ''\n    isNull: boolean = false\n    sfxName: string = ''\n    parentObjInd: number = 0 // index is 1 based, 0 means no parent\n    readonly pivot: Vector3 = new Vector3()\n    readonly keyframeTracks: KeyframeTrack[] = []\n    readonly opacityTracks: NumberKeyframeTrack[] = []\n    castShadow: boolean = false\n    receiveShadow: boolean = false\n}\n\n// noinspection PointlessArithmeticExpressionJS\nexport class LWSCParser {\n    readonly lwscData: LWSCData = new LWSCData()\n    lines: string[] = []\n    lineIndex: number = 0\n    firstFrame: number = 0\n    lastFrame: number = 0\n    frameStep: number = 1\n    numOfKeyframes: number = 0\n\n    constructor(filePath: string, content: string) {\n        this.lwscData.filePath = filePath\n        this.lines = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n') // normalize newlines\n            .replace(/\\t/g, ' ') // tabs to spaces\n            .split('\\n')\n            .map((l) => l.trim())\n        if (this.lines[0] !== 'LWSC') {\n            throw new Error(`Invalid start of file! Got \"${this.lines[0]}\" expected 'LWSC' in first line`)\n        }\n    }\n\n    parse(): LWSCData {\n        const sceneFileVersion = Number(this.lines[1])\n        if (sceneFileVersion !== 1) {\n            console.warn(`Unexpected scene file version: ${sceneFileVersion}`)\n        }\n\n        for (this.lineIndex = 2; this.lineIndex < this.lines.length; this.lineIndex++) {\n            let line = this.lines[this.lineIndex]\n            if (!line) continue // empty line: object separator\n            const key = line.split(' ')[0]\n            if (key === 'FirstFrame') {\n                this.parseFrameBlock()\n            } else if (key === 'AddNullObject' || key === 'LoadObject') {\n                this.parseObjectBlock()\n            } else if (line.startsWith('PreviewFirstFrame ') || line.startsWith('PreviewLastFrame ') || line.startsWith('PreviewFrameStep ')) {\n                // only used in editor\n            } else if (VERBOSE) {\n                // console.warn(`Unexpected line: ${line}`) // XXX implement all LWS features\n            }\n        }\n\n        return this.lwscData\n    }\n\n    private static parseLine(line: string): string[] {\n        const lineParts = line.split(' ').filter((l) => l !== '')\n        const key = lineParts.shift() || ''\n        const value = lineParts.join(' ')\n        return [key, value]\n    }\n\n    private parseFrameBlock() {\n        for (; this.lineIndex < this.lines.length; this.lineIndex++) {\n            const line = this.lines[this.lineIndex]\n            if (!line) return\n            const [key, value] = LWSCParser.parseLine(line)\n            if (key === 'FirstFrame') {\n                this.firstFrame = Number(value)\n                this.numOfKeyframes = this.lastFrame + 1 - this.firstFrame\n                this.lwscData.durationSeconds = this.numOfKeyframes / this.lwscData.framesPerSecond / this.frameStep\n            } else if (key === 'LastFrame') {\n                this.lastFrame = Number(value)\n                this.numOfKeyframes = this.lastFrame + 1 - this.firstFrame\n                this.lwscData.durationSeconds = this.numOfKeyframes / this.lwscData.framesPerSecond / this.frameStep\n            } else if (key === 'FrameStep') {\n                this.frameStep = Number(value)\n                this.lwscData.durationSeconds = this.numOfKeyframes / this.lwscData.framesPerSecond / this.frameStep\n            } else if (key === 'FramesPerSecond') {\n                this.lwscData.framesPerSecond = Number(value)\n            } else if (key === 'PreviewFirstFrame' || key === 'PreviewLastFrame' || key === 'PreviewFrameStep') {\n                // only used in editor\n            } else {\n                console.warn(`Unexpected key \"${key}\" in frame block`)\n            }\n        }\n        console.error('Parsing block reached content end')\n    }\n\n    private parseObjectBlock(): LWSCObject {\n        const currentObject = new LWSCObject()\n        this.lwscData.objects.push(currentObject)\n        for (; this.lineIndex < this.lines.length; this.lineIndex++) {\n            let line = this.lines[this.lineIndex]\n            if (!line) {\n                const positionTrack: KeyframeTrack | undefined = currentObject.keyframeTracks.find(({name}) => name === '.position')\n                const rotationTrack: KeyframeTrack | undefined = currentObject.keyframeTracks.find(({name}) => name == '.quaternion')\n                const scaleTrack: KeyframeTrack | undefined = currentObject.keyframeTracks.find(({name}) => name === '.scale')\n                const invPivotMat = new Matrix4().makeTranslation(currentObject.pivot).invert()\n                const positionMat = new Matrix4()\n                const rotation = new Quaternion()\n                const rotationMat = new Matrix4()\n                const scaleMat = new Matrix4()\n                const calcMat = new Matrix4()\n                const newPosition = new Vector3()\n                const newRotation = new Quaternion()\n                const newScale = new Vector3()\n                const minTimesLength = Math.min(positionTrack?.times.length ?? 0, rotationTrack?.times.length ?? 0, scaleTrack?.times.length ?? 0)\n                if (positionTrack?.times.length !== minTimesLength || rotationTrack?.times.length !== minTimesLength || scaleTrack?.times.length !== minTimesLength) {\n                    console.error(`track lengths don't match: positionTrack=${positionTrack?.times.length}, rotationTrack=${rotationTrack?.times.length}, scaleTrack=${scaleTrack?.times.length}`)\n                }\n                for (let i = 0; i < minTimesLength; i += 1) {\n                    if (positionTrack) positionMat.makeTranslation(\n                        positionTrack.values[i * positionTrack.getValueSize() + 0],\n                        positionTrack.values[i * positionTrack.getValueSize() + 1],\n                        positionTrack.values[i * positionTrack.getValueSize() + 2],\n                    )\n                    if (rotationTrack) rotationMat.makeRotationFromQuaternion(rotation.set(\n                        rotationTrack.values[i * rotationTrack.getValueSize() + 0],\n                        rotationTrack.values[i * rotationTrack.getValueSize() + 1],\n                        rotationTrack.values[i * rotationTrack.getValueSize() + 2],\n                        rotationTrack.values[i * rotationTrack.getValueSize() + 3],\n                    ))\n                    if (scaleTrack) scaleMat.makeScale(\n                        scaleTrack.values[i * scaleTrack.getValueSize() + 0],\n                        scaleTrack.values[i * scaleTrack.getValueSize() + 1],\n                        scaleTrack.values[i * scaleTrack.getValueSize() + 2],\n                    )\n                    calcMat.identity().multiply(positionMat).multiply(rotationMat).multiply(scaleMat).multiply(invPivotMat).decompose(newPosition, newRotation, newScale)\n                    if (positionTrack) {\n                        positionTrack.values[i * positionTrack.getValueSize() + 0] = newPosition.x\n                        positionTrack.values[i * positionTrack.getValueSize() + 1] = newPosition.y\n                        positionTrack.values[i * positionTrack.getValueSize() + 2] = newPosition.z\n                    }\n                    if (rotationTrack) {\n                        rotationTrack.values[i * rotationTrack.getValueSize() + 0] = newRotation.x\n                        rotationTrack.values[i * rotationTrack.getValueSize() + 1] = newRotation.y\n                        rotationTrack.values[i * rotationTrack.getValueSize() + 2] = newRotation.z\n                        rotationTrack.values[i * rotationTrack.getValueSize() + 3] = newRotation.w\n                    }\n                    if (scaleTrack) {\n                        scaleTrack.values[i * scaleTrack.getValueSize() + 0] = newScale.x\n                        scaleTrack.values[i * scaleTrack.getValueSize() + 1] = newScale.y\n                        scaleTrack.values[i * scaleTrack.getValueSize() + 2] = newScale.z\n                    }\n                }\n                return currentObject\n            }\n            const [key, value] = LWSCParser.parseLine(line)\n            if (key === 'LoadObject') {\n                currentObject.lowerName = currentObject.fileName = getFilename(value).toLowerCase()\n                if (currentObject.lowerName.endsWith('.lwo')) {\n                    currentObject.lowerName = currentObject.lowerName.slice(0, -'.lwo'.length)\n                } else {\n                    console.warn(`Unexpected object file name \"${currentObject.fileName}\"`)\n                }\n            } else if (key === 'AddNullObject') {\n                const nameParts = value.split(',')\n                currentObject.lowerName = nameParts[0].toLowerCase()\n                if (currentObject.lowerName === 'sfx' || currentObject.lowerName === 'snd') {\n                    currentObject.sfxName = nameParts[1]\n                    if (currentObject.lowerName === 'snd') currentObject.sfxName = currentObject.sfxName.toLowerCase().replace('sfx_', 'snd_')\n                    const sfxFrameStart = nameParts[2] ? Number(nameParts[2]) : 0\n                    const sfxFrameEnd = nameParts[3] ? Number(nameParts[3]) : Math.min(sfxFrameStart + 3, this.numOfKeyframes)\n                    const times: number[] = []\n                    const sfxNames: string[] = []\n                    for (let c = 0; c < this.numOfKeyframes; c++) {\n                        times[c] = c / this.numOfKeyframes * this.lwscData.durationSeconds\n                        sfxNames[c] = (sfxFrameStart <= c && c < sfxFrameEnd) ? currentObject.sfxName : ''\n                    }\n                    currentObject.keyframeTracks.push(new StringKeyframeTrack('.userData[sfxNameAnimation]', times, sfxNames))\n                } else if (currentObject.lowerName.startsWith('*') || currentObject.lowerName.startsWith(';')) {\n                    if (VERBOSE) console.warn(`Unexpected sfx object name ${currentObject.lowerName}`)\n                }\n                currentObject.isNull = true\n            } else if (key === 'ObjectMotion') {\n                let line = this.lines[++this.lineIndex]\n                const lenInfos = Number(line)\n                line = this.lines[++this.lineIndex]\n                const lenFrames = Number(line)\n                this.lineIndex++\n                const times: number[] = []\n                const relPos: number[] = []\n                const relRot: number[] = []\n                const relScale: number[] = []\n                for (let c = 0; c < lenFrames; c++) {\n                    let line = this.lines[this.lineIndex + c * 2]\n                    if (line.startsWith('EndBehavior')) break\n                    const infos = line.split(' ').map((n) => Number(n))\n                    if (infos.length !== lenInfos) console.warn(`Number of infos (${infos.length}) does not match with specified count (${lenInfos})`)\n                    line = this.lines[this.lineIndex + c * 2 + 1]\n                    const keyframeIndex = Number(line.split(' ')[0]) // other entries in line should be zeros\n                    let timeFromIndex = 0\n                    if (this.numOfKeyframes > 1) {\n                        timeFromIndex = (keyframeIndex - this.firstFrame) / (this.numOfKeyframes - 1) * this.lwscData.durationSeconds\n                    }\n                    times.push(timeFromIndex)\n                    // LightWave coordinate system (left-handed) to three.js coordinate system (right-handed)\n                    new Vector3(-infos[0], infos[1], infos[2]).toArray(relPos, relPos.length)\n                    const heading = -degToRad(infos[3]) // heading aka. yaw -> y-axis\n                    const pitch = degToRad(infos[4]) // pitch -> x-axis\n                    const bank = -degToRad(infos[5]) // bank aka. roll -> z-axis\n                    new Quaternion().setFromEuler(new Euler(pitch, heading, bank, 'YXZ'), true).toArray(relRot, relRot.length)\n                    new Vector3(infos[6], infos[7], infos[8]).toArray(relScale, relScale.length)\n                }\n                currentObject.keyframeTracks.push(new VectorKeyframeTrack(`.position`, times, relPos))\n                currentObject.keyframeTracks.push(new QuaternionKeyframeTrack(`.quaternion`, times, relRot))\n                currentObject.keyframeTracks.push(new VectorKeyframeTrack(`.scale`, times, relScale))\n                this.lineIndex += lenFrames * 2\n            } else if (key === 'ParentObject') {\n                currentObject.parentObjInd = Number(value) // index is 1 based\n            } else if (key === 'ShowObject' || key === 'LockedChannels') {\n                // only used in editor\n            } else if (key === 'ShadowOptions') {\n                const shadowBits = Number(value)\n                if (isNaN(shadowBits)) {\n                    console.warn('Could not parse shadow options', value)\n                } else {\n                    const selfShadow = !!(shadowBits & 0b001)\n                    const castShadow = !!(shadowBits & 0b010)\n                    const receiveShadow = !!(shadowBits & 0b100)\n                    currentObject.castShadow = selfShadow || castShadow\n                    currentObject.receiveShadow = selfShadow || receiveShadow\n                }\n            } else if (key === 'ObjDissolve') {\n                const times = []\n                const opacities = []\n                if (value == '(envelope)') {\n                    let line = this.lines[++this.lineIndex]\n                    const numOfInformationChannels = Number(line)\n                    if (numOfInformationChannels !== 1) console.error(`Number of information channels for opacity is not 1, but: ${numOfInformationChannels}`)\n                    line = this.lines[++this.lineIndex]\n                    const numOfKeyframes = Number(line)\n                    this.lineIndex++\n                    for (let c = 0; c < numOfKeyframes; c++) {\n                        let line = this.lines[this.lineIndex + c * 2]\n                        if (line.startsWith('EndBehavior')) break\n                        const opacity = 1 - Number(line)\n                        opacities.push(opacity)\n                        line = this.lines[this.lineIndex + c * 2 + 1]\n                        const keyframeIndex = Number(line.split(' ')[0]) // other entries in line should be zeros\n                        const timeFromIndex = (keyframeIndex - this.firstFrame) / this.numOfKeyframes * this.lwscData.durationSeconds\n                        times.push(timeFromIndex)\n                    }\n                    this.lineIndex += numOfKeyframes * 2\n                } else {\n                    times.push(0)\n                    const opacity = 1 - Number(value)\n                    opacities.push(opacity)\n                }\n                currentObject.opacityTracks.push(new NumberKeyframeTrack(`.opacity`, times, opacities))\n            } else if (key === 'PivotPoint') {\n                const pivotElements = value.split(' ').map((n) => Number(n))\n                if (pivotElements.length === 3) {\n                    currentObject.pivot.set(-pivotElements[0] /* flip x-axis */, pivotElements[1], pivotElements[2])\n                } else {\n                    console.error(`Number of elements for PivotPoint is not 3, but: ${pivotElements.length}`)\n                }\n            } else if (VERBOSE) {\n                console.warn(`Unhandled line in object block: ${line}; key: ${key}; value: ${value}`) // XXX implement all LWS features\n            }\n        }\n        console.error('Parsing block reached content end')\n        return currentObject\n    }\n}\n","export interface NerpMessage {\n    txt: string\n    sndNum: string\n    snd: string\n}\n\nexport class NerpMsgParser {\n    // text line formatting differs between wad0 and wad1 files!\n    static readonly txtMatcher = /(\\\\\\[)?([^\\\\#]+)(\\\\])?\\s*(#([^#]+)#)?/\n\n    static parseNerpMessages(wadData: string): NerpMessage[] {\n        const result: NerpMessage[] = []\n        wadData.split(/[\\r\\n]/).map((l) => l?.trim()).filter((l) => !!l && l !== '-')\n            .forEach((line, index) => {\n                if (line.startsWith('$')) {\n                    const sndMatch = line.match(/\\$(\\S+)\\s+(\\S+)/)\n                    if (!sndMatch) return\n                    result.some((e) => {\n                        if (e.sndNum === sndMatch[1]) {\n                            e.snd = sndMatch[2].replace(/\\\\/g, '/').toLowerCase()\n                            if (!e.snd.endsWith('.wav')) e.snd += '.wav'\n                            return true\n                        }\n                        return false\n                    })\n                } else {\n                    const txtMatch = line.match(NerpMsgParser.txtMatcher)\n                    if (!txtMatch) return\n                    result[index] = result[index] || {txt: '', sndNum: '', snd: ''}\n                    result[index].txt = txtMatch[2].replace(/_/g, ' ').trim()\n                    result[index].sndNum = txtMatch[5]\n                }\n            })\n        return result\n    }\n}\n","import { GameConfig } from '../cfg/GameConfig'\nimport { MenuCfg } from '../cfg/MenuCfg'\nimport { getPath, iGet, yieldToMainThread } from '../core/Util'\nimport { RonFileParser } from './fileparser/RonFileParser'\nimport { AlphaImageAssetLoader, AlphaTranslucentImageAssetLoader, AssetLoader, AVIAssetLoader, CreditsAssetLoader, FlhAssetLoader, FontAssetLoader, ImageAssetLoader, LWOAssetLoader, MapAssetLoader, NerpScriptAssetLoader, ObjectiveTextsAssetLoader, ObjectListAssetLoader, ProMeshLoader, SoundAssetLoader, TextureAssetLoader, UVAssetLoader } from './AssetLoader'\nimport { TOOLTIP_FONT_NAME } from '../params'\nimport { ResourceManager } from './ResourceManager'\nimport { AnimEntityParser } from './AnimEntityParser'\nimport { LWSCParser } from './fileparser/LWSCParser'\nimport { NerpMsgParser } from './fileparser/NerpMsgParser'\nimport { VirtualFileSystem } from './fileparser/VirtualFileSystem'\n\nexport class AssetRegistry {\n    readonly assetLoaders: Map<string, AssetLoader<any>> = new Map()\n    readonly inProgress: Promise<void>[] = []\n    tooltipFontLoader: FontAssetLoader = new FontAssetLoader(TOOLTIP_FONT_NAME, 11)\n\n    constructor(readonly vfs: VirtualFileSystem) {\n    }\n\n    async registerAllAssets(gameConfig: GameConfig): Promise<AssetLoader<any>[]> {\n        // add fonts and cursors\n        this.getImagesInFolder('Interface/Pointers/').forEach((assetPath) => {\n            this.addLoader(new AlphaImageAssetLoader(assetPath))\n        })\n        this.vfs.filterEntryNames(`Interface/Pointers/.+\\\\.flh`).forEach((assetPath) => {\n            this.addLoader(new FlhAssetLoader(assetPath, true, false))\n        })\n        this.addLoader(this.tooltipFontLoader)\n        // add menu assets\n        this.addMenuWithAssets(gameConfig.menu.mainMenuFull, false, 43)\n        this.addMenuWithAssets(gameConfig.menu.pausedMenu, true, 17)\n        this.addMenuWithAssets(gameConfig.menu.optionsMenu, true, 17)\n        this.addLoader(new AlphaImageAssetLoader('Interface/BriefingPanel/BriefingPanel.bmp'))\n        this.addLoader(new ObjectiveTextsAssetLoader('Languages/ObjectiveText.txt'))\n        this.addLoader(new AlphaImageAssetLoader(gameConfig.dialog.image))\n        this.addLoader(new AlphaImageAssetLoader(gameConfig.dialog.contrastOverlay))\n        this.addLWSFile('Interface/FrontEnd/Rock_Wipe/RockWipe.lws')\n        this.vfs.filterEntryNames(`Interface/FrontEnd/Rock_Wipe/.+\\\\.uv`).forEach((assetPath) => {\n            this.addLoader(new UVAssetLoader(assetPath))\n        })\n        this.addTextureFolder('Interface/FrontEnd/Rock_Wipe/')\n        // add in-game assets\n        this.addAlphaImageFolder('Interface/TopPanel/') // top panel\n        this.addAlphaImageFolder('Interface/RightPanel/') // crystal sidebar\n        this.addAlphaImageFolder('Interface/RadarPanel/')\n        this.addAlphaImageFolder('Interface/MessagePanel/')\n        this.addLoader(new ImageAssetLoader('Interface/Airmeter/msgpanel_air_juice.bmp'))\n        this.addLoader(new AlphaImageAssetLoader('Interface/Airmeter/msgpanel_noair.bmp'))\n        this.addAlphaImageFolder('Interface/InfoPanel/')\n        this.addAlphaImageFolder('Interface/PriorityPanel/')\n        this.addAlphaImageFolder('Interface/Priorities')\n        this.addAlphaImageFolder('Interface/CameraControl/')\n        this.addAlphaImageFolder('Interface/MessageTabs/')\n        this.addAlphaImageFolder('Interface/IconPanel/')\n        this.addAlphaImageFolder('Interface/Icons/')\n        this.addAlphaImageFolder('Interface/Menus/')\n        this.addAlphaImageFolder('Interface/Buttons/')\n        this.addAlphaImageFolder('Interface/InfoImages/')\n        this.addAlphaImageFolder('Interface/Fonts/HealthFont/')\n        this.getImagesInFolder('Interface/FrontEnd/Vol_').forEach((assetPath) => {\n            this.addLoader(new AlphaTranslucentImageAssetLoader(assetPath))\n        })\n        this.getImagesInFolder('Interface/FrontEnd/lp_').forEach((assetPath) => {\n            this.addLoader(new ImageAssetLoader(assetPath))\n        })\n        this.getImagesInFolder('Interface/ToolTipIcons/').forEach((assetPath) => {\n            this.addLoader(new AlphaImageAssetLoader(assetPath))\n        })\n        this.addLoader(new AlphaImageAssetLoader('Interface/FrontEnd/LowerPanel.bmp'))\n        this.addLoader(new AlphaImageAssetLoader(gameConfig.main.tutorialIcon))\n        // level files\n        this.addLoader(new NerpScriptAssetLoader('Levels/nerpnrn.h'))\n        gameConfig.levels.forEach((level) => {\n            // TODO Replace group separate level config loader with combined level config loader\n            level.menuBMP.forEach((bmpName) => {\n                this.addLoader(new AlphaImageAssetLoader(bmpName))\n            })\n            this.addLoader(new MapAssetLoader(level.surfaceMap))\n            this.addLoader(new MapAssetLoader(level.predugMap))\n            this.addLoader(new MapAssetLoader(level.terrainMap))\n            this.addLoader(new MapAssetLoader(level.blockPointersMap, true))\n            this.addLoader(new MapAssetLoader(level.cryOreMap, true))\n            this.addLoader(new MapAssetLoader(level.pathMap, true))\n            if (level.fallinMap) this.addLoader(new MapAssetLoader(level.fallinMap))\n            if (level.erodeMap) this.addLoader(new MapAssetLoader(level.erodeMap))\n            if (level.emergeMap) this.addLoader(new MapAssetLoader(level.emergeMap, true))\n            this.addLoader(new ObjectListAssetLoader(level.oListFile))\n            this.addLoader(new NerpScriptAssetLoader(level.nerpFile))\n            const content = this.vfs.getFile(level.nerpMessageFile).toText()\n            const nerpMessages = NerpMsgParser.parseNerpMessages(content)\n            ResourceManager.resourceByName.set(level.nerpMessageFile.toLowerCase(), nerpMessages) // TODO Add nerp messages directly to level config\n            nerpMessages.forEach((msg) => {\n                if (msg.snd) this.addLoader(new SoundAssetLoader(msg.snd, [msg.snd]))\n            })\n        })\n        // load all shared textures\n        this.addTextureFolder('World/Shared/')\n        this.addTextureFolder('Vehicles/SharedUG/')\n        // load all entity upgrades\n        Object.values(gameConfig.upgradeTypes).forEach((uType) => {\n            this.addMeshObjects(uType)\n        })\n        // load all building types\n        Object.values(GameConfig.instance.buildingTypes).forEach((bType) => this.addMeshObjects(bType))\n        this.addTextureFolder('Buildings/E-Fence')\n        this.addAnimatedEntity('mini-figures/pilot/pilot.ae')\n        Object.values(gameConfig.advisor).forEach((adv) => {\n            this.addLWSFile(adv.animFileName)\n            this.addTextureFolder(getPath(adv.animFileName))\n        })\n        // load monsters\n        Object.values(GameConfig.instance.rockMonsterTypes).forEach((mType) => this.addMeshObjects(mType))\n        this.vfs.filterEntryNames(`Creatures/LavaMonster/.+\\\\.uv`).forEach((assetPath) => {\n            this.addLoader(new UVAssetLoader(assetPath))\n        })\n        await yieldToMainThread()\n        // load vehicles\n        Object.values(GameConfig.instance.vehicleTypes).forEach((v) => {\n            v.forEach((vType) => this.addMeshObjects(vType))\n        })\n        // load bubbles\n        Object.values(gameConfig.bubbles).forEach((b) => {\n            this.addLoader(new AlphaImageAssetLoader(b))\n        })\n        // load misc objects\n        this.addTextureFolder('MiscAnims/Crystal/')\n        this.addLoader(new LWOAssetLoader('World/Shared/Crystal.lwo')) // high-poly version\n        this.addLoader(new TextureAssetLoader('MiscAnims/Ore/Ore.bmp'))\n        this.addLoader(new TextureAssetLoader('MiscAnims/Effects/rockfall.bmp'))\n        this.addLoader(new TextureAssetLoader('MiscAnims/Effects/rd_laserbolt.bmp'))\n        this.addLoader(new TextureAssetLoader('MiscAnims/Effects/rd_laserbolt_x.bmp'))\n        this.addLoader(new TextureAssetLoader('MiscAnims/Effects/rd_newstargreen.bmp'))\n        const miscObjects = iGet(gameConfig, 'MiscObjects')\n        Object.values<string>(miscObjects).forEach((mType) => {\n            this.addMeshObjects(mType)\n        })\n        Object.values(gameConfig.rockFallStyles).forEach((entry) => {\n            ;[entry.threeSides, entry.outsideCorner, entry.tunnel].forEach((shape) => {\n                const textureFolder = shape.split('/').slice(0, -1).join('/')\n                this.addTextureFolder(textureFolder)\n                this.addLWSFile(shape)\n            })\n        })\n        this.addLoader(new AlphaImageAssetLoader('Interface/Dependencies/+.bmp'))\n        this.addLoader(new AlphaImageAssetLoader('Interface/Dependencies/=.bmp'))\n        this.addLoader(new AVIAssetLoader(gameConfig.main.creditsBackAVI, true))\n        this.addLoader(new CreditsAssetLoader(gameConfig.main.creditsTextFile))\n        this.addLoader(new FontAssetLoader('Interface/Fonts/RSFont.bmp', 17))\n        // surface textures\n        this.addTextureFolder('World/WorldTextures/IceSplit/Ice')\n        this.addTextureFolder('World/WorldTextures/LavaSplit/Lava')\n        this.addTextureFolder('World/WorldTextures/RockSplit/Rock')\n        Object.values(gameConfig.textures.textureSetByName).forEach((s) => s.roofTexture && this.addLoader(new TextureAssetLoader(s.roofTexture)))\n        // pro meshes for high wall details\n        const themes = ['rock', 'lava', 'ice']\n        const nums = ['01', '02', '03', '04', '05', '10', '20', '21', '22', '23', '24', '25', '31', '31', '32', '33', '34', '35', '40', '51', '52', '53', '54', '55']\n        themes.forEach((theme) => nums.forEach((num) => this.addLoader(new ProMeshLoader(theme, num))))\n        // reward screen\n        this.addLoader(new ImageAssetLoader(gameConfig.reward.wallpaper))\n        this.addLoader(new FontAssetLoader(gameConfig.reward.backFont, 17))\n        Object.entries(gameConfig.reward.fonts).forEach(([key, imgPath]) => this.addLoader(new FontAssetLoader(imgPath, key.toLowerCase() !== 'score' ? 43 : 26)))\n        gameConfig.reward.images.forEach(img => this.addLoader(new AlphaImageAssetLoader(img.filePath)))\n        gameConfig.reward.boxImages.forEach(img => this.addLoader(new ImageAssetLoader(img.filePath)));\n        [gameConfig.reward.saveButton, gameConfig.reward.advanceButton].forEach((cfg) => {\n            this.addLoader(new ImageAssetLoader(cfg.imgNormalFilepath))\n            this.addLoader(new ImageAssetLoader(cfg.imgHoverFilepath))\n            this.addLoader(new ImageAssetLoader(cfg.imgPressedFilepath))\n            this.addLoader(new ImageAssetLoader(cfg.imgDisabledFilepath))\n        })\n        Object.values(gameConfig.reward.flics).forEach((f) => {\n            this.addLoader(new FlhAssetLoader(f.flhFilepath, true, false))\n        })\n        // sounds\n        Object.entries(gameConfig.samples.pathToSfxKeys).forEach(([sndPath, sndKeys]) => {\n            this.addLoader(new SoundAssetLoader(sndPath, sndKeys))\n        })\n        await Promise.all(this.inProgress)\n        return this.assetLoaders.values().toArray()\n    }\n\n    addMeshObjects(basePath: string) {\n        const aeFilepath = `${basePath}/${basePath.split('/').last()}.ae`\n        if (this.vfs.hasEntry(aeFilepath)) this.addAnimatedEntity(aeFilepath)\n        const aeSharedFilepath = `world/shared/${basePath.split('/').last()}.ae`\n        if (this.vfs.hasEntry(aeSharedFilepath)) this.addAnimatedEntity(aeSharedFilepath)\n        const lwsFilepath = `${basePath}.lws`\n        if (this.vfs.hasEntry(lwsFilepath)) this.addLWSFile(lwsFilepath)\n        const lwsSharedFilepath = `world/shared/${basePath.split('/').last()}.lws`\n        if (this.vfs.hasEntry(lwsSharedFilepath)) this.addLWSFile(lwsSharedFilepath)\n        const lwoFilepath = `${basePath}.lwo`\n        if (this.vfs.hasEntry(lwoFilepath)) this.addLWOFile(lwoFilepath)\n        const lwoSharedFilepath = `world/shared/${basePath.split('/').last()}.lwo`\n        if (this.vfs.hasEntry(lwoSharedFilepath)) this.addLWOFile(lwoSharedFilepath)\n    }\n\n    addAnimatedEntity(aeFile: string) {\n        const content = this.vfs.getFile(aeFile).toText()\n        const cfgRoot = RonFileParser.parse(aeFile, content)\n        const path = getPath(aeFile)\n        // load all textures for this type\n        this.addTextureFolder(path)\n        const animData = new AnimEntityParser(cfgRoot, path).parse()\n        ResourceManager.resourceByName.set(aeFile.toLowerCase(), animData)\n        const wheelMeshName = animData.wheelMesh\n        if (wheelMeshName && !'NULL_OBJECT'.equalsIgnoreCase(wheelMeshName)) {\n            this.addLWOFile(`${wheelMeshName}.lwo`)\n        }\n        [animData.highPolyBodies, animData.mediumPolyBodies, animData.lowPolyBodies].forEach((polyType) => {\n            for (const filename of Object.values(polyType)) {\n                this.addLWOFile(path + filename)\n            }\n        })\n        // TODO add 'FPPoly' (contains usually two cameras)\n        animData.animations.forEach((a) => {\n            this.addLWSFile(a.file)\n        })\n    }\n\n    addLWSFile(lwsFilepath: string) {\n        if (!lwsFilepath.toLowerCase().endsWith('.lws')) lwsFilepath += '.lws'\n        const lwsPath = getPath(lwsFilepath).toLowerCase()\n        this.inProgress.push(new Promise((resolve) => {\n            try {\n                const content = this.vfs.getFile(lwsFilepath).toText()\n                const lwscData = new LWSCParser(lwsFilepath, content).parse()\n                ResourceManager.resourceByName.set(lwsFilepath.toLowerCase(), lwscData)\n                lwscData.objects.forEach((obj) => {\n                    if (!obj.fileName) return\n                    const lwoFilepath = lwsPath + obj.fileName\n                    this.addLWOFile(lwoFilepath)\n                    this.addLWOFile(lwoFilepath.replace('vlp', 'lp'), true)\n                    this.addLWOFile(lwoFilepath.replace('vlp', 'mp'), true)\n                    this.addLWOFile(lwoFilepath.replace('vlp', 'hp'), true)\n                })\n            } catch (e) {\n                // XXX do we have to care? files listed in pilot.ae can be found in vehicles/hoverboard/ or not at all...\n            }\n            resolve()\n        }))\n    }\n\n    addLWOFile(lwoFilepath: string, optional: boolean = false) {\n        this.addLoader(new LWOAssetLoader(lwoFilepath, optional))\n        this.addLoader(new UVAssetLoader(lwoFilepath.replace('.lwo', '.uv'), true))\n    }\n\n    addAlphaImageFolder(folderPath: string) {\n        this.getImagesInFolder(folderPath).forEach((assetPath) => {\n            this.addLoader(new AlphaImageAssetLoader(assetPath))\n        })\n    }\n\n    addTextureFolder(folderPath: string) {\n        this.getImagesInFolder(folderPath).forEach((assetPath) => {\n            this.addLoader(new TextureAssetLoader(assetPath))\n        })\n    }\n\n    private getImagesInFolder(folderPath: string): string[] {\n        return this.vfs.filterEntryNames(`${folderPath}.+\\\\.bmp`)\n    }\n\n    addMenuWithAssets(menuCfg: MenuCfg, menuImageAlpha: boolean, fontCharHeight: number) {\n        menuCfg.menus.forEach((menuCfg) => {\n            this.addLoader(menuImageAlpha ? new AlphaImageAssetLoader(menuCfg.menuImage) : new ImageAssetLoader(menuCfg.menuImage))\n            this.addLoader(new FontAssetLoader(menuCfg.menuFont, fontCharHeight))\n            this.addLoader(new FontAssetLoader(menuCfg.loFont, fontCharHeight))\n            this.addLoader(new FontAssetLoader(menuCfg.hiFont, fontCharHeight))\n            const useInterFrameMode = menuCfg.title.equalsIgnoreCase('Main')\n            menuCfg.overlays.forEach((overlay) => {\n                this.addLoader(new FlhAssetLoader(overlay.flhFilepath, true, useInterFrameMode))\n            })\n        })\n    }\n\n    addLoader<T extends AssetLoader<unknown>>(loader: T): void {\n        if (!loader.lAssetName || this.assetLoaders.has(loader.lAssetName) || loader.lAssetName.equalsIgnoreCase('NULL')) return\n        this.assetLoaders.set(loader.lAssetName, loader)\n        loader.assetRegistry = this\n    }\n\n    getLoader<T extends AssetLoader<unknown>>(assetName: string): T {\n        const loader = this.assetLoaders.get(assetName.toLowerCase())\n        if (!loader) throw new Error(`No asset loader registered for \"${assetName}\"`)\n        return loader as T // XXX Do some kind of type checking?\n    }\n}\n","export type UiElementCallback = () => void\n\nexport class UiElementState {\n    hidden: boolean = false\n    disabled: boolean = false\n    protected hovered: boolean = false\n    protected down: boolean = false\n    stateChanged: boolean = false\n\n    onPressed?: UiElementCallback\n    onHoverChanged?: UiElementCallback\n    onShowTooltip?: UiElementCallback\n    onHideTooltip?: UiElementCallback\n\n    reset() {\n        this.stateChanged = this.hovered || this.down || this.hidden || this.disabled\n        this.hovered = false\n        this.onHideTooltip?.()\n        this.down = false\n        this.hidden = false\n        this.disabled = false\n    }\n\n    clearStateChanged() {\n        this.stateChanged = false\n    }\n\n    onMouseDown(): boolean {\n        if (!this.hovered || this.disabled || this.hidden) return false\n        if (!this.down) this.stateChanged = true\n        this.down = true\n        return true\n    }\n\n    onMouseUp(): boolean {\n        if (!this.down || this.disabled || this.hidden) return false\n        this.stateChanged = true\n        this.down = false\n        if (this.hovered && this.onPressed) {\n            this.onHideTooltip?.()\n            this.onPressed()\n        }\n        return true\n    }\n\n    setHovered(hovered: boolean) {\n        if (this.disabled || this.hidden) return\n        if (this.hovered === hovered) return\n        if (hovered) {\n            this.onShowTooltip?.()\n        } else {\n            this.onHideTooltip?.()\n        }\n        this.stateChanged = true\n        this.hovered = hovered\n        this.onHoverChanged?.()\n    }\n\n    setDisabled(disabled: boolean) {\n        if (this.disabled === disabled) return\n        this.stateChanged = true\n        this.hovered = false\n        this.onHideTooltip?.()\n        this.disabled = disabled\n    }\n\n    setHidden(hidden: boolean) {\n        if (this.hidden === hidden) return\n        this.hovered = false\n        this.onHideTooltip?.()\n        this.hidden = hidden\n    }\n\n    get visible(): boolean {\n        return !this.hidden\n    }\n\n    get hover(): boolean {\n        return this.hovered\n    }\n\n    get pressed(): boolean {\n        return this.down\n    }\n}\n","import { SpriteContext } from '../core/Sprite'\nimport { UiElementCallback, UiElementState } from './UiElementState'\n\nexport class MainMenuBaseItem {\n    protected state: UiElementState = new UiElementState()\n    zIndex: number = 100\n    scrollAffected = false\n    targetIndex: number = 0\n\n    constructor(\n        public x: number = 0,\n        public y: number = 0,\n        public width: number = 0,\n        public height: number = 0,\n        public actionName: string = '',\n    ) {\n    }\n\n    isHovered(sx: number, sy: number): boolean {\n        return sx >= this.x && sx < this.x + this.width && sy >= this.y && sy < this.y + this.height\n    }\n\n    setHovered(hovered: boolean) {\n        this.state.setHovered(hovered)\n    }\n\n    set onHoverChange(callback: UiElementCallback) {\n        this.state.onHoverChanged = callback\n    }\n\n    onMouseDown(): boolean {\n        return this.state.onMouseDown()\n    }\n\n    set onPressed(callback: UiElementCallback) {\n        this.state.onPressed = callback\n    }\n\n    onMouseUp(): boolean {\n        return this.state.onMouseUp()\n    }\n\n    draw(context: SpriteContext) {\n        this.state.clearStateChanged()\n    }\n\n    get hover(): boolean {\n        return this.state.hover\n    }\n\n    get needsRedraw(): boolean {\n        return this.state.stateChanged\n    }\n\n    set visible(state: boolean) {\n        this.state.setHidden(!state)\n    }\n\n    set disabled(state: boolean) {\n        this.state.setDisabled(state)\n    }\n\n    reset() {\n        this.state.reset()\n    }\n}\n","// noinspection JSUnusedGlobalSymbols\nexport const MOUSE_BUTTON = {\n    none: -1,\n    main: 0,\n    middle: 1,\n    secondary: 2,\n} as const\nexport type MouseButtonType = typeof MOUSE_BUTTON[keyof typeof MOUSE_BUTTON];\n\nexport const POINTER_EVENT = {\n    move: 1,\n    down: 2,\n    up: 3,\n    leave: 4,\n} as const\nexport type PointerEventType = typeof POINTER_EVENT[keyof typeof POINTER_EVENT];\n\nexport const KEY_EVENT = {\n    down: 1,\n    up: 2,\n} as const\nexport type KeyEventType = typeof KEY_EVENT[keyof typeof KEY_EVENT];\n","import { MOUSE_BUTTON, MouseButtonType, PointerEventType } from './EventTypeEnum'\n\nexport class GamePointerEvent implements PointerEventInit {\n    pointerId: number | undefined\n    type: string\n    eventEnum: PointerEventType\n    bubbles: boolean\n    clientX: number\n    clientY: number\n    pointerType: '' | 'mouse' | 'pen' | 'touch'\n    button: MouseButtonType\n    ctrlKey: boolean\n    metaKey: boolean\n    shiftKey: boolean\n    canvasX: number = 0\n    canvasY: number = 0\n\n    constructor(eventEnum: PointerEventType, event: PointerEvent) {\n        this.pointerId = event.pointerId\n        this.type = event.type\n        this.eventEnum = eventEnum\n        this.bubbles = false // disable bubbling otherwise we'll trigger this same event handler again\n        // all event attributes used by three.js controls: clientX, clientY, deltaY, keyCode, touches, pointerType, button, ctrlKey, metaKey, shiftKey\n        this.clientX = event.clientX\n        this.clientY = event.clientY\n        this.pointerType = GamePointerEvent.toPointerType(event.pointerType)\n        this.button = GamePointerEvent.toMouseButton(event.button)\n        this.ctrlKey = event.ctrlKey\n        this.metaKey = event.metaKey\n        this.shiftKey = event.shiftKey\n    }\n\n    private static toPointerType(pointerType: string | undefined): '' | 'mouse' | 'pen' | 'touch' {\n        if (!pointerType) return ''\n        const lPointerType = pointerType.toLowerCase()\n        if (lPointerType === 'touch') {\n            return 'touch'\n        } else if (lPointerType === 'pen') {\n            return 'pen'\n        } else {\n            return 'mouse'\n        }\n    }\n\n    private static toMouseButton(button: number): MouseButtonType {\n        switch (button) {\n            case -1:\n                return MOUSE_BUTTON.none\n            case 0:\n                return MOUSE_BUTTON.main\n            case 1:\n                return MOUSE_BUTTON.middle\n            case 2:\n                return MOUSE_BUTTON.secondary\n            default:\n                console.warn(`Unexpected mouse button (${button}) given. Using fallback to ${MOUSE_BUTTON.main}`)\n                return MOUSE_BUTTON.main\n        }\n    }\n}\n","import { SoundManager } from '../audio/SoundManager'\nimport { MenuLabelItemCfg } from '../cfg/MenuLabelItemCfg'\nimport { SpriteContext, SpriteImage } from '../core/Sprite'\nimport { ChangeTooltip, HideTooltip } from '../event/GuiCommand'\nimport { ResourceManager } from '../resource/ResourceManager'\nimport { MainMenuBaseItem } from './MainMenuBaseItem'\nimport { MainMenuLayer } from './MainMenuLayer'\nimport { UiElementCallback } from './UiElementState'\nimport { TOOLTIP_DELAY_TEXT_MENU } from '../params'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { EventBroker } from '../event/EventBroker'\n\nexport class MainMenuIconButton extends MainMenuBaseItem {\n    imgNormal?: SpriteImage\n    imgHover?: SpriteImage\n    imgPressed?: SpriteImage\n\n    constructor(layer: MainMenuLayer, cfg: MenuLabelItemCfg) {\n        super()\n        if (cfg.imgNormal) this.imgNormal = ResourceManager.getImage(cfg.imgNormal)\n        if (cfg.imgHover) this.imgHover = ResourceManager.getImage(cfg.imgHover)\n        if (cfg.imgPressed) this.imgPressed = ResourceManager.getImage(cfg.imgPressed)\n        const tooltipText = GameConfig.instance.getTooltipText(cfg.tooltipKey)\n        this.state.onShowTooltip = () => EventBroker.publish(new ChangeTooltip(tooltipText, TOOLTIP_DELAY_TEXT_MENU))\n        this.state.onHideTooltip = () => EventBroker.publish(new HideTooltip(tooltipText))\n        this.width = Math.max(this.imgNormal?.width || 0, this.imgHover?.width || 0, this.imgPressed?.width || 0)\n        this.height = Math.max(this.imgNormal?.height || 0, this.imgHover?.height || 0, this.imgPressed?.height || 0)\n        this.x = layer.cfg.autoCenter ? (layer.fixedWidth - this.width) / 2 : layer.cfg.position.x + cfg.x\n        this.y = layer.cfg.position.y + cfg.y\n        this.actionName = cfg.actionName\n        if (this.actionName?.equalsIgnoreCase('Next')) this.targetIndex = Number(cfg.target.slice('menu'.length)) - 1\n    }\n\n    set onPressed(callback: UiElementCallback) {\n        super.onPressed = () => {\n            SoundManager.playSfxSound('SFX_ButtonPressed')\n            callback()\n        }\n    }\n\n    draw(context: SpriteContext) {\n        super.draw(context)\n        let img = this.imgNormal\n        if (this.state.hover) img = this.imgHover\n        if (this.state.pressed) img = this.imgPressed\n        if (img) context.drawImage(img, this.x, this.y)\n    }\n}\n","import { SoundManager } from '../audio/SoundManager'\nimport { MenuLabelItemCfg } from '../cfg/MenuLabelItemCfg'\nimport { SpriteContext, SpriteImage } from '../core/Sprite'\nimport { MainMenuBaseItem } from './MainMenuBaseItem'\nimport { MainMenuLayer } from './MainMenuLayer'\nimport { UiElementCallback } from './UiElementState'\nimport { BitmapFontWorkerPool } from '../worker/BitmapFontWorkerPool'\n\nexport class MainMenuLabelButton extends MainMenuBaseItem {\n    labelImgLo?: SpriteImage\n    labelImgHi?: SpriteImage\n\n    constructor(layer: MainMenuLayer, cfg: MenuLabelItemCfg) {\n        super()\n        Promise.all([\n            BitmapFontWorkerPool.instance.createTextImage(layer.cfg.loFont, cfg.label), // TODO create all images in loading phase\n            BitmapFontWorkerPool.instance.createTextImage(layer.cfg.hiFont, cfg.label), // TODO create all images in loading phase\n        ]).then((textImages) => {\n            [this.labelImgLo, this.labelImgHi] = textImages\n            if (!this.labelImgLo || !this.labelImgHi) return\n            this.width = Math.max(this.labelImgLo.width, this.labelImgHi.width)\n            this.height = Math.max(this.labelImgLo.height, this.labelImgHi.height)\n            this.x = layer.cfg.autoCenter ? (layer.fixedWidth - this.width) / 2 : layer.cfg.position.x + cfg.x\n            layer.animationFrame.notifyRedraw() // TODO create all images in loading phase\n        })\n        this.y = layer.cfg.position.y + cfg.y\n        this.actionName = cfg.actionName\n        if (this.actionName?.equalsIgnoreCase('Next')) this.targetIndex = Number(cfg.target.slice('menu'.length)) - 1\n    }\n\n    set onPressed(callback: UiElementCallback) {\n        super.onPressed = () => {\n            SoundManager.playSfxSound('SFX_ButtonPressed')\n            callback()\n        }\n    }\n\n    draw(context: SpriteContext) {\n        super.draw(context)\n        const img = this.state.hover && !this.state.pressed ? this.labelImgHi : this.labelImgLo\n        if (img) context.drawImage(img, this.x, this.y)\n    }\n}\n","export class GameWheelEvent {\n    type: string\n    bubbles: boolean\n    clientX: number\n    clientY: number\n    deltaX: number\n    deltaY: number\n    deltaZ: number\n    button: number\n    ctrlKey: boolean\n    metaKey: boolean\n    shiftKey: boolean\n    canvasX: number = 0\n    canvasY: number = 0\n\n    constructor(event: WheelEvent) {\n        this.type = event.type\n        this.bubbles = false // disable bubbling otherwise we'll trigger this same event handler again\n        // all event attributes used by three.js controls: clientX, clientY, deltaY, keyCode, touches, button, ctrlKey, metaKey, shiftKey\n        this.clientX = event.clientX\n        this.clientY = event.clientY\n        this.deltaX = GameWheelEvent.deltaToPixels(event.deltaX, event.deltaMode)\n        this.deltaY = GameWheelEvent.deltaToPixels(event.deltaY, event.deltaMode)\n        this.deltaZ = GameWheelEvent.deltaToPixels(event.deltaZ, event.deltaMode)\n        this.button = event.button\n        this.ctrlKey = event.ctrlKey\n        this.metaKey = event.metaKey\n        this.shiftKey = event.shiftKey\n    }\n\n    static deltaToPixels(delta: number, mode: number): number {\n        switch (mode) {\n            case WheelEvent.DOM_DELTA_PAGE:\n                return delta * 100\n            case WheelEvent.DOM_DELTA_LINE:\n                return delta * 20\n            case WheelEvent.DOM_DELTA_PIXEL:\n                return delta\n            default:\n                console.warn(`Unexpected delta mode for wheel event ${mode}. Assuming delta given in pixels`)\n                return delta\n        }\n    }\n}\n","import { SpriteContext, SpriteImage } from '../core/Sprite'\nimport { NATIVE_UPDATE_INTERVAL } from '../params'\nimport { clearTimeoutSafe } from '../core/Util'\nimport { AnimationFrame } from '../screen/AnimationFrame'\nimport { SoundManager } from '../audio/SoundManager'\n\nexport class FlicAnimOverlay {\n    hidden: boolean = true\n    animIndex: number = 0\n    timeout?: NodeJS.Timeout\n    sfx?: AudioBufferSourceNode\n\n    constructor(\n        readonly animationFrame: AnimationFrame,\n        readonly flicImages: SpriteImage[],\n        readonly x: number,\n        readonly y: number,\n        readonly sfxName: string,\n    ) {\n    }\n\n    play(): Promise<void> {\n        this.stop()\n        return new Promise((resolve) => {\n            this.animIndex = 0\n            if (this.sfxName) this.sfx = SoundManager.playSfxSound(this.sfxName)\n            this.trigger(resolve)\n        })\n    }\n\n    private trigger(resolve: (value: (PromiseLike<void> | void)) => void) {\n        if (this.animIndex < this.flicImages.length - 1) {\n            this.hidden = false\n            this.timeout = clearTimeoutSafe(this.timeout)\n            this.timeout = setTimeout(() => {\n                this.animIndex++\n                this.trigger(resolve)\n            }, NATIVE_UPDATE_INTERVAL)\n            this.animationFrame.notifyRedraw()\n        } else {\n            this.stop()\n            resolve()\n        }\n    }\n\n    draw(context: SpriteContext) {\n        if (this.hidden) return\n        const img = this.flicImages[this.animIndex]\n        if (img) context.drawImage(img, this.x, this.y)\n    }\n\n    stop() {\n        this.hidden = true\n        this.animIndex = 0\n        this.timeout = clearTimeoutSafe(this.timeout)\n        this.sfx?.stop()\n        this.sfx = undefined\n    }\n}\n","import { ScaledLayer } from '../screen/layer/ScaledLayer'\nimport { MenuEntryCfg } from '../cfg/MenuEntryCfg'\nimport { SpriteImage } from '../core/Sprite'\nimport { clearIntervalSafe, clearTimeoutSafe } from '../core/Util'\nimport { MOUSE_BUTTON, POINTER_EVENT, PointerEventType } from '../event/EventTypeEnum'\nimport { GamePointerEvent } from '../event/GamePointerEvent'\nimport { NATIVE_UPDATE_INTERVAL } from '../params'\nimport { ResourceManager } from '../resource/ResourceManager'\nimport { MainMenuBaseItem } from './MainMenuBaseItem'\nimport { MainMenuIconButton } from './MainMenuIconButton'\nimport { MainMenuLabelButton } from './MainMenuLabelButton'\nimport { GameWheelEvent } from '../event/GameWheelEvent'\nimport { FlicAnimOverlay } from './FlicAnimOverlay'\nimport { BitmapFontWorkerPool } from '../worker/BitmapFontWorkerPool'\nimport { PRNG } from '../game/factory/PRNG'\n\nexport class MainMenuLayer extends ScaledLayer {\n    static readonly SCROLL_AREA_HEIGHT = 180\n\n    readonly cfg: MenuEntryCfg\n    readonly menuImage?: SpriteImage\n    readonly items: MainMenuBaseItem[] = []\n    readonly overlays: FlicAnimOverlay[] = []\n    scrollY: number = 0\n    scrollSpeedY: number = 0\n    scrollInterval?: NodeJS.Timeout\n    overlayTimeout?: NodeJS.Timeout\n    overlayIndex: number = 0\n    overlay?: FlicAnimOverlay\n    lastScrollY: number = 0\n    hasScrolled: boolean = false\n\n    constructor(menuCfg: MenuEntryCfg) {\n        super()\n        this.cfg = menuCfg\n        this.menuImage = menuCfg.menuImage ? ResourceManager.getImage(menuCfg.menuImage) : undefined // TODO create all images in loading phase\n        let titleImage: SpriteImage | undefined\n        if (menuCfg.displayTitle && menuCfg.fullName) {\n            BitmapFontWorkerPool.instance.createTextImage(menuCfg.loFont, menuCfg.fullName) // TODO create all images in loading phase\n                .then((img) => titleImage = img)\n        }\n        menuCfg.itemsLabel.forEach((item) => {\n            if (item.label) {\n                this.items.push(new MainMenuLabelButton(this, item))\n            } else {\n                this.items.push(new MainMenuIconButton(this, item))\n            }\n        })\n        this.cfg.overlays.forEach((flic) => {\n            const flicImages = ResourceManager.getResource(flic.flhFilepath) ?? []\n            this.overlays.push(new FlicAnimOverlay(this.animationFrame, flicImages, flic.x, flic.y, flic.sfxName))\n        })\n        if (this.cfg.playRandom) PRNG.unsafe.shuffle(this.cfg.overlays)\n        this.animationFrame.onRedraw = (context) => {\n            if (this.menuImage) context.drawImage(this.menuImage, 0, -this.scrollY)\n            this.overlay?.draw(context)\n            if (titleImage) context.drawImage(titleImage, (this.fixedWidth - titleImage.width) / 2, this.cfg.position.y)\n            this.items.forEach((item, index) => (this.items[this.items.length - 1 - index]).draw(context))\n        }\n        new Map<keyof HTMLElementEventMap, PointerEventType>([\n            ['pointermove', POINTER_EVENT.move],\n            ['pointerdown', POINTER_EVENT.down],\n            ['pointerup', POINTER_EVENT.up],\n        ]).forEach((eventEnum, eventType) => {\n            this.addEventListener(eventType, (event): boolean => {\n                const gameEvent = new GamePointerEvent(eventEnum, event as PointerEvent)\n                ;[gameEvent.canvasX, gameEvent.canvasY] = this.transformCoords(gameEvent.clientX, gameEvent.clientY)\n                return this.handlePointerEvent(gameEvent)\n            })\n        })\n        this.addEventListener('wheel', (event: WheelEvent): boolean => {\n            if (!this.cfg.canScroll) return false\n            const gameEvent = new GameWheelEvent(event)\n            ;[gameEvent.canvasX, gameEvent.canvasY] = this.transformCoords(gameEvent.clientX, gameEvent.clientY)\n            this.setScrollY(gameEvent.deltaY)\n            this.updateItemsHoveredState(gameEvent.canvasX, gameEvent.canvasY, false)\n            return true\n        })\n        document.addEventListener('visibilitychange', () => {\n            if (document.hidden) {\n                this.overlay?.stop()\n                this.overlay = undefined\n                this.overlayTimeout = clearTimeoutSafe(this.overlayTimeout)\n                this.animationFrame.notifyRedraw()\n            } else if (this.cfg.playRandom && this.active) {\n                this.playRandomOverlay()\n            }\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.items.forEach((item) => item.reset())\n        this.scrollY = 0\n        this.scrollSpeedY = 0\n        this.scrollInterval = clearIntervalSafe(this.scrollInterval)\n        this.overlay?.stop()\n        this.overlayTimeout = clearTimeoutSafe(this.overlayTimeout)\n    }\n\n    show() {\n        this.items.sort((a, b) => b.zIndex - a.zIndex)\n        super.show()\n        if (this.cfg.playRandom) this.playRandomOverlay()\n    }\n\n    hide() {\n        this.items.forEach((item) => item.reset())\n        this.scrollSpeedY = 0\n        this.scrollInterval = clearIntervalSafe(this.scrollInterval)\n        this.overlay?.stop()\n        this.overlayTimeout = clearTimeoutSafe(this.overlayTimeout)\n        super.hide()\n    }\n\n    handlePointerEvent(event: GamePointerEvent): boolean {\n        if (event.eventEnum === POINTER_EVENT.move) {\n            this.updateItemsHoveredState(event.canvasX, event.canvasY, false)\n            if (this.cfg.canScroll) {\n                if (event.pointerType === 'mouse') {\n                    if (event.canvasY < MainMenuLayer.SCROLL_AREA_HEIGHT) {\n                        this.setScrollSpeedY(-(MainMenuLayer.SCROLL_AREA_HEIGHT - event.canvasY))\n                    } else if (event.canvasY > this.fixedHeight - MainMenuLayer.SCROLL_AREA_HEIGHT) {\n                        this.setScrollSpeedY(event.canvasY - (this.fixedHeight - MainMenuLayer.SCROLL_AREA_HEIGHT))\n                    } else {\n                        this.setScrollSpeedY(0)\n                    }\n                } else {\n                    const sy = event.canvasY\n                    if (this.lastScrollY) {\n                        this.setScrollY(this.lastScrollY - sy)\n                        this.hasScrolled = true\n                    }\n                    this.lastScrollY = sy\n                }\n            }\n        } else if (event.eventEnum === POINTER_EVENT.down) {\n            this.updateItemsHoveredState(event.canvasX, event.canvasY, false)\n            if (event.button === MOUSE_BUTTON.main) {\n                let needsRedraw = false\n                this.items.forEach((item) => needsRedraw = item.onMouseDown() || needsRedraw)\n                if (needsRedraw) {\n                    this.animationFrame.notifyRedraw()\n                    return true\n                }\n            }\n            this.lastScrollY = event.canvasY\n        } else if (event.eventEnum === POINTER_EVENT.up) {\n            this.updateItemsHoveredState(event.canvasX, event.canvasY, this.hasScrolled)\n            if (event.button === MOUSE_BUTTON.main && !this.hasScrolled) {\n                let needsRedraw = false\n                this.items.forEach((item) => needsRedraw = item.onMouseUp() || needsRedraw)\n                if (needsRedraw) {\n                    this.animationFrame.notifyRedraw()\n                    return true\n                }\n            }\n            this.lastScrollY = 0\n            this.hasScrolled = false\n        }\n        if (this.needsRedraw()) this.animationFrame.notifyRedraw()\n        return false\n    }\n\n    private setScrollSpeedY(deltaY: number) {\n        const nextScrollSpeedY = Math.sign(deltaY) * Math.pow(Math.round(Math.min(100, deltaY) / 20), 2)\n        if (nextScrollSpeedY === this.scrollSpeedY) return\n        this.scrollSpeedY = nextScrollSpeedY\n        if (!this.scrollSpeedY) {\n            this.scrollInterval = clearIntervalSafe(this.scrollInterval)\n        } else if (!this.scrollInterval) {\n            this.scrollInterval = setInterval(() => {\n                this.setScrollY(this.scrollSpeedY)\n            }, NATIVE_UPDATE_INTERVAL)\n        }\n    }\n\n    private updateItemsHoveredState(sx: number, sy: number, forceRelease: boolean) {\n        let needsRedraw = false\n        let hasHovered = forceRelease\n        this.items.forEach((item) => {\n            if (!hasHovered) {\n                const absY = sy + (item.scrollAffected ? this.scrollY : 0)\n                hasHovered = item.isHovered(sx, absY)\n                item.setHovered(hasHovered)\n            } else {\n                item.setHovered(false)\n            }\n            needsRedraw = needsRedraw || item.needsRedraw\n        })\n        if (needsRedraw) this.animationFrame.notifyRedraw()\n    }\n\n    private setScrollY(deltaY: number) {\n        const scrollYBefore = this.scrollY\n        this.scrollY = Math.min(Math.max(this.scrollY + deltaY, 0), (this.menuImage?.height ?? this.fixedHeight) - this.fixedHeight)\n        if (scrollYBefore !== this.scrollY) this.animationFrame.notifyRedraw()\n    }\n\n    needsRedraw(): boolean {\n        return this.items.some((item) => item.needsRedraw)\n    }\n\n    set onItemAction(callback: (item: MainMenuBaseItem) => void) {\n        this.items.forEach((item) => item.onPressed = () => callback(item))\n    }\n\n    playRandomOverlay(): void {\n        this.overlay?.stop()\n        this.overlayTimeout = clearTimeoutSafe(this.overlayTimeout)\n        if (this.overlays.length < 1) return\n        this.overlayTimeout = setTimeout(async () => {\n            this.overlay = this.overlays[this.overlayIndex]\n            this.overlayIndex = (this.overlayIndex + 1) % this.cfg.overlays.length\n            await this.overlay.play()\n            this.playRandomOverlay()\n        }, 2000 + PRNG.unsafe.randInt(3000))\n    }\n}\n","import { LevelEntryCfg } from '../cfg/LevelsCfg'\nimport { SpriteContext, SpriteImage } from '../core/Sprite'\nimport { ResourceManager } from '../resource/ResourceManager'\nimport { MainMenuBaseItem } from './MainMenuBaseItem'\nimport { MainMenuLayer } from './MainMenuLayer'\nimport { UiElementCallback } from './UiElementState'\nimport { clearTimeoutSafe } from '../core/Util'\nimport { TOOLTIP_DELAY_SFX_MENU } from '../params'\nimport { SoundManager } from '../audio/SoundManager'\n\nexport class MainMenuLevelButton extends MainMenuBaseItem {\n    imgActive: SpriteImage\n    imgInactive: SpriteImage\n    imgCross: SpriteImage\n    tooltipTimeout?: NodeJS.Timeout\n    onShowTooltip?: () => void\n\n    constructor(\n        readonly layer: MainMenuLayer,\n        readonly levelConf: LevelEntryCfg,\n        readonly onlyTutorials: boolean,\n    ) {\n        super(levelConf.frontEndX, levelConf.frontEndY)\n        this.actionName = 'selectlevel'\n        this.zIndex = 10\n        this.scrollAffected = true\n        const [imgActive, imgInactive, imgCross] = levelConf.menuBMP\n        this.imgActive = ResourceManager.getImage(imgActive)\n        this.imgInactive = ResourceManager.getImage(imgInactive)\n        this.imgCross = ResourceManager.getImage(imgCross)\n        this.width = Math.max(this.imgActive.width, this.imgInactive.width, this.imgCross.width)\n        this.height = Math.max(this.imgActive.height, this.imgInactive.height, this.imgCross.height)\n        this.disabled = this.onlyTutorials && this.levelConf.isLocked()\n    }\n\n    set onPressed(callback: UiElementCallback) {\n        super.onPressed = () => {\n            SoundManager.playSfxSound('SFX_ButtonPressed')\n            callback()\n        }\n    }\n\n    set onHoverChange(callback: UiElementCallback) {\n        super.onHoverChange = () => {\n            const onShowTooltipCallback = this.onShowTooltip\n            if (onShowTooltipCallback) {\n                if (this.hover) {\n                    if (!this.tooltipTimeout) {\n                        this.tooltipTimeout = setTimeout(() => onShowTooltipCallback(), TOOLTIP_DELAY_SFX_MENU)\n                    }\n                } else {\n                    this.tooltipTimeout = clearTimeoutSafe(this.tooltipTimeout)\n                }\n            }\n            callback()\n        }\n    }\n\n    reset() {\n        super.reset()\n        this.disabled = this.onlyTutorials && this.levelConf.isLocked()\n        this.tooltipTimeout = clearTimeoutSafe(this.tooltipTimeout)\n    }\n\n    draw(context: SpriteContext) {\n        super.draw(context)\n        let img = this.imgCross\n        if (!this.state.disabled) img = this.state.hover ? this.imgActive : this.imgInactive\n        context.drawImage(img, this.x, this.y - this.layer.scrollY)\n    }\n}\n","import { MenuPanelCfg } from '../cfg/MenuCfg'\nimport { createCanvas, createContext } from '../core/ImageHelper'\nimport { SpriteContext } from '../core/Sprite'\nimport { ResourceManager } from '../resource/ResourceManager'\nimport { MainMenuBaseItem } from './MainMenuBaseItem'\n\nexport class MainMenuPanel extends MainMenuBaseItem {\n    readonly context: SpriteContext\n    readonly readbackContext: SpriteContext\n\n    constructor(cfg: MenuPanelCfg) {\n        super(cfg.rect.x, cfg.rect.y, cfg.rect.w, cfg.rect.h)\n        this.zIndex = 50\n        const imgData = ResourceManager.getImageData(cfg.imgBackground)\n        this.context = createContext(imgData.width, imgData.height)\n        this.context.putImageData(imgData, 0, 0)\n        const readbackContext = createCanvas(imgData.width, imgData.height).getContext('2d', {willReadFrequently: true})\n        if (!readbackContext) throw new Error('Could not get readback context')\n        this.readbackContext = readbackContext\n        this.readbackContext.putImageData(imgData, 0, 0)\n    }\n\n    isHovered(sx: number, sy: number): boolean {\n        return super.isHovered(sx, sy) && this.readbackContext.getImageData(sx, sy, 1, 1).data[3] > 0\n    }\n\n    draw(context: SpriteContext) {\n        super.draw(context)\n        super.draw(this.readbackContext)\n        context.drawImage(this.context.canvas, this.x, this.y, this.width, this.height)\n        this.readbackContext.drawImage(this.readbackContext.canvas, this.x, this.y, this.width, this.height)\n    }\n}\n","import { SpriteContext, SpriteImage } from '../core/Sprite'\nimport { MainMenuBaseItem } from './MainMenuBaseItem'\nimport { DEFAULT_FONT_NAME } from '../params'\nimport { BitmapFontWorkerPool } from '../worker/BitmapFontWorkerPool'\n\nexport class MainMenuWindow extends MainMenuBaseItem {\n    imgFirstLine?: SpriteImage\n    imgSecondLine?: SpriteImage\n\n    constructor(area: { x: number; y: number; w: number; h: number }) {\n        super(area.x, area.y, area.w, area.h)\n    }\n\n    setFirstLine(text: string | undefined) {\n        BitmapFontWorkerPool.instance.createTextImage(DEFAULT_FONT_NAME, text, this.width).then((textImage) => {\n            this.imgFirstLine = textImage\n            this.state.stateChanged = true\n        })\n    }\n\n    setSecondLine(text: string | undefined) {\n        BitmapFontWorkerPool.instance.createTextImage(DEFAULT_FONT_NAME, text, this.width).then((textImage) => {\n            this.imgSecondLine = textImage\n            this.state.stateChanged = true\n        })\n    }\n\n    draw(context: SpriteContext) {\n        super.draw(context)\n        const totalHeight = (this.imgFirstLine?.height || 0) + (this.imgSecondLine?.height || 0)\n        const cx = this.x + this.width / 2, cy = this.y + this.height * (this.imgFirstLine?.height || 0) / totalHeight\n        if (this.imgFirstLine) context.drawImage(this.imgFirstLine, cx - this.imgFirstLine.width / 2, cy - this.imgFirstLine.height)\n        if (this.imgSecondLine) context.drawImage(this.imgSecondLine, cx - this.imgSecondLine.width / 2, cy)\n    }\n}\n","import { MenuEntryCfg } from '../cfg/MenuEntryCfg'\nimport { SaveGameManager } from '../resource/SaveGameManager'\nimport { MainMenuBaseItem } from './MainMenuBaseItem'\nimport { MainMenuLayer } from './MainMenuLayer'\nimport { MainMenuLevelButton } from './MainMenuLevelButton'\nimport { MainMenuPanel } from './MainMenuPanel'\nimport { MainMenuWindow } from './MainMenuWindow'\nimport { SoundManager } from '../audio/SoundManager'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { LevelEntryCfg } from '../cfg/LevelsCfg'\n\nexport class LevelSelectLayer extends MainMenuLayer {\n    constructor(menuCfg: MenuEntryCfg, onlyTutorials: boolean) {\n        super(menuCfg)\n        const levelTextCfg = GameConfig.instance.menu.levelText\n        this.items.push(new MainMenuPanel(levelTextCfg.panel))\n        const levelTextWindow = new MainMenuWindow(levelTextCfg.window)\n        levelTextWindow.setFirstLine(onlyTutorials ? levelTextCfg.level : levelTextCfg.tutorial)\n        levelTextWindow.setSecondLine(' ')\n        this.items.push(levelTextWindow)\n        GameConfig.instance.levels.forEach((level) => {\n            const levelButton = new MainMenuLevelButton(this, level, onlyTutorials)\n            levelButton.onHoverChange = () => {\n                const levelScore = SaveGameManager.getLevelScoreString(level.levelName)\n                levelTextWindow.setSecondLine(levelButton.hover ? level.fullName + levelScore : ' ')\n            }\n            levelButton.onShowTooltip = () => {\n                const levelNum = Number(level.levelName.slice(-2))\n                const tutPrefix = LevelEntryCfg.isTutorial(level.levelName) ? 'T' : ''\n                const swapped = levelNum === 2 ? 5 : (levelNum === 5 ? 2 : levelNum) // XXX read from config\n                SoundManager.playVoice(`Stream_LevelName_${tutPrefix}Level${!!tutPrefix ? levelNum : swapped}`)\n            }\n            this.items.push(levelButton)\n        })\n        this.items.push(new MainMenuBaseItem(517, 11, 36, 36, 'selectrandomlevel')) // New easter egg to start random level\n    }\n\n    show() {\n        this.reset()\n        super.show()\n    }\n}\n","import { SpriteContext, SpriteImage } from '../core/Sprite'\nimport { ResourceManager } from '../resource/ResourceManager'\nimport { MainMenuBaseItem } from './MainMenuBaseItem'\nimport { MainMenuLayer } from './MainMenuLayer'\nimport { UiElementCallback } from './UiElementState'\nimport { FlicAnimOverlay } from './FlicAnimOverlay'\nimport { BitmapFontWorkerPool } from '../worker/BitmapFontWorkerPool'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { SoundManager } from '../audio/SoundManager'\n\nexport class MainMenuLoadSaveButton extends MainMenuBaseItem {\n    labelImgLo?: SpriteImage\n    labelImgHi?: SpriteImage\n    saveGameImg?: SpriteImage\n    saveGameImgWidthLo: number = 0\n    saveGameImgHeightLo: number = 0\n    saveGameImgWidthHi: number = 0\n    saveGameImgHeightHi: number = 0\n    overlay?: FlicAnimOverlay\n\n    constructor(readonly layer: MainMenuLayer, index: number, x: number, y: number, loading: boolean) {\n        super(x, y)\n        const menuCfg = GameConfig.instance.menu\n        const btnNum = index + 1\n        const buttonLabel = loading ? `${menuCfg.loadGame} ${btnNum}` : `${menuCfg.saveGame} ${btnNum}` // yes, even for \"load\"game the label says savegame\n        Promise.all([\n            BitmapFontWorkerPool.instance.createTextImage(layer.cfg.loFont, buttonLabel),\n            BitmapFontWorkerPool.instance.createTextImage(layer.cfg.hiFont, buttonLabel),\n        ]).then((textImages) => {\n            [this.labelImgLo, this.labelImgHi] = textImages\n            this.width = Math.max(this.labelImgLo?.width || 0, this.labelImgHi?.width || 0) + menuCfg.saveImage.bigWidth\n            this.height = Math.max(this.labelImgLo?.height || 0, this.labelImgHi?.height || 0)\n        })\n        this.targetIndex = index\n        if (loading) {\n            const overlayCfg = layer.cfg.overlays[index]\n            const flicImages = ResourceManager.getResource(overlayCfg.flhFilepath) ?? []\n            this.overlay = new FlicAnimOverlay(this.layer.animationFrame, flicImages, overlayCfg.x, overlayCfg.y, overlayCfg.sfxName)\n        }\n        this.actionName = loading ? `load_game_${index}` : `save_game_${index}`\n        this.saveGameImgWidthLo = menuCfg.saveImage.width\n        this.saveGameImgHeightLo = menuCfg.saveImage.height\n        this.saveGameImgWidthHi = menuCfg.saveImage.bigWidth\n        this.saveGameImgHeightHi = menuCfg.saveImage.bigHeight\n    }\n\n    set onPressed(callback: UiElementCallback) {\n        super.onPressed = async () => {\n            SoundManager.playSfxSound('SFX_ButtonPressed')\n            callback()\n        }\n    }\n\n    draw(context: SpriteContext) {\n        super.draw(context)\n        if (this.saveGameImg) {\n            if (this.state.hover) {\n                const x = this.x - (this.saveGameImgWidthHi - this.saveGameImgWidthLo) / 2\n                const y = this.y - (this.saveGameImgHeightHi - this.saveGameImgHeightLo) / 2\n                context.drawImage(this.saveGameImg, x, y, this.saveGameImgWidthHi, this.saveGameImgHeightHi)\n            } else {\n                context.drawImage(this.saveGameImg, this.x, this.y, this.saveGameImgWidthLo, this.saveGameImgHeightLo)\n            }\n        }\n        const img = (this.state.hover && !this.state.pressed) ? this.labelImgHi : this.labelImgLo\n        if (img) context.drawImage(img, this.x + 80, this.y)\n        this.overlay?.draw(context)\n    }\n}\n","import { GameMenuCfg } from '../cfg/MenuCfg'\nimport { MenuEntryCfg } from '../cfg/MenuEntryCfg'\nimport { SaveGameManager } from '../resource/SaveGameManager'\nimport { MainMenuLayer } from './MainMenuLayer'\nimport { MainMenuLoadSaveButton } from './MainMenuLoadSaveButton'\nimport { MainMenuWindow } from './MainMenuWindow'\nimport { GamePointerEvent } from '../event/GamePointerEvent'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { MainMenuBaseItem } from './MainMenuBaseItem'\nimport { FlicAnimOverlay } from './FlicAnimOverlay'\n\nexport class LoadSaveLayer extends MainMenuLayer {\n    menuCfg: GameMenuCfg\n    buttons: MainMenuLoadSaveButton[] = []\n    loadSaveTextWindow: MainMenuWindow\n    activeOverlay?: FlicAnimOverlay\n\n    constructor(menuCfg: MenuEntryCfg, loading: boolean) {\n        super(menuCfg)\n        this.menuCfg = GameConfig.instance.menu\n        const saveImage = this.menuCfg.saveImage\n        this.addButton(0, saveImage.pos1.x, saveImage.pos1.y, loading)\n        this.addButton(1, saveImage.pos2.x, saveImage.pos2.y, loading)\n        this.addButton(2, saveImage.pos3.x, saveImage.pos3.y, loading)\n        this.addButton(3, saveImage.pos4.x, saveImage.pos4.y, loading)\n        this.addButton(4, saveImage.pos5.x, saveImage.pos5.y, loading)\n        this.loadSaveTextWindow = new MainMenuWindow(this.menuCfg.saveText.window)\n        this.items.push(this.loadSaveTextWindow)\n        if (loading) {\n            this.loadSaveTextWindow.setFirstLine(this.menuCfg.saveText.load)\n        } else {\n            this.loadSaveTextWindow.setFirstLine(this.menuCfg.saveText.save)\n        }\n        this.loadSaveTextWindow.setSecondLine(' ')\n    }\n\n    private addButton(index: number, x: number, y: number, loading: boolean) {\n        const btn = new MainMenuLoadSaveButton(this, index, x, y, loading)\n        btn.onHoverChange = () => {\n            const percent = SaveGameManager.getOverallGameProgress(index)\n            if (btn.hover && percent) {\n                const slotText = this.menuCfg.saveText.slot\n                this.loadSaveTextWindow.setSecondLine(slotText.replace('%d%', String(percent)))\n            } else {\n                this.loadSaveTextWindow.setSecondLine(' ')\n            }\n        }\n        this.buttons.add(btn)\n        this.items.add(btn)\n    }\n\n    set onItemAction(callback: (item: MainMenuBaseItem) => void) {\n        super.onItemAction = async (item) => {\n            if (this.activeOverlay) return // Overlay in progress\n            if (LoadSaveLayer.hasOverlay(item)) {\n                this.activeOverlay = item.overlay\n                await this.activeOverlay.play()\n                this.activeOverlay = undefined\n            }\n            callback(item)\n        }\n    }\n\n    private static hasOverlay(item: MainMenuBaseItem): item is (MainMenuBaseItem & { overlay: FlicAnimOverlay }) {\n        return !!((item as { overlay?: FlicAnimOverlay }).overlay)\n    }\n\n    show() {\n        Promise.all(SaveGameManager.screenshots).then((screenshots) => {\n            this.buttons.forEach((btn) => {\n                btn.saveGameImg = screenshots[btn.targetIndex]\n            })\n            this.animationFrame.notifyRedraw()\n        })\n        super.show()\n    }\n\n    handlePointerEvent(event: GamePointerEvent): boolean {\n        return super.handlePointerEvent(event) || true\n    }\n}\n","import { ScaledLayer } from '../screen/layer/ScaledLayer'\nimport { ResourceManager } from '../resource/ResourceManager'\nimport { NATIVE_UPDATE_INTERVAL } from '../params'\nimport { clearTimeoutSafe } from '../core/Util'\nimport { SpriteImage } from '../core/Sprite'\nimport { AVIVideoStream } from '../resource/fileparser/avi/AVIVideoStream'\nimport { UiElementCallback } from './UiElementState'\nimport { BitmapFontWorkerPool } from '../worker/BitmapFontWorkerPool'\nimport { GameConfig } from '../cfg/GameConfig'\n\nexport class MainMenuCreditsLayer extends ScaledLayer {\n    static readonly FONT = 'Interface/Fonts/RSFont.bmp'\n\n    readonly maxNumOfLinesOnScreen: number\n    readonly currentLines: (SpriteImage | undefined)[] = []\n    readonly renderedBitmapLines: (SpriteImage | undefined)[] = []\n    readonly backVideo?: AVIVideoStream\n    backImg?: SpriteImage\n    loopIndexTimeout?: NodeJS.Timeout\n    offsetY: number = 0\n    counter: number = 0\n    onExitCredits?: UiElementCallback\n\n    constructor() {\n        super('credits')\n        const fontHeight = BitmapFontWorkerPool.instance.getFontHeight(MainMenuCreditsLayer.FONT)\n        this.maxNumOfLinesOnScreen = Math.round(this.fixedHeight / fontHeight)\n        const creditsTextContent: string = '\\n'.repeat(this.maxNumOfLinesOnScreen) + ResourceManager.getResource(GameConfig.instance.main.creditsTextFile) + '\\n\\n\\nWeb implementation\\n\\nScarabol'\n        const bitmapLines = creditsTextContent.split('\\n').map((line) => {\n            return BitmapFontWorkerPool.instance.createTextImage(MainMenuCreditsLayer.FONT, line, this.fixedWidth, true)\n        })\n        const creditsBackAVI = ResourceManager.getResource(GameConfig.instance.main.creditsBackAVI)\n        if (creditsBackAVI) {\n            const videoStreams: AVIVideoStream[] = creditsBackAVI.videoStreams\n            if (videoStreams.length !== 1) throw new Error(`Unexpected number of background video streams; got ${videoStreams.length} instead of 1`)\n            this.backVideo = videoStreams[0]\n            this.backImg = this.backVideo.getNextFrame()\n            this.animationFrame.onRedraw = (context) => {\n                if (this.backImg) context.drawImage(this.backImg, 0, 0, this.fixedWidth, this.fixedHeight)\n            }\n        }\n        Promise.all((bitmapLines)).then((bitmapLines) => {\n            this.renderedBitmapLines.push(...bitmapLines)\n            this.counter = this.maxNumOfLinesOnScreen + 5\n            this.currentLines.push(...this.renderedBitmapLines.slice(0, this.counter))\n            this.animationFrame.onRedraw = (context) => {\n                if (this.backImg) context.drawImage(this.backImg, 0, 0, this.fixedWidth, this.fixedHeight)\n                this.currentLines.forEach((lineImage, index) => {\n                    if (lineImage) context.drawImage(lineImage, (this.fixedWidth - lineImage.width) / 2, Math.round(index * fontHeight - this.offsetY))\n                })\n            }\n        })\n        this.addEventListener('pointerup', (): boolean => {\n            if (this.onExitCredits) {\n                this.onExitCredits()\n                return true\n            }\n            return false\n        })\n        this.addEventListener('keyup', (event: KeyboardEvent): boolean => {\n            if (event.code === 'Escape' && this.onExitCredits) {\n                this.onExitCredits()\n                return true\n            }\n            return false\n        })\n    }\n\n    show() {\n        super.show()\n        this.increaseLoopIndex()\n    }\n\n    increaseLoopIndex() {\n        this.loopIndexTimeout = clearTimeoutSafe(this.loopIndexTimeout)\n        this.loopIndexTimeout = setTimeout(() => {\n            if (this.backVideo) this.backImg = this.backVideo.getNextFrame()\n            if (this.offsetY > 17) {\n                this.currentLines.shift()\n                this.currentLines.push(this.renderedBitmapLines[this.counter])\n                this.counter = (this.counter + 1) % this.renderedBitmapLines.length\n                this.offsetY -= 17\n            }\n            this.offsetY = this.offsetY + 0.8\n            this.animationFrame.notifyRedraw()\n            this.increaseLoopIndex()\n        }, NATIVE_UPDATE_INTERVAL)\n    }\n\n    hide() {\n        super.hide()\n        this.loopIndexTimeout = clearTimeoutSafe(this.loopIndexTimeout)\n        this.offsetY = 0\n        this.counter = this.maxNumOfLinesOnScreen + 5\n        this.currentLines.length = 0\n        this.currentLines.push(...this.renderedBitmapLines.slice(0, this.counter))\n    }\n}\n","import { Camera, Scene, WebGLRenderer, WebGLRendererParameters } from 'three'\nimport { cancelAnimationFrameSafe, clearIntervalSafe } from '../core/Util'\nimport { SpriteImage } from '../core/Sprite'\n\nexport class BaseRenderer {\n    renderer?: WebGLRenderer\n    renderInterval?: NodeJS.Timeout\n    lastAnimationRequest?: number\n    scene?: Scene\n    camera?: Camera\n\n    constructor(readonly redrawMs: number, readonly canvas: SpriteImage, readonly parameters: WebGLRendererParameters) {\n        this.parameters.canvas = canvas\n    }\n\n    async startRendering(scene: Scene): Promise<void> {\n        this.scene = scene\n        this.renderInterval = clearIntervalSafe(this.renderInterval)\n        return new Promise<void>((resolve) => {\n            this.renderInterval = setInterval(() => {\n                if (!this.renderer) {\n                    this.renderer = new WebGLRenderer(this.parameters)\n                    this.renderer.setSize(this.canvas.width, this.canvas.height)\n                }\n                this.lastAnimationRequest = cancelAnimationFrameSafe(this.lastAnimationRequest)\n                this.lastAnimationRequest = requestAnimationFrame(() => {\n                    this.render()\n                    resolve()\n                })\n            }, this.redrawMs)\n        })\n    }\n\n    render() {\n        if (!this.renderer || !this.scene || !this.camera) return\n        this.renderer.render(this.scene, this.camera)\n    }\n\n    setSize(width: number, height: number) {\n        this.canvas.width = width\n        this.canvas.height = height\n        this.renderer?.setSize(this.canvas.width, this.canvas.height)\n    }\n\n    stopRendering() {\n        this.renderInterval = clearIntervalSafe(this.renderInterval)\n        this.lastAnimationRequest = cancelAnimationFrameSafe(this.lastAnimationRequest)\n        this.renderer?.clear()\n    }\n\n    dispose() {\n        this.stopRendering()\n        this.renderer?.dispose()\n    }\n}\n","import { ScreenLayer } from '../screen/layer/ScreenLayer'\nimport { SoundManager } from '../audio/SoundManager'\nimport { AmbientLight, BufferGeometry, DepthTexture, DirectionalLight, Float32BufferAttribute, Mesh, OrthographicCamera, PerspectiveCamera, Scene, ShaderMaterial, ShaderMaterialParameters, Texture, UniformsUtils, Vector2, Vector3, WebGLRenderer, WebGLRenderTarget } from 'three'\nimport { degToRad } from 'three/src/math/MathUtils'\nimport { clearIntervalSafe } from '../core/Util'\nimport { NATIVE_UPDATE_INTERVAL } from '../params'\nimport { AnimationGroup } from '../scene/AnimationGroup'\nimport { BaseRenderer } from '../screen/BaseRenderer'\n\nclass FullScreenShader extends ShaderMaterial {\n    private static camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1)\n    private readonly mesh: Mesh\n\n    constructor(parameters?: ShaderMaterialParameters) {\n        super(parameters)\n        const geometry = new BufferGeometry()\n        geometry.setAttribute('position', new Float32BufferAttribute([-1, 3, 0, -1, -1, 0, 3, -1, 0], 3))\n        geometry.setAttribute('uv', new Float32BufferAttribute([0, 2, 0, 0, 2, 0], 2))\n        this.mesh = new Mesh(geometry, this)\n    }\n\n    dispose() {\n        this.mesh.geometry.dispose()\n        super.dispose()\n    }\n\n    render(renderer: WebGLRenderer) {\n        renderer.render(this.mesh, FullScreenShader.camera)\n    }\n}\n\nconst TransparentBackgroundShader = {\n    name: 'TransparentBackgroundShader',\n    uniforms: {\n        'tDiffuse': {value: null as Texture | null},\n        'tDepth': {value: null as Texture | null},\n    },\n    vertexShader: `\n        varying vec2 vUv;\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n    `,\n    fragmentShader: `\n        uniform sampler2D tDiffuse;\n        uniform highp sampler2D tDepth;\n        varying vec2 vUv;\n        void main() {\n            gl_FragColor = texture2D(tDiffuse, vUv);\n            if (texture2D(tDepth, vUv).x == 1.0) gl_FragColor.a = 0.0;\n            gl_FragColor = sRGBTransferOETF(gl_FragColor);\n        }\n    `,\n}\n\nclass TransparentBackgroundRenderer extends BaseRenderer {\n    renderTarget?: WebGLRenderTarget\n    fsShader?: FullScreenShader\n\n    render() {\n        if (!this.renderTarget) {\n            this.renderTarget = new WebGLRenderTarget(0, 0, {depthTexture: new DepthTexture(0, 0)})\n        }\n        if (!this.fsShader) {\n            const uniforms = UniformsUtils.clone(TransparentBackgroundShader.uniforms)\n            uniforms.tDiffuse.value = this.renderTarget.texture\n            uniforms.tDepth.value = this.renderTarget.depthTexture\n            this.fsShader = new FullScreenShader({...TransparentBackgroundShader, uniforms})\n        }\n        if (!this.renderer) return\n        const size = this.renderer.getSize(new Vector2())\n        this.renderTarget.setSize(size.width, size.height)\n        this.renderer.setRenderTarget(this.renderTarget)\n        this.renderer.outputColorSpace\n        try {\n            super.render()\n        } finally {\n            this.renderer.setRenderTarget(null)\n        }\n        this.fsShader.render(this.renderer)\n    }\n\n    dispose() {\n        this.fsShader?.dispose()\n        this.renderTarget?.dispose()\n        super.dispose()\n    }\n}\n\nexport class RockWipeLayer extends ScreenLayer {\n    readonly renderer: TransparentBackgroundRenderer\n    readonly scene: Scene\n    readonly group: AnimationGroup\n    readonly camera: PerspectiveCamera\n    groupUpdateInterval?: NodeJS.Timeout\n\n    constructor() {\n        super()\n        this.renderer = new TransparentBackgroundRenderer(NATIVE_UPDATE_INTERVAL, this.canvas, {alpha: true})\n        // Camera\n        const aspect = this.canvas.width / this.canvas.height\n        this.camera = new PerspectiveCamera(45, aspect, 1, 100)\n        this.camera.rotateY(Math.PI)\n        this.camera.zoom = 2\n        this.camera.position.add(new Vector3(0, 0, -5))\n        this.camera.updateProjectionMatrix()\n        this.renderer.camera = this.camera\n        this.scene = new Scene()\n        // Lights\n        this.scene.add(new AmbientLight(0xffffff, 0.25))\n        const light = new DirectionalLight(0xffffff, 1)\n        light.position.set(2, 2, -2)\n        light.rotation.set(degToRad(35), -degToRad(45), -degToRad(0), 'YXZ')\n        this.scene.add(light)\n        this.group = new AnimationGroup('Interface/FrontEnd/Rock_Wipe/RockWipe.lws', () => {\n            this.hide()\n        }).setup()\n        this.scene.add(this.group)\n    }\n\n    show() {\n        super.show()\n        this.group.resetAnimation()\n        SoundManager.playSfxSound('SFX_RockWipe')\n        this.renderer.startRendering(this.scene).then()\n        this.groupUpdateInterval = clearIntervalSafe(this.groupUpdateInterval)\n        this.groupUpdateInterval = setInterval(() => {\n            this.group.update(NATIVE_UPDATE_INTERVAL)\n        }, NATIVE_UPDATE_INTERVAL) // XXX Use FPS from LWS data\n        return this.group.maxDurationMs\n    }\n\n    resize(width: number, height: number) {\n        super.resize(width, height)\n        this.renderer.setSize(width, height)\n        this.camera.aspect = width / height\n        this.camera.updateProjectionMatrix()\n    }\n\n    hide() {\n        super.hide()\n        this.groupUpdateInterval = clearIntervalSafe(this.groupUpdateInterval)\n        this.group.resetAnimation()\n        this.renderer.stopRendering()\n    }\n\n    dispose() {\n        this.hide()\n        this.scene.clear()\n        this.renderer.dispose()\n    }\n}\n","import { NerpRunner } from './NerpRunner'\n\nexport class NerpScript {\n    lines: string[] = [] // contains human readable script strings\n    statements: NerpStatement[] = [] // contains parsed statements for execution\n    macrosByName: Map<string, { args: string[], lines: string[] }> = new Map()\n    labelsByName: Map<string, number> = new Map()\n}\n\nexport type NerpReturnType = void | number\n\nexport abstract class NerpStatement {\n    abstract execute(nerpRunner: NerpRunner): NerpReturnType\n}\n\nexport class NerpNumber extends NerpStatement {\n    constructor(readonly value: number) {\n        super()\n    }\n\n    execute(): NerpReturnType {\n        return this.value\n    }\n}\n\nexport class NerpLabel extends NerpStatement {\n    constructor(readonly name: string) {\n        super()\n    }\n\n    execute(): NerpReturnType {\n        // NOP just a number\n    }\n}\n\nexport class NerpJump extends NerpStatement {\n    constructor(readonly target: string) {\n        super()\n    }\n\n    execute(nerpRunner: NerpRunner): NerpReturnType {\n        const jumpCounter = nerpRunner.script.labelsByName.get(this.target)\n        if (jumpCounter === undefined) throw new Error(`Label '${this.target}' is unknown!`)\n        nerpRunner.programCounter = jumpCounter\n        if (NerpRunner.debug) console.log(`Jumping to label '${this.target}' in line ${nerpRunner.programCounter}`)\n    }\n}\n\nexport class NerpInvocation extends NerpStatement {\n    constructor(readonly functionName: string, readonly args: NerpStatement[]) {\n        super()\n    }\n\n    execute(nerpRunner: NerpRunner): NerpReturnType {\n        const argValues = this.args.map((a) => a.execute(nerpRunner)).filter((v) => {\n            const type = typeof v\n            const isNum = type === 'number' // actual isNaN does not work for type void\n            if (!isNum) console.error(`Invalid argument (${v}) type \"${type}\" given; number expected`)\n            return isNum\n        }) as number[]\n        const result = nerpRunner.callMethod(this.functionName, argValues) // TODO Whitelist methods\n        if (result !== undefined && NerpRunner.debug) {\n            console.log(`Method ${this.functionName}(${JSON.stringify(argValues).slice(1, -1)}) returned: ${result}`)\n        }\n        return result\n    }\n}\n\nexport class NerpConditional extends NerpStatement {\n    constructor(readonly check: NerpStatement, readonly truthy: NerpStatement) {\n        super()\n    }\n\n    execute(nerpRunner: NerpRunner): NerpReturnType {\n        if (this.check.execute(nerpRunner)) this.truthy.execute(nerpRunner)\n    }\n}\n\nexport class NerpComparator extends NerpStatement {\n    constructor(readonly left: NerpStatement, readonly comparator: '=' | '!=' | '<' | '>', readonly right: NerpStatement) {\n        super()\n    }\n\n    execute(nerpRunner: NerpRunner): NerpReturnType {\n        const left: NerpReturnType = this.left.execute(nerpRunner)\n        const right: NerpReturnType = this.right.execute(nerpRunner)\n        if (left === undefined || right === undefined) {\n            console.error(`Invalid values (${left}, ${right}) given for comparison with ${this.comparator}`)\n            return\n        }\n        if (this.comparator === '=') {\n            return left === right ? 1 : 0\n        } else if (this.comparator === '!=') {\n            return left !== right ? 1 : 0\n        } else if (this.comparator === '<') {\n            return left < right ? 1 : 0\n        } else if (this.comparator === '>') {\n            return left > right ? 1 : 0\n        } else {\n            throw new Error(`Unexpected comparator: ${this.comparator}`)\n        }\n    }\n}\n","import { ResourceManager } from '../resource/ResourceManager'\nimport { NerpComparator, NerpConditional, NerpInvocation, NerpJump, NerpLabel, NerpNumber, NerpScript, NerpStatement } from './NerpScript'\nimport { isNum } from '../core/Util'\n\nexport class NerpParser {\n    static parse(nerpScriptFile: string): NerpScript {\n        const nerpScriptContent = ResourceManager.getResource(nerpScriptFile)\n        if (!nerpScriptContent) {\n            throw new Error(`Can't parse unknown nerp script: ${nerpScriptFile}`)\n        }\n        const result = new NerpScript()\n        const lines = nerpScriptContent.split('\\n').map((l: string) => l\n            .split('//')[0].trim() // before comment starts\n            .split(';')[0].trim() // before preprocessor comment starts\n            .replace(/_/g, '') // some preprocessor macros use this prefix\n            .replace(/\\bTRUE \\? /, '') // some weird requirement of the original language\n            .replace(/\\bFALSE \\? .+/, '') // XXX Why did they add NOP statements?\n            .replace(/[{}]/g, ''), // duplicate limit for macros using labels too\n        )\n        for (let c = 0; c < lines.length; c++) {\n            const line = lines[c]\n            if (line.length < 1) {\n                continue // ignore empty lines, but important for macro closure\n            }\n            if (line.startsWith('#include ')) { // include other nerp scripts/headers\n                const includeName = line.replace(/^#include /, '').trim().slice(1, -1)\n                if (includeName === 'nerpdef.h') {\n                    // trivial default header file, is applied by search and replace above\n                    // see https://github.com/jgrip/legorr/blob/master/nerpdef.h\n                    continue\n                }\n                const includedScript = NerpParser.parse(`Levels/${includeName}`)\n                if (!includedScript || !includedScript.lines || includedScript.lines.length < 1) {\n                    throw new Error(`Can't include unknown nerp script: ${line}`)\n                }\n                result.lines = result.lines.concat(includedScript.lines)\n                // copy macros from included file to current file\n                result.macrosByName = new Map([...result.macrosByName, ...includedScript.macrosByName])\n            } else if (line.startsWith('#define ')) { // parse C++ style preprocessor macro\n                const firstLine = line.replace(/^#define /, '').split(' ')\n                const macroLines = [firstLine.splice(1).join(' ').replace(/\\\\$/, '').trim()]\n                let mLine = line\n                let append = false\n                while (mLine.endsWith('\\\\') && c < lines.length - 1) {\n                    c++\n                    mLine = lines[c].trim()\n                    const macroLine = mLine.replace(/\\\\$/, '').trim()\n                    if (macroLine.length > 0) {\n                        if (append) {\n                            append = false\n                            macroLines[macroLines.length - 1] += macroLine\n                        } else {\n                            macroLines.push(macroLine)\n                        }\n                    }\n                    if (mLine.match(/:\\\\$/)) {\n                        append = true\n                    }\n                }\n                const macroCall = firstLine[0].split('(')\n                result.macrosByName.set(macroCall[0], {\n                    args: macroCall[1].replace(/\\)$/, '').split(','),\n                    lines: macroLines,\n                })\n            } else {\n                result.lines = result.lines.concat(this.replaceMacros(result.macrosByName, line))\n            }\n        }\n        // somewhat precompile the script and create syntax tree\n        // must be done in separate block to make sure the script is complete, and we can refer/rely on line-numbers for label jumps\n        result.statements = result.lines.map((line, c) => {\n            const statement = line\n                .replace(/\\(\\)/g, '') // now the macros are applied and obsolete empty \"()\" can be removed\n                .split(' ? ')\n            const labelMatch = line.match(/(\\S+):/)\n            if (statement.length === 2) { // line contains condition (primary operator)\n                return new NerpConditional(this.readStatement(statement[0]), this.readStatement(statement[1]))\n            } else if (labelMatch) { // keep label line number for later usage\n                const labelName = labelMatch[1].toLowerCase()\n                result.labelsByName.set(labelName, c)\n                return new NerpLabel(labelName)\n            } else if (statement.length === 1) { // just a call\n                return this.readStatement(statement[0])\n            } else { // line contains more than 1 condition statement\n                throw new Error(`Can't deal with line: ${line}`)\n            }\n        })\n        return result\n    }\n\n    private static replaceMacros(macrosByName: Map<string, { args: string[], lines: string[] }>, line: string): string[] {\n        // check if this line contains a macro\n        line = line.replace('goto(jump)', ':jump') // XXX Remove this workaround for level 14\n        const split = line.split('(') // not a very stable check though...\n        const macro = macrosByName.get(split[0])\n        if (macro) {\n            const argValues = split.splice(1).join('(').slice(0, -1).split(',')\n            if (argValues.length !== macro.args.length) {\n                throw new Error(`Invalid number of args provided for macro in line ${line}`)\n            }\n            const macroLines: string[] = []\n            macro.lines.forEach((line) => {\n                for (let c = 0; c < argValues.length; c++) {\n                    line = line.replace(new RegExp(`\\\\b${macro.args[c]}\\\\b`), argValues[c])\n                }\n                macroLines.push(...(this.replaceMacros(macrosByName, line)))\n            })\n            return macroLines\n        } else {\n            return [line]\n        }\n    }\n\n    private static readStatement(expression: string): NerpStatement {\n        expression = expression.trim().replace(/^_/, '') // remove whitespace and leading underscore\n        const number = Number(expression)\n        if (isNum(number)) return new NerpNumber(number)\n        const opSplit = expression.split(/ (=) | (!=) | (>) | (<) /).filter(e => e !== undefined)\n        const brackets = expression.match(/^(.+)\\((.+)\\)$/)\n        const spaceSplit = expression.split(' ')\n        const labelMatch = expression.match(/([^:]+):$/)\n        const jumpMatch = expression.match(/^:([^:]+)$/)\n        if (opSplit.length === 3) { // expression contains secondary operator\n            const op = opSplit[1] as '=' | '!=' | '<' | '>'\n            return new NerpComparator(this.readStatement(opSplit[0]), op, this.readStatement(opSplit[2]))\n        } else if (brackets) {\n            const args: NerpStatement[] = brackets[2].split(',').map(a => this.readStatement(a))\n            return new NerpInvocation(brackets[1], args)\n        } else if (spaceSplit.length > 1) { // space split must be the very last since most expressions contain space\n            const args = spaceSplit.length === 2 ? [this.readStatement(spaceSplit[1])] : spaceSplit.splice(1).map(a => this.readStatement(a))\n            return new NerpInvocation(spaceSplit[0], args)\n        } else if (labelMatch) { // label definition\n            return new NerpLabel(labelMatch[1])\n        } else if (jumpMatch) { // jump to label\n            return new NerpJump(jumpMatch[1].toLowerCase())\n        } else { // function call without args\n            if (expression.match(/[ =?><!]/)) {\n                throw new Error('Invalid expression given, parsing must have failed before somewhere')\n            }\n            return new NerpInvocation(expression, [])\n        }\n    }\n}\n","import { LevelPrioritiesEntryConfig, LevelRewardConfig } from '../cfg/LevelsCfg'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { ResourceManager } from '../resource/ResourceManager'\nimport { NerpParser } from '../nerp/NerpParser'\nimport { NerpScript } from '../nerp/NerpScript'\nimport { LevelObjectiveTextEntry, LevelObjectiveTexts } from '../resource/fileparser/ObjectiveTextParser'\nimport { ObjectListEntryCfg } from '../cfg/ObjectListEntryCfg'\nimport { MonsterEntityType } from './model/EntityType'\nimport { NerpMessage } from '../resource/fileparser/NerpMsgParser'\nimport { RockFallStyle } from '../cfg/RockFallStyle'\nimport { TerrainMapData } from './terrain/TerrainMapData'\n\nexport interface LevelConfData {\n    levelName: string\n    fullName: string\n    generateSpiders: boolean\n    video: string\n    meshBasename: string\n    textureBasename: string\n    roofTexture: string\n    rockFallStyle: RockFallStyle\n    roughLevel: number\n    fallinMultiplier: number\n    mapWidth: number\n    mapHeight: number\n    terrainMap: number[][]\n    pathMap?: number[][]\n    surfaceMap?: number[][]\n    predugMap: number[][]\n    cryOreMap?: number[][]\n    fallinMap?: number[][]\n    erodeMap?: number[][]\n    blockPointersMap?: number[][]\n    emergeMap?: number[][]\n    nerpScript: NerpScript\n    nerpMessages: NerpMessage[]\n    objectiveTextCfg: LevelObjectiveTextEntry\n    objectiveImage: { filename: string, x: number, y: number }\n    priorities: LevelPrioritiesEntryConfig[]\n    disableStartTeleport: boolean\n    disableEndTeleport: boolean\n    objectList: Map<string, ObjectListEntryCfg>\n    reward?: LevelRewardConfig\n    oxygenRate: number\n    erodeTriggerTimeMs: number\n    erodeErodeTimeMs: number\n    erodeLockTimeMs: number\n    emergeCreature: MonsterEntityType\n    emergeTimeOutMs: number\n    noMultiSelect: boolean\n    fogColor: [r: number, g: number, b: number]\n}\n\nexport class LevelLoader {\n    static fromName(levelName: string): LevelConfData {\n        const levelConf = GameConfig.instance.levels.find((l) => l.levelName.equalsIgnoreCase(levelName))\n        if (!levelConf) throw new Error(`Could not find level configuration for \"${levelName}\"`)\n        const levelObjective = ResourceManager.getResource(levelConf.objectiveText) as LevelObjectiveTexts\n        const objectiveTextCfg = levelObjective[levelName.toLowerCase()]\n        if (!objectiveTextCfg) throw new Error(`Could not find level objective details`)\n        const terrainMap = ResourceManager.getResource(levelConf.terrainMap) as TerrainMapData\n        if (!terrainMap) throw new Error(`Could not load terrain data for \"${levelConf.terrainMap}\"`)\n        const predugMap = ResourceManager.getResource(levelConf.predugMap) as TerrainMapData\n        if (!predugMap || predugMap.width !== terrainMap.width || predugMap.height !== terrainMap.height) throw new Error(`Could not load predug data for ${levelConf.predugMap}`)\n        const textureSet = GameConfig.instance.textures.textureSetByName[levelConf.textureSet.toLowerCase()]\n        if (!textureSet) throw new Error(`Could not get texture set \"${levelConf.textureSet.toLowerCase()}\" from config with ${Object.values(GameConfig.instance.textures.textureSetByName)}`)\n        const rockFallStyle = GameConfig.instance.rockFallStyles[levelConf.rockFallStyle.toLowerCase()]\n        if (!rockFallStyle) throw new Error(`Could not get rock fall style \"${levelConf.rockFallStyle.toLowerCase()}\" from config with ${Object.values(GameConfig.instance.rockFallStyles)}`)\n        return {\n            levelName: levelConf.levelName,\n            fullName: levelConf.fullName,\n            generateSpiders: levelConf.generateSpiders,\n            video: levelConf.video,\n            mapWidth: terrainMap.width,\n            mapHeight: terrainMap.height,\n            meshBasename: textureSet.meshBasename,\n            textureBasename: textureSet.textureBasename,\n            roofTexture: textureSet.roofTexture,\n            rockFallStyle: rockFallStyle,\n            roughLevel: levelConf.roughLevel,\n            fallinMultiplier: levelConf.fallinMultiplier,\n            terrainMap: terrainMap.level,\n            pathMap: this.checkMap(levelConf.pathMap, terrainMap.width, terrainMap.height),\n            surfaceMap: this.checkMap(levelConf.surfaceMap, terrainMap.width, terrainMap.height),\n            predugMap: predugMap.level,\n            cryOreMap: this.checkMap(levelConf.cryOreMap, terrainMap.width, terrainMap.height),\n            fallinMap: this.checkMap(levelConf.fallinMap, terrainMap.width, terrainMap.height),\n            erodeMap: this.checkMap(levelConf.erodeMap, terrainMap.width, terrainMap.height),\n            blockPointersMap: this.checkMap(levelConf.blockPointersMap, terrainMap.width, terrainMap.height),\n            emergeMap: this.checkMap(levelConf.emergeMap, terrainMap.width, terrainMap.height),\n            nerpScript: NerpParser.parse(levelConf.nerpFile),\n            nerpMessages: ResourceManager.getResource(levelConf.nerpMessageFile) ?? [],\n            objectiveTextCfg: objectiveTextCfg,\n            objectiveImage: levelConf.objectiveImage,\n            priorities: levelConf.priorities,\n            disableStartTeleport: levelConf.disableStartTeleport,\n            disableEndTeleport: levelConf.disableEndTeleport,\n            objectList: ResourceManager.getResource(levelConf.oListFile),\n            reward: levelConf.reward,\n            oxygenRate: levelConf.oxygenRate,\n            erodeTriggerTimeMs: levelConf.erodeTriggerTimeMs,\n            erodeErodeTimeMs: levelConf.erodeErodeTimeMs,\n            erodeLockTimeMs: levelConf.erodeLockTimeMs,\n            emergeCreature: levelConf.emergeCreature,\n            emergeTimeOutMs: levelConf.emergeTimeOutMs,\n            noMultiSelect: levelConf.noMultiSelect,\n            fogColor: levelConf.fogColour,\n        }\n    }\n\n    static checkMap(mapFileName: string, width: number, height: number): number[][] | undefined {\n        const map = ResourceManager.getResource(mapFileName) as TerrainMapData\n        if (!map) return undefined\n        if (map.width !== width || map.height !== height) {\n            console.warn(`Given map \"${mapFileName}\" has unexpected size ${width} x ${height}`)\n            return undefined\n        }\n        return map.level\n    }\n}\n","import { LevelSelectLayer } from '../menu/LevelSelectLayer'\nimport { LoadSaveLayer } from '../menu/LoadSaveLayer'\nimport { MainMenuBaseItem } from '../menu/MainMenuBaseItem'\nimport { MainMenuLayer } from '../menu/MainMenuLayer'\nimport { MainMenuLevelButton } from '../menu/MainMenuLevelButton'\nimport { SaveGameManager } from '../resource/SaveGameManager'\nimport { ScreenMaster } from './ScreenMaster'\nimport { EventKey } from '../event/EventKeyEnum'\nimport { LevelSelectedEvent, MaterialAmountChanged } from '../event/WorldEvents'\nimport { MainMenuCreditsLayer } from '../menu/MainMenuCreditsLayer'\nimport { ScaledLayer } from './layer/ScaledLayer'\nimport { RockWipeLayer } from '../menu/RockWipeLayer'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { EventBroker } from '../event/EventBroker'\nimport { LevelLoader } from '../game/LevelLoader'\nimport { SoundManager } from '../audio/SoundManager'\nimport { PRNG } from '../game/factory/PRNG'\nimport { LevelEntryCfg } from '../cfg/LevelsCfg'\n\nexport class MainMenuScreen {\n    readonly menuLayers: ScaledLayer[] = []\n    readonly creditsLayer: MainMenuCreditsLayer\n    readonly rockWipeLayer: RockWipeLayer\n    sfxAmbientLoop?: AudioBufferSourceNode\n\n    constructor(readonly screenMaster: ScreenMaster) {\n        GameConfig.instance.menu.mainMenuFull.menus.forEach((menuCfg) => {\n            let layer: MainMenuLayer\n            if (menuCfg.title.equalsIgnoreCase('Main')) {\n                layer = new MainMenuLayer(menuCfg)\n            } else if (menuCfg.title.equalsIgnoreCase('Levels')) {\n                layer = new LevelSelectLayer(menuCfg, true)\n            } else if (menuCfg.title.equalsIgnoreCase('Tutorials')) {\n                layer = new LevelSelectLayer(menuCfg, false)\n            } else if (menuCfg.title.equalsIgnoreCase('Load Level Save')) {\n                layer = new LoadSaveLayer(menuCfg, true)\n            } else if (menuCfg.title.equalsIgnoreCase('ARE YOU SURE?')) {\n                layer = new MainMenuLayer(menuCfg)\n            } else {\n                console.warn('Unexpected menu title in cfg', menuCfg)\n                layer = new MainMenuLayer(menuCfg)\n            }\n            layer.onItemAction = (item: MainMenuBaseItem) => {\n                if (menuCfg.title.equalsIgnoreCase('Levels') && item.actionName?.equalsIgnoreCase('Next') && item.targetIndex === 0) SaveGameManager.startNewGame()\n                this.onItemAction(item)\n            }\n            this.menuLayers.push(screenMaster.addLayer(layer, 200 + this.menuLayers.length * 10))\n        })\n        this.creditsLayer = screenMaster.addLayer(new MainMenuCreditsLayer(), 200 + this.menuLayers.length * 10)\n        this.creditsLayer.onExitCredits = () => this.showMainMenu()\n        this.menuLayers.push(this.creditsLayer)\n        this.rockWipeLayer = screenMaster.addLayer(new RockWipeLayer(), 200 + this.menuLayers.length * 10)\n        EventBroker.subscribe(EventKey.ADVANCE_AFTER_REWARDS, () => {\n            if (GameConfig.instance.levels.filter((l) => LevelEntryCfg.isLevel(l.levelName)).every((l) => SaveGameManager.getLevelCompleted(l.levelName))) {\n                // TODO Show EndGameAVI1 from config, requires Indeo5 video decoder\n                this.showCredits()\n            } else {\n                // TODO If tutorial was started from tutorial screen go back there\n                this.showLevelSelection()\n            }\n        })\n        if (!this.checkEnv()) throw new Error('Error (0xaex6ieR9one): Visit your grandma')\n    }\n\n    checkEnv() {\n        try {\n            return window.self === window.top\n        } catch (e) {\n            return false\n        }\n    }\n\n    dispose() {\n        this.sfxAmbientLoop?.stop()\n        this.sfxAmbientLoop = undefined\n        this.menuLayers.forEach((l) => this.screenMaster.removeLayer(l))\n        this.menuLayers.length = 0\n        this.screenMaster.removeLayer(this.rockWipeLayer)\n        this.rockWipeLayer.dispose()\n    }\n\n    private onItemAction(item: MainMenuBaseItem) {\n        if (item.actionName.equalsIgnoreCase('next')) {\n            this.showMainMenu(item.targetIndex)\n        } else if (item.actionName.equalsIgnoreCase('selectlevel')) {\n            this.selectLevel((item as MainMenuLevelButton).levelConf.levelName).then()\n        } else if (item.actionName.toLowerCase().startsWith('load_game')) {\n            SaveGameManager.loadGame(item.targetIndex)\n            this.showLevelSelection()\n        } else if (item.actionName.equalsIgnoreCase('selectrandomlevel')) {\n            this.selectLevelRandom()\n        } else if (item.actionName.equalsIgnoreCase('Trigger') && item.targetIndex === 0) {\n            this.showCredits()\n        } else if (item.actionName) {\n            console.warn(`not implemented: ${item.actionName} - ${item.targetIndex}`)\n        } else {\n            console.warn('Item has no action name', item)\n        }\n    }\n\n    showMainMenu(index: number = 0) {\n        if (!this.sfxAmbientLoop) this.sfxAmbientLoop = SoundManager.playLoopSound('SFX_AmbientMusicLoop')\n        const oldIndex = this.menuLayers.findIndex((m) => m.active)\n        let timeout = 0\n        if (oldIndex === 0 || (index === 0 && oldIndex > 0)) {\n            const maxDurationMs = this.rockWipeLayer.show()\n            timeout = Math.round(maxDurationMs / 2)\n        }\n        setTimeout(() => {\n            this.menuLayers.forEach((m, i) => i === index ? m.show() : m.hide())\n        }, timeout)\n    }\n\n    showLevelSelection() {\n        this.showMainMenu(1)\n    }\n\n    showCredits() {\n        this.menuLayers.forEach((l) => l === this.creditsLayer ? l.show() : l.hide())\n    }\n\n    selectLevelRandom() {\n        const allLevels = GameConfig.instance.levels.filter((l) => LevelEntryCfg.isLevel(l.levelName))\n        const unlockedLevels = allLevels.filter((levelConf) => !levelConf.isLocked())\n        const incompleteLevels = unlockedLevels.filter((levelConf) => !SaveGameManager.getLevelCompleted(levelConf.levelName))\n        const levelName = PRNG.unsafe.sample(incompleteLevels)?.levelName || PRNG.unsafe.sample(unlockedLevels)?.levelName || PRNG.unsafe.sample(allLevels)?.levelName\n        this.selectLevel(levelName).then()\n    }\n\n    async selectLevel(levelName: string | undefined) {\n        try {\n            if (!levelName) return\n            const levelConf = LevelLoader.fromName(levelName) // Get config first in case of error\n            this.sfxAmbientLoop?.stop()\n            this.sfxAmbientLoop = undefined\n            this.menuLayers.forEach((m) => m.hide())\n            this.rockWipeLayer.hide()\n            if (SaveGameManager.preferences.playVideos && levelConf.video) await this.screenMaster.videoLayer.playVideo(`data/${levelConf.video.toLowerCase()}`)\n            this.screenMaster.loadingLayer.show()\n            EventBroker.publish(new LevelSelectedEvent(levelConf))\n            EventBroker.publish(new MaterialAmountChanged()) // XXX Remove workaround for UI redraw\n        } catch (e) {\n            console.error(e)\n        }\n    }\n}\n","import { Raider } from '../../raider/Raider'\nimport { Job } from '../Job'\n\nexport abstract class RaiderJob extends Job {\n    raider?: Raider\n\n    assign(raider: Raider) {\n        if (this.raider === raider) return\n        if (this.raider) throw new Error('Job already assigned')\n        this.raider = raider\n    }\n\n    unAssign(raider: Raider) {\n        if (this.raider !== raider) return\n        this.raider = undefined\n    }\n\n    hasFulfiller(): boolean {\n        return !!this.raider\n    }\n}\n","import { Vector2 } from 'three'\nimport { PathTarget } from '../PathTarget'\nimport { Job, JobFulfiller } from './Job'\nimport { BubblesCfg } from '../../../cfg/BubblesCfg'\n\nexport class MoveJob extends Job {\n    readonly target: PathTarget\n\n    constructor(readonly location: Vector2) {\n        super()\n        this.target = PathTarget.fromLocation(location)\n        this.doOnAlarm = true\n    }\n\n    getWorkplace(entity: JobFulfiller): PathTarget | undefined {\n        return this.target\n    }\n\n    getJobBubble(): keyof BubblesCfg {\n        return 'bubbleGoto'\n    }\n\n    assign(fulfiller: JobFulfiller) {\n        // This job should be always assigned\n    }\n\n    unAssign(fulfiller: JobFulfiller) {\n        // This job should not be unassigned\n    }\n\n    hasFulfiller(): boolean {\n        return true\n    }\n}\n","import { EntityManager } from '../../../EntityManager'\nimport { BuildingEntity } from '../../building/BuildingEntity'\nimport { PathTarget } from '../../PathTarget'\nimport { RAIDER_TOOL, RaiderTool } from '../../raider/RaiderTool'\nimport { RaiderJob } from './RaiderJob'\nimport { BubblesCfg } from '../../../../cfg/BubblesCfg'\nimport { JobFulfiller } from '../Job'\nimport { MoveJob } from '../MoveJob'\nimport { SurfaceType } from '../../../terrain/SurfaceType'\n\nexport class GetToolJob extends RaiderJob {\n    entityMgr: EntityManager\n    tool: RaiderTool\n    workplaces: PathTarget[]\n\n    constructor(entityMgr: EntityManager, tool: RaiderTool, toolstation?: BuildingEntity) {\n        super()\n        this.entityMgr = entityMgr\n        this.tool = tool\n        this.workplaces = toolstation?.getToolPathTarget ? [toolstation.getToolPathTarget] : this.entityMgr.getGetToolTargets()\n    }\n\n    getWorkplace(entity: JobFulfiller): PathTarget | undefined {\n        if (this.workplaces.some((b) => !b.building?.isPowered())) {\n            this.workplaces = this.entityMgr.getGetToolTargets()\n        }\n        return entity.findShortestPath(this.workplaces)?.target\n    }\n\n    onJobComplete(fulfiller: JobFulfiller): void {\n        super.onJobComplete(fulfiller)\n        if (!this.raider) return\n        this.raider.addTool(this.tool)\n        if (!this.raider.followUpJob) {\n            const building = this.raider.getSurface().building\n            if (building) {\n                const pathSurface = building.primaryPathSurface?.neighbors.find((n) => n.surfaceType === SurfaceType.POWER_PATH)\n                if (pathSurface) {\n                    this.raider.followUpJob = new MoveJob(pathSurface.getRandomPosition())\n                } else {\n                    const walkableSurface = building.primaryPathSurface?.neighbors.find((n) => n.isWalkable())\n                    if (walkableSurface) this.raider.followUpJob = new MoveJob(walkableSurface.getRandomPosition())\n                }\n            }\n        }\n    }\n\n    getJobBubble(): keyof BubblesCfg {\n        switch (this.tool) {\n            case RAIDER_TOOL.drill:\n                return 'bubbleCollectDrill'\n            case RAIDER_TOOL.hammer:\n                return 'bubbleCollectHammer'\n            case RAIDER_TOOL.shovel:\n                return 'bubbleCollectSpade'\n            case RAIDER_TOOL.spanner:\n                return 'bubbleCollectSpanner'\n            case RAIDER_TOOL.freezerGun:\n                return 'bubbleCollectFreezer'\n            case RAIDER_TOOL.laser:\n                return 'bubbleCollectLaser'\n            case RAIDER_TOOL.pusherGun:\n                return 'bubbleCollectPusher'\n            case RAIDER_TOOL.birdScarer:\n                return 'bubbleCollectBirdScarer'\n        }\n        return 'bubbleIdle'\n    }\n}\n","import { Job, JobFulfiller } from './Job'\nimport { VehicleUpgrade, VehicleUpgrades } from '../vehicle/VehicleUpgrade'\nimport { VehicleEntity } from '../vehicle/VehicleEntity'\nimport { PathTarget } from '../PathTarget'\nimport { WorldManager } from '../../WorldManager'\nimport { BUILDING_ACTIVITY } from '../anim/AnimationActivity'\nimport { VehicleUpgradeCompleteEvent } from '../../../event/LocalEvents'\nimport { EventBroker } from '../../../event/EventBroker'\nimport { GameState } from '../GameState'\nimport { MaterialAmountChanged } from '../../../event/WorldEvents'\n\nexport class UpgradeVehicleJob extends Job {\n    readonly workplace?: PathTarget\n\n    constructor(worldMgr: WorldManager, readonly vehicle: VehicleEntity, readonly upgrade: VehicleUpgrade) {\n        super()\n        this.workplace = vehicle.findShortestPath(worldMgr.entityMgr.getVehicleUpgradePathTargets())?.target\n    }\n\n    getWorkplace(entity: JobFulfiller): PathTarget | undefined {\n        if (!this.workplace?.building?.isPowered()) {\n            this.vehicle.upgrading = false\n            return undefined\n        }\n        return this.workplace\n    }\n\n    onJobComplete(fulfiller: JobFulfiller): void {\n        const costIndex = VehicleUpgrades.toCostIndex(this.upgrade)\n        const upgradeCostOre = this.vehicle.stats.upgradeCostOre?.[costIndex] ?? 0\n        const upgradeCostBrick = this.vehicle.stats.upgradeCostStuds?.[costIndex] ?? 0\n        if (GameState.numBrick < upgradeCostBrick && GameState.numOre < upgradeCostOre) {\n            console.log(`Cannot afford vehicle upgrade! Ore: ${GameState.numOre}/${upgradeCostOre} Bricks: ${GameState.numBrick}/${upgradeCostBrick}`)\n            super.onJobComplete(fulfiller)\n            return\n        }\n        const building = this.workplace?.building\n        if (!building) {\n            super.onJobComplete(fulfiller)\n            return\n        }\n        fulfiller.sceneEntity.headTowards(this.workplace.focusPoint!)\n        this.vehicle.upgrading = true\n        const upgradeAnimationSpeed = building.stats.functionCoef[building.level] || 1\n        building.sceneEntity.setAnimationSpeed(upgradeAnimationSpeed)\n        building.sceneEntity.setAnimation(BUILDING_ACTIVITY.upgrade, () => {\n            building.sceneEntity.setAnimationSpeed(1)\n            super.onJobComplete(fulfiller)\n            building.sceneEntity.setAnimation(BUILDING_ACTIVITY.stand)\n            this.vehicle.upgrading = false\n            if (GameState.numBrick >= upgradeCostBrick) {\n                GameState.numBrick -= upgradeCostBrick\n            } else if (GameState.numOre >= upgradeCostOre) {\n                GameState.numOre -= upgradeCostOre\n            } else {\n                return\n            }\n            EventBroker.publish(new MaterialAmountChanged())\n            this.vehicle.addUpgrade(this.upgrade)\n            EventBroker.publish(new VehicleUpgradeCompleteEvent())\n        })\n    }\n\n    assign(vehicle: VehicleEntity): void {\n        if (this.vehicle === vehicle) return\n        throw new Error('Job already assigned')\n    }\n\n    unAssign(vehicle: VehicleEntity): void {\n        // This job should not be unassigned\n    }\n\n    hasFulfiller(): boolean {\n        return !!this.vehicle\n    }\n}\n","import { SoundManager } from '../../audio/SoundManager'\nimport { SELECT_PANEL_TYPE, SelectPanelType } from '../../event/LocalEvents'\nimport { BuildingEntity } from './building/BuildingEntity'\nimport { DrillJob } from './job/surface/DrillJob'\nimport { ClearRubbleJob } from './job/surface/ClearRubbleJob'\nimport { GetToolJob } from './job/raider/GetToolJob'\nimport { Surface } from '../terrain/Surface'\nimport { MaterialEntity } from './material/MaterialEntity'\nimport { Raider } from './raider/Raider'\nimport { RAIDER_TOOL } from './raider/RaiderTool'\nimport { VehicleEntity } from './vehicle/VehicleEntity'\nimport { SelectionFrameComponent } from '../component/SelectionFrameComponent'\nimport { VehicleUpgrade } from './vehicle/VehicleUpgrade'\nimport { UpgradeVehicleJob } from './job/UpgradeVehicleJob'\nimport { GameEntity } from '../ECS'\n\nexport class GameSelection {\n    surface?: Surface\n    building?: BuildingEntity\n    raiders: Raider[] = []\n    vehicles: VehicleEntity[] = []\n    fence?: MaterialEntity\n    doubleSelect?: BuildingEntity | VehicleEntity\n    primarySelect?: Raider | VehicleEntity\n\n    isEmpty(): boolean {\n        return !this.surface && !this.building && this.raiders.length < 1 && this.vehicles.length < 1 && !this.fence\n    }\n\n    deselectAll() {\n        this.raiders.forEach((r) => r.deselect())\n        this.raiders = []\n        this.vehicles.forEach((v) => v.deselect())\n        this.vehicles = []\n        this.building?.deselect()\n        this.building = undefined\n        this.surface?.deselect()\n        this.surface = undefined\n        this.doubleSelect = undefined\n        this.fence?.worldMgr.ecs.getComponents(this.fence.entity).get(SelectionFrameComponent)?.deselect()\n        this.fence = undefined\n        this.primarySelect = undefined\n    }\n\n    canMove(): boolean {\n        return this.raiders.length > 0 || this.vehicles.some((v) => !!v.driver)\n    }\n\n    set(selection: GameSelection) {\n        this.doubleSelect = undefined // XXX refactor this only reset if needed\n        let added = false\n        added = this.syncRaiderSelection(this.raiders, selection.raiders) || added\n        added = this.syncVehicleSelection(this.vehicles, selection.vehicles) || added\n        if (this.building !== selection.building) {\n            this.building?.deselect()\n            if (selection.building?.isInSelection()) {\n                this.building = selection.building\n                if (this.building.select()) added = true\n            } else {\n                this.building = undefined\n            }\n        } else if (this.building?.stats.canDoubleSelect) {\n            if (this.building.doubleSelect()) {\n                this.doubleSelect = this.building\n                added = true\n            }\n        }\n        if (this.fence !== selection.fence) {\n            this.fence?.worldMgr.ecs.getComponents(this.fence.entity).get(SelectionFrameComponent)?.deselect()\n            this.fence = selection.fence\n            if (selection.fence) {\n                const selectionFrameComponent = selection.fence.worldMgr.ecs.getComponents(selection.fence.entity).get(SelectionFrameComponent)\n                added = !selectionFrameComponent.isSelected()\n                selectionFrameComponent.select()\n            }\n        }\n        if (this.surface !== selection.surface) {\n            this.surface?.deselect()\n            if (selection.surface?.isInSelection()) {\n                this.surface = selection.surface\n                if (this.surface.select()) added = true\n            } else {\n                this.surface = undefined\n            }\n        }\n        if (added) SoundManager.playSfxSound('SFX_Okay')\n    }\n\n    private syncRaiderSelection(before: Raider[], after: Raider[]): boolean {\n        let added = false\n        const deselected = before.filter((r) => {\n            const deselected = after.indexOf(r) === -1\n            if (deselected) r.deselect()\n            return deselected\n        })\n        this.primarySelect = after[0]\n        after.forEach((r) => {\n            if (before.indexOf(r) === -1) {\n                if (r.select(this.primarySelect === r)) {\n                    before.push(r)\n                    added = true\n                }\n            }\n        })\n        deselected.forEach((r) => before.remove(r))\n        return added\n    }\n\n    private syncVehicleSelection(before: VehicleEntity[], after: VehicleEntity[]): boolean {\n        let added = false\n        const deselected = before.filter((v) => {\n            const deselected = after.indexOf(v) === -1\n            if (deselected) v.deselect()\n            return deselected\n        })\n        if (!this.primarySelect) this.primarySelect = after[0]\n        after.forEach((v) => {\n            if (before.indexOf(v) === -1) {\n                if (v.select(this.primarySelect === v)) {\n                    before.push(v)\n                    added = true\n                }\n            } else if (v.stats.canDoubleSelect && !!v.driver) {\n                if (v.doubleSelect()) {\n                    this.doubleSelect = v\n                    added = true\n                }\n            }\n        })\n        deselected.forEach((r) => before.remove(r))\n        return added\n    }\n\n    getSelectPanelType(): SelectPanelType {\n        if (this.raiders.length > 0) {\n            return SELECT_PANEL_TYPE.raider\n        } else if (this.vehicles.length > 0) {\n            return SELECT_PANEL_TYPE.vehicle\n        } else if (this.building) {\n            return SELECT_PANEL_TYPE.building\n        } else if (this.surface) {\n            return SELECT_PANEL_TYPE.surface\n        } else if (this.fence) {\n            return SELECT_PANEL_TYPE.fence\n        }\n        return SELECT_PANEL_TYPE.none\n    }\n\n    assignDrillJob(job: DrillJob) {\n        if (!job) return\n        this.raiders.forEach((r) => {\n            if (!r.hasTool(job.requiredTool)) {\n                const pathToToolstation = r.findShortestPath(r.worldMgr.entityMgr.getGetToolTargets())\n                if (pathToToolstation) r.setJob(new GetToolJob(r.worldMgr.entityMgr, job.requiredTool, pathToToolstation.target.building), job)\n            } else if (r.canDrill(job.surface)) {\n                r.setJob(job)\n            }\n        })\n        this.vehicles.forEach((v) => {\n            if (v.isPrepared(job)) v.setJob(job)\n        })\n    }\n\n    assignClearRubbleJob(job: ClearRubbleJob) {\n        if (!job) return\n        this.raiders.forEach((r) => {\n            if (!r.hasTool(job.requiredTool)) {\n                const pathToToolstation = r.findShortestPath(r.worldMgr.entityMgr.getGetToolTargets())\n                if (pathToToolstation) r.setJob(new GetToolJob(r.worldMgr.entityMgr, job.requiredTool, pathToToolstation.target.building), job)\n            } else {\n                r.setJob(job)\n            }\n        })\n        this.vehicles.forEach((v) => {\n            if (v.isPrepared(job)) v.setJob(job)\n        })\n    }\n\n    assignCarryJob(material: MaterialEntity) {\n        if (!material) return\n        const job = material.setupCarryJob()\n        const entity = [...this.vehicles, ...this.raiders].find((e) => e.hasCapacity())\n            || [...this.vehicles, ...this.raiders].find((e) => e.getCarryCapacity() > 0)\n        entity?.setJob(job)\n    }\n\n    assignUpgradeJob(upgrade: VehicleUpgrade) {\n        if (!upgrade) return\n        this.vehicles.forEach((v) => v.canUpgrade(upgrade) && v.setJob(new UpgradeVehicleJob(v.worldMgr, v, upgrade)))\n    }\n\n    assignCompleteSurfaceJob(surface: Surface) {\n        const job = surface.setupCompleteSurfaceJob()\n        if (!job) return\n        [...this.raiders, ...this.vehicles].find((e) => e.isPrepared(job))?.setJob(job)\n    }\n\n    canDrill(surface: Surface): boolean {\n        return this.raiders.some((r) => r.canDrill(surface)) || this.vehicles.some((v) => v.canDrill(surface))\n    }\n\n    canClear(): boolean {\n        return this.raiders.some((r) => r.hasTool(RAIDER_TOOL.shovel)) || this.vehicles.some((v) => v.canClear())\n    }\n\n    canPickup(): boolean {\n        return this.raiders.some((r) => r.getCarryCapacity() > 0) || this.vehicles.some((v) => v.getCarryCapacity() > 0)\n    }\n\n    getPrimarySelected(): Raider | VehicleEntity | undefined {\n        return this.primarySelect\n    }\n\n    hasOnlyOneRaider(): GameEntity | undefined {\n        if (!this.surface && !this.building && this.raiders.length === 1 && this.vehicles.length === 0 && !this.fence && !this.doubleSelect) {\n            return this.raiders[0].entity\n        } else {\n            return undefined\n        }\n    }\n}\n","export interface Updatable {\n    update(elapsedMs: number): void\n}\n\nexport function updateSafe(updatable: Updatable | undefined, elapsedMs: number) {\n    try {\n        if (!updatable) return\n        updatable.update(elapsedMs)\n    } catch (e) {\n        console.error(e)\n    }\n}\n","import { Vector2, Vector3 } from 'three'\nimport { EventKey } from '../event/EventKeyEnum'\nimport { BuildingsChangedEvent, RaidersAmountChangedEvent, SelectionChanged, UpdateRadarEntityEvent } from '../event/LocalEvents'\nimport { WorldLocationEvent } from '../event/WorldEvents'\nimport { ADDITIONAL_RAIDER_PER_SUPPORT, MAX_RAIDER_BASE, TILESIZE } from '../params'\nimport { BuildingEntity } from './model/building/BuildingEntity'\nimport { BuildingSite } from './model/building/BuildingSite'\nimport { EntityType } from './model/EntityType'\nimport { GameSelection } from './model/GameSelection'\nimport { Surface } from './terrain/Surface'\nimport { MaterialEntity } from './model/material/MaterialEntity'\nimport { PathTarget } from './model/PathTarget'\nimport { Raider } from './model/raider/Raider'\nimport { RAIDER_TRAINING, RaiderTraining } from './model/raider/RaiderTraining'\nimport { updateSafe } from './model/Updateable'\nimport { VehicleEntity } from './model/vehicle/VehicleEntity'\nimport { GameEntity } from './ECS'\nimport { PositionComponent } from './component/PositionComponent'\nimport { AnimatedSceneEntityComponent } from './component/AnimatedSceneEntityComponent'\nimport { ROCK_MONSTER_ACTIVITY } from './model/anim/AnimationActivity'\nimport { MonsterStatsComponent } from './component/MonsterStatsComponent'\nimport { WorldManager } from './WorldManager'\nimport { HealthComponent } from './component/HealthComponent'\nimport { MAP_MARKER_CHANGE, MAP_MARKER_TYPE, MapMarkerComponent } from './component/MapMarkerComponent'\nimport { SLUG_BEHAVIOR_STATE, SlugBehaviorComponent } from './component/SlugBehaviorComponent'\nimport { EventBroker } from '../event/EventBroker'\nimport { BuildingEntityStats } from '../cfg/GameStatsCfg'\nimport { GameState } from './model/GameState'\nimport { SaveGameManager, SaveGameRaider } from '../resource/SaveGameManager'\n\nexport interface VehicleTarget {\n    entity: GameEntity\n    position: PositionComponent\n}\n\nexport class EntityManager {\n    selection: GameSelection = new GameSelection()\n    // entity partitions\n    buildings: BuildingEntity[] = []\n    buildingsUndiscovered: BuildingEntity[] = []\n    raiders: Raider[] = []\n    raidersUndiscovered: Raider[] = []\n    raidersInBeam: Raider[] = []\n    materials: MaterialEntity[] = []\n    materialsUndiscovered: MaterialEntity[] = []\n    placedFences: MaterialEntity[] = []\n    surfacesWithStuds: Surface[] = []\n    buildingSites: BuildingSite[] = []\n    spiders: GameEntity[] = []\n    undiscoveredSpiders: GameEntity[] = []\n    bats: GameEntity[] = []\n    undiscoveredBats: GameEntity[] = []\n    rockMonsters: GameEntity[] = []\n    undiscoveredRockMonsters: GameEntity[] = []\n    slugs: GameEntity[] = []\n    vehicles: VehicleEntity[] = []\n    vehiclesUndiscovered: VehicleEntity[] = []\n    vehiclesInBeam: VehicleEntity[] = []\n    completedBuildingSites: BuildingSite[] = []\n    recordedEntities: GameEntity[] = []\n    birdScarer: GameEntity[] = []\n\n    constructor(readonly worldMgr: WorldManager) {\n        this.worldMgr.entityMgr = this\n        // event handler must be placed here, because only this class knows the \"actual\" selection instance\n        EventBroker.subscribe(EventKey.DESELECT_ALL, () => {\n            this.selection.deselectAll()\n            EventBroker.publish(new SelectionChanged(this))\n        })\n        EventBroker.subscribe(EventKey.MATERIAL_AMOUNT_CHANGED, () => {\n            this.buildings.forEach((b) => b.updateEnergyState())\n        })\n    }\n\n    reset() {\n        this.selection = new GameSelection()\n        this.buildings.length = 0\n        this.buildingsUndiscovered.length = 0\n        this.raiders.length = 0\n        this.raidersUndiscovered.length = 0\n        this.raidersInBeam.length = 0\n        this.materials.length = 0\n        this.materialsUndiscovered.length = 0\n        this.placedFences.length = 0\n        this.surfacesWithStuds.length = 0\n        this.buildingSites.length = 0\n        this.spiders.length = 0\n        this.undiscoveredSpiders.length = 0\n        this.bats.length = 0\n        this.undiscoveredBats.length = 0\n        this.rockMonsters.length = 0\n        this.undiscoveredRockMonsters.length = 0\n        this.slugs.length = 0\n        this.vehicles.length = 0\n        this.vehiclesUndiscovered.length = 0\n        this.vehiclesInBeam.length = 0\n        this.completedBuildingSites.length = 0\n        this.recordedEntities.length = 0\n        this.birdScarer.length = 0\n    }\n\n    update(elapsedMs: number) {\n        this.raiders.forEach((r) => updateSafe(r, elapsedMs))\n        this.vehicles.forEach((v) => updateSafe(v, elapsedMs))\n        this.completedBuildingSites.forEach((b) => updateSafe(b, elapsedMs))\n    }\n\n    disposeAll() {\n        EntityManager.disposeAll(this.buildings)\n        EntityManager.disposeAll(this.buildingsUndiscovered)\n        EntityManager.disposeAll(this.raiders)\n        EntityManager.disposeAll(this.raidersUndiscovered)\n        EntityManager.disposeAll(this.raidersInBeam)\n        EntityManager.disposeAll(this.materials)\n        EntityManager.disposeAll(this.materialsUndiscovered)\n        EntityManager.disposeAll(this.placedFences)\n        EntityManager.disposeAll(this.vehicles)\n        EntityManager.disposeAll(this.vehiclesUndiscovered)\n        EntityManager.disposeAll(this.vehiclesInBeam)\n    }\n\n    private static disposeAll(list: { disposeFromWorld: () => unknown }[]) {\n        const copy = [...list]\n        copy.forEach((e) => e.disposeFromWorld())\n        list.length = 0\n    }\n\n    private getBuildingsByType(...buildingTypes: EntityType[]): BuildingEntity[] {\n        return this.buildings.filter(b => b.isPowered() && buildingTypes.some(bt => b.entityType === bt))\n    }\n\n    getClosestBuildingByType(position: Vector3, ...buildingTypes: EntityType[]): BuildingEntity | undefined {\n        const buildings = this.getBuildingsByType(...buildingTypes)\n        let closest: BuildingEntity | undefined, minDist: number = Infinity\n        buildings.forEach((b) => {\n            const bPos = b.getPosition()\n            const dist = position.distanceToSquared(bPos)\n            if (dist < minDist) {\n                closest = b\n                minDist = dist\n            }\n        })\n        return closest\n    }\n\n    getGetToolTargets(): PathTarget[] {\n        return this.getPoweredBuildingByStatsProperty('toolStore').map((b) => b.getToolPathTarget).filter((b) => !!b)\n    }\n\n    private getPoweredBuildingByStatsProperty(statsKey: keyof BuildingEntityStats) {\n        return this.buildings.filter(b => b.isPowered() && b.stats[statsKey])\n    }\n\n    getBuildingCarryPathTargets(entityType: EntityType): PathTarget[] {\n        return this.getBuildingsByType(entityType).map((b) => b.carryPathTarget).filter((b) => !!b)\n    }\n\n    getRaiderUpgradePathTarget(): PathTarget[] {\n        return this.getPoweredBuildingByStatsProperty('toolStore').flatMap((b) => b.getTrainingTargets())\n    }\n\n    getRaiderEatPathTarget(): PathTarget[] {\n        return this.getPoweredBuildingByStatsProperty('snaxULike').flatMap((b) => b.getTrainingTargets())\n    }\n\n    getVehicleUpgradePathTargets(): PathTarget[] {\n        return this.getPoweredBuildingByStatsProperty('upgradeBuilding').map((b) => {\n            const primary = b.primarySurface\n            const primaryPath = b.primaryPathSurface\n            if (!primaryPath) {\n                console.warn('Cannot start upgrade process without given primary path surface')\n                return null\n            }\n            const opposite = b.worldMgr.sceneMgr.terrain.getSurface(2 * primaryPath.x - primary.x, 2 * primaryPath.y - primary.y)\n            return PathTarget.fromBuilding(b, b.getDropPosition2D(), 0, opposite.getCenterWorld2D())\n        }).filter((v) => !!v)\n    }\n\n    hasBuilding(buildingType: EntityType): boolean {\n        return this.buildings.some((b) => b.buildingType.entityType === buildingType)\n    }\n\n    getTrainingSiteTargets(training: RaiderTraining): PathTarget[] {\n        const targets: PathTarget[] = []\n        this.buildings.filter((b) => b.isTrainingSite(training)).map((b) => b.getTrainingTargets().forEach((t) => targets.push(t)))\n        return targets\n    }\n\n    hasTrainingSite(training: RaiderTraining): boolean {\n        return this.buildings.some((b) => b.isTrainingSite(training))\n    }\n\n    hasUpgradeSite(): boolean {\n        return this.buildings.some((b) => b.isPowered() && b.stats.upgradeBuilding)\n    }\n\n    getRaiderFightTargets(): PathTarget[] {\n        return [...this.rockMonsters, ...this.slugs]\n            .map((m) => ({entity: m, components: this.worldMgr.ecs.getComponents(m)}))\n            .filter((e) => {\n                return e.components.get(HealthComponent).health > 0 &&\n                    e.components.get(MonsterStatsComponent).stats.canBeShotAt &&\n                    e.components.get(AnimatedSceneEntityComponent).sceneEntity.currentAnimation !== ROCK_MONSTER_ACTIVITY.unpowered &&\n                    e.components.get(SlugBehaviorComponent)?.state !== SLUG_BEHAVIOR_STATE.emerge\n            })\n            .map((e) => {\n                const pos = e.components.get(PositionComponent).surface.getCenterWorld2D()\n                return PathTarget.fromEntity(e.entity, pos, TILESIZE * TILESIZE * 4)\n            })\n    }\n\n    discoverSurface(surface: Surface) {\n        const minX = surface.x * TILESIZE, minZ = surface.y * TILESIZE\n        const maxX = minX + TILESIZE, maxZ = minZ + TILESIZE\n        const numRaidersUndiscovered = this.raidersUndiscovered.length\n        this.raidersUndiscovered = EntityManager.removeInRect(this.raidersUndiscovered, minX, maxX, minZ, maxZ, (r) => {\n            r.worldMgr.entityMgr.raiders.push(r)\n            const positionComponent = r.worldMgr.ecs.getComponents(r.entity).get(PositionComponent)\n            EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_RAIDER_DISCOVERED, positionComponent))\n            this.worldMgr.ecs.addComponent(r.entity, new MapMarkerComponent(MAP_MARKER_TYPE.default))\n            EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.default, r.entity, MAP_MARKER_CHANGE.update, positionComponent.position))\n        })\n        if (numRaidersUndiscovered !== this.raidersUndiscovered.length) EventBroker.publish(new RaidersAmountChangedEvent(this))\n        this.buildingsUndiscovered = EntityManager.removeInRect(this.buildingsUndiscovered, minX, maxX, minZ, maxZ, (b) => {\n            b.updateEnergyState()\n            b.worldMgr.entityMgr.buildings.push(b)\n            EventBroker.publish(new BuildingsChangedEvent(b.worldMgr.entityMgr))\n        })\n        this.materialsUndiscovered = EntityManager.removeInRect(this.materialsUndiscovered, minX, maxX, minZ, maxZ, (m) => {\n            m.worldMgr.entityMgr.materials.push(m)\n            m.setupCarryJob()\n            const positionComponent = m.worldMgr.ecs.getComponents(m.entity).get(PositionComponent)\n            m.worldMgr.ecs.addComponent(m.entity, new MapMarkerComponent(MAP_MARKER_TYPE.material))\n            EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.material, m.entity, MAP_MARKER_CHANGE.update, positionComponent.position))\n        })\n        this.vehiclesUndiscovered = EntityManager.removeInRect(this.vehiclesUndiscovered, minX, maxX, minZ, maxZ, (v) => {\n            v.worldMgr.entityMgr.vehicles.push(v)\n            const driver = v.driver\n            if (driver) {\n                driver.worldMgr.entityMgr.raidersUndiscovered.remove(driver)\n                driver.sceneEntity.visible = true\n                driver.worldMgr.entityMgr.raiders.push(driver)\n                const positionComponent = driver.worldMgr.ecs.getComponents(driver.entity).get(PositionComponent)\n                EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_RAIDER_DISCOVERED, positionComponent))\n                this.worldMgr.ecs.addComponent(driver.entity, new MapMarkerComponent(MAP_MARKER_TYPE.default))\n                EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.default, driver.entity, MAP_MARKER_CHANGE.update, positionComponent.position))\n            }\n            const positionComponent = v.worldMgr.ecs.getComponents(v.entity).get(PositionComponent)\n            this.worldMgr.ecs.addComponent(v.entity, new MapMarkerComponent(MAP_MARKER_TYPE.default))\n            EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.default, v.entity, MAP_MARKER_CHANGE.update, positionComponent.position))\n        })\n        this.undiscoveredSpiders = this.removeInRectNew(this.undiscoveredSpiders, minX, maxX, minZ, maxZ, (m) => {\n            this.spiders.push(m)\n        })\n        this.undiscoveredBats = this.removeInRectNew(this.undiscoveredBats, minX, maxX, minZ, maxZ, (m) => {\n            this.bats.push(m)\n            this.addMapMarker(m)\n        })\n        this.undiscoveredRockMonsters = this.removeInRectNew(this.undiscoveredRockMonsters, minX, maxX, minZ, maxZ, (m) => {\n            this.rockMonsters.push(m)\n            this.addMapMarker(m)\n        })\n    }\n\n    private static removeInRect<T extends Raider | BuildingEntity | MaterialEntity | VehicleEntity>(listing: T[], minX: number, maxX: number, minZ: number, maxZ: number, onRemove: (e: T) => void) {\n        return listing.filter((e) => {\n            const pos = e.getPosition2D()\n            const discovered = pos.x >= minX && pos.x < maxX && pos.y >= minZ && pos.y < maxZ\n            if (discovered) {\n                e.sceneEntity.visible = true\n                onRemove(e)\n            }\n            return !discovered\n        })\n    }\n\n    private removeInRectNew(listing: GameEntity[], minX: number, maxX: number, minZ: number, maxZ: number, onRemove: (e: GameEntity) => void) {\n        return listing.filter((e) => {\n            const pos = this.worldMgr.ecs.getComponents(e).get(PositionComponent).position\n            const discovered = pos.x >= minX && pos.x < maxX && pos.z >= minZ && pos.z < maxZ\n            if (discovered) {\n                this.worldMgr.ecs.getComponents(e).get(AnimatedSceneEntityComponent).sceneEntity.visible = true\n                onRemove(e)\n            }\n            return !discovered\n        })\n    }\n\n    placeMaterial(item: MaterialEntity, worldPosition: Vector2) {\n        item.sceneEntity.addToScene(item.worldMgr.sceneMgr, worldPosition, undefined)\n        if (item.sceneEntity.visible) {\n            this.materials.push(item) // TODO use game entities within entity manager\n            item.setupCarryJob()\n        } else {\n            this.materialsUndiscovered.push(item) // TODO use game entities within entity manager\n        }\n        return item\n    }\n\n    hasMaxRaiders(): boolean {\n        return this.raiders.length >= MAX_RAIDER_BASE + this.buildings.count((b) => b.isPowered() && b.entityType === EntityType.BARRACKS) * ADDITIONAL_RAIDER_PER_SUPPORT\n    }\n\n    hasProfessional(training: RaiderTraining) {\n        return this.raiders.some((r) => r.hasTraining(training))\n    }\n\n    addEntity(entity: GameEntity, entityType: EntityType) {\n        const discovered = this.worldMgr.ecs.getComponents(entity).get(PositionComponent)?.isDiscovered()\n        switch (entityType) {\n            case EntityType.BAT:\n                if (discovered) {\n                    this.bats.add(entity)\n                    this.addMapMarker(entity)\n                } else {\n                    this.undiscoveredBats.add(entity)\n                }\n                break\n            case EntityType.SMALL_SPIDER:\n                if (discovered) this.spiders.add(entity)\n                else this.undiscoveredSpiders.add(entity)\n                break\n            case EntityType.SLUG:\n                if (!discovered) console.warn('Slugs should not spawn on undiscovered surfaces!')\n                this.slugs.add(entity)\n                this.addMapMarker(entity)\n                break\n            case EntityType.ROCK_MONSTER:\n            case EntityType.ICE_MONSTER:\n            case EntityType.LAVA_MONSTER:\n                if (discovered) {\n                    this.rockMonsters.add(entity)\n                    this.addMapMarker(entity)\n                } else {\n                    this.undiscoveredRockMonsters.add(entity)\n                }\n                break\n            case EntityType.ORE:\n            case EntityType.CRYSTAL:\n            case EntityType.BRICK:\n            case EntityType.BARRIER:\n            case EntityType.DYNAMITE:\n            case EntityType.ELECTRIC_FENCE:\n                // if (discovered) this.materials.add(entity) // TODO use game entities within entity manager\n                // else this.materialsUndiscovered.add(entity) // TODO use game entities within entity manager\n                break\n            case EntityType.BIRD_SCARER:\n                this.birdScarer.add(entity)\n                break\n        }\n    }\n\n    private addMapMarker(entity: number) {\n        const positionComponent = this.worldMgr.ecs.getComponents(entity).get(PositionComponent)\n        this.worldMgr.ecs.addComponent(entity, new MapMarkerComponent(MAP_MARKER_TYPE.monster))\n        EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.monster, entity, MAP_MARKER_CHANGE.update, positionComponent.position))\n    }\n\n    removeEntity(entity: GameEntity) {\n        const healthComponent = this.worldMgr.ecs.getComponents(entity).get(HealthComponent)\n        const healthBarSprite = healthComponent?.healthBarSprite\n        if (healthBarSprite) {\n            healthBarSprite.visible = false\n            this.worldMgr.sceneMgr.removeSprite(healthBarSprite)\n        }\n        const healthFontSprite = healthComponent?.healthFontSprite\n        if (healthFontSprite) {\n            healthFontSprite.visible = false\n            this.worldMgr.sceneMgr.removeSprite(healthFontSprite)\n        }\n        this.buildings.removeAll((e) => e.entity === entity)\n        this.buildingsUndiscovered.removeAll((e) => e.entity === entity)\n        this.raiders.removeAll((e) => e.entity === entity)\n        this.raidersUndiscovered.removeAll((e) => e.entity === entity)\n        this.raidersInBeam.removeAll((e) => e.entity === entity)\n        this.materials.removeAll((e) => e.entity === entity)\n        this.materialsUndiscovered.removeAll((e) => e.entity === entity)\n        this.placedFences.removeAll((e) => e.entity === entity)\n        this.spiders.remove(entity)\n        this.undiscoveredSpiders.remove(entity)\n        this.bats.remove(entity)\n        this.undiscoveredBats.remove(entity)\n        this.rockMonsters.remove(entity)\n        this.undiscoveredRockMonsters.remove(entity)\n        this.slugs.remove(entity)\n        this.vehicles.removeAll((e) => e.entity === entity)\n        this.vehiclesUndiscovered.removeAll((e) => e.entity === entity)\n        this.vehiclesInBeam.removeAll((e) => e.entity === entity)\n        this.recordedEntities.remove(entity)\n        this.birdScarer.remove(entity)\n    }\n\n    findVehicleInRange(position2d: Vector2, rangeSq: number): VehicleTarget | undefined {\n        let result: VehicleTarget | undefined\n        this.worldMgr.entityMgr.vehicles.some((v) => {\n            const vPos = this.worldMgr.ecs.getComponents(v.entity).get(PositionComponent)\n            if (vPos.getPosition2D().distanceToSquared(position2d) < rangeSq) {\n                result = {entity: v.entity, position: vPos}\n                return true\n            }\n            return false\n        })\n        return result\n    }\n\n    addRaiderToTeam(raider: Raider, isTeamMember: boolean): SaveGameRaider {\n        let unassigned = isTeamMember ? GameState.unassignedTeam.shift() : undefined\n        if (!unassigned) {\n            unassigned = new SaveGameRaider('', 0, [])\n            SaveGameManager.currentTeam.push(unassigned)\n        }\n        GameState.raiderSaveGameMap.set(raider.entity, unassigned)\n        raider.level = unassigned.level || 0\n        ;(unassigned.trainings ?? []).map((t) => {\n            switch (t.toLowerCase()) {\n                case 'TrainDriver'.toLowerCase():\n                    raider.addTraining(RAIDER_TRAINING.driver)\n                    break\n                case 'TrainRepair'.toLowerCase():\n                    raider.addTraining(RAIDER_TRAINING.engineer)\n                    break\n                case 'TrainScanner'.toLowerCase():\n                    raider.addTraining(RAIDER_TRAINING.geologist)\n                    break\n                case 'TrainPilot'.toLowerCase():\n                    raider.addTraining(RAIDER_TRAINING.pilot)\n                    break\n                case 'TrainSailor'.toLowerCase():\n                    raider.addTraining(RAIDER_TRAINING.sailor)\n                    break\n                case 'TrainDynamite'.toLowerCase():\n                    raider.addTraining(RAIDER_TRAINING.demolition)\n                    break\n                default:\n                    console.warn(`Unexpected raider training \"${t}\" given`)\n                    break\n            }\n        })\n        return unassigned\n    }\n}\n","import { PathTarget } from '../PathTarget'\nimport { VehicleEntity } from '../vehicle/VehicleEntity'\nimport { JOB_STATE } from './JobState'\nimport { PRIORITY_IDENTIFIER } from './PriorityIdentifier'\nimport { RaiderJob } from './raider/RaiderJob'\nimport { BubblesCfg } from '../../../cfg/BubblesCfg'\nimport { JobFulfiller } from './Job'\nimport { EntityType } from '../EntityType'\n\nexport class ManVehicleJob extends RaiderJob {\n    vehicle: VehicleEntity\n    workplaces: PathTarget[]\n\n    constructor(vehicle: VehicleEntity) {\n        super()\n        this.requiredTraining = vehicle.getRequiredTraining()\n        this.priorityIdentifier = PRIORITY_IDENTIFIER.getIn\n        this.vehicle = vehicle\n        this.vehicle.callManJob = this\n        const surface = this.vehicle.getSurface()\n        const walkableSurface = [surface, ...surface.neighbors].find((s) => s.isWalkable() || s.building?.entityType === EntityType.DOCKS) ?? surface\n        if (walkableSurface.building?.entityType === EntityType.DOCKS) {\n            this.workplaces = walkableSurface.building.getTrainingTargets()\n        } else {\n            const hopOnSpot = walkableSurface.getRandomPosition()\n            const getInRadius = this.vehicle.stats.pickSphere / 2\n            this.workplaces = [PathTarget.fromLocation(hopOnSpot, getInRadius * getInRadius)]\n        }\n    }\n\n    getWorkplace(entity: JobFulfiller): PathTarget | undefined {\n        if (this.vehicle.isInBeam()) {\n            this.jobState = JOB_STATE.canceled\n            return undefined\n        } else if (this.vehicle.driver) {\n            this.jobState = JOB_STATE.complete\n            return undefined\n        }\n        return entity.findShortestPath(this.workplaces)?.target\n    }\n\n    onJobComplete(fulfiller: JobFulfiller): void {\n        this.vehicle.callManJob = undefined\n        super.onJobComplete(fulfiller)\n        if (!this.raider) return\n        this.vehicle.addDriver(this.raider)\n        this.vehicle.unblockBuildingPowerPath()\n    }\n\n    getJobBubble(): keyof BubblesCfg {\n        return 'bubbleDrive'\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { Object3D, Sprite, SpriteMaterial } from 'three'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { GameState } from '../model/GameState'\nimport { BubblesCfg } from '../../cfg/BubblesCfg'\nimport { Updatable } from '../model/Updateable'\nimport { GameConfig } from '../../cfg/GameConfig'\n\nexport class RaiderInfoComponent extends AbstractGameComponent {\n    readonly bubbleSprite: BubbleSprite\n    readonly hungerSprite: Sprite\n\n    constructor(parent: Object3D) {\n        super()\n        this.bubbleSprite = new BubbleSprite()\n        this.setBubbleTexture('bubbleIdle')\n        parent.add(this.bubbleSprite)\n        this.hungerSprite = new Sprite(new SpriteMaterial({depthTest: false}))\n        this.setHungerIndicator(1)\n        this.hungerSprite.center.set(0, 0.75)\n        this.hungerSprite.position.y = 16 - GameConfig.instance.objInfo.hungerImagesPosition.y / 4\n        this.hungerSprite.scale.setScalar(4)\n        parent.add(this.hungerSprite)\n        this.hungerSprite.visible = GameState.showObjInfo && GameState.isBirdView\n    }\n\n    setBubbleTexture(textureName: keyof BubblesCfg | undefined) {\n        if (!textureName) return\n        const textureFilepath = GameConfig.instance.bubbles[textureName] as string\n        this.bubbleSprite.material.map = textureFilepath ? ResourceManager.getTexture(textureFilepath) ?? null : null\n        if (textureName !== 'bubbleIdle') this.bubbleSprite.showDelayMs = 1000\n    }\n\n    setHungerIndicator(hungerLevel: number) {\n        this.hungerSprite.material.map = ResourceManager.getTexture(this.getHungerTextureName(hungerLevel)) ?? null\n    }\n\n    private getHungerTextureName(hungerLevel: number) {\n        if (hungerLevel >= 0.8) return GameConfig.instance.objInfo.hungerImages.hungerImage4\n        else if (hungerLevel >= 0.6) return GameConfig.instance.objInfo.hungerImages.hungerImage3\n        else if (hungerLevel >= 0.4) return GameConfig.instance.objInfo.hungerImages.hungerImage2\n        else if (hungerLevel >= 0.2) return GameConfig.instance.objInfo.hungerImages.hungerImage1\n        else return GameConfig.instance.objInfo.hungerImages.hungerImage0\n    }\n}\n\nclass BubbleSprite extends Sprite implements Updatable {\n    showDelayMs: number = 0\n\n    constructor() {\n        super(new SpriteMaterial({depthTest: false}))\n        this.center.set(1, 0.5)\n        this.position.y = 19 - GameConfig.instance.objInfo.bubbleImagesPosition.y / 9\n        this.scale.set(9, 9, 0)\n        this.updateVisibleState()\n    }\n\n    update(elapsedMs: number) {\n        if (this.showDelayMs > 0) {\n            this.showDelayMs -= elapsedMs\n        }\n        this.updateVisibleState()\n    }\n\n    updateVisibleState() {\n        this.visible = (GameState.showObjInfo || this.showDelayMs > 0) && GameState.isBirdView\n    }\n}\n","import { AnimationActivity, RAIDER_ACTIVITY } from '../../anim/AnimationActivity'\nimport { PathTarget } from '../../PathTarget'\nimport { RaiderJob } from './RaiderJob'\nimport { BubblesCfg } from '../../../../cfg/BubblesCfg'\nimport { JobFulfiller } from '../Job'\nimport { RaiderInfoComponent } from '../../../component/RaiderInfoComponent'\n\nexport class EatJob extends RaiderJob {\n    target?: PathTarget\n\n    getWorkplace(entity: JobFulfiller): PathTarget | undefined {\n        if (!this.target && this.raider) this.target = PathTarget.fromLocation(this.raider.getPosition2D())\n        return this.target\n    }\n\n    onJobComplete(fulfiller: JobFulfiller): void {\n        super.onJobComplete(fulfiller)\n        if (!this.raider) return\n        this.raider.foodLevel = 1\n        this.raider.worldMgr.ecs.getComponents(this.raider.entity).get(RaiderInfoComponent).setHungerIndicator(this.raider.foodLevel)\n    }\n\n    getWorkActivity(): AnimationActivity {\n        return RAIDER_ACTIVITY.eat\n    }\n\n    getJobBubble(): keyof BubblesCfg {\n        return 'bubbleEat'\n    }\n}\n","import { RaiderTrainingCompleteEvent } from '../../../../event/LocalEvents'\nimport { EntityManager } from '../../../EntityManager'\nimport { AnimationActivity, RAIDER_ACTIVITY } from '../../anim/AnimationActivity'\nimport { BuildingEntity } from '../../building/BuildingEntity'\nimport { PathTarget } from '../../PathTarget'\nimport { RaiderTraining, RaiderTrainings } from '../../raider/RaiderTraining'\nimport { RaiderJob } from './RaiderJob'\nimport { BubblesCfg } from '../../../../cfg/BubblesCfg'\nimport { JobFulfiller } from '../Job'\nimport { EventBroker } from '../../../../event/EventBroker'\nimport { MoveJob } from '../MoveJob'\nimport { SurfaceType } from '../../../terrain/SurfaceType'\nimport { DEV_MODE } from '../../../../params'\n\nexport class TrainRaiderJob extends RaiderJob {\n    building?: BuildingEntity\n    workplaces: PathTarget[]\n\n    constructor(readonly entityMgr: EntityManager, readonly training: RaiderTraining, building?: BuildingEntity | undefined) {\n        super()\n        this.building = building\n        this.workplaces = this.building?.getTrainingTargets() || []\n    }\n\n    getWorkplace(entity: JobFulfiller): PathTarget | undefined {\n        if (!this.building?.isPowered()) this.workplaces = this.entityMgr.getTrainingSiteTargets(this.training)\n        const target = entity.findShortestPath(this.workplaces)?.target\n        this.building = target?.building\n        return target\n    }\n\n    onJobComplete(fulfiller: JobFulfiller): void {\n        super.onJobComplete(fulfiller)\n        if (!this.raider) return\n        this.raider.addTraining(this.training)\n        this.raider.teamMember.trainings.add(RaiderTrainings.toStatsProperty(this.training))\n        EventBroker.publish(new RaiderTrainingCompleteEvent(this.training))\n        if (!this.raider.followUpJob && this.building) {\n            const pathSurface = this.building.primaryPathSurface?.neighbors.find((n) => n.surfaceType === SurfaceType.POWER_PATH)\n            if (pathSurface) {\n                this.raider.followUpJob = new MoveJob(pathSurface.getRandomPosition())\n            } else {\n                const walkableSurface = this.building.primaryPathSurface?.neighbors.find((n) => n.isWalkable())\n                if (walkableSurface) this.raider.followUpJob = new MoveJob(walkableSurface.getRandomPosition())\n            }\n        }\n    }\n\n    getWorkActivity(): AnimationActivity {\n        return RAIDER_ACTIVITY.train\n    }\n\n    getExpectedTimeLeft(): number {\n        return DEV_MODE ? 2000 : 10000 // XXX balance training time\n    }\n\n    getJobBubble(): keyof BubblesCfg {\n        return 'bubbleTrain'\n    }\n}\n","import { AnimationActivity, RAIDER_ACTIVITY } from '../../anim/AnimationActivity'\nimport { BuildingEntity } from '../../building/BuildingEntity'\nimport { PathTarget } from '../../PathTarget'\nimport { RaiderJob } from './RaiderJob'\nimport { JobFulfiller } from '../Job'\nimport { BubblesCfg } from '../../../../cfg/BubblesCfg'\nimport { HealthComponent } from '../../../component/HealthComponent'\nimport { GameConfig } from '../../../../cfg/GameConfig'\nimport { DEV_MODE } from '../../../../params'\nimport { SurfaceType } from '../../../terrain/SurfaceType'\nimport { MoveJob } from '../MoveJob'\n\nexport class UpgradeRaiderJob extends RaiderJob {\n    building: BuildingEntity\n    workplaces: PathTarget[]\n\n    constructor(building: BuildingEntity) {\n        super()\n        this.building = building\n        this.workplaces = building.getTrainingTargets()\n    }\n\n    getWorkplace(entity: JobFulfiller): PathTarget | undefined {\n        if (!this.building.isPowered()) return undefined\n        return entity.findShortestPath(this.workplaces)?.target\n    }\n\n    onJobComplete(fulfiller: JobFulfiller): void {\n        super.onJobComplete(fulfiller)\n        if (!this.raider) return\n        if (this.raider.level < this.raider.stats.maxLevel) {\n            this.raider.level++\n            this.raider.worldMgr.ecs.getComponents(this.raider.entity).get(HealthComponent).rockFallDamage = GameConfig.instance.getRockFallDamage(this.raider.entityType, this.raider.level)\n            this.raider.teamMember.level = this.raider.level\n            if (!this.raider.followUpJob && this.building) {\n                const pathSurface = this.building.primaryPathSurface?.neighbors.find((n) => n.surfaceType === SurfaceType.POWER_PATH)\n                if (pathSurface) {\n                    this.raider.followUpJob = new MoveJob(pathSurface.getRandomPosition())\n                } else {\n                    const walkableSurface = this.building.primaryPathSurface?.neighbors.find((n) => n.isWalkable())\n                    if (walkableSurface) this.raider.followUpJob = new MoveJob(walkableSurface.getRandomPosition())\n                }\n            }\n        }\n    }\n\n    getWorkActivity(): AnimationActivity {\n        return RAIDER_ACTIVITY.train\n    }\n\n    getExpectedTimeLeft(): number {\n        return DEV_MODE ? 2000 : 30000 // XXX balance upgrade time\n    }\n\n    getJobBubble(): keyof BubblesCfg {\n        return 'bubbleUpgrade'\n    }\n}\n","import { Sprite, SpriteMaterial } from 'three'\nimport { Updatable } from '../game/model/Updateable'\nimport { ResourceManager } from '../resource/ResourceManager'\nimport { GameState } from '../game/model/GameState'\n\nexport class BubbleSprite extends Sprite implements Updatable {\n    enabled: boolean = false\n    blinkDelay: number = 0\n\n    constructor(bubbleTextureName: string) {\n        super(BubbleSprite.createBubbleSpriteMaterial(bubbleTextureName))\n        this.scale.setScalar(8)\n        this.position.set(0, 25, 0)\n    }\n\n    private static createBubbleSpriteMaterial(bubbleTextureName: string) {\n        const texture = ResourceManager.getTexture(bubbleTextureName)\n        return new SpriteMaterial({map: texture, depthTest: false})\n    }\n\n    update(elapsedMs: number) {\n        this.blinkDelay = (this.blinkDelay + elapsedMs) % 1000\n        this.visible = this.enabled && this.blinkDelay < 500 && GameState.isBirdView\n    }\n\n    setEnabled(enabled: boolean) {\n        if (this.enabled === enabled) return\n        this.enabled = enabled\n        this.blinkDelay = 0\n    }\n}\n","import { Vector2 } from 'three'\nimport { BuildingEntityStats } from '../../../cfg/GameStatsCfg'\nimport { EntityType } from '../EntityType'\nimport { GameConfig } from '../../../cfg/GameConfig'\n\nexport class BuildingType {\n    secondaryBuildingPart?: Vector2\n    primaryPowerPath?: Vector2 = new Vector2(0, 1)\n    secondaryPowerPath?: Vector2\n    waterPathSurface?: Vector2\n    teleportedEntityTypes: EntityType[] = []\n\n    constructor(\n        readonly entityType: EntityType,\n        readonly stats: BuildingEntityStats,\n        readonly aeFilename: string\n    ) {\n    }\n\n    static from(entityType: EntityType): BuildingType {\n        switch (entityType) {\n            case EntityType.TOOLSTATION:\n                return new BuildingType(entityType, GameConfig.instance.stats.toolStation, 'Buildings/Toolstation')\n                    .addTeleport(EntityType.PILOT)\n            case EntityType.TELEPORT_PAD:\n                return new BuildingType(entityType, GameConfig.instance.stats.teleportPad, 'Buildings/Teleports')\n                    .addTeleport(EntityType.PILOT, EntityType.HOVERBOARD, EntityType.SMALL_DIGGER, EntityType.SMALL_TRUCK, EntityType.SMALL_MLP, EntityType.SMALL_HELI)\n            case EntityType.DOCKS:\n                return new BuildingType(entityType, GameConfig.instance.stats.docks, 'Buildings/Docks')\n                    .setPrimaryPowerPath(0, -1).setWaterPathSurface(0, 1).addTeleport(EntityType.SMALL_CAT, EntityType.LARGE_CAT)\n            case EntityType.POWER_STATION:\n                return new BuildingType(entityType, GameConfig.instance.stats.powerStation, 'Buildings/Powerstation')\n                    .setSecondaryBuildingPart(-1, 0)\n            case EntityType.BARRACKS:\n                return new BuildingType(entityType, GameConfig.instance.stats.barracks, 'Buildings/Barracks')\n            case EntityType.UPGRADE:\n                return new BuildingType(entityType, GameConfig.instance.stats.upgrade, 'Buildings/Upgrade')\n            case EntityType.GEODOME:\n                return new BuildingType(entityType, GameConfig.instance.stats.geoDome, 'Buildings/Geo-dome')\n                    .removePrimaryPowerPath().setSecondaryBuildingPart(0, 1)\n            case EntityType.ORE_REFINERY:\n                return new BuildingType(entityType, GameConfig.instance.stats.oreRefinery, 'Buildings/OreRefinery')\n                    .setPrimaryPowerPath(0, 2).setSecondaryBuildingPart(0, 1)\n            case EntityType.GUNSTATION:\n                return new BuildingType(entityType, GameConfig.instance.stats.gunStation, 'Buildings/gunstation')\n                    .removePrimaryPowerPath()\n            case EntityType.TELEPORT_BIG:\n                return new BuildingType(entityType, GameConfig.instance.stats.teleportBig, 'Buildings/BIGTeleport')\n                    .setSecondaryBuildingPart(0, 1).setPrimaryPowerPath(-1, 0).setSecondaryPowerPath(-1, 1)\n                    .addTeleport(EntityType.BULLDOZER, EntityType.WALKER_DIGGER, EntityType.LARGE_MLP, EntityType.LARGE_DIGGER)\n            default:\n                throw new Error(`EntityType (${entityType}) is not a BuildingType`)\n        }\n    }\n\n    setPrimaryPowerPath(x: number, y: number): this {\n        this.primaryPowerPath?.set(x, y)\n        return this\n    }\n\n    setSecondaryPowerPath(x: number, y: number): this {\n        this.secondaryPowerPath = new Vector2(x, y)\n        return this\n    }\n\n    setWaterPathSurface(x: number, y: number): this {\n        this.waterPathSurface = new Vector2(x, y)\n        return this\n    }\n\n    setSecondaryBuildingPart(x: number, y: number): this {\n        this.secondaryBuildingPart = new Vector2(x, y)\n        return this\n    }\n\n    removePrimaryPowerPath(): this {\n        this.primaryPowerPath = undefined\n        return this\n    }\n\n    addTeleport(...teleportedEntityTypes: EntityType[]): this {\n        this.teleportedEntityTypes = teleportedEntityTypes\n        return this\n    }\n\n    getObjectName(level: number): string {\n        let objectName = GameConfig.instance.objectNames[this.entityType.toLowerCase()] || ''\n        const upgradeName = GameConfig.instance.upgradeNames[level - 1]\n        if (upgradeName) objectName += ` (${upgradeName})`\n        return objectName\n    }\n\n    getSfxKey(): string {\n        return GameConfig.instance.objTtSFXs[this.entityType.toLowerCase()] || ''\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\n\nexport class OxygenComponent extends AbstractGameComponent {\n    constructor(readonly oxygenCoefficient: number) {\n        super()\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { TILESIZE } from '../../params'\n\nexport class ScannerComponent extends AbstractGameComponent {\n    range: number = 0\n    rangeSQ: number = 0\n    scanDelay: number = 0\n\n    constructor(range: number) {\n        super()\n        this.setRange(range)\n    }\n\n    setRange(range: number) {\n        if (this.range === range) return\n        this.range = range\n        this.rangeSQ = Math.pow(this.range * TILESIZE, 2) + 1\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { EntityType } from '../model/EntityType'\nimport { Surface } from '../terrain/Surface'\n\nexport class TeleportComponent extends AbstractGameComponent {\n    operating: boolean = false\n\n    constructor(\n        readonly teleportedEntityTypes: EntityType[],\n        readonly pathSurfaces: Surface[],\n        readonly heading: number,\n        readonly primaryPathSurface: Surface,\n        readonly waterPathSurface: Surface | undefined,\n    ) {\n        super()\n    }\n\n    canTeleportIn(entityType: EntityType): boolean {\n        return !this.operating && this.teleportedEntityTypes.includes(entityType) &&\n            (entityType === EntityType.PILOT || !this.pathSurfaces.some((s) => s.isBlockedByVehicle()))\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { WeaponTypeCfg } from '../../cfg/WeaponTypeCfg'\n\nexport class LaserBeamTurretComponent extends AbstractGameComponent {\n    fireDelay: number = 0\n\n    constructor(readonly weaponCfg: WeaponTypeCfg) {\n        super()\n    }\n}\n","import { Vector2, Vector3 } from 'three'\nimport { SoundManager } from '../../../audio/SoundManager'\nimport { BuildingEntityStats } from '../../../cfg/GameStatsCfg'\nimport { BuildingsChangedEvent, DeselectAll, SelectionChanged, UpdateRadarEntityEvent } from '../../../event/LocalEvents'\nimport { MaterialAmountChanged, UsedCrystalsChanged } from '../../../event/WorldEvents'\nimport { TILESIZE } from '../../../params'\nimport { ResourceManager } from '../../../resource/ResourceManager'\nimport { BubbleSprite } from '../../../scene/BubbleSprite'\nimport { WorldManager } from '../../WorldManager'\nimport { BUILDING_ACTIVITY } from '../anim/AnimationActivity'\nimport { EntityType } from '../EntityType'\nimport { GameState } from '../GameState'\nimport { Surface } from '../../terrain/Surface'\nimport { PathTarget } from '../PathTarget'\nimport { RaiderTraining, RaiderTrainings } from '../raider/RaiderTraining'\nimport { BuildingSite } from './BuildingSite'\nimport { BuildingType } from './BuildingType'\nimport { GameEntity } from '../../ECS'\nimport { HealthComponent } from '../../component/HealthComponent'\nimport { MaterialEntity } from '../material/MaterialEntity'\nimport { BeamUpComponent } from '../../component/BeamUpComponent'\nimport { SceneSelectionComponent } from '../../component/SceneSelectionComponent'\nimport { SelectionFrameComponent } from '../../component/SelectionFrameComponent'\nimport { MaterialSpawner } from '../../factory/MaterialSpawner'\nimport { AnimatedSceneEntity } from '../../../scene/AnimatedSceneEntity'\nimport { OxygenComponent } from '../../component/OxygenComponent'\nimport { PositionComponent } from '../../component/PositionComponent'\nimport { LastWillComponent } from '../../component/LastWillComponent'\nimport { ScannerComponent } from '../../component/ScannerComponent'\nimport { MAP_MARKER_CHANGE, MAP_MARKER_TYPE } from '../../component/MapMarkerComponent'\nimport { GameConfig } from '../../../cfg/GameConfig'\nimport { EventBroker } from '../../../event/EventBroker'\nimport { TooltipComponent } from '../../component/TooltipComponent'\nimport { TooltipSpriteBuilder } from '../../../resource/TooltipSpriteBuilder'\nimport { TeleportComponent } from '../../component/TeleportComponent'\nimport { LaserBeamTurretComponent } from '../../component/LaserBeamTurretComponent'\nimport { AnimatedSceneEntityComponent } from '../../component/AnimatedSceneEntityComponent'\nimport { SurfaceType } from '../../terrain/SurfaceType'\nimport { SaveGameManager } from '../../../resource/SaveGameManager'\n\nexport class BuildingEntity {\n    readonly carriedItems: MaterialEntity[] = []\n    readonly entity: GameEntity\n    buildingType: BuildingType\n    sceneEntity: AnimatedSceneEntity\n    powerOffSprite: BubbleSprite\n    level: number = 0\n    powerSwitch: boolean = true\n    primarySurface: Surface\n    secondarySurface?: Surface\n    primaryPathSurface?: Surface\n    secondaryPathSurface?: Surface\n    waterPathSurface?: Surface\n    energized: boolean = false\n    getToolPathTarget?: PathTarget\n    carryPathTarget?: PathTarget\n    engineSoundId?: number\n    surfaces: Surface[] = []\n    pathSurfaces: Surface[] = []\n\n    constructor(readonly worldMgr: WorldManager, readonly entityType: EntityType, worldPosition: Vector2, radHeading: number, disableTeleportIn: boolean) {\n        this.entity = this.worldMgr.ecs.addEntity()\n        this.buildingType = BuildingType.from(this.entityType)\n        this.sceneEntity = new AnimatedSceneEntity()\n        this.sceneEntity.addAnimated(ResourceManager.getAnimatedData(this.buildingType.aeFilename))\n        this.worldMgr.ecs.addComponent(this.entity, new AnimatedSceneEntityComponent(this.sceneEntity))\n        this.powerOffSprite = new BubbleSprite(GameConfig.instance.bubbles.bubblePowerOff)\n        this.powerOffSprite.visible = this.isPowered()\n        this.sceneEntity.add(this.powerOffSprite)\n        this.worldMgr.sceneMgr.addSprite(this.powerOffSprite)\n        const healthComponent = this.worldMgr.ecs.addComponent(this.entity, new HealthComponent(this.stats.damageCausesCallToArms, 24, 14, this.sceneEntity, false, GameConfig.instance.getRockFallDamage(entityType, this.level)))\n        this.worldMgr.sceneMgr.addSprite(healthComponent.healthBarSprite)\n        this.worldMgr.sceneMgr.addSprite(healthComponent.healthFontSprite)\n        this.worldMgr.entityMgr.addEntity(this.entity, this.entityType)\n        this.worldMgr.ecs.addComponent(this.entity, new LastWillComponent(() => {\n            this.worldMgr.entityMgr.removeEntity(this.entity)\n            this.primarySurface.pathBlockedByBuilding = false\n            if (this.secondarySurface) this.secondarySurface.pathBlockedByBuilding = false\n            this.setEnergized(false)\n            this.sceneEntity.setAnimation(BUILDING_ACTIVITY.explode, () => this.disposeFromWorld())\n            this.powerOffSprite.setEnabled(false)\n            this.surfaces.forEach((s) => s.setBuilding(undefined))\n            this.surfaces.forEach((s) => this.worldMgr.sceneMgr.terrain.pathFinder.updateSurface(s))\n            this.worldMgr.sceneMgr.terrain.pathFinder.resetGraphsAndCaches()\n            EventBroker.publish(new BuildingsChangedEvent(this.worldMgr.entityMgr))\n        }))\n        const objectName = this.buildingType.getObjectName(this.level)\n        if (objectName) this.worldMgr.ecs.addComponent(this.entity, new TooltipComponent(this.entity, objectName, this.buildingType.getSfxKey(), () => {\n            const objectName = this.buildingType.getObjectName(this.level)\n            return TooltipSpriteBuilder.getTooltipSprite(objectName, healthComponent.health)\n        }))\n        if (entityType === EntityType.GUNSTATION) {\n            const weaponCfg = GameConfig.instance.weaponTypes.bigLazer\n            this.worldMgr.ecs.addComponent(this.entity, new LaserBeamTurretComponent(weaponCfg))\n        }\n        this.primarySurface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld2D(worldPosition)\n        this.surfaces.push(this.primarySurface)\n        this.primarySurface.pathBlockedByBuilding = this.entityType !== EntityType.TOOLSTATION // XXX better evaluate EnterToolStore in stats while path finding\n        if (this.buildingType.secondaryBuildingPart) {\n            const secondaryOffset = new Vector2(TILESIZE * this.buildingType.secondaryBuildingPart.x, TILESIZE * this.buildingType.secondaryBuildingPart.y)\n                .rotateAround(new Vector2(0, 0), -radHeading).add(worldPosition)\n            this.secondarySurface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld2D(secondaryOffset)\n            this.surfaces.push(this.secondarySurface)\n            this.secondarySurface.pathBlockedByBuilding = this.entityType !== EntityType.TOOLSTATION // XXX better evaluate EnterToolStore in stats while path finding\n        }\n        if (this.buildingType.primaryPowerPath) {\n            const pathOffset = this.buildingType.primaryPowerPath.clone().multiplyScalar(TILESIZE)\n                .rotateAround(new Vector2(0, 0), -radHeading).add(worldPosition)\n            const surface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld2D(pathOffset)\n            if (surface.surfaceType.floor || surface.surfaceType === SurfaceType.HIDDEN_CAVERN) {\n                this.primaryPathSurface = surface\n                this.surfaces.push(this.primaryPathSurface)\n                this.pathSurfaces.push(this.primaryPathSurface)\n            }\n        }\n        if (this.buildingType.secondaryPowerPath) {\n            const pathOffset = this.buildingType.secondaryPowerPath.clone().multiplyScalar(TILESIZE)\n                .rotateAround(new Vector2(0, 0), -radHeading).add(worldPosition)\n            this.secondaryPathSurface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld2D(pathOffset)\n            this.surfaces.push(this.secondaryPathSurface)\n            this.pathSurfaces.push(this.secondaryPathSurface)\n        }\n        if (this.buildingType.waterPathSurface) {\n            const pathOffset = this.buildingType.waterPathSurface.clone().multiplyScalar(TILESIZE)\n                .rotateAround(new Vector2(0, 0), -radHeading).add(worldPosition)\n            this.waterPathSurface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld2D(pathOffset)\n            this.pathSurfaces.push(this.waterPathSurface)\n        }\n        this.surfaces.forEach((s) => s.setBuilding(this))\n        const sceneSelectionComponent = this.worldMgr.ecs.addComponent(this.entity, new SceneSelectionComponent(this.sceneEntity, {\n            gameEntity: this.entity,\n            entityType: this.entityType\n        }, this.stats))\n        const floorPosition = this.worldMgr.sceneMgr.getFloorPosition(worldPosition)\n        floorPosition.y = Math.max(...this.surfaces.map((s) => this.worldMgr.sceneMgr.getFloorPosition(s.getCenterWorld2D()).y))\n        const positionComponent = this.worldMgr.ecs.addComponent(this.entity, new PositionComponent(floorPosition, this.primarySurface))\n        this.sceneEntity.position.copy(floorPosition)\n        this.sceneEntity.position.y += positionComponent.floorOffset\n        this.sceneEntity.rotation.y = radHeading\n        this.sceneEntity.visible = this.surfaces.some((s) => s.discovered)\n        this.worldMgr.sceneMgr.addSceneEntity(this.sceneEntity)\n        if (this.sceneEntity.visible) {\n            this.worldMgr.entityMgr.buildings.push(this)\n        } else {\n            this.worldMgr.entityMgr.buildingsUndiscovered.push(this)\n        }\n        if (this.surfaces.some((s) => s.selected)) EventBroker.publish(new DeselectAll())\n        if (this.sceneEntity.visible && !disableTeleportIn) {\n            this.powerOffSprite.setEnabled(!this.inBeam && !this.isPowered())\n            this.sceneEntity.setAnimation(BUILDING_ACTIVITY.teleport, () => {\n                this.worldMgr.ecs.addComponent(this.entity, new SelectionFrameComponent(sceneSelectionComponent.pickSphere, this.stats))\n                this.powerOffSprite.setEnabled(!this.isPowered())\n                this.onPlaceDown()\n            })\n        } else {\n            this.worldMgr.ecs.addComponent(this.entity, new SelectionFrameComponent(sceneSelectionComponent.pickSphere, this.stats))\n            this.onPlaceDown()\n        }\n        this.surfaces.forEach((s) => this.worldMgr.sceneMgr.terrain.pathFinder.updateSurface(s))\n        this.worldMgr.sceneMgr.terrain.pathFinder.resetGraphsAndCaches()\n    }\n\n    get stats(): BuildingEntityStats {\n        return this.buildingType.stats\n    }\n\n    get inBeam(): boolean {\n        return !this.worldMgr.ecs.getComponents(this.entity).has(SelectionFrameComponent)\n    }\n\n    get selected(): boolean {\n        const selectionFrameComponent = this.worldMgr.ecs.getComponents(this.entity).get(SelectionFrameComponent)\n        return selectionFrameComponent?.isSelected()\n    }\n\n    isSelectable(): boolean {\n        return !this.selected && !this.inBeam\n    }\n\n    isInSelection(): boolean {\n        return this.isSelectable() || this.selected\n    }\n\n    select(): boolean {\n        if (!this.isSelectable()) return false\n        this.worldMgr.ecs.getComponents(this.entity).get(SelectionFrameComponent)?.select()\n        return true\n    }\n\n    doubleSelect(): boolean {\n        if (!this.selected || !this.isPowered()) return false\n        this.worldMgr.ecs.getComponents(this.entity).get(SelectionFrameComponent)?.doubleSelect()\n        return true\n    }\n\n    deselect() {\n        this.worldMgr.ecs.getComponents(this.entity).get(SelectionFrameComponent)?.deselect()\n    }\n\n    getDropPosition2D(): Vector2 {\n        const worldPos = this.getPosition()\n        if (this.sceneEntity.toolParent) {\n            this.sceneEntity.toolParent.getWorldPosition(worldPos)\n        } else if (this.sceneEntity.depositParent) {\n            this.sceneEntity.depositParent.getWorldPosition(worldPos)\n        }\n        return new Vector2(worldPos.x, worldPos.z)\n    }\n\n    isReady(): boolean {\n        return !this.inBeam && this.sceneEntity.visible\n    }\n\n    isPowered(): boolean {\n        return this.isReady() && this.powerSwitch && (this.stats.selfPowered || this.stats.powerBuilding || this.energized)\n    }\n\n    upgrade() {\n        if (!this.canUpgrade()) return\n        if (GameState.numBrick >= GameConfig.instance.main.buildingUpgradeCostStuds) {\n            GameState.numBrick -= GameConfig.instance.main.buildingUpgradeCostStuds\n        } else {\n            GameState.numOre -= GameConfig.instance.main.buildingUpgradeCostOre\n        }\n        EventBroker.publish(new MaterialAmountChanged())\n        this.level++\n        const components = this.worldMgr.ecs.getComponents(this.entity)\n        components.get(HealthComponent).rockFallDamage = GameConfig.instance.getRockFallDamage(this.entityType, this.level)\n        EventBroker.publish(new DeselectAll())\n        EventBroker.publish(new BuildingsChangedEvent(this.worldMgr.entityMgr))\n        this.worldMgr.sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.upgradeEffect, this.primarySurface.getCenterWorld(), this.sceneEntity.heading, false)\n        components.get(ScannerComponent)?.setRange(this.stats.surveyRadius?.[this.level] ?? 0)\n        this.sceneEntity.setUpgradeLevel(this.level.toString(2).padStart(4, '0'))\n    }\n\n    setLevel(level: number) {\n        if (this.level == level || level > this.stats.maxLevel) return\n        this.level = level\n        EventBroker.publish(new BuildingsChangedEvent(this.worldMgr.entityMgr))\n    }\n\n    beamUp() {\n        this.worldMgr.ecs.getComponents(this.entity).get(SelectionFrameComponent)?.deselect()\n        this.worldMgr.ecs.removeComponent(this.entity, SelectionFrameComponent)\n        this.primarySurface.pathBlockedByBuilding = false\n        if (this.secondarySurface) this.secondarySurface.pathBlockedByBuilding = false\n        this.setEnergized(false)\n        this.sceneEntity.setAnimation(BUILDING_ACTIVITY.stand)\n        this.powerOffSprite.setEnabled(false)\n        this.surfaces.forEach((s) => s.setBuilding(undefined))\n        this.surfaces.forEach((s) => this.worldMgr.sceneMgr.terrain.pathFinder.updateSurface(s))\n        this.worldMgr.sceneMgr.terrain.pathFinder.resetGraphsAndCaches()\n        this.worldMgr.ecs.removeComponent(this.entity, ScannerComponent)\n        EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.scanner, this.entity, MAP_MARKER_CHANGE.remove))\n        this.worldMgr.ecs.addComponent(this.entity, new BeamUpComponent(this))\n        EventBroker.publish(new BuildingsChangedEvent(this.worldMgr.entityMgr))\n    }\n\n    disposeFromWorld() {\n        this.worldMgr.sceneMgr.disposeSceneEntity(this.sceneEntity)\n        this.worldMgr.sceneMgr.removeSprite(this.powerOffSprite)\n        this.engineSoundId = SoundManager.stopAudio(this.engineSoundId)\n        this.worldMgr.entityMgr.removeEntity(this.entity)\n        this.worldMgr.ecs.removeEntity(this.entity)\n    }\n\n    canUpgrade() {\n        return !(this.level >= this.stats.maxLevel) && (GameState.numOre >= GameConfig.instance.main.buildingUpgradeCostOre || GameState.numBrick >= GameConfig.instance.main.buildingUpgradeCostStuds)\n    }\n\n    missingOreForUpgrade(): number {\n        return this.level >= this.stats.maxLevel ? 0 : Math.max(0, GameConfig.instance.main.buildingUpgradeCostOre - GameState.numOre)\n    }\n\n    spawnMaterials(type: EntityType, quantity: number) {\n        const material: MaterialEntity[] = [] // XXX actually this does not require a list\n        if (type === EntityType.CRYSTAL) {\n            while (GameState.numCrystal > 0 && material.length < quantity) {\n                GameState.numCrystal--\n                material.push(MaterialSpawner.spawnMaterial(this.worldMgr, type, this.getDropPosition2D()))\n            }\n        } else if (type === EntityType.ORE) {\n            while (GameState.numOre > 0 && material.length < quantity) {\n                GameState.numOre--\n                material.push(MaterialSpawner.spawnMaterial(this.worldMgr, type, this.getDropPosition2D()))\n            }\n        } else if (type === EntityType.BRICK) {\n            while (GameState.numBrick > 0 && material.length < quantity) {\n                GameState.numBrick--\n                material.push(MaterialSpawner.spawnMaterial(this.worldMgr, type, this.getDropPosition2D()))\n            }\n        } else {\n            console.error(`Material drop not implemented for: ${type}`)\n        }\n    }\n\n    spawnBarriers(barrierLocations: Vector2[], site: BuildingSite) {\n        barrierLocations.forEach((l) => {\n            MaterialSpawner.spawnMaterial(this.worldMgr, EntityType.BARRIER, this.getDropPosition2D(), undefined, undefined, l, site)\n        })\n    }\n\n    spawnFence(targetSurface: Surface) {\n        MaterialSpawner.spawnMaterial(this.worldMgr, EntityType.ELECTRIC_FENCE, this.getDropPosition2D(), undefined, targetSurface)\n    }\n\n    setPowerSwitch(state: boolean) {\n        this.powerSwitch = state\n        this.updateEnergyState()\n    }\n\n    updateEnergyState() {\n        if (this.isReady() && this.powerSwitch && (this.energized || (GameState.usedCrystals + this.crystalDrain <= GameState.numCrystal && GameState.numCrystal > 0)) && (this.stats.powerBuilding || this.surfaces.some((s) => s.energized))) {\n            this.setEnergized(true)\n        } else {\n            this.setEnergized(false)\n        }\n    }\n\n    setEnergized(energized: boolean) {\n        const stateChanged = this.energized !== energized\n        if (stateChanged) {\n            this.energized = energized\n            if (this.energized) {\n                this.changeUsedCrystals(this.crystalDrain)\n                if (this.stats.powerBuilding) this.worldMgr.powerGrid.addEnergySource(this.surfaces)\n                if (this.stats.engineSound && !this.engineSoundId && !SaveGameManager.preferences.muteDevSounds) this.engineSoundId = this.worldMgr.sceneMgr.addPositionalAudio(this.sceneEntity, this.stats.engineSound, true)\n                if (this.stats.oxygenCoef) this.worldMgr.ecs.addComponent(this.entity, new OxygenComponent(this.stats.oxygenCoef))\n                const components = this.worldMgr.ecs.getComponents(this.entity)\n                if (!components.has(ScannerComponent)) {\n                    const scannerRange = this.stats.surveyRadius?.[this.level] ?? 0\n                    if (scannerRange > 0 && this.primarySurface) this.worldMgr.ecs.addComponent(this.entity, new ScannerComponent(scannerRange))\n                }\n            } else {\n                this.changeUsedCrystals(-this.crystalDrain)\n                if (this.stats.powerBuilding) this.worldMgr.powerGrid.removeEnergySource(this.surfaces)\n                this.engineSoundId = SoundManager.stopAudio(this.engineSoundId)\n                this.worldMgr.ecs.removeComponent(this.entity, OxygenComponent)\n            }\n        }\n        if (this.sceneEntity.currentAnimation === BUILDING_ACTIVITY.stand || this.sceneEntity.currentAnimation === BUILDING_ACTIVITY.unpowered) {\n            this.sceneEntity.setAnimation(this.isPowered() ? BUILDING_ACTIVITY.stand : BUILDING_ACTIVITY.unpowered)\n        }\n        this.powerOffSprite.setEnabled(!this.inBeam && !this.isPowered())\n        this.surfaces.forEach((s) => s.updateTexture())\n        if (stateChanged) EventBroker.publish(new BuildingsChangedEvent(this.worldMgr.entityMgr))\n        if (this.selected || (this.entityType === EntityType.UPGRADE && this.worldMgr.entityMgr.selection.vehicles.length > 0)) {\n            EventBroker.publish(new SelectionChanged(this.worldMgr.entityMgr))\n        }\n    }\n\n    get crystalDrain(): number {\n        return Array.ensure(this.stats.crystalDrain)[this.level] || 0\n    }\n\n    private changeUsedCrystals(changedCrystals: number) {\n        if (!changedCrystals) return\n        GameState.usedCrystals += changedCrystals\n        EventBroker.publish(new UsedCrystalsChanged())\n    }\n\n    private onPlaceDown() {\n        this.sceneEntity.setAnimation(BUILDING_ACTIVITY.stand)\n        this.updateEnergyState()\n        this.surfaces.forEach((surface) => {\n            surface.updateTexture()\n            if (surface.surfaceType.connectsPath) surface.neighbors.forEach((n) => n.updateTexture())\n            this.worldMgr.powerGrid.onPathChange(surface)\n        })\n        this.getToolPathTarget = PathTarget.fromBuilding(this, this.getDropPosition2D(), 1, this.primarySurface.getCenterWorld2D())\n        this.carryPathTarget = PathTarget.fromBuilding(this, this.getDropPosition2D(), 1, this.primarySurface.getCenterWorld2D())\n        if (this.buildingType.teleportedEntityTypes.length > 0 && this.primaryPathSurface) this.worldMgr.ecs.addComponent(this.entity, new TeleportComponent(this.buildingType.teleportedEntityTypes, this.pathSurfaces, this.sceneEntity.heading, this.primaryPathSurface, this.waterPathSurface))\n        EventBroker.publish(new BuildingsChangedEvent(this.worldMgr.entityMgr))\n    }\n\n    getTrainingTargets(): PathTarget[] {\n        const offset = TILESIZE * 11 / 20\n        return this.buildingSurfaces.flatMap((s) => { // XXX Filter out targets in between both surfaces\n            const center = s.getCenterWorld2D()\n            return [\n                PathTarget.fromBuilding(this, new Vector2(-offset, 0).add(center), 1, center),\n                PathTarget.fromBuilding(this, new Vector2(0, offset).add(center), 1, center),\n                PathTarget.fromBuilding(this, new Vector2(offset, 0).add(center), 1, center),\n                PathTarget.fromBuilding(this, new Vector2(0, -offset).add(center), 1, center),\n            ]\n        })\n    }\n\n    isTrainingSite(training: RaiderTraining): boolean {\n        const statsProperty = RaiderTrainings.toStatsProperty(training)\n        const stat = this.stats[statsProperty]\n        return this.isPowered() && stat?.[this.level]\n    }\n\n    getMaxCarry(): number {\n        return this.stats.maxCarry[this.level] ?? 0\n    }\n\n    pickupItem(item: MaterialEntity): void {\n        this.sceneEntity.pickupEntity(item.sceneEntity)\n        this.carriedItems.push(item)\n    }\n\n    depositItems(): void {\n        if (this.entityType === EntityType.ORE_REFINERY) {\n            MaterialSpawner.spawnMaterial(this.worldMgr, EntityType.BRICK, this.getDropPosition2D())\n        } else {\n            this.carriedItems.forEach((m) => this.worldMgr.depositItem(m))\n        }\n        this.carriedItems.forEach((m) => m.disposeFromWorld())\n        this.carriedItems.length = 0\n    }\n\n    getPosition(): Vector3 {\n        return this.worldMgr.ecs.getComponents(this.entity).get(PositionComponent).position.clone()\n    }\n\n    getPosition2D(): Vector2 {\n        return this.worldMgr.ecs.getComponents(this.entity).get(PositionComponent).getPosition2D()\n    }\n\n    setPosition(position: Vector3) {\n        this.sceneEntity.position.copy(position)\n        const surface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld(position)\n        this.sceneEntity.visible = surface.discovered\n        const positionComponent = this.worldMgr.ecs.getComponents(this.entity).get(PositionComponent)\n        if (positionComponent) {\n            positionComponent.position.copy(position)\n            positionComponent.surface = surface\n            positionComponent.markDirty()\n            this.sceneEntity.position.y += positionComponent.floorOffset\n        }\n    }\n\n    get buildingSurfaces(): Surface[] {\n        const result: Surface[] = []\n        if (this.primarySurface) result.push(this.primarySurface)\n        if (this.secondarySurface) result.add(this.secondarySurface)\n        return result\n    }\n}\n","import { Vector2 } from 'three'\nimport { DeselectAll } from '../../../event/LocalEvents'\nimport { WorldManager } from '../../WorldManager'\nimport { EntityType } from '../EntityType'\nimport { Surface } from '../../terrain/Surface'\nimport { SurfaceType } from '../../terrain/SurfaceType'\nimport { MaterialEntity } from '../material/MaterialEntity'\nimport { BuildingEntity } from './BuildingEntity'\nimport { BuildingType } from './BuildingType'\nimport { BARRIER_ACTIVITY } from '../anim/AnimationActivity'\nimport { EventBroker } from '../../../event/EventBroker'\nimport { GameEntity } from '../../ECS'\nimport { TooltipComponent } from '../../component/TooltipComponent'\nimport { TooltipSpriteBuilder } from '../../../resource/TooltipSpriteBuilder'\n\nexport class BuildingSite {\n    entity: GameEntity\n    surfaces: Surface[] = []\n    heading: number = 0\n    neededByType: Map<EntityType, number> = new Map()\n    assignedByType: Map<EntityType, MaterialEntity[]> = new Map()\n    onSiteByType: Map<EntityType, MaterialEntity[]> = new Map()\n    complete: boolean = false\n    canceled: boolean = false\n    placeDownTimer: number = 0\n    isEmptyTimer: number = 0\n\n    constructor(readonly worldMgr: WorldManager, readonly primarySurface: Surface, readonly secondarySurface: Surface | undefined, readonly primaryPathSurface: Surface | undefined, secondaryPathSurface: Surface | undefined, readonly buildingType: BuildingType | undefined) {\n        this.entity = this.worldMgr.ecs.addEntity()\n        const objectName = this.buildingType?.getObjectName(0)\n        if (objectName) {\n            this.worldMgr.ecs.addComponent(this.entity, new TooltipComponent(this.entity, objectName, this.buildingType?.getSfxKey() || '', () => {\n                return TooltipSpriteBuilder.getBuildingSiteTooltipSprite(objectName, {\n                        actual: this.onSiteByType.get(EntityType.CRYSTAL)?.length || 0,\n                        needed: this.neededByType.get(EntityType.CRYSTAL) || 0,\n                    }, {\n                        actual: this.onSiteByType.get(EntityType.ORE)?.length || 0,\n                        needed: this.neededByType.get(EntityType.ORE) || 0,\n                    }, {\n                        actual: this.onSiteByType.get(EntityType.BRICK)?.length || 0,\n                        needed: this.neededByType.get(EntityType.BRICK) || 0,\n                    },\n                )\n            }))\n        }\n        this.primarySurface.site = this\n        this.surfaces.push(this.primarySurface)\n        if (this.secondarySurface) {\n            this.secondarySurface.site = this\n            this.secondarySurface.setSurfaceType(SurfaceType.POWER_PATH_BUILDING)\n            this.surfaces.push(this.secondarySurface)\n        }\n        if (this.primaryPathSurface) {\n            this.primaryPathSurface.setSurfaceType(SurfaceType.POWER_PATH_BUILDING)\n            this.surfaces.push(this.primaryPathSurface)\n        }\n        if (secondaryPathSurface) {\n            secondaryPathSurface.setSurfaceType(SurfaceType.POWER_PATH_BUILDING)\n            this.surfaces.push(secondaryPathSurface)\n        }\n    }\n\n    static createImproveSurfaceSite(worldMgr: WorldManager, surface: Surface): BuildingSite {\n        const site = new BuildingSite(worldMgr, surface, undefined, undefined, undefined, undefined)\n        if (worldMgr.entityMgr.hasBuilding(EntityType.ORE_REFINERY)) {\n            site.neededByType.set(EntityType.BRICK, 1)\n        } else {\n            site.neededByType.set(EntityType.ORE, 2)\n        }\n        worldMgr.entityMgr.buildingSites.push(site)\n        const closestToolstation = worldMgr.entityMgr.getClosestBuildingByType(surface.getCenterWorld(), EntityType.TOOLSTATION)\n        if (closestToolstation) {\n            closestToolstation.spawnMaterials(EntityType.BRICK, 1)\n            closestToolstation.spawnMaterials(EntityType.ORE, 2)\n        }\n        return site\n    }\n\n    getRandomDropPosition(): Vector2 {\n        return this.primarySurface.getRandomPosition()\n    }\n\n    needs(entityType: EntityType): boolean {\n        if (entityType === EntityType.ORE) {\n            return this.isNeeded(entityType) && (this.isNeeded(EntityType.BRICK) || this.neededByType.getOrUpdate(EntityType.BRICK, () => 0) < 1)\n        } else if (entityType === EntityType.BRICK) {\n            return this.isNeeded(entityType) && (this.isNeeded(EntityType.ORE) || this.neededByType.getOrUpdate(EntityType.ORE, () => 0) < 1)\n        } else {\n            return this.isNeeded(entityType)\n        }\n    }\n\n    private isNeeded(entityType: EntityType) {\n        const needed = this.neededByType.getOrUpdate(entityType, () => 0)\n        const assigned = this.assignedByType.getOrUpdate(entityType, () => []).length\n        return needed > assigned\n    }\n\n    assign(item: MaterialEntity) {\n        this.assignedByType.getOrUpdate(item.entityType, () => []).push(item)\n    }\n\n    unAssign(item: MaterialEntity) {\n        this.assignedByType.getOrUpdate(item.entityType, () => []).remove(item)\n    }\n\n    addItem(item: MaterialEntity) {\n        this.onSiteByType.getOrUpdate(item.entityType, () => []).push(item)\n        this.worldMgr.entityMgr.removeEntity(item.entity)\n        this.checkComplete()\n        const event = this.worldMgr.ecs.getComponents(this.entity).get(TooltipComponent)?.createForceRedrawEvent()\n        if (event) EventBroker.publish(event)\n    }\n\n    removeItem(item: MaterialEntity) {\n        this.unAssign(item)\n        this.onSiteByType.getOrUpdate(item.entityType, () => []).remove(item)\n        const event = this.worldMgr.ecs.getComponents(this.entity).get(TooltipComponent)?.createForceRedrawEvent()\n        if (event) EventBroker.publish(event)\n    }\n\n    checkComplete() {\n        if (this.complete || this.canceled) return\n        this.complete = true\n        this.neededByType.forEach((needed, neededType) => {\n            this.complete = this.complete && this.onSiteByType.getOrUpdate(neededType, () => []).length >= needed\n        })\n        if (!this.complete) return\n        this.worldMgr.entityMgr.buildingSites.remove(this)\n        if (!this.buildingType) {\n            this.primarySurface.setupCompleteSurfaceJob()\n        } else {\n            this.worldMgr.entityMgr.completedBuildingSites.push(this)\n        }\n    }\n\n    update(elapsedMs: number) {\n        if (this.canceled) return\n        this.placeDownTimer += elapsedMs\n        if (this.placeDownTimer < 100) return\n        if (this.primarySurface.isBlocked() || this.secondarySurface?.isBlocked()) {\n            this.isEmptyTimer = 0\n            return\n        }\n        this.isEmptyTimer += elapsedMs\n        if (this.isEmptyTimer < 100) return\n        this.teleportIn()\n    }\n\n    private teleportIn() {\n        this.worldMgr.entityMgr.completedBuildingSites.remove(this)\n        this.surfaces.forEach((s) => s.site = undefined)\n        this.onSiteByType.forEach((byType: MaterialEntity[]) => byType.forEach((item: MaterialEntity) => {\n            if (item.entityType === EntityType.BARRIER) {\n                item.sceneEntity.setAnimation(BARRIER_ACTIVITY.teleport, () => item.disposeFromWorld())\n            } else {\n                item.disposeFromWorld()\n            }\n        }))\n        if (this.buildingType) { // TODO Refactor power path building site handling\n            new BuildingEntity(this.worldMgr, this.buildingType.entityType, this.primarySurface.getCenterWorld2D(), -this.heading + Math.PI / 2, false)\n        }\n    }\n\n    cancelSite() {\n        this.worldMgr.entityMgr.buildingSites.remove(this)\n        this.worldMgr.entityMgr.completedBuildingSites.remove(this)\n        this.canceled = true\n        this.surfaces.forEach((s) => {\n            s.site = undefined\n            if (s.surfaceType === SurfaceType.POWER_PATH_BUILDING || s.surfaceType === SurfaceType.POWER_PATH_BUILDING_SITE) {\n                s.setSurfaceType(SurfaceType.GROUND)\n            }\n        })\n        this.onSiteByType.forEach((materials, entityType) => materials.forEach((item) => {\n            if (entityType === EntityType.BARRIER) {\n                item.sceneEntity.setAnimation(BARRIER_ACTIVITY.teleport, () => item.disposeFromWorld())\n            } else {\n                this.worldMgr.entityMgr.placeMaterial(item, item.getPosition2D())\n            }\n        }))\n        this.onSiteByType.clear()\n        this.assignedByType.clear()\n        EventBroker.publish(new DeselectAll())\n    }\n\n    getWalkOutSurface(): Surface {\n        return this.primaryPathSurface || this.primarySurface.neighbors.find((n) => !n.site && n.isWalkable()) ||\n            this.secondarySurface?.neighbors.find((n) => !n.site && n.isWalkable()) || this.primarySurface\n    }\n}\n","import { RaiderJob } from './RaiderJob'\nimport { BuildingEntity } from '../../building/BuildingEntity'\nimport { PathTarget } from '../../PathTarget'\nimport { JobFulfiller } from '../Job'\nimport { AnimationActivity, RAIDER_ACTIVITY } from '../../anim/AnimationActivity'\nimport { BubblesCfg } from '../../../../cfg/BubblesCfg'\nimport { HealthComponent } from '../../../component/HealthComponent'\nimport { RAIDER_TOOL } from '../../raider/RaiderTool'\nimport { RAIDER_TRAINING } from '../../raider/RaiderTraining'\nimport { PRIORITY_IDENTIFIER } from '../PriorityIdentifier'\n\nexport class RepairBuildingJob extends RaiderJob {\n    building: BuildingEntity\n    workplaces: PathTarget[]\n\n    constructor(building: BuildingEntity) {\n        super()\n        this.building = building\n        this.workplaces = building.getTrainingTargets()\n        this.requiredTool = RAIDER_TOOL.spanner\n        this.requiredTraining = RAIDER_TRAINING.engineer\n        this.priorityIdentifier = PRIORITY_IDENTIFIER.repair\n    }\n\n    getWorkplace(entity: JobFulfiller): PathTarget | undefined {\n        const healthComponent = this.building.worldMgr.ecs.getComponents(this.building.entity).get(HealthComponent)\n        if (healthComponent.health >= healthComponent.maxHealth) return undefined\n        return entity.findShortestPath(this.workplaces)?.target\n    }\n\n    onJobComplete(fulfiller: JobFulfiller): void {\n        const healthComponent = this.building.worldMgr.ecs.getComponents(this.building.entity).get(HealthComponent)\n        healthComponent.changeHealth(fulfiller.getRepairValue())\n        if (healthComponent.health >= healthComponent.maxHealth) super.onJobComplete(fulfiller)\n    }\n\n    getWorkActivity(): AnimationActivity {\n        return RAIDER_ACTIVITY.repair\n    }\n\n    getJobBubble(): keyof BubblesCfg {\n        return 'bubbleRepair'\n    }\n}\n","import { EventKey } from '../event/EventKeyEnum'\nimport { CAMERA_VIEW_MODE, CameraControl, ChangeBuildingPowerState, ChangeCameraEvent, PickTool, PlaySoundEvent, SelectBuildMode, TrainRaider, UpgradeVehicle } from '../event/GuiCommand'\nimport { DeselectAll, FollowerSetLookAtEvent, SelectionChanged } from '../event/LocalEvents'\nimport { JobCreateEvent, WorldLocationEvent } from '../event/WorldEvents'\nimport { EntityType } from './model/EntityType'\nimport { ManVehicleJob } from './model/job/ManVehicleJob'\nimport { EatJob } from './model/job/raider/EatJob'\nimport { GetToolJob } from './model/job/raider/GetToolJob'\nimport { TrainRaiderJob } from './model/job/raider/TrainRaiderJob'\nimport { UpgradeRaiderJob } from './model/job/raider/UpgradeRaiderJob'\nimport { WorldManager } from './WorldManager'\nimport { SurfaceType } from './terrain/SurfaceType'\nimport { BuildingSite } from './model/building/BuildingSite'\nimport { SoundManager } from '../audio/SoundManager'\nimport { SaveGameManager } from '../resource/SaveGameManager'\nimport { SelectionFrameComponent } from './component/SelectionFrameComponent'\nimport { BeamUpComponent } from './component/BeamUpComponent'\nimport { RepairBuildingJob } from './model/job/raider/RepairBuildingJob'\nimport { MaterialSpawner } from './factory/MaterialSpawner'\nimport { PositionComponent } from './component/PositionComponent'\nimport { RAIDER_TOOL } from './model/raider/RaiderTool'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { EventBroker } from '../event/EventBroker'\nimport { AnimatedSceneEntity } from '../scene/AnimatedSceneEntity'\nimport { ResourceManager } from '../resource/ResourceManager'\nimport { DYNAMITE_ACTIVITY } from './model/anim/AnimationActivity'\nimport { AnimatedSceneEntityComponent } from './component/AnimatedSceneEntityComponent'\nimport { Vector3 } from 'three'\nimport { PRNG } from './factory/PRNG'\nimport { GameState } from './model/GameState'\n\nexport class GuiManager {\n    constructor(worldMgr: WorldManager) {\n        const sceneMgr = worldMgr.sceneMgr\n        const cameraControls = sceneMgr.birdViewControls\n        const entityMgr = worldMgr.entityMgr\n        EventBroker.subscribe(EventKey.COMMAND_PICK_TOOL, (event: PickTool) => {\n            entityMgr.selection.raiders.forEach((r) => {\n                if (r.hasTool(event.tool)) return\n                const pathToToolstation = r.findShortestPath(r.worldMgr.entityMgr.getGetToolTargets())\n                if (pathToToolstation) r.setJob(new GetToolJob(entityMgr, event.tool, pathToToolstation.target.building))\n            })\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_CREATE_POWER_PATH, () => {\n            if (!entityMgr.selection.surface) return\n            entityMgr.selection.surface.setSurfaceType(SurfaceType.POWER_PATH_BUILDING_SITE)\n            BuildingSite.createImproveSurfaceSite(worldMgr, entityMgr.selection.surface)\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_MAKE_RUBBLE, () => {\n            entityMgr.selection.surface?.setSurfaceType(SurfaceType.RUBBLE4)\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_PLACE_FENCE, () => {\n            const targetSurface = entityMgr.selection.surface\n            if (targetSurface) {\n                entityMgr.getClosestBuildingByType(targetSurface.getCenterWorld(), EntityType.TOOLSTATION)?.spawnFence(targetSurface)\n                targetSurface.fenceRequested = true\n            }\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_FENCE_BEAMUP, () => {\n            const fence = entityMgr.selection.fence\n            if (!fence) return\n            EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_DEATH, fence.worldMgr.ecs.getComponents(fence.entity).get(PositionComponent)))\n            fence.worldMgr.ecs.getComponents(fence.entity).get(SelectionFrameComponent)?.deselect()\n            fence.worldMgr.ecs.removeComponent(fence.entity, SelectionFrameComponent)\n            fence.worldMgr.entityMgr.removeEntity(fence.entity)\n            if (fence.targetSurface) {\n                fence.targetSurface.fence = undefined\n                fence.targetSurface.fenceRequested = false\n            }\n            fence.worldMgr.ecs.addComponent(fence.entity, new BeamUpComponent(fence))\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_CREATE_DRILL_JOB, () => {\n            entityMgr.selection.surface?.setupDrillJob()\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_CREATE_REINFORCE_JOB, () => {\n            entityMgr.selection.surface?.setupReinforceJob()\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_CREATE_DYNAMITE_JOB, () => {\n            entityMgr.selection.surface?.setupDynamiteJob()\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_CANCEL_SURFACE_JOBS, () => {\n            entityMgr.selection.surface?.cancelJobs()\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_CREATE_CLEAR_RUBBLE_JOB, () => {\n            entityMgr.selection.surface?.setupClearRubbleJob()\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_REPAIR_BUILDING, () => {\n            if (!entityMgr.selection.building) return\n            EventBroker.publish(new JobCreateEvent(new RepairBuildingJob(entityMgr.selection.building)))\n        })\n        EventBroker.subscribe(EventKey.COMMAND_UPGRADE_BUILDING, () => {\n            entityMgr.selection.building?.upgrade()\n        })\n        EventBroker.subscribe(EventKey.COMMAND_BUILDING_BEAMUP, () => {\n            const building = entityMgr.selection.building\n            if (!building) return\n            for (let c = 0; c < building.stats.costOre; c++) {\n                MaterialSpawner.spawnMaterial(building.worldMgr, EntityType.ORE, building.primarySurface.getRandomPosition())\n            }\n            for (let c = 0; c < building.stats.costCrystal; c++) {\n                MaterialSpawner.spawnMaterial(building.worldMgr, EntityType.CRYSTAL, building.primarySurface.getRandomPosition())\n            }\n            building.carriedItems.forEach((m) => building.worldMgr.entityMgr.placeMaterial(m, building.primarySurface.getRandomPosition()))\n            building.beamUp()\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_CHANGE_BUILDING_POWER_STATE, (event: ChangeBuildingPowerState) => {\n            entityMgr.selection.building?.setPowerSwitch(event.state)\n        })\n        EventBroker.subscribe(EventKey.COMMAND_RAIDER_EAT, () => {\n            entityMgr.selection.raiders.forEach((r) => !r.isDriving() && r.setJob(new EatJob()))\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_RAIDER_UPGRADE, () => {\n            entityMgr.selection.raiders.forEach((r) => {\n                if (r.level >= r.stats.maxLevel) return\n                const closestToolstation = r.findShortestPath(entityMgr.getRaiderUpgradePathTarget())?.target.building\n                if (closestToolstation) r.setJob(new UpgradeRaiderJob(closestToolstation))\n            })\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_RAIDER_BEAMUP, () => {\n            entityMgr.selection.raiders.forEach((r) => r.beamUp())\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_TRAIN_RAIDER, (event: TrainRaider) => {\n            entityMgr.selection.raiders.forEach((r) => !r.hasTraining(event.training) && r.setJob(new TrainRaiderJob(entityMgr, event.training, undefined)))\n            EventBroker.publish(new DeselectAll())\n            return true\n        })\n        EventBroker.subscribe(EventKey.COMMAND_RAIDER_DROP, () => {\n            entityMgr.selection.raiders.forEach((r) => r.stopJob())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_SELECT_BUILD_MODE, (event: SelectBuildMode) => {\n            sceneMgr.setBuildModeSelection(event.entityType)\n        })\n        EventBroker.subscribe(EventKey.COMMAND_CANCEL_CONSTRUCTION, () => {\n            entityMgr.selection.surface?.site?.cancelSite()\n        })\n        EventBroker.subscribe(EventKey.COMMAND_VEHICLE_GET_MAN, () => {\n            entityMgr.selection.vehicles.forEach((v) => {\n                if (!v.callManJob && !v.driver) EventBroker.publish(new JobCreateEvent(new ManVehicleJob(v)))\n            })\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_VEHICLE_BEAMUP, () => {\n            entityMgr.selection.vehicles.forEach((v) => {\n                v.beamUp(true)\n            })\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_VEHICLE_DRIVER_GET_OUT, () => {\n            entityMgr.selection.vehicles.forEach((v) => v.dropDriver())\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_VEHICLE_UNLOAD, () => {\n            entityMgr.selection.vehicles.forEach((v) => {\n                v.stopJob()\n                v.unloadVehicle()\n            })\n        })\n        EventBroker.subscribe(EventKey.COMMAND_VEHICLE_LOAD, () => {\n            entityMgr.selection.vehicles.forEach((v) => v.pickupNearbyEntity())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_CAMERA_CONTROL, (event: CameraControl) => {\n            if (event.args.zoom) {\n                cameraControls.zoom(event.args.zoom)\n            }\n            if (event.args.cycleBuilding) {\n                cameraControls.buildingCycleIndex = (cameraControls.buildingCycleIndex + 1) % entityMgr.buildings.length\n                const target = entityMgr.buildings[cameraControls.buildingCycleIndex].primarySurface.getCenterWorld()\n                cameraControls.jumpTo(target)\n            }\n            if (event.args.rotationIndex) cameraControls.rotate(event.args.rotationIndex)\n            if (event.args.jumpToWorld) {\n                const jumpTo = worldMgr.sceneMgr.terrain.getFloorPosition(event.args.jumpToWorld)\n                cameraControls.jumpTo(jumpTo)\n            }\n        })\n        EventBroker.subscribe(EventKey.FOLLOWER_SET_LOOK_AT, (event: FollowerSetLookAtEvent) => {\n            const sceneEntity = worldMgr.ecs.getComponents(event.entity).get(AnimatedSceneEntityComponent)?.sceneEntity\n            if (sceneEntity) cameraControls.jumpTo(sceneEntity.getWorldPosition(new Vector3()))\n        })\n        EventBroker.subscribe(EventKey.COMMAND_REPAIR_LAVA, () => {\n            if (!entityMgr.selection.surface) return\n            BuildingSite.createImproveSurfaceSite(worldMgr, entityMgr.selection.surface)\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_PLAY_SOUND, (event: PlaySoundEvent) => {\n            if (event.isVoice) {\n                SoundManager.playVoice(event.sample)\n            } else {\n                SoundManager.playSfxSound(event.sample)\n            }\n        })\n        EventBroker.subscribe(EventKey.COMMAND_CHANGE_PREFERENCES, () => {\n            SaveGameManager.savePreferences()\n            SoundManager.setupSfxAudioTarget()\n            const gameSpeedIndex = Math.round(SaveGameManager.preferences.gameSpeed * 5)\n            GameState.gameSpeedMultiplier = [0.5, 0.75, 1, 1.5, 2, 2.5, 3][gameSpeedIndex] // XXX Publish speed change as event on network\n            const sfxVolume = SaveGameManager.getSfxVolume()\n            SoundManager.playingAudio.forEach((a) => {\n                a.setVolume(sfxVolume)\n                a.setPlaybackRate(GameState.gameSpeedMultiplier)\n            })\n        })\n        EventBroker.subscribe(EventKey.COMMAND_UPGRADE_VEHICLE, (event: UpgradeVehicle) => {\n            entityMgr.selection.assignUpgradeJob(event.upgrade)\n            EventBroker.publish(new DeselectAll())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_DROP_BIRD_SCARER, () => {\n            entityMgr.selection.raiders.forEach((r) => {\n                if (!r.hasTool(RAIDER_TOOL.birdScarer)) return\n                r.removeTool(RAIDER_TOOL.birdScarer)\n                if (r.selected) EventBroker.publish(new SelectionChanged(entityMgr))\n                const position = r.getPosition()\n                const sceneEntity = new AnimatedSceneEntity()\n                sceneEntity.position.copy(position)\n                sceneEntity.rotation.y = PRNG.animation.random() * 2 * Math.PI\n                sceneMgr.addSceneEntity(sceneEntity)\n                sceneEntity.addAnimated(ResourceManager.getAnimatedData(GameConfig.instance.miscObjects.oohScary))\n                sceneEntity.setAnimation(DYNAMITE_ACTIVITY.normal, () => {\n                    sceneEntity.setAnimation(DYNAMITE_ACTIVITY.tickDown, () => {\n                        const birdScarer = worldMgr.ecs.addEntity()\n                        worldMgr.ecs.addComponent(birdScarer, new PositionComponent(position, r.getSurface()))\n                        entityMgr.addEntity(birdScarer, EntityType.BIRD_SCARER)\n                        sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.birdScarer, position, PRNG.animation.random() * 2 * Math.PI, false, () => {\n                            sceneMgr.disposeSceneEntity(sceneEntity)\n                            entityMgr.removeEntity(birdScarer)\n                            worldMgr.ecs.removeEntity(birdScarer)\n                        })\n                    })\n                })\n            })\n        })\n        EventBroker.subscribe(EventKey.COMMAND_CAMERA_VIEW, (event: ChangeCameraEvent) => {\n            const entity = entityMgr.selection.getPrimarySelected()\n            if (!entity) {\n                console.warn('No entity seems selected')\n                return\n            }\n            if (event.viewMode === CAMERA_VIEW_MODE.bird) {\n                worldMgr.sceneMgr.setActiveCamera(worldMgr.sceneMgr.cameraBird)\n            } else if (event.viewMode === CAMERA_VIEW_MODE.fpv) {\n                if (!entity.sceneEntity.camFPVJoint) {\n                    console.warn('Entity does not have FPV joint')\n                    return\n                }\n                entity.sceneEntity.camFPVJoint.add(worldMgr.sceneMgr.cameraFPV)\n                // inverse joint scale because it affects camera far\n                const jointScale = entity.sceneEntity.camFPVJoint.getWorldScale(new Vector3())\n                worldMgr.sceneMgr.cameraFPV.scale.set(1 / jointScale.x, 1 / jointScale.y, 1 / jointScale.z)\n                worldMgr.sceneMgr.setActiveCamera(worldMgr.sceneMgr.cameraFPV)\n            } else if (event.viewMode === CAMERA_VIEW_MODE.shoulder) {\n                if (!entity.sceneEntity.camShoulderJoint) {\n                    console.warn('Entity does not have shoulder joint')\n                    return\n                }\n                entity.sceneEntity.camShoulderJoint.add(worldMgr.sceneMgr.cameraShoulder)\n                // inverse joint scale because it affects camera far\n                const jointScale = entity.sceneEntity.camShoulderJoint.getWorldScale(new Vector3())\n                worldMgr.sceneMgr.cameraShoulder.scale.set(1 / jointScale.x, 1 / jointScale.y, 1 / jointScale.z)\n                worldMgr.sceneMgr.setActiveCamera(worldMgr.sceneMgr.cameraShoulder)\n            }\n        })\n    }\n}\n","import { Vector2, Vector3 } from 'three'\n\nexport class EntityStep {\n    constructor(\n        readonly position: Vector3,\n        readonly focusPoint: Vector2,\n        readonly stepLength: number,\n        readonly targetReached: boolean,\n    ) {\n    }\n}\n","export const MOVE_STATE = {\n    moved: 1,\n    targetReached: 2,\n    targetUnreachable: 3,\n} as const\nexport type MoveState = typeof MOVE_STATE[keyof typeof MOVE_STATE]\n","import { AbstractGameComponent } from '../ECS'\nimport { AnimationGroup } from '../../scene/AnimationGroup'\nimport { Vector2 } from 'three'\nimport { EntityType } from '../model/EntityType'\n\nexport class BulletComponent extends AbstractGameComponent {\n    constructor(\n        readonly bulletAnim: AnimationGroup,\n        readonly targetLocation: Vector2,\n        readonly bulletType: EntityType,\n    ) {\n        super()\n    }\n}\n","import { CanvasTexture, Sprite, SpriteMaterial } from 'three'\nimport { createContext } from '../core/ImageHelper'\n\nexport class SelectionNameSprite extends Sprite {\n    private static readonly textureSize = 256\n\n    setName(name: string) {\n        this.material?.dispose()\n        this.material = SelectionNameSprite.createSpriteMaterial(name)\n    }\n\n    private static createSpriteMaterial(label: string) {\n        const ctx = createContext(this.textureSize, this.textureSize)\n        const context = ctx\n        context.textAlign = 'center'\n        context.font = 'bold 20px sans-serif'\n        context.fillStyle = '#fff'\n        context.fillText(label, this.textureSize / 2, this.textureSize / 2)\n        const spriteTexture = new CanvasTexture(ctx.canvas)\n        return new SpriteMaterial({map: spriteTexture, depthTest: false})\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { SelectionNameSprite } from '../../scene/SelectionNameSprite'\nimport { Object3D } from 'three'\n\nexport class SelectionNameComponent extends AbstractGameComponent {\n    readonly nameSprite: SelectionNameSprite\n\n    constructor(parentObj: Object3D) {\n        super()\n        this.nameSprite = new SelectionNameSprite()\n        this.nameSprite.position.y += 15\n        this.nameSprite.scale.setScalar(30)\n        this.nameSprite.visible = false\n        parentObj.add(this.nameSprite)\n    }\n\n    setName(name: string) {\n        this.nameSprite.setName(name)\n    }\n\n    setVisible(state: boolean): void {\n        this.nameSprite.visible = state\n    }\n}\n","import { Vector2, Vector3 } from 'three'\nimport { SoundManager } from '../../../audio/SoundManager'\nimport { RaidersAmountChangedEvent, SelectionChanged, UpdateRadarEntityEvent } from '../../../event/LocalEvents'\nimport { ITEM_ACTION_RANGE_SQ, NATIVE_UPDATE_INTERVAL, RAIDER_CARRY_SLOWDOWN, RAIDER_PATH_PRECISION, SPIDER_SLIP_RANGE_SQ, TILESIZE } from '../../../params'\nimport { ResourceManager } from '../../../resource/ResourceManager'\nimport { WorldManager } from '../../WorldManager'\nimport { ANIM_ENTITY_ACTIVITY, AnimationActivity, RAIDER_ACTIVITY, ROCK_MONSTER_ACTIVITY } from '../anim/AnimationActivity'\nimport { EntityStep } from '../EntityStep'\nimport { GameState } from '../GameState'\nimport { Job, JobFulfiller } from '../job/Job'\nimport { JOB_STATE } from '../job/JobState'\nimport { Surface } from '../../terrain/Surface'\nimport { TerrainPath } from '../../terrain/TerrainPath'\nimport { MaterialEntity } from '../material/MaterialEntity'\nimport { MOVE_STATE, MoveState } from '../MoveState'\nimport { PathTarget } from '../PathTarget'\nimport { Updatable } from '../Updateable'\nimport { VehicleEntity } from '../vehicle/VehicleEntity'\nimport { RAIDER_TOOL, RaiderTool } from './RaiderTool'\nimport { RAIDER_TRAINING, RaiderTraining } from './RaiderTraining'\nimport { EntityType } from '../EntityType'\nimport { GameEntity } from '../../ECS'\nimport { PositionComponent } from '../../component/PositionComponent'\nimport { BeamUpComponent } from '../../component/BeamUpComponent'\nimport { AnimatedSceneEntityComponent } from '../../component/AnimatedSceneEntityComponent'\nimport { SelectionFrameComponent } from '../../component/SelectionFrameComponent'\nimport { AnimatedSceneEntity } from '../../../scene/AnimatedSceneEntity'\nimport { WorldLocationEvent } from '../../../event/WorldEvents'\nimport { RaiderInfoComponent } from '../../component/RaiderInfoComponent'\nimport { RockMonsterBehaviorComponent } from '../../component/RockMonsterBehaviorComponent'\nimport { LastWillComponent } from '../../component/LastWillComponent'\nimport { MonsterStatsComponent } from '../../component/MonsterStatsComponent'\nimport { RAIDER_SCARE_RANGE, RaiderScareComponent } from '../../component/RaiderScareComponent'\nimport { EventKey } from '../../../event/EventKeyEnum'\nimport { ScannerComponent } from '../../component/ScannerComponent'\nimport { MAP_MARKER_CHANGE, MAP_MARKER_TYPE, MapMarkerComponent } from '../../component/MapMarkerComponent'\nimport { BulletComponent } from '../../component/BulletComponent'\nimport { GameConfig } from '../../../cfg/GameConfig'\nimport { EventBroker } from '../../../event/EventBroker'\nimport { TooltipComponent } from '../../component/TooltipComponent'\nimport { TooltipSpriteBuilder } from '../../../resource/TooltipSpriteBuilder'\nimport { SelectionNameComponent } from '../../component/SelectionNameComponent'\nimport { PRNG } from '../../factory/PRNG'\nimport { SaveGameRaider } from '../../../resource/SaveGameManager'\n\nexport class Raider implements Updatable, JobFulfiller {\n    readonly entityType: EntityType = EntityType.PILOT\n    readonly entity: GameEntity\n    readonly tools: RaiderTool[] = []\n    readonly trainings: RaiderTraining[] = []\n    readonly teamMember: SaveGameRaider\n    worldMgr: WorldManager\n    currentPath?: TerrainPath\n    level: number = 0\n    job?: Job\n    followUpJob?: Job\n    workAudioId?: number\n    sceneEntity: AnimatedSceneEntity\n    carries?: MaterialEntity\n    slipped: boolean = false\n    thrown: boolean = false\n    foodLevel: number = 1\n    vehicle?: VehicleEntity\n    scared: boolean = false\n    toolsIndex: number = 0\n    weaponCooldown: number = 0\n    resting: boolean = false\n    idleCounter: number = PRNG.animation.randInt(3000)\n\n    constructor(worldMgr: WorldManager, isTeamMember: boolean) {\n        this.worldMgr = worldMgr\n        this.addTool(RAIDER_TOOL.drill)\n        this.entity = this.worldMgr.ecs.addEntity()\n        this.sceneEntity = new AnimatedSceneEntity()\n        this.sceneEntity.addAnimated(ResourceManager.getAnimatedData('mini-figures/pilot'))\n        this.worldMgr.ecs.addComponent(this.entity, new AnimatedSceneEntityComponent(this.sceneEntity))\n        this.worldMgr.ecs.addComponent(this.entity, new LastWillComponent(() => this.beamUp()))\n        const objectKey = this.entityType.toLowerCase()\n        this.teamMember = this.worldMgr.entityMgr.addRaiderToTeam(this, isTeamMember)\n        const raiderName = this.teamMember.name || GameConfig.instance.objectNames[objectKey] || 'Rock Raider'\n        const sfxKey = GameConfig.instance.objTtSFXs[objectKey] || ''\n        this.worldMgr.ecs.addComponent(this.entity, new TooltipComponent(this.entity, raiderName, sfxKey, () => {\n            return TooltipSpriteBuilder.getRaiderTooltipSprite(raiderName, this.maxTools(), this.tools, this.trainings)\n        }))\n        this.worldMgr.ecs.addComponent(this.entity, new SelectionNameComponent(this.sceneEntity)).setName(this.teamMember.name)\n        this.worldMgr.entityMgr.addEntity(this.entity, this.entityType)\n    }\n\n    get stats() {\n        return GameConfig.instance.stats.pilot\n    }\n\n    update(elapsedMs: number) {\n        if (this.weaponCooldown > 0) this.weaponCooldown -= elapsedMs\n        if (this.vehicle) {\n            this.sceneEntity.setAnimation(this.vehicle.getDriverActivity())\n            return\n        }\n        if (this.slipped || this.isInBeam() || this.thrown || this.selected || this.resting) return\n        if (GameState.alarmMode && this.hasWeapon() && !this.job?.doOnAlarm) {\n            this.fight(elapsedMs)\n            return\n        }\n        if (!this.job) {\n            this.scared = false\n            this.worldMgr.ecs.getComponents(this.entity).get(RaiderInfoComponent).setBubbleTexture('bubbleIdle')\n            if (this.idleCounter > 3000) {\n                const idleAnim = PRNG.animation.sample(['Activity_Waiting1', 'Activity_Waiting2', 'Activity_Waiting3', 'Activity_Waiting4'])\n                this.idleCounter = 0\n                this.sceneEntity.setAnimation(idleAnim, () => {\n                    this.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                })\n            } else {\n                this.idleCounter += PRNG.animation.randInt(elapsedMs)\n            }\n            return\n        }\n        this.idleCounter = 0\n        this.work(elapsedMs)\n    }\n\n    isDriving(): boolean {\n        return !!this.vehicle\n    }\n\n    beamUp() {\n        this.stopJob()\n        const components = this.worldMgr.ecs.getComponents(this.entity)\n        EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_DEATH, components.get(PositionComponent)))\n        components.get(SelectionFrameComponent)?.deselect()\n        components.get(SelectionNameComponent)?.setVisible(false)\n        this.worldMgr.ecs.removeComponent(this.entity, SelectionFrameComponent)\n        this.worldMgr.ecs.removeComponent(this.entity, MapMarkerComponent)\n        EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.default, this.entity, MAP_MARKER_CHANGE.remove))\n        this.worldMgr.ecs.removeComponent(this.entity, ScannerComponent)\n        EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.scanner, this.entity, MAP_MARKER_CHANGE.remove))\n        this.worldMgr.ecs.addComponent(this.entity, new BeamUpComponent(this))\n        this.worldMgr.entityMgr.raiders.remove(this)\n        this.worldMgr.entityMgr.raidersInBeam.push(this)\n        EventBroker.publish(new RaidersAmountChangedEvent(this.worldMgr.entityMgr))\n    }\n\n    disposeFromWorld() {\n        this.worldMgr.sceneMgr.disposeSceneEntity(this.sceneEntity)\n        this.workAudioId = SoundManager.stopAudio(this.workAudioId)\n        this.worldMgr.entityMgr.removeEntity(this.entity)\n        this.worldMgr.ecs.removeEntity(this.entity)\n    }\n\n    /*\n    Movement\n     */\n\n    findShortestPath(targets: PathTarget[] | PathTarget | undefined): TerrainPath | undefined {\n        return this.worldMgr.sceneMgr.terrain.pathFinder.findShortestPath(this.getPosition2D(), targets, this.stats, RAIDER_PATH_PRECISION, this.currentPath?.target.targetLocation)\n    }\n\n    private moveToClosestTarget(target: PathTarget | undefined, elapsedMs: number): MoveState {\n        const result = this.moveToClosestTargetInternal(target, elapsedMs)\n        if (result === MOVE_STATE.moved) {\n            this.onEntityMoved()\n        } else if (result === MOVE_STATE.targetUnreachable) {\n            console.warn('Raider could not move to job target, stopping job', this.job, target)\n            this.stopJob()\n        }\n        return result\n    }\n\n    onEntityMoved() {\n        const raiderPosition2D = this.getPosition2D()\n        this.worldMgr.entityMgr.spiders.some((spider) => {\n            const components = this.worldMgr.ecs.getComponents(spider)\n            const spiderPosition2D = components.get(PositionComponent).getPosition2D()\n            if (raiderPosition2D.distanceToSquared(spiderPosition2D) < SPIDER_SLIP_RANGE_SQ) {\n                this.slip()\n                this.worldMgr.entityMgr.removeEntity(spider)\n                this.worldMgr.ecs.removeEntity(spider)\n                const sceneEntityComponent = components.get(AnimatedSceneEntityComponent)\n                if (sceneEntityComponent) this.worldMgr.sceneMgr.disposeSceneEntity(sceneEntityComponent.sceneEntity)\n                return true\n            }\n            return false\n        })\n        this.worldMgr.entityMgr.rockMonsters.forEach((rocky) => {\n            const components = this.worldMgr.ecs.getComponents(rocky)\n            const rockySceneEntity = components.get(AnimatedSceneEntityComponent).sceneEntity\n            if (rockySceneEntity.currentAnimation === ROCK_MONSTER_ACTIVITY.unpowered) {\n                const positionComponent = components.get(PositionComponent)\n                const rockyPosition2D = positionComponent.getPosition2D()\n                const wakeRadius = components.get(MonsterStatsComponent).stats.wakeRadius\n                if (raiderPosition2D.distanceToSquared(rockyPosition2D) < Math.pow(wakeRadius + this.stats.collRadius, 2)) {\n                    rockySceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.wakeUp, () => {\n                        this.worldMgr.ecs.addComponent(rocky, new RaiderScareComponent(RAIDER_SCARE_RANGE.rocky))\n                        this.worldMgr.ecs.addComponent(rocky, new RockMonsterBehaviorComponent())\n                        EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_MONSTER, positionComponent))\n                    })\n                }\n            }\n        })\n    }\n\n    private moveToClosestTargetInternal(target: PathTarget | undefined, elapsedMs: number): MoveState {\n        if (!target) return MOVE_STATE.targetUnreachable\n        if (!this.currentPath || !target.targetLocation.equals(this.currentPath.target.targetLocation)) {\n            const path = this.findShortestPath(target)\n            this.currentPath = path && path.locations.length > 0 ? path : undefined\n            if (!this.currentPath) return MOVE_STATE.targetUnreachable\n            const currentPath = this.currentPath\n            currentPath.locations.forEach((l, index) => {\n                if (index < currentPath.locations.length - 1) l.add(new Vector2().random().subScalar(0.5).multiplyScalar(TILESIZE / RAIDER_PATH_PRECISION))\n            }) // XXX Externalize precision\n        }\n        const step = this.determineStep(elapsedMs, this.currentPath)\n        if (step.targetReached) {\n            return MOVE_STATE.targetReached\n        } else {\n            this.setPosition(step.position)\n            this.sceneEntity.headTowards(step.focusPoint)\n            this.sceneEntity.setAnimation(this.getRouteActivity())\n            if (this.foodLevel > 0) this.foodLevel -= step.stepLength * step.stepLength / TILESIZE / TILESIZE / 5\n            if (!!this.carries) {\n                // XXX Adjust balancing for resting\n                const chanceToRestPerSecond = this.stats.restPercent / 20 * Math.max(0, 1 - this.foodLevel / this.stats.restPercent)\n                if (PRNG.movement.random() < chanceToRestPerSecond * elapsedMs / 1000) {\n                    this.resting = true\n                    this.sceneEntity.setAnimation('Activity_Rest', () => {\n                        this.resting = false\n                    })\n                }\n            }\n            this.worldMgr.ecs.getComponents(this.entity).get(RaiderInfoComponent).setHungerIndicator(this.foodLevel)\n            return MOVE_STATE.moved\n        }\n    }\n\n    private determineStep(elapsedMs: number, currentPath: TerrainPath): EntityStep {\n        const stepLength = this.getSpeed() * elapsedMs / NATIVE_UPDATE_INTERVAL // XXX use average speed between current and target position\n        const maxTurn = 2 * Math.PI * stepLength / TILESIZE * RAIDER_PATH_PRECISION\n        const pos = this.getPosition2D()\n        const dir3d = new Vector3(0, 0, 1).applyQuaternion(this.sceneEntity.quaternion)\n        const dir = new Vector2(dir3d.x, dir3d.z)\n        const step = currentPath.step(pos, dir, stepLength, maxTurn)\n        const targetWorld = this.worldMgr.sceneMgr.getFloorPosition(step.position)\n        targetWorld.y += this.worldMgr.ecs.getComponents(this.entity).get(PositionComponent)?.floorOffset ?? 0\n        return new EntityStep(targetWorld, step.position.clone().add(step.direction), stepLength - step.remainingStepLength, step.targetReached)\n    }\n\n    getSpeed(): number {\n        const currentSurface = this.getSurface()\n        const pathMultiplier = currentSurface.isPath() ? this.stats.pathCoef : 1\n        const rubbleMultiplier = currentSurface.hasRubble() ? this.stats.rubbleCoef : 1\n        const carriesMultiplier = !!this.carries ? RAIDER_CARRY_SLOWDOWN : 1\n        return this.stats.routeSpeed[this.level] * pathMultiplier * rubbleMultiplier * carriesMultiplier\n    }\n\n    getRouteActivity(): AnimationActivity {\n        if (this.scared) {\n            return RAIDER_ACTIVITY.runPanic\n        } else if (this.getSurface().hasRubble()) {\n            return !!this.carries ? RAIDER_ACTIVITY.carryRubble : RAIDER_ACTIVITY.routeRubble\n        } else {\n            return !!this.carries ? ANIM_ENTITY_ACTIVITY.carry : ANIM_ENTITY_ACTIVITY.route\n        }\n    }\n\n    private slip() {\n        if (this.selected) {\n            this.deselect()\n            this.worldMgr.entityMgr.selection.raiders.remove(this)\n            EventBroker.publish(new SelectionChanged(this.worldMgr.entityMgr))\n        }\n        this.dropCarried(true)\n        if (PRNG.movement.randInt(100) < 10) this.stopJob()\n        this.slipped = true\n        this.sceneEntity.setAnimation(RAIDER_ACTIVITY.slip, () => {\n            this.slipped = false\n        })\n    }\n\n    /*\n    Selection\n     */\n\n    get selected(): boolean {\n        const selectionFrameComponent = this.worldMgr.ecs.getComponents(this.entity).get(SelectionFrameComponent)\n        return selectionFrameComponent?.isSelected()\n    }\n\n    isInSelection(): boolean {\n        return this.isSelectable() || this.selected\n    }\n\n    select(primary: boolean): boolean {\n        if (!this.isSelectable()) return false\n        const components = this.worldMgr.ecs.getComponents(this.entity)\n        const selectionFrameComponent = components.get(SelectionFrameComponent)\n        primary ? selectionFrameComponent?.select() : selectionFrameComponent?.selectSecondary()\n        components.get(SelectionNameComponent)?.setVisible(true)\n        this.sceneEntity.setAnimation(this.getDefaultAnimationName())\n        this.workAudioId = SoundManager.stopAudio(this.workAudioId)\n        return true\n    }\n\n    getDefaultAnimationName(): AnimationActivity {\n        return this.carries ? ANIM_ENTITY_ACTIVITY.standCarry : ANIM_ENTITY_ACTIVITY.stand\n    }\n\n    deselect() {\n        const components = this.worldMgr.ecs.getComponents(this.entity)\n        components.get(SelectionFrameComponent)?.deselect()\n        components.get(SelectionNameComponent)?.setVisible(false)\n    }\n\n    isSelectable(): boolean {\n        return !this.selected && !this.isInBeam() && !this.slipped && !this.vehicle && !this.scared && !this.thrown && !this.resting\n    }\n\n    private isInBeam(): boolean {\n        return !this.worldMgr.ecs.getComponents(this.entity).has(SelectionFrameComponent)\n    }\n\n    /*\n    Working on Jobs\n     */\n\n    setJob(job: Job, followUpJob?: Job) {\n        if (this.job !== job) this.stopJob()\n        this.job = job\n        this.worldMgr.ecs.getComponents(this.entity).get(RaiderInfoComponent).setBubbleTexture(this.job.getJobBubble())\n        if (this.job) this.job.assign(this)\n        this.followUpJob = followUpJob\n        if (this.followUpJob) this.followUpJob.assign(this)\n    }\n\n    getDrillTimeSeconds(surface: Surface): number {\n        if (!surface || !this.hasTool(RAIDER_TOOL.drill)) return 0\n        const statsDrillName = surface.surfaceType.statsDrillName\n        if (!statsDrillName) return 0\n        return this.stats[statsDrillName]?.[this.level] || 0\n    }\n\n    stopJob() {\n        this.dropCarried(false)\n        this.workAudioId = SoundManager.stopAudio(this.workAudioId)\n        if (!this.job) return\n        this.job.unAssign(this)\n        if (this.followUpJob) this.followUpJob.unAssign(this)\n        this.job = undefined\n        this.followUpJob = undefined\n        this.sceneEntity.setAnimation(this.getDefaultAnimationName())\n        this.worldMgr.ecs.getComponents(this.entity).get(RaiderInfoComponent).setBubbleTexture('bubbleIdle')\n    }\n\n    dropCarried(unAssignFromSite: boolean): MaterialEntity[] {\n        if (!this.carries) return []\n        if (unAssignFromSite) this.carries.carryJob?.target?.site?.unAssign(this.carries)\n        this.sceneEntity.removeAllCarried()\n        const floorPosition = this.carries.worldMgr.sceneMgr.getFloorPosition(this.carries.getPosition2D())\n        this.carries.setPosition(floorPosition)\n        this.carries.worldMgr.sceneMgr.addSceneEntity(this.carries.sceneEntity)\n        const carriedEntity = this.carries\n        this.carries = undefined\n        return [carriedEntity]\n    }\n\n    private work(elapsedMs: number) {\n        if (this.job?.jobState !== JOB_STATE.incomplete) {\n            this.stopJob()\n            return\n        }\n        const grabbedJobItem = this.grabJobItem(elapsedMs, this.job.carryItem)\n        if (!grabbedJobItem) return\n        const workplaceReached = this.moveToClosestTarget(this.job.getWorkplace(this), elapsedMs) === MOVE_STATE.targetReached\n        if (!workplaceReached) return\n        if (!this.job.isReadyToComplete()) {\n            this.sceneEntity.setAnimation(this.getDefaultAnimationName())\n            return\n        }\n        const workActivity = this.job.getWorkActivity() || this.getDefaultAnimationName()\n        if (!this.workAudioId && this.job.workSoundRaider) {\n            this.workAudioId = this.worldMgr.sceneMgr.addPositionalAudio(this.sceneEntity, this.job.workSoundRaider, this.job.getExpectedTimeLeft() !== undefined)\n        }\n        if (workActivity === RAIDER_ACTIVITY.drill) {\n            const workplace = this.job.getWorkplace(this)\n            if (!this.job.surface || !workplace) {\n                this.stopJob()\n                return\n            }\n            this.sceneEntity.headTowards(this.job.surface.getCenterWorld2D())\n            this.sceneEntity.setAnimation(workActivity)\n            this.job.surface.addDrillTimeProgress(this.getDrillTimeSeconds(this.job.surface), elapsedMs, workplace.targetLocation)\n        } else if (workActivity === ANIM_ENTITY_ACTIVITY.stand) {\n            this.sceneEntity.setAnimation(workActivity)\n            this.completeJob()\n        } else {\n            const focusPoint = this.job?.getWorkplace(this)?.focusPoint\n            if (focusPoint) this.sceneEntity.headTowards(focusPoint)\n            this.sceneEntity.setAnimation(workActivity, () => {\n                this.completeJob()\n            }, this.job.getExpectedTimeLeft())\n        }\n    }\n\n    private fight(elapsedMs: number) {\n        this.stopJob()\n        this.worldMgr.ecs.getComponents(this.entity).get(RaiderInfoComponent).setBubbleTexture('bubbleCallToArms')\n        this.scared = false\n        const targets = this.worldMgr.entityMgr.getRaiderFightTargets()\n        const alarmTarget = this.findShortestPath(targets) // TODO Find closest position where shooting is possible, don't shoot through walls\n        if (!alarmTarget?.target.entity) {\n            this.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n            return\n        }\n        const moveState = this.moveToClosestTargetInternal(alarmTarget.target, elapsedMs)\n        if (moveState !== MOVE_STATE.targetReached) {\n            if (moveState === MOVE_STATE.targetUnreachable) {\n                this.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n            }\n            return\n        }\n        const targetComponents = this.worldMgr.ecs.getComponents(alarmTarget.target.entity)\n        const stats = targetComponents.get(MonsterStatsComponent).stats\n        const attacks = [\n            {\n                tool: RAIDER_TOOL.laser,\n                damage: stats.laserDamage,\n                weaponStats: GameConfig.instance.weaponTypes.laserShot,\n                bulletType: EntityType.LASER_SHOT,\n                misc: GameConfig.instance.miscObjects.laserShot\n            },\n            {\n                tool: RAIDER_TOOL.freezerGun,\n                damage: stats.freezerDamage,\n                weaponStats: GameConfig.instance.weaponTypes.freezer,\n                bulletType: EntityType.FREEZER_SHOT,\n                misc: GameConfig.instance.miscObjects.freezer\n            },\n            {\n                tool: RAIDER_TOOL.pusherGun,\n                damage: stats.pusherDamage,\n                weaponStats: GameConfig.instance.weaponTypes.pusher,\n                bulletType: EntityType.PUSHER_SHOT,\n                misc: GameConfig.instance.miscObjects.pusher\n            },\n        ].filter((a) => this.hasTool(a.tool)).sort((l, r) => r.damage - l.damage)\n        if (attacks.length < 1) {\n            console.warn('Could not shoot at monster')\n            this.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n            return\n        }\n        const attack = attacks[0]\n        if (this.weaponCooldown <= 0) {\n            const gunPos = this.getPosition()\n            gunPos.y += 10\n            const targetPos = targetComponents.get(PositionComponent)\n            const targetLocation = targetPos.getPosition2D()\n            const bulletAnim = this.worldMgr.sceneMgr.addMiscAnim(attack.misc, gunPos, 0, true)\n            bulletAnim.lookAt(targetPos.position)\n            const bulletEntity = this.worldMgr.ecs.addEntity()\n            this.worldMgr.ecs.addComponent(bulletEntity, new BulletComponent(bulletAnim, targetLocation, attack.bulletType))\n            this.worldMgr.entityMgr.addEntity(bulletEntity, attack.bulletType)\n            this.weaponCooldown = attack.weaponStats.rechargeTimeMs\n            this.sceneEntity.headTowards(targetLocation)\n            this.sceneEntity.setAnimation(RAIDER_ACTIVITY.shoot, () => {\n                this.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n            })\n        }\n    }\n\n    private completeJob() {\n        this.workAudioId = SoundManager.stopAudio(this.workAudioId)\n        this.job?.onJobComplete(this)\n        this.sceneEntity.setAnimation(this.getDefaultAnimationName())\n        if (this.job?.jobState === JOB_STATE.incomplete) return\n        if (this.job) this.job.unAssign(this)\n        this.job = this.followUpJob\n        this.followUpJob = undefined\n        if (this.job && !GameState.priorityList.isEnabled(this.job.priorityIdentifier)) {\n            this.job.unAssign(this)\n            this.job = undefined\n        }\n        this.worldMgr.ecs.getComponents(this.entity).get(RaiderInfoComponent).setBubbleTexture(this.job?.getJobBubble() || 'bubbleIdle')\n    }\n\n    private grabJobItem(elapsedMs: number, carryItem: MaterialEntity | undefined): boolean {\n        if (this.carries === carryItem) return this.sceneEntity.currentAnimation !== RAIDER_ACTIVITY.collect\n        this.dropCarried(true)\n        if (!carryItem) return true\n        const positionAsPathTarget = PathTarget.fromLocation(carryItem.getPosition2D(), ITEM_ACTION_RANGE_SQ)\n        if (this.moveToClosestTarget(positionAsPathTarget, elapsedMs) === MOVE_STATE.targetReached) {\n            this.sceneEntity.headTowards(carryItem.getPosition2D())\n            this.sceneEntity.setAnimation(RAIDER_ACTIVITY.collect, () => {\n                this.sceneEntity.setAnimation(this.getDefaultAnimationName())\n            })\n            this.carries = carryItem\n            this.sceneEntity.pickupEntity(carryItem.sceneEntity)\n        }\n        return false\n    }\n\n    hasTool(tool: RaiderTool) {\n        return !tool || this.tools.some((t) => t === tool)\n    }\n\n    private hasWeapon(): boolean {\n        return [RAIDER_TOOL.freezerGun, RAIDER_TOOL.laser, RAIDER_TOOL.pusherGun].some((w) => this.hasTool(w))\n    }\n\n    hasTraining(training: RaiderTraining) {\n        return !training || this.trainings.some((t) => t === training)\n    }\n\n    addTool(tool: RaiderTool) {\n        if (this.hasTool(tool)) return\n        if (this.tools.length < this.maxTools()) {\n            this.tools.add(tool)\n            this.toolsIndex = this.tools.length % this.maxTools()\n        } else {\n            this.tools[this.toolsIndex] = tool\n            this.toolsIndex = (this.toolsIndex + 1) % this.maxTools()\n        }\n    }\n\n    removeTool(tool: RaiderTool) {\n        this.tools.remove(tool)\n    }\n\n    addTraining(training: RaiderTraining) {\n        this.trainings.add(training)\n        if (training === RAIDER_TRAINING.geologist) {\n            const scannerRange = this.stats.surveyRadius?.[this.level] ?? 0\n            if (scannerRange) this.worldMgr.ecs.addComponent(this.entity, new ScannerComponent(scannerRange))\n        }\n    }\n\n    isPrepared(job: Job): boolean {\n        if (job.requiredTool === RAIDER_TOOL.drill) return this.canDrill(job.surface)\n        return this.hasTool(job.requiredTool) && this.hasTraining(job.requiredTraining) && this.hasCapacity()\n    }\n\n    canDrill(surface: Surface | undefined): boolean {\n        return !!surface && this.getDrillTimeSeconds(surface) > 0\n    }\n\n    hasCapacity(): boolean {\n        return !this.carries\n    }\n\n    getCarryCapacity(): number {\n        return 1\n    }\n\n    isReadyToTakeAJob(): boolean {\n        return !this.job && !this.selected && !this.vehicle && this.canBeScared()\n    }\n\n    canBeScared() {\n        return !this.isInBeam() && !this.slipped && !this.vehicle && !this.scared && !this.thrown && !this.resting && !(GameState.alarmMode && this.hasWeapon())\n    }\n\n    maxTools(): number {\n        return this.stats.numOfToolsCanCarry[this.level] ?? 2\n    }\n\n    getRepairValue(): number {\n        return this.stats.repairValue[this.level] || 0\n    }\n\n    getPosition(): Vector3 {\n        return this.worldMgr.ecs.getComponents(this.entity).get(PositionComponent).position.clone()\n    }\n\n    getPosition2D(): Vector2 {\n        return this.worldMgr.ecs.getComponents(this.entity).get(PositionComponent).getPosition2D()\n    }\n\n    setPosition(position: Vector3) {\n        const surface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld(position)\n        const positionComponent = this.worldMgr.ecs.getComponents(this.entity).get(PositionComponent)\n        if (positionComponent) {\n            positionComponent.position.copy(position)\n            positionComponent.surface = surface\n            positionComponent.markDirty()\n        }\n        if (this.carries) {\n            const carriedPositionComponent = this.worldMgr.ecs.getComponents(this.carries.entity).get(PositionComponent)\n            if (carriedPositionComponent) {\n                this.carries.sceneEntity.getWorldPosition(carriedPositionComponent.position)\n                carriedPositionComponent.surface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld(carriedPositionComponent.position)\n                carriedPositionComponent.markDirty()\n            }\n        }\n    }\n\n    getSurface(): Surface {\n        return this.worldMgr.ecs.getComponents(this.entity).get(PositionComponent).surface\n    }\n}\n","import { Vector2, Vector3 } from 'three'\nimport { SoundManager } from '../../../audio/SoundManager'\nimport { VehicleEntityStats } from '../../../cfg/GameStatsCfg'\nimport { DeselectAll, SelectionChanged, UpdateRadarEntityEvent } from '../../../event/LocalEvents'\nimport { ITEM_ACTION_RANGE_SQ, NATIVE_UPDATE_INTERVAL, TILESIZE } from '../../../params'\nimport { WorldManager } from '../../WorldManager'\nimport { ANIM_ENTITY_ACTIVITY, AnimEntityActivity, RAIDER_ACTIVITY, RaiderActivity, ROCK_MONSTER_ACTIVITY } from '../anim/AnimationActivity'\nimport { EntityStep } from '../EntityStep'\nimport { EntityType } from '../EntityType'\nimport { Job, JobFulfiller } from '../job/Job'\nimport { JOB_STATE } from '../job/JobState'\nimport { ManVehicleJob } from '../job/ManVehicleJob'\nimport { MoveJob } from '../job/MoveJob'\nimport { Surface } from '../../terrain/Surface'\nimport { TerrainPath } from '../../terrain/TerrainPath'\nimport { MaterialEntity } from '../material/MaterialEntity'\nimport { MOVE_STATE, MoveState } from '../MoveState'\nimport { PathTarget } from '../PathTarget'\nimport { Raider } from '../raider/Raider'\nimport { RAIDER_TOOL } from '../raider/RaiderTool'\nimport { RAIDER_TRAINING, RaiderTraining } from '../raider/RaiderTraining'\nimport { Updatable } from '../Updateable'\nimport { HealthComponent } from '../../component/HealthComponent'\nimport { GameEntity } from '../../ECS'\nimport { BeamUpComponent } from '../../component/BeamUpComponent'\nimport { SelectionFrameComponent } from '../../component/SelectionFrameComponent'\nimport { AnimatedSceneEntity } from '../../../scene/AnimatedSceneEntity'\nimport { PositionComponent } from '../../component/PositionComponent'\nimport { ResourceManager } from '../../../resource/ResourceManager'\nimport { AnimatedSceneEntityComponent } from '../../component/AnimatedSceneEntityComponent'\nimport { VehicleUpgrade, VehicleUpgrades } from './VehicleUpgrade'\nimport { WorldLocationEvent } from '../../../event/WorldEvents'\nimport { PRIORITY_IDENTIFIER } from '../job/PriorityIdentifier'\nimport { RockMonsterBehaviorComponent } from '../../component/RockMonsterBehaviorComponent'\nimport { LastWillComponent } from '../../component/LastWillComponent'\nimport { RAIDER_SCARE_RANGE, RaiderScareComponent } from '../../component/RaiderScareComponent'\nimport { MonsterStatsComponent } from '../../component/MonsterStatsComponent'\nimport { EventKey } from '../../../event/EventKeyEnum'\nimport { ScannerComponent } from '../../component/ScannerComponent'\nimport { MAP_MARKER_CHANGE, MAP_MARKER_TYPE, MapMarkerComponent } from '../../component/MapMarkerComponent'\nimport { GameConfig } from '../../../cfg/GameConfig'\nimport { EventBroker } from '../../../event/EventBroker'\nimport { GameState } from '../GameState'\nimport { TooltipComponent } from '../../component/TooltipComponent'\nimport { TooltipSpriteBuilder } from '../../../resource/TooltipSpriteBuilder'\nimport { LaserBeamTurretComponent } from '../../component/LaserBeamTurretComponent'\nimport { MaterialSpawner } from '../../factory/MaterialSpawner'\nimport { MovableStatsComponent } from '../../component/MovableStatsComponent'\nimport { PRNG } from '../../factory/PRNG'\nimport { SaveGameManager } from '../../../resource/SaveGameManager'\n\nexport class VehicleEntity implements Updatable, JobFulfiller {\n    readonly entityType: EntityType\n    readonly worldMgr: WorldManager\n    readonly entity: GameEntity\n    currentPath?: TerrainPath\n    level: number = 0\n    job?: Job\n    followUpJob?: Job\n    workAudioId?: number\n    stats: VehicleEntityStats\n    sceneEntity: AnimatedSceneEntity\n    driver?: Raider\n    callManJob?: ManVehicleJob\n    engineSoundId?: number\n    carriedItems: Set<MaterialEntity> = new Set()\n    carriedVehicle?: VehicleEntity\n    upgrades: Set<VehicleUpgrade> = new Set()\n    loadItemDelayMs: number = 0\n    upgrading: boolean = false\n    portering: boolean = false\n    carriedBy?: GameEntity\n\n    constructor(entityType: EntityType, worldMgr: WorldManager, stats: VehicleEntityStats, aeNames: string[], readonly driverActivityStand: RaiderActivity | AnimEntityActivity = ANIM_ENTITY_ACTIVITY.stand, readonly driverActivityRoute: RaiderActivity | AnimEntityActivity = ANIM_ENTITY_ACTIVITY.stand) {\n        this.entityType = entityType\n        this.worldMgr = worldMgr\n        this.stats = stats\n        this.entity = this.worldMgr.ecs.addEntity()\n        this.sceneEntity = new AnimatedSceneEntity()\n        this.sceneEntity.flipCamera = true // XXX Why is this needed for vehicles and not pilot?\n        aeNames.forEach((aeName) => this.sceneEntity.addAnimated(ResourceManager.getAnimatedData(aeName)))\n        this.worldMgr.ecs.addComponent(this.entity, new MovableStatsComponent(stats))\n        this.worldMgr.ecs.addComponent(this.entity, new AnimatedSceneEntityComponent(this.sceneEntity))\n        this.worldMgr.ecs.addComponent(this.entity, new LastWillComponent(() => this.beamUp()))\n        const objectKey = this.entityType.toLowerCase()\n        const objectName = GameConfig.instance.objectNames[objectKey] || ''\n        const sfxKey = GameConfig.instance.objTtSFXs[objectKey] || ''\n        if (objectName) this.worldMgr.ecs.addComponent(this.entity, new TooltipComponent(this.entity, objectName, sfxKey, () => {\n            const health = this.worldMgr.ecs.getComponents(this.entity).get(HealthComponent)?.health ?? 0\n            return TooltipSpriteBuilder.getTooltipSprite(objectName, health)\n        }))\n        this.worldMgr.entityMgr.addEntity(this.entity, this.entityType)\n        if (entityType === EntityType.SMALL_MLP) {\n            const weaponCfg = GameConfig.instance.weaponTypes.smallLazer\n            this.worldMgr.ecs.addComponent(this.entity, new LaserBeamTurretComponent(weaponCfg))\n        } else if (entityType === EntityType.LARGE_MLP || entityType === EntityType.LARGE_DIGGER) {\n            const weaponCfg = GameConfig.instance.weaponTypes.bigLazer\n            this.worldMgr.ecs.addComponent(this.entity, new LaserBeamTurretComponent(weaponCfg))\n        }\n    }\n\n    update(elapsedMs: number) {\n        if (!this.job || this.selected || this.isInBeam()) return\n        if (this.job.jobState !== JOB_STATE.incomplete) {\n            this.stopJob()\n            return\n        }\n        const grabbedJobItem = this.grabJobItem(elapsedMs, this.job.carryItem)\n        if (!grabbedJobItem) return\n        const workplaceReached = this.moveToClosestTarget(this.job.getWorkplace(this), elapsedMs) === MOVE_STATE.targetReached\n        if (!workplaceReached) return\n        if (!this.job.isReadyToComplete()) {\n            this.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n            return\n        }\n        const workActivity = this.job.getWorkActivity() || ANIM_ENTITY_ACTIVITY.stand\n        if (!this.workAudioId && this.job.workSoundVehicle) {\n            this.workAudioId = this.worldMgr.sceneMgr.addPositionalAudio(this.sceneEntity, this.job.workSoundVehicle, true)\n        }\n        if (workActivity === RAIDER_ACTIVITY.drill) {\n            const workplace = this.job.getWorkplace(this)\n            if (!this.job.surface || !workplace) {\n                this.stopJob()\n                return\n            }\n            this.sceneEntity.headTowards(this.job.surface.getCenterWorld2D())\n            this.sceneEntity.setAnimation(workActivity)\n            this.job.surface.addDrillTimeProgress(this.getDrillTimeSeconds(this.job.surface), elapsedMs, workplace.targetLocation)\n        } else if (workActivity === ANIM_ENTITY_ACTIVITY.stand) {\n            this.sceneEntity.setAnimation(workActivity)\n            this.completeJob()\n        } else {\n            this.sceneEntity.setAnimation(workActivity, () => {\n                this.completeJob()\n            }, this.job.getExpectedTimeLeft())\n        }\n    }\n\n    beamUp(dropCarried: boolean = false) {\n        this.carriedVehicle?.beamUp(dropCarried)\n        this.carriedVehicle = undefined\n        if (dropCarried) {\n            const surface = this.getSurface()\n            const pathSurface = surface.neighbors.find((n) => n.building?.entityType === EntityType.DOCKS)?.building?.primaryPathSurface\n            const spawnSurface = [surface, ...surface.neighbors].find((s) => s.isWalkable()) ?? pathSurface\n            if (spawnSurface) {\n                for (let c = 0; c < this.stats.costOre; c++) MaterialSpawner.spawnMaterial(this.worldMgr, EntityType.ORE, spawnSurface.getRandomPosition())\n                for (let c = 0; c < this.stats.costCrystal; c++) MaterialSpawner.spawnMaterial(this.worldMgr, EntityType.CRYSTAL, spawnSurface.getRandomPosition())\n            }\n            this.dropDriver()\n        }\n        const components = this.worldMgr.ecs.getComponents(this.entity)\n        EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_DEATH, components.get(PositionComponent)))\n        components.get(SelectionFrameComponent)?.deselect()\n        this.worldMgr.ecs.removeComponent(this.entity, SelectionFrameComponent)\n        this.worldMgr.ecs.removeComponent(this.entity, MapMarkerComponent)\n        EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.default, this.entity, MAP_MARKER_CHANGE.remove))\n        this.worldMgr.ecs.removeComponent(this.entity, ScannerComponent)\n        EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.scanner, this.entity, MAP_MARKER_CHANGE.remove))\n        this.worldMgr.ecs.addComponent(this.entity, new BeamUpComponent(this))\n        if (this.driver) this.worldMgr.entityMgr.removeEntity(this.driver.entity)\n        this.worldMgr.entityMgr.vehicles.remove(this)\n        this.worldMgr.entityMgr.vehiclesInBeam.push(this)\n    }\n\n    disposeFromWorld() {\n        this.worldMgr.sceneMgr.disposeSceneEntity(this.sceneEntity)\n        this.workAudioId = SoundManager.stopAudio(this.workAudioId)\n        this.engineSoundId = SoundManager.stopAudio(this.engineSoundId)\n        this.worldMgr.entityMgr.removeEntity(this.entity)\n        this.worldMgr.ecs.removeEntity(this.entity)\n    }\n\n    /*\n    Movement\n     */\n\n    findShortestPath(targets: PathTarget[] | PathTarget | undefined): TerrainPath | undefined {\n        return this.worldMgr.sceneMgr.terrain.pathFinder.findShortestPath(this.getPosition2D(), targets, this.stats, 1)\n    }\n\n    private moveToClosestTarget(target: PathTarget | undefined, elapsedMs: number): MoveState {\n        const result = this.moveToClosestTargetInternal(target, elapsedMs)\n        if (result === MOVE_STATE.moved) {\n            this.onEntityMoved()\n        } else if (result === MOVE_STATE.targetUnreachable) {\n            console.warn('Vehicle could not move to job target, stopping job', this.job, target)\n            this.stopJob()\n        }\n        return result\n    }\n\n    onEntityMoved() {\n        const vehiclePosition2D = this.sceneEntity.position2D\n        this.worldMgr.entityMgr.rockMonsters.forEach((rocky) => {\n            const components = this.worldMgr.ecs.getComponents(rocky)\n            const rockySceneEntity = components.get(AnimatedSceneEntityComponent).sceneEntity\n            if (rockySceneEntity.currentAnimation === ROCK_MONSTER_ACTIVITY.unpowered) {\n                const positionComponent = components.get(PositionComponent)\n                const rockyPosition2D = positionComponent.getPosition2D()\n                const wakeRadius = components.get(MonsterStatsComponent).stats.wakeRadius\n                if (vehiclePosition2D.distanceToSquared(rockyPosition2D) < Math.pow(wakeRadius + this.stats.collRadius, 2)) {\n                    rockySceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.wakeUp, () => {\n                        this.worldMgr.ecs.addComponent(rocky, new RaiderScareComponent(RAIDER_SCARE_RANGE.rocky))\n                        this.worldMgr.ecs.addComponent(rocky, new RockMonsterBehaviorComponent())\n                        EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_MONSTER, positionComponent))\n                    })\n                }\n            }\n        })\n    }\n\n    private moveToClosestTargetInternal(target: PathTarget | undefined, elapsedMs: number): MoveState {\n        if (!target) return MOVE_STATE.targetUnreachable\n        if (!this.currentPath || !target.targetLocation.equals(this.currentPath.target.targetLocation)) {\n            const path = this.findShortestPath(target)\n            this.currentPath = path && path.locations.length > 0 ? path : undefined\n            if (!this.currentPath) return MOVE_STATE.targetUnreachable\n        }\n        const step = this.determineStep(elapsedMs, this.currentPath)\n        if (step.targetReached) {\n            if (target.building) this.sceneEntity.headTowards(target.building.primarySurface.getCenterWorld2D())\n            return MOVE_STATE.targetReached\n        } else {\n            this.setPosition(step.position)\n            this.sceneEntity.headTowards(step.focusPoint)\n            this.sceneEntity.setAnimation(this.getRouteActivity())\n            const angle = elapsedMs * this.getSpeed() / 1000 * 4 * Math.PI\n            this.sceneEntity.wheelJoints.forEach((w) => w.radius && w.mesh.rotateX(angle / w.radius))\n            return MOVE_STATE.moved\n        }\n    }\n\n    private determineStep(elapsedMs: number, currentPath: TerrainPath): EntityStep {\n        const stepLength = this.getSpeed() * elapsedMs / NATIVE_UPDATE_INTERVAL // XXX use average speed between current and target position\n        const maxTurn = 2 * Math.PI * stepLength / TILESIZE\n        const pos = this.getPosition2D()\n        const dir3d = new Vector3(0, 0, 1).applyQuaternion(this.sceneEntity.quaternion)\n        const dir = new Vector2(dir3d.x, dir3d.z)\n        const step = currentPath.step(pos, dir, stepLength, maxTurn)\n        const targetWorld = this.worldMgr.sceneMgr.getFloorPosition(step.position)\n        targetWorld.y += this.worldMgr.ecs.getComponents(this.entity).get(PositionComponent)?.floorOffset ?? 0\n        return new EntityStep(targetWorld, step.position.clone().add(step.direction), stepLength - step.remainingStepLength, step.targetReached)\n    }\n\n    getSpeed(): number {\n        return this.stats.routeSpeed[this.level]\n    }\n\n    getRouteActivity(): AnimEntityActivity {\n        return ANIM_ENTITY_ACTIVITY.route\n    }\n\n    getDefaultAnimationName(): AnimEntityActivity {\n        return ANIM_ENTITY_ACTIVITY.stand\n    }\n\n    /*\n    Selection\n     */\n\n    get selected(): boolean {\n        const selectionFrameComponent = this.worldMgr.ecs.getComponents(this.entity).get(SelectionFrameComponent)\n        return selectionFrameComponent?.isSelected()\n    }\n\n    isInSelection(): boolean {\n        return this.isSelectable() || this.selected\n    }\n\n    select(primary: boolean): boolean {\n        if (!this.isSelectable()) return false\n        const selectionFrameComponent = this.worldMgr.ecs.getComponents(this.entity).get(SelectionFrameComponent)\n        primary ? selectionFrameComponent?.select() : selectionFrameComponent?.selectSecondary()\n        this.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n        this.workAudioId = SoundManager.stopAudio(this.workAudioId)\n        return true\n    }\n\n    deselect() {\n        this.worldMgr.ecs.getComponents(this.entity).get(SelectionFrameComponent)?.deselect()\n    }\n\n    isSelectable(): boolean {\n        return !this.selected && !this.isInBeam() && !this.upgrading && !this.portering && !this.carriedBy\n    }\n\n    isInBeam(): boolean {\n        return !this.worldMgr.ecs.getComponents(this.entity).has(SelectionFrameComponent)\n    }\n\n    /*\n    Working on Jobs\n     */\n\n    stopJob() {\n        this.workAudioId = SoundManager.stopAudio(this.workAudioId)\n        this.dropCarried(false)\n        if (!this.job) return\n        this.job.unAssign(this)\n        if (this.followUpJob) this.followUpJob.unAssign(this)\n        this.job = undefined\n        this.followUpJob = undefined\n        this.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n    }\n\n    private completeJob() {\n        this.workAudioId = SoundManager.stopAudio(this.workAudioId)\n        this.job?.onJobComplete(this)\n        this.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n        if (this.job?.jobState === JOB_STATE.incomplete) return\n        if (this.job) this.job.unAssign(this)\n        this.job = this.followUpJob\n        this.followUpJob = undefined\n        if (this.job && !GameState.priorityList.isEnabled(this.job.priorityIdentifier)) {\n            this.job.unAssign(this)\n            this.job = undefined\n        }\n    }\n\n    getDrillTimeSeconds(surface: Surface | undefined): number {\n        if (!surface) return 0\n        const statsDrillName = surface.surfaceType.statsDrillName\n        if (!statsDrillName) return 0\n        return this.stats[statsDrillName]?.[this.level] || 0\n    }\n\n    setJob(job: Job, followUpJob?: Job) {\n        if (!this.driver || this.portering) return\n        if (this.job !== job) this.stopJob()\n        this.job = job\n        if (this.job) this.job.assign(this)\n        this.followUpJob = followUpJob\n        if (this.followUpJob) this.followUpJob.assign(this)\n    }\n\n    private grabJobItem(elapsedMs: number, carryItem: MaterialEntity | undefined): boolean {\n        if (!carryItem) {\n            return true // nothing to do here\n        } else if (!this.carriedItems.has(carryItem)) {\n            const positionAsPathTarget = PathTarget.fromLocation(carryItem.getPosition2D(), ITEM_ACTION_RANGE_SQ)\n            if (this.moveToClosestTarget(positionAsPathTarget, elapsedMs) === MOVE_STATE.targetReached) {\n                this.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                if (this.loadItemDelayMs > 0) {\n                    this.loadItemDelayMs -= elapsedMs\n                } else {\n                    this.carriedItems.add(carryItem)\n                    this.sceneEntity.pickupEntity(carryItem.sceneEntity)\n                    return true\n                }\n            } else {\n                this.loadItemDelayMs = 500\n            }\n            return false\n        } else if (this.hasCapacity()) {\n            const fulfillerPos = this.getPosition2D()\n            const matNearby = this.worldMgr.entityMgr.materials.find((m) => { // XXX Move to entity manager and optimize with quad tree\n                if (m.entityType !== this.job?.carryItem?.entityType || m.carryJob?.hasFulfiller() || m.carryJob?.jobState !== JOB_STATE.incomplete) return false\n                const pos = this.worldMgr.ecs.getComponents(m.entity).get(PositionComponent)\n                if (!pos) return false\n                return pos.getPosition2D().distanceToSquared(fulfillerPos) < Math.pow(3 * TILESIZE, 2) // XXX Improve range, since this is executed on each frame\n            })\n            if (matNearby?.carryJob) {\n                const workplace = this.job?.getWorkplace(this)\n                if (workplace?.building) {\n                    this.job = matNearby.carryJob\n                    this.job.assign(this)\n                } else if (workplace?.site) {\n                    if (!workplace.site.needs(carryItem.entityType)) {\n                        return true\n                    }\n                    this.job = matNearby.carryJob\n                    this.job.assign(this)\n                }\n            }\n            return true\n        }\n        return true\n    }\n\n    dropCarried(unAssignFromSite: boolean): MaterialEntity[] {\n        if (this.carriedItems.size < 1) return []\n        if (unAssignFromSite) this.carriedItems.forEach((i) => i.carryJob?.target?.site?.unAssign(i))\n        this.sceneEntity.removeAllCarried()\n        const carriedEntities: MaterialEntity[] = []\n        this.carriedItems.forEach((carried) => {\n            const floorPosition = carried.worldMgr.sceneMgr.terrain.getFloorPosition(carried.getPosition2D())\n            carried.setPosition(floorPosition)\n            carried.worldMgr.sceneMgr.addSceneEntity(carried.sceneEntity)\n            carriedEntities.push(carried)\n        })\n        this.carriedItems.clear()\n        return carriedEntities\n    }\n\n    addDriver(driver: Raider) {\n        if (this.driver !== driver) this.dropDriver()\n        this.driver = driver\n        this.driver.vehicle = this\n        if (this.stats.invisibleDriver) {\n            this.driver.sceneEntity.visible = false\n        } else {\n            const positionComponent = this.worldMgr.ecs.getComponents(this.driver.entity).get(PositionComponent)\n            positionComponent.position.set(0, 0, 0)\n            positionComponent.markDirty()\n            this.sceneEntity.addDriver(this.driver.sceneEntity)\n            this.sceneEntity.restartAnimation()\n        }\n        this.worldMgr.ecs.removeComponent(this.driver.entity, MapMarkerComponent)\n        EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.default, this.driver.entity, MAP_MARKER_CHANGE.remove))\n        const driverScannerComponent = this.worldMgr.ecs.getComponents(this.driver.entity).get(ScannerComponent)\n        if (driverScannerComponent) this.worldMgr.ecs.addComponent(this.entity, driverScannerComponent)\n        if (this.stats.engineSound && !this.engineSoundId && !SaveGameManager.preferences.muteDevSounds) this.engineSoundId = this.worldMgr.sceneMgr.addPositionalAudio(this.sceneEntity, this.stats.engineSound, true)\n        if (this.selected) EventBroker.publish(new SelectionChanged(this.worldMgr.entityMgr))\n    }\n\n    dropDriver() {\n        const surface = this.getSurface()\n        const walkableSurface = [surface, ...surface.neighbors].find((s) => s.isWalkable() || s.building?.entityType === EntityType.DOCKS)\n        if (!walkableSurface) return\n        this.stopJob()\n        if (!this.driver) return\n        this.sceneEntity.removeDriver()\n        this.driver.vehicle = undefined\n        const hopOffSpot = walkableSurface.building?.entityType === EntityType.DOCKS ? walkableSurface.building.primaryPathSurface!.getRandomPosition() : walkableSurface.getRandomPosition()\n        const floorPosition = this.driver.worldMgr.sceneMgr.getFloorPosition(hopOffSpot)\n        this.driver.setPosition(floorPosition)\n        this.driver.sceneEntity.rotation.y = this.sceneEntity.heading\n        this.driver.worldMgr.sceneMgr.addSceneEntity(this.driver.sceneEntity)\n        this.driver.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n        this.worldMgr.ecs.addComponent(this.driver.entity, new MapMarkerComponent(MAP_MARKER_TYPE.default))\n        EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.default, this.driver.entity, MAP_MARKER_CHANGE.update, floorPosition))\n        this.driver.sceneEntity.visible = true\n        const scannerComponent = this.worldMgr.ecs.getComponents(this.entity).get(ScannerComponent)\n        if (scannerComponent) this.worldMgr.ecs.getComponents(this.driver.entity).add(scannerComponent)\n        const scannerRange = this.stats.surveyRadius?.[this.level] ?? 0\n        if (!scannerRange) {\n            this.worldMgr.ecs.removeComponent(this.entity, ScannerComponent)\n            EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.scanner, this.entity, MAP_MARKER_CHANGE.update, this.worldMgr.ecs.getComponents(this.entity).get(PositionComponent).position))\n        }\n        this.driver = undefined\n        this.engineSoundId = SoundManager.stopAudio(this.engineSoundId)\n        if (this.selected) EventBroker.publish(new SelectionChanged(this.worldMgr.entityMgr))\n    }\n\n    getRequiredTraining(): RaiderTraining {\n        if (this.stats.crossLand && !this.stats.crossLava && !this.stats.crossWater) {\n            return RAIDER_TRAINING.driver\n        } else if (!this.stats.crossLand && !this.stats.crossLava && this.stats.crossWater) {\n            return RAIDER_TRAINING.sailor\n        }\n        return RAIDER_TRAINING.pilot\n    }\n\n    isPrepared(job: Job): boolean {\n        const carryType = job.carryItem?.entityType\n        return (job.requiredTool === RAIDER_TOOL.drill && this.canDrill(job.surface))\n            || (job.priorityIdentifier === PRIORITY_IDENTIFIER.clearing && this.canClear())\n            || ((carryType === EntityType.ORE || carryType === EntityType.CRYSTAL || carryType === EntityType.ELECTRIC_FENCE) && this.hasCapacity())\n    }\n\n    doubleSelect(): boolean {\n        if (!this.selected || !this.stats.canDoubleSelect || !this.driver) return false\n        this.worldMgr.ecs.getComponents(this.entity).get(SelectionFrameComponent)?.doubleSelect()\n        return true\n    }\n\n    canDrill(surface: Surface | undefined): boolean {\n        return !!surface && this.getDrillTimeSeconds(surface) > 0\n    }\n\n    canClear(): boolean {\n        return this.stats.canClearRubble\n    }\n\n    hasCapacity(): boolean {\n        return this.carriedItems.size < this.getCarryCapacity()\n    }\n\n    isReadyToTakeAJob(): boolean {\n        return !this.job && !this.selected && !this.isInBeam() && !!this.driver\n    }\n\n    getCarryCapacity(): number {\n        return this.stats.maxCarry?.[this.level] || 0\n    }\n\n    unblockBuildingPowerPath() {\n        const surface = this.getSurface()\n        if (surface.building) {\n            const walkableNeighbor = surface.neighbors.find((n) => !n.site && n.isWalkable() && !n.building)\n            if (walkableNeighbor) this.setJob(new MoveJob(walkableNeighbor.getCenterWorld2D()))\n        }\n    }\n\n    getDriverActivity() {\n        return this.sceneEntity.currentAnimation === ANIM_ENTITY_ACTIVITY.stand ? this.driverActivityStand : this.driverActivityRoute\n    }\n\n    canUpgrade(upgrade: VehicleUpgrade): boolean {\n        if (this.upgrades.has(upgrade)) return false\n        const costIndex = VehicleUpgrades.toCostIndex(upgrade)\n        const upgradeCostOre = this.stats.upgradeCostOre?.[costIndex] ?? 0\n        const upgradeCostBrick = this.stats.upgradeCostStuds?.[costIndex] ?? 0\n        if (GameState.numBrick < upgradeCostBrick && GameState.numOre < upgradeCostOre) return false\n        const upgraded = new Set([...this.upgrades, upgrade])\n        const nextUpgradeLevel = VehicleUpgrades.toUpgradeString(upgraded)\n        return this.sceneEntity.animationData.some((animEntityData) => animEntityData.upgradesByLevel.get(nextUpgradeLevel))\n    }\n\n    addUpgrade(upgrade: VehicleUpgrade) {\n        this.upgrades.add(upgrade)\n        const upgradeLevel = VehicleUpgrades.toUpgradeString(this.upgrades)\n        this.sceneEntity.setUpgradeLevel(upgradeLevel)\n        this.level = parseInt(upgradeLevel, 2) // Number() does not support radix\n        const components = this.worldMgr.ecs.getComponents(this.entity)\n        components.get(HealthComponent).rockFallDamage = GameConfig.instance.getRockFallDamage(this.entityType, this.level)\n        const scannerRange = this.stats.surveyRadius?.[this.level] ?? 0\n        if (scannerRange) this.worldMgr.ecs.addComponent(this.entity, new ScannerComponent(scannerRange))\n    }\n\n    getRepairValue(): number {\n        return 0\n    }\n\n    getPosition(): Vector3 {\n        return this.worldMgr.ecs.getComponents(this.entity).get(PositionComponent).position.clone()\n    }\n\n    getPosition2D(): Vector2 {\n        return this.worldMgr.ecs.getComponents(this.entity).get(PositionComponent).getPosition2D()\n    }\n\n    setPosition(position: Vector3) {\n        const surface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld(position)\n        const positionComponent = this.worldMgr.ecs.getComponents(this.entity).get(PositionComponent)\n        if (positionComponent) {\n            positionComponent.position.copy(position)\n            positionComponent.surface = surface\n            positionComponent.markDirty()\n        }\n        this.carriedItems.forEach((carriedItem) => {\n            const carriedPositionComponent = this.worldMgr.ecs.getComponents(carriedItem.entity).get(PositionComponent)\n            if (carriedPositionComponent) {\n                carriedItem.sceneEntity.getWorldPosition(carriedPositionComponent.position)\n                carriedPositionComponent.surface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld(carriedPositionComponent.position)\n                carriedPositionComponent.markDirty()\n            }\n        })\n    }\n\n    getSurface(): Surface {\n        return this.worldMgr.ecs.getComponents(this.entity).get(PositionComponent).surface\n    }\n\n    private getNearbySurfaces(): Surface[] {\n        const surface = this.getSurface()\n        return [surface, ...surface.neighbors]\n    }\n\n    canLoad(): boolean {\n        const surfsToCheck = this.getNearbySurfaces()\n        const canPickupVehicle = this.stats.carryVehicles && !this.carriedVehicle && !this.portering && this.worldMgr.entityMgr.vehicles.some((v) => v.stats.vehicleCanBeCarried && surfsToCheck.includes(v.getSurface()))\n        const vehicleSurface = this.getSurface()\n        const canPickupMaterial = this.worldMgr.entityMgr.materials.some((m) => m.getSurface() === vehicleSurface)\n        return canPickupVehicle || canPickupMaterial\n    }\n\n    pickupNearbyEntity(): void {\n        const surfsToCheck = this.getNearbySurfaces()\n        if (this.stats.carryVehicles && !this.carriedVehicle) {\n            this.carriedVehicle = PRNG.movement.sample(this.worldMgr.entityMgr.vehicles.filter((v) => v.stats.vehicleCanBeCarried && surfsToCheck.includes(v.getSurface())))\n            if (this.carriedVehicle) {\n                this.loadCarriedVehicle()\n                return\n            }\n        }\n        // TODO Find closest material to pick up\n        console.warn('Picking up nearby material not yet implemented')\n    }\n\n    private loadCarriedVehicle() {\n        if (!this.carriedVehicle) return\n        this.portering = true\n        this.carriedVehicle.carriedBy = this.entity\n        if (this.carriedVehicle.selected) EventBroker.publish(new DeselectAll()) // XXX Only remove carried vehicle from selection\n        if (this.selected) EventBroker.publish(new SelectionChanged(this.worldMgr.entityMgr))\n        this.sceneEntity.headTowards(this.carriedVehicle.getPosition2D())\n        this.sceneEntity.setAnimation('Activity_Opening', () => {\n            if (!this.carriedVehicle) return // happens for beamup during load/unload\n            this.carriedVehicle.sceneEntity.rotation.set(0, Math.PI, 0) // XXX Why is rotation needed for float on animation?\n            this.sceneEntity.pickupEntity(this.carriedVehicle.sceneEntity)\n            this.carriedVehicle.sceneEntity.position.y = -8 // XXX Calculate offset from world positions?\n            this.carriedVehicle.sceneEntity.setAnimation('Activity_FloatOn', () => {\n                if (!this.carriedVehicle) return // happens for beamup during load/unload\n                this.carriedVehicle.sceneEntity.rotation.set(0, 0, 0)\n                this.carriedVehicle.sceneEntity.position.setScalar(0)\n                this.carriedVehicle.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                this.sceneEntity.setAnimation('Activity_Closing', () => {\n                    this.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                    this.portering = false\n                    if (this.selected) EventBroker.publish(new SelectionChanged(this.worldMgr.entityMgr))\n                })\n            })\n        })\n    }\n\n    unloadVehicle() {\n        const accessibleNeighbors = this.getSurface().neighbors.filter((n) => n.isWalkable()) // XXX Use accessible surface for the carried type\n        const direction = this.sceneEntity.getWorldDirection(new Vector3())\n        const targetedPosition = this.getSurface().getCenterWorld2D().add(new Vector2(direction.x, direction.z).setLength(TILESIZE))\n        const targetedSurface = this.getSurface().terrain.getSurfaceFromWorld2D(targetedPosition)\n        const unloadSurface = accessibleNeighbors.includes(targetedSurface) ? targetedSurface : PRNG.movement.sample(accessibleNeighbors)\n        if (!this.carriedVehicle || !unloadSurface) return\n        this.portering = true\n        const dropOffVehicle = this.carriedVehicle\n        this.carriedVehicle = undefined\n        if (this.selected) EventBroker.publish(new SelectionChanged(this.worldMgr.entityMgr))\n        this.sceneEntity.headTowards(unloadSurface.getCenterWorld2D())\n        this.sceneEntity.setAnimation('Activity_Opening', () => {\n            this.sceneEntity.removeAllCarried()\n            this.worldMgr.sceneMgr.addSceneEntity(dropOffVehicle.sceneEntity)\n            dropOffVehicle.sceneEntity.position.y -= 8 // XXX Calculate offset from world positions?\n            dropOffVehicle.sceneEntity.setAnimation('Activity_FloatOff', () => {\n                dropOffVehicle.sceneEntity.rotation.y += Math.PI // XXX Why is rotation needed for float off animation?\n                const unloadPosition = unloadSurface.getCenterWorld()\n                dropOffVehicle.sceneEntity.position.copy(unloadPosition)\n                dropOffVehicle.setPosition(unloadPosition)\n                dropOffVehicle.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                dropOffVehicle.carriedBy = undefined\n                this.sceneEntity.setAnimation('Activity_Closing', () => {\n                    this.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                    this.portering = false\n                    if (this.selected) EventBroker.publish(new SelectionChanged(this.worldMgr.entityMgr))\n                })\n            })\n        })\n    }\n}\n","import { VehicleEntityStats } from '../../../cfg/GameStatsCfg'\nimport { WorldManager } from '../../WorldManager'\nimport { RAIDER_ACTIVITY } from '../anim/AnimationActivity'\nimport { EntityType } from '../EntityType'\nimport { VehicleEntity } from './VehicleEntity'\nimport { GameConfig } from '../../../cfg/GameConfig'\n\nexport class VehicleFactory {\n    static createVehicleFromType(entityType: EntityType, worldMgr: WorldManager): VehicleEntity {\n        switch (entityType) {\n            case EntityType.HOVERBOARD:\n                return new VehicleEntity(entityType, worldMgr, GameConfig.instance.stats.hoverboard, ['Vehicles/Hoverboard'], RAIDER_ACTIVITY.standHoverboard, RAIDER_ACTIVITY.hoverboard)\n            case EntityType.SMALL_DIGGER:\n                return new VehicleEntity(entityType, worldMgr, GameConfig.instance.stats.smallDigger, ['Vehicles/SmallDigger'], RAIDER_ACTIVITY.standSmallDigger, RAIDER_ACTIVITY.smallDigger)\n            case EntityType.SMALL_TRUCK:\n                return new VehicleEntity(entityType, worldMgr, GameConfig.instance.stats.smallTruck, ['Vehicles/SmallTruck'], RAIDER_ACTIVITY.standSmallTruck, RAIDER_ACTIVITY.smallTruck)\n            case EntityType.SMALL_CAT:\n                return new VehicleEntity(entityType, worldMgr, GameConfig.instance.stats.smallCat, ['Vehicles/SmallCat'], RAIDER_ACTIVITY.standSmallCat, RAIDER_ACTIVITY.smallCat)\n            case EntityType.SMALL_MLP:\n                return new VehicleEntity(entityType, worldMgr, GameConfig.instance.stats.smallMlp, ['Vehicles/SMLP'], RAIDER_ACTIVITY.standSmallMLP, RAIDER_ACTIVITY.smallMlp)\n            case EntityType.SMALL_HELI:\n                return new VehicleEntity(entityType, worldMgr, GameConfig.instance.stats.smallHeli, ['Vehicles/SmallHeli'], RAIDER_ACTIVITY.standSmallHeli, RAIDER_ACTIVITY.smallHeli)\n            case EntityType.BULLDOZER:\n                return new VehicleEntity(entityType, worldMgr, GameConfig.instance.stats.bulldozer, ['Vehicles/Bulldozer'])\n            case EntityType.WALKER_DIGGER:\n                return new VehicleEntity(entityType, worldMgr, GameConfig.instance.stats.walkerDigger, ['Vehicles/WalkerLegs', 'Vehicles/WalkerBody'])\n            case EntityType.LARGE_MLP:\n                return new VehicleEntity(entityType, worldMgr, GameConfig.instance.stats.largeMlp, ['Vehicles/LMLP'])\n            case EntityType.LARGE_DIGGER:\n                return new VehicleEntity(entityType, worldMgr, GameConfig.instance.stats.largeDigger, ['Vehicles/LargeDigger'])\n            case EntityType.LARGE_CAT:\n                return new VehicleEntity(entityType, worldMgr, GameConfig.instance.stats.largeCat, ['Vehicles/LargeCat'], RAIDER_ACTIVITY.standLargeCat, RAIDER_ACTIVITY.largeCat)\n            case EntityType.LARGE_HELI:\n                return new VehicleEntity(entityType, worldMgr, GameConfig.instance.stats.largeHeli, ['Vehicles/LargeHeli'])\n            default:\n                throw new Error(`Unexpected vehicle type: ${entityType}`)\n        }\n    }\n\n    static getVehicleStatsByType(entityType: EntityType): VehicleEntityStats {\n        switch (entityType) {\n            case EntityType.HOVERBOARD:\n                return GameConfig.instance.stats.hoverboard\n            case EntityType.SMALL_DIGGER:\n                return GameConfig.instance.stats.smallDigger\n            case EntityType.SMALL_TRUCK:\n                return GameConfig.instance.stats.smallTruck\n            case EntityType.SMALL_CAT:\n                return GameConfig.instance.stats.smallCat\n            case EntityType.SMALL_MLP:\n                return GameConfig.instance.stats.smallMlp\n            case EntityType.SMALL_HELI:\n                return GameConfig.instance.stats.smallHeli\n            case EntityType.BULLDOZER:\n                return GameConfig.instance.stats.bulldozer\n            case EntityType.WALKER_DIGGER:\n                return GameConfig.instance.stats.walkerDigger\n            case EntityType.LARGE_MLP:\n                return GameConfig.instance.stats.largeMlp\n            case EntityType.LARGE_DIGGER:\n                return GameConfig.instance.stats.largeDigger\n            case EntityType.LARGE_CAT:\n                return GameConfig.instance.stats.largeCat\n            default:\n                throw new Error(`Unexpected entity type: ${entityType}`)\n        }\n    }\n}\n","import { Vector2 } from 'three'\nimport { ObjectListEntryCfg } from '../cfg/ObjectListEntryCfg'\nimport { FollowerSetLookAtEvent, RaidersAmountChangedEvent, UpdateRadarEntityEvent } from '../event/LocalEvents'\nimport { TILESIZE } from '../params'\nimport { BuildingEntity } from './model/building/BuildingEntity'\nimport { EntityType, getEntityTypeByName, VehicleEntityType } from './model/EntityType'\nimport { Raider } from './model/raider/Raider'\nimport { VehicleEntity } from './model/vehicle/VehicleEntity'\nimport { VehicleFactory } from './model/vehicle/VehicleFactory'\nimport { WorldManager } from './WorldManager'\nimport { MonsterSpawner } from './factory/MonsterSpawner'\nimport { SceneSelectionComponent } from './component/SceneSelectionComponent'\nimport { SelectionFrameComponent } from './component/SelectionFrameComponent'\nimport { MaterialSpawner } from './factory/MaterialSpawner'\nimport { ANIM_ENTITY_ACTIVITY } from './model/anim/AnimationActivity'\nimport { PositionComponent } from './component/PositionComponent'\nimport { RaiderTrainings } from './model/raider/RaiderTraining'\nimport { MAP_MARKER_CHANGE, MAP_MARKER_TYPE, MapMarkerComponent } from './component/MapMarkerComponent'\nimport { HealthComponent } from './component/HealthComponent'\nimport { OxygenComponent } from './component/OxygenComponent'\nimport { RaiderInfoComponent } from './component/RaiderInfoComponent'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { GameEntity } from './ECS'\nimport { EventBroker } from '../event/EventBroker'\nimport { degToRad } from 'three/src/math/MathUtils'\n\nexport class ObjectListLoader {\n    static numRaider: number = 0\n    static startVehicle: string = ''\n\n    readonly vehicleKeyToDriver = new Map<string, Raider>()\n    readonly vehicleByKey = new Map<string, VehicleEntity>()\n    trackEntity?: GameEntity\n\n    constructor(readonly worldMgr: WorldManager, readonly disableStartTeleport: boolean) {\n    }\n\n    loadObjectList(objectList: Map<string, ObjectListEntryCfg>) {\n        try {\n            objectList.forEach((olEntry, olKey) => {\n                try {\n                    this.loadObjectEntry(olEntry, olKey)\n                } catch (e) {\n                    console.error(e)\n                }\n            })\n            this.vehicleKeyToDriver.forEach((driver, vehicleKey) => {\n                const vehicle = this.vehicleByKey.get(vehicleKey)\n                if (!vehicle) {\n                    console.error(`Could not find vehicle (${vehicleKey}) for driver`, this.vehicleByKey, driver)\n                    return\n                }\n                driver.addTraining(vehicle.getRequiredTraining())\n                vehicle.addDriver(driver)\n            })\n            EventBroker.publish(new RaidersAmountChangedEvent(this.worldMgr.entityMgr))\n            if (this.trackEntity) EventBroker.publish(new FollowerSetLookAtEvent(this.trackEntity))\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    private loadObjectEntry(olEntry: ObjectListEntryCfg, olKey: string) {\n        const entityType = getEntityTypeByName(olEntry.type?.toLowerCase() || '')\n        // all object positions are off by one tile, because they start at 1 not 0\n        const worldPos = new Vector2(olEntry.xPos, olEntry.yPos).addScalar(-1).multiplyScalar(TILESIZE)\n        const headingRad = olEntry.heading ? degToRad(olEntry.heading) : 0\n        switch (entityType) {\n            case EntityType.TV_CAMERA:\n                const cameraOffset = new Vector2(5, 0).rotateAround(new Vector2(0, 0), headingRad + Math.PI / 2)\n                    .multiplyScalar(TILESIZE).add(worldPos)\n                const cameraPos = this.worldMgr.sceneMgr.getFloorPosition(cameraOffset)\n                cameraPos.y += 5 * TILESIZE\n                this.worldMgr.sceneMgr.cameraBird.position.copy(cameraPos)\n                this.worldMgr.sceneMgr.birdViewControls.target.copy(this.worldMgr.sceneMgr.getFloorPosition(worldPos))\n                this.worldMgr.sceneMgr.birdViewControls.update()\n                break\n            case EntityType.PILOT:\n                const raider = this.spawnRaider(worldPos, headingRad)\n                if (olEntry.driving) this.vehicleKeyToDriver.set(olEntry.driving, raider)\n                this.worldMgr.entityMgr.recordedEntities.push(raider.entity)\n                break\n            case EntityType.TOOLSTATION:\n            case EntityType.TELEPORT_PAD:\n            case EntityType.DOCKS:\n            case EntityType.POWER_STATION:\n            case EntityType.BARRACKS:\n            case EntityType.UPGRADE:\n            case EntityType.GEODOME:\n            case EntityType.ORE_REFINERY:\n            case EntityType.GUNSTATION:\n            case EntityType.TELEPORT_BIG:\n                worldPos.divideScalar(TILESIZE).roundToZero().add({x: 0.5, y: 0.5}).multiplyScalar(TILESIZE) // Always snap building position to the center of the given tile\n                const building = new BuildingEntity(this.worldMgr, entityType, worldPos, -headingRad - Math.PI, this.disableStartTeleport)\n                if (entityType === EntityType.TOOLSTATION) {\n                    if (!this.trackEntity && building.sceneEntity.visible) this.trackEntity = building.entity\n                    if (building.primaryPathSurface) {\n                        for (let c = 0; c < ObjectListLoader.numRaider; c++) {\n                            const randomPosition = building.primaryPathSurface.getRandomPosition()\n                            const raider = this.spawnRaider(randomPosition, headingRad - Math.PI)\n                            RaiderTrainings.values.forEach((t) => raider.addTraining(t))\n                        }\n                        if (ObjectListLoader.startVehicle) {\n                            const startVehicleEntityType = getEntityTypeByName(ObjectListLoader.startVehicle) as VehicleEntityType\n                            if (startVehicleEntityType) {\n                                const vehiclePos = building.primaryPathSurface.getCenterWorld2D()\n                                const vehicle = this.spawnVehicle(startVehicleEntityType, vehiclePos, headingRad - Math.PI)\n                                const driver = this.spawnRaider(vehiclePos, headingRad - Math.PI)\n                                RaiderTrainings.values.forEach((t) => driver.addTraining(t))\n                                vehicle.addDriver(driver)\n                            } else {\n                                console.warn(`Could not determine entity type for '${ObjectListLoader.startVehicle}'`)\n                            }\n                        }\n                    }\n                }\n                break\n            case EntityType.CRYSTAL:\n            case EntityType.ORE:\n            case EntityType.BRICK:\n            case EntityType.DEPLETED_CRYSTAL:\n                MaterialSpawner.spawnMaterial(this.worldMgr, entityType, worldPos, headingRad)\n                break\n            case EntityType.SMALL_SPIDER:\n            case EntityType.BAT:\n            case EntityType.ICE_MONSTER:\n            case EntityType.LAVA_MONSTER:\n            case EntityType.ROCK_MONSTER:\n                MonsterSpawner.spawnMonster(this.worldMgr, entityType, worldPos, -headingRad + Math.PI)\n                break\n            case EntityType.HOVERBOARD:\n            case EntityType.SMALL_DIGGER:\n            case EntityType.SMALL_TRUCK:\n            case EntityType.SMALL_CAT:\n            case EntityType.SMALL_MLP:\n            case EntityType.SMALL_HELI:\n            case EntityType.BULLDOZER:\n            case EntityType.WALKER_DIGGER:\n            case EntityType.LARGE_MLP:\n            case EntityType.LARGE_DIGGER:\n            case EntityType.LARGE_CAT:\n            case EntityType.LARGE_HELI:\n                const vehicle = this.spawnVehicle(entityType, worldPos, headingRad)\n                this.vehicleByKey.set(olKey, vehicle)\n                this.worldMgr.entityMgr.recordedEntities.push(vehicle.entity)\n                break\n            default:\n                console.warn(`Object type ${olEntry.type} not yet implemented`)\n                break\n        }\n    }\n\n    private spawnRaider(worldPos: Vector2, headingRad: number) {\n        const raider = new Raider(this.worldMgr, false)\n        raider.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n        const healthComponent = this.worldMgr.ecs.addComponent(raider.entity, new HealthComponent(false, 16, 10, raider.sceneEntity, true, GameConfig.instance.getRockFallDamage(raider.entityType, raider.level)))\n        this.worldMgr.sceneMgr.addSprite(healthComponent.healthBarSprite)\n        this.worldMgr.sceneMgr.addSprite(healthComponent.healthFontSprite)\n        this.worldMgr.ecs.addComponent(raider.entity, new OxygenComponent(raider.stats.oxygenCoef))\n        const infoComp = this.worldMgr.ecs.addComponent(raider.entity, new RaiderInfoComponent(raider.sceneEntity))\n        this.worldMgr.sceneMgr.addSprite(infoComp.bubbleSprite)\n        infoComp.setHungerIndicator(raider.foodLevel)\n        const sceneSelectionComponent = new SceneSelectionComponent(raider.sceneEntity, {gameEntity: raider.entity, entityType: raider.entityType}, raider.stats)\n        const raiderSceneSelection = this.worldMgr.ecs.addComponent(raider.entity, sceneSelectionComponent)\n        this.worldMgr.ecs.addComponent(raider.entity, new SelectionFrameComponent(raiderSceneSelection.pickSphere, raider.stats))\n        const floorPosition = this.worldMgr.sceneMgr.getFloorPosition(worldPos)\n        const surface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld(floorPosition)\n        const positionComponent = this.worldMgr.ecs.addComponent(raider.entity, new PositionComponent(floorPosition, surface))\n        raider.sceneEntity.position.copy(floorPosition)\n        raider.sceneEntity.position.y += positionComponent.floorOffset\n        raider.sceneEntity.rotation.y = headingRad - Math.PI / 2\n        raider.sceneEntity.visible = surface.discovered\n        this.worldMgr.sceneMgr.addSceneEntity(raider.sceneEntity)\n        if (raider.sceneEntity.visible) {\n            this.worldMgr.entityMgr.raiders.push(raider)\n            this.worldMgr.ecs.addComponent(raider.entity, new MapMarkerComponent(MAP_MARKER_TYPE.default))\n            EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.default, raider.entity, MAP_MARKER_CHANGE.update, floorPosition))\n            if (!this.trackEntity) this.trackEntity = raider.entity\n        } else {\n            this.worldMgr.entityMgr.raidersUndiscovered.push(raider)\n        }\n        return raider\n    }\n\n    private spawnVehicle(entityType: VehicleEntityType, worldPos: Vector2, headingRad: number) {\n        const vehicle = VehicleFactory.createVehicleFromType(entityType, this.worldMgr)\n        vehicle.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n        const healthComponent = this.worldMgr.ecs.addComponent(vehicle.entity, new HealthComponent(false, 24, 14, vehicle.sceneEntity, false, GameConfig.instance.getRockFallDamage(vehicle.entityType, vehicle.level)))\n        this.worldMgr.sceneMgr.addSprite(healthComponent.healthBarSprite)\n        this.worldMgr.sceneMgr.addSprite(healthComponent.healthFontSprite)\n        const sceneSelectionComponent = new SceneSelectionComponent(vehicle.sceneEntity, {gameEntity: vehicle.entity, entityType: vehicle.entityType}, vehicle.stats)\n        const vehicleSceneSelection = this.worldMgr.ecs.addComponent(vehicle.entity, sceneSelectionComponent)\n        this.worldMgr.ecs.addComponent(vehicle.entity, new SelectionFrameComponent(vehicleSceneSelection.pickSphere, vehicle.stats))\n        const floorPosition = this.worldMgr.sceneMgr.getFloorPosition(worldPos)\n        const surface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld(floorPosition)\n        const positionComponent = this.worldMgr.ecs.addComponent(vehicle.entity, new PositionComponent(floorPosition, surface))\n        vehicle.sceneEntity.position.copy(floorPosition)\n        vehicle.sceneEntity.position.y += positionComponent.floorOffset\n        vehicle.sceneEntity.rotation.y = headingRad + Math.PI\n        vehicle.sceneEntity.visible = surface.discovered\n        this.worldMgr.sceneMgr.addSceneEntity(vehicle.sceneEntity)\n        if (vehicle.sceneEntity.visible) {\n            this.worldMgr.entityMgr.vehicles.push(vehicle)\n            this.worldMgr.ecs.addComponent(vehicle.entity, new MapMarkerComponent(MAP_MARKER_TYPE.default))\n            EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.default, vehicle.entity, MAP_MARKER_CHANGE.update, floorPosition))\n        } else {\n            this.worldMgr.entityMgr.vehiclesUndiscovered.push(vehicle)\n        }\n        return vehicle\n    }\n}\n","import {\n\tControls,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n/**\n * Fires when the camera has been transformed by the controls.\n *\n * @event OrbitControls#change\n * @type {Object}\n */\nconst _changeEvent = { type: 'change' };\n\n/**\n * Fires when an interaction was initiated.\n *\n * @event OrbitControls#start\n * @type {Object}\n */\nconst _startEvent = { type: 'start' };\n\n/**\n * Fires when an interaction has finished.\n *\n * @event OrbitControls#end\n * @type {Object}\n */\nconst _endEvent = { type: 'end' };\n\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst _TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nconst _v = new Vector3();\nconst _twoPI = 2 * Math.PI;\n\nconst _STATE = {\n\tNONE: - 1,\n\tROTATE: 0,\n\tDOLLY: 1,\n\tPAN: 2,\n\tTOUCH_ROTATE: 3,\n\tTOUCH_PAN: 4,\n\tTOUCH_DOLLY_PAN: 5,\n\tTOUCH_DOLLY_ROTATE: 6\n};\nconst _EPS = 0.000001;\n\n\n/**\n * Orbit controls allow the camera to orbit around a target.\n *\n * OrbitControls performs orbiting, dollying (zooming), and panning. Unlike {@link TrackballControls},\n * it maintains the \"up\" direction `object.up` (+Y by default).\n *\n * - Orbit: Left mouse / touch: one-finger move.\n * - Zoom: Middle mouse, or mousewheel / touch: two-finger spread or squish.\n * - Pan: Right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move.\n *\n * ```js\n * const controls = new OrbitControls( camera, renderer.domElement );\n *\n * // controls.update() must be called after any manual changes to the camera's transform\n * camera.position.set( 0, 20, 100 );\n * controls.update();\n *\n * function animate() {\n *\n * \t// required if controls.enableDamping or controls.autoRotate are set to true\n * \tcontrols.update();\n *\n * \trenderer.render( scene, camera );\n *\n * }\n * ```\n *\n * @augments Controls\n * @three_import import { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n */\nclass OrbitControls extends Controls {\n\n\t/**\n\t * Constructs a new controls instance.\n\t *\n\t * @param {Object3D} object - The object that is managed by the controls.\n\t * @param {?HTMLDOMElement} domElement - The HTML element used for event listeners.\n\t */\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.state = _STATE.NONE;\n\n\t\t/**\n\t\t * The focus point of the controls, the `object` orbits around this.\n\t\t * It can be updated manually at any point to change the focus of the controls.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.target = new Vector3();\n\n\t\t/**\n\t\t * The focus point of the `minTargetRadius` and `maxTargetRadius` limits.\n\t\t * It can be updated manually at any point to change the center of interest\n\t\t * for the `target`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.cursor = new Vector3();\n\n\t\t/**\n\t\t * How far you can dolly in (perspective camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minDistance = 0;\n\n\t\t/**\n\t\t * How far you can dolly out (perspective camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxDistance = Infinity;\n\n\t\t/**\n\t\t * How far you can zoom in (orthographic camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minZoom = 0;\n\n\t\t/**\n\t\t * How far you can zoom out (orthographic camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxZoom = Infinity;\n\n\t\t/**\n\t\t * How close you can get the target to the 3D `cursor`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minTargetRadius = 0;\n\n\t\t/**\n\t\t * How far you can move the target from the 3D `cursor`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t/**\n\t\t * How far you can orbit vertically, lower limit. Range is `[0, Math.PI]` radians.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minPolarAngle = 0;\n\n\t\t/**\n\t\t * How far you can orbit vertically, upper limit. Range is `[0, Math.PI]` radians.\n\t\t *\n\t\t * @type {number}\n\t\t * @default Math.PI\n\t\t */\n\t\tthis.maxPolarAngle = Math.PI;\n\n\t\t/**\n\t\t * How far you can orbit horizontally, lower limit. If set, the interval `[ min, max ]`\n\t\t * must be a sub-interval of `[ - 2 PI, 2 PI ]`, with `( max - min < 2 PI )`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default -Infinity\n\t\t */\n\t\tthis.minAzimuthAngle = - Infinity;\n\n\t\t/**\n\t\t * How far you can orbit horizontally, upper limit. If set, the interval `[ min, max ]`\n\t\t * must be a sub-interval of `[ - 2 PI, 2 PI ]`, with `( max - min < 2 PI )`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default -Infinity\n\t\t */\n\t\tthis.maxAzimuthAngle = Infinity;\n\n\t\t/**\n\t\t * Set to `true` to enable damping (inertia), which can be used to give a sense of weight\n\t\t * to the controls. Note that if this is enabled, you must call `update()` in your animation\n\t\t * loop.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.enableDamping = false;\n\n\t\t/**\n\t\t * The damping inertia used if `enableDamping` is set to `true`.\n\t\t *\n\t\t * Note that for this to work, you must call `update()` in your animation loop.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0.05\n\t\t */\n\t\tthis.dampingFactor = 0.05;\n\n\t\t/**\n\t\t * Enable or disable zooming (dollying) of the camera.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enableZoom = true;\n\n\t\t/**\n\t\t * Speed of zooming / dollying.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t/**\n\t\t * Enable or disable horizontal and vertical rotation of the camera.\n\t\t *\n\t\t * Note that it is possible to disable a single axis by setting the min and max of the\n\t\t * `minPolarAngle` or `minAzimuthAngle` to the same value, which will cause the vertical\n\t\t * or horizontal rotation to be fixed at that value.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enableRotate = true;\n\n\t\t/**\n\t\t * Speed of rotation.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t/**\n\t\t * How fast to rotate the camera when the keyboard is used.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.keyRotateSpeed = 1.0;\n\n\t\t/**\n\t\t * Enable or disable camera panning.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enablePan = true;\n\n\t\t/**\n\t\t * Speed of panning.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.panSpeed = 1.0;\n\n\t\t/**\n\t\t * Defines how the camera's position is translated when panning. If `true`, the camera pans\n\t\t * in screen space. Otherwise, the camera pans in the plane orthogonal to the camera's up\n\t\t * direction.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.screenSpacePanning = true;\n\n\t\t/**\n\t\t * How fast to pan the camera when the keyboard is used in\n\t\t * pixels per keypress.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 7\n\t\t */\n\t\tthis.keyPanSpeed = 7.0;\n\n\t\t/**\n\t\t * Setting this property to `true` allows to zoom to the cursor's position.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.zoomToCursor = false;\n\n\t\t/**\n\t\t * Set to true to automatically rotate around the target\n\t\t *\n\t\t * Note that if this is enabled, you must call `update()` in your animation loop.\n\t\t * If you want the auto-rotate speed to be independent of the frame rate (the refresh\n\t\t * rate of the display), you must pass the time `deltaTime`, in seconds, to `update()`.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.autoRotate = false;\n\n\t\t/**\n\t\t * How fast to rotate around the target if `autoRotate` is `true`. The default  equates to 30 seconds\n\t\t * per orbit at 60fps.\n\t\t *\n\t\t * Note that if `autoRotate` is enabled, you must call `update()` in your animation loop.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 2\n\t\t */\n\t\tthis.autoRotateSpeed = 2.0;\n\n\t\t/**\n\t\t * This object contains references to the keycodes for controlling camera panning.\n\t\t *\n\t\t * ```js\n\t\t * controls.keys = {\n\t\t * \tLEFT: 'ArrowLeft', //left arrow\n\t\t * \tUP: 'ArrowUp', // up arrow\n\t\t * \tRIGHT: 'ArrowRight', // right arrow\n\t\t * \tBOTTOM: 'ArrowDown' // down arrow\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t/**\n\t\t * This object contains references to the mouse actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tLEFT: THREE.MOUSE.ROTATE,\n\t\t * \tMIDDLE: THREE.MOUSE.DOLLY,\n\t\t * \tRIGHT: THREE.MOUSE.PAN\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t/**\n\t\t * This object contains references to the touch actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tONE: THREE.TOUCH.ROTATE,\n\t\t * \tTWO: THREE.TOUCH.DOLLY_PAN\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.target0 = this.target.clone();\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.position0 = this.object.position.clone();\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t// internals\n\n\t\tthis._lastPosition = new Vector3();\n\t\tthis._lastQuaternion = new Quaternion();\n\t\tthis._lastTargetPosition = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tthis._quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tthis._quatInverse = this._quat.clone().invert();\n\n\t\t// current position in spherical coordinates\n\t\tthis._spherical = new Spherical();\n\t\tthis._sphericalDelta = new Spherical();\n\n\t\tthis._scale = 1;\n\t\tthis._panOffset = new Vector3();\n\n\t\tthis._rotateStart = new Vector2();\n\t\tthis._rotateEnd = new Vector2();\n\t\tthis._rotateDelta = new Vector2();\n\n\t\tthis._panStart = new Vector2();\n\t\tthis._panEnd = new Vector2();\n\t\tthis._panDelta = new Vector2();\n\n\t\tthis._dollyStart = new Vector2();\n\t\tthis._dollyEnd = new Vector2();\n\t\tthis._dollyDelta = new Vector2();\n\n\t\tthis._dollyDirection = new Vector3();\n\t\tthis._mouse = new Vector2();\n\t\tthis._performCursorZoom = false;\n\n\t\tthis._pointers = [];\n\t\tthis._pointerPositions = {};\n\n\t\tthis._controlActive = false;\n\n\t\t// event listeners\n\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\t\tthis._onContextMenu = onContextMenu.bind( this );\n\t\tthis._onMouseWheel = onMouseWheel.bind( this );\n\t\tthis._onKeyDown = onKeyDown.bind( this );\n\n\t\tthis._onTouchStart = onTouchStart.bind( this );\n\t\tthis._onTouchMove = onTouchMove.bind( this );\n\n\t\tthis._onMouseDown = onMouseDown.bind( this );\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\n\t\tthis._interceptControlDown = interceptControlDown.bind( this );\n\t\tthis._interceptControlUp = interceptControlUp.bind( this );\n\n\t\t//\n\n\t\tif ( this.domElement !== null ) {\n\n\t\t\tthis.connect( this.domElement );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\tconnect( element ) {\n\n\t\tsuper.connect( element );\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.addEventListener( 'contextmenu', this._onContextMenu );\n\t\tthis.domElement.addEventListener( 'wheel', this._onMouseWheel, { passive: false } );\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.addEventListener( 'keydown', this._interceptControlDown, { passive: true, capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\t\tthis.domElement.removeEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.removeEventListener( 'wheel', this._onMouseWheel );\n\t\tthis.domElement.removeEventListener( 'contextmenu', this._onContextMenu );\n\n\t\tthis.stopListenToKeyEvents();\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.removeEventListener( 'keydown', this._interceptControlDown, { capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'auto';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\t/**\n\t * Get the current vertical rotation, in radians.\n\t *\n\t * @return {number} The current vertical rotation, in radians.\n\t */\n\tgetPolarAngle() {\n\n\t\treturn this._spherical.phi;\n\n\t}\n\n\t/**\n\t * Get the current horizontal rotation, in radians.\n\t *\n\t * @return {number} The current horizontal rotation, in radians.\n\t */\n\tgetAzimuthalAngle() {\n\n\t\treturn this._spherical.theta;\n\n\t}\n\n\t/**\n\t * Returns the distance from the camera to the target.\n\t *\n\t * @return {number} The distance from the camera to the target.\n\t */\n\tgetDistance() {\n\n\t\treturn this.object.position.distanceTo( this.target );\n\n\t}\n\n\t/**\n\t * Adds key event listeners to the given DOM element.\n\t * `window` is a recommended argument for using this method.\n\t *\n\t * @param {HTMLDOMElement} domElement - The DOM element\n\t */\n\tlistenToKeyEvents( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', this._onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t}\n\n\t/**\n\t * Removes the key event listener previously defined with `listenToKeyEvents()`.\n\t */\n\tstopListenToKeyEvents() {\n\n\t\tif ( this._domElementKeyEvents !== null ) {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', this._onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Save the current state of the controls. This can later be recovered with `reset()`.\n\t */\n\tsaveState() {\n\n\t\tthis.target0.copy( this.target );\n\t\tthis.position0.copy( this.object.position );\n\t\tthis.zoom0 = this.object.zoom;\n\n\t}\n\n\t/**\n\t * Reset the controls to their state from either the last time the `saveState()`\n\t * was called, or the initial state.\n\t */\n\treset() {\n\n\t\tthis.target.copy( this.target0 );\n\t\tthis.object.position.copy( this.position0 );\n\t\tthis.object.zoom = this.zoom0;\n\n\t\tthis.object.updateProjectionMatrix();\n\t\tthis.dispatchEvent( _changeEvent );\n\n\t\tthis.update();\n\n\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tupdate( deltaTime = null ) {\n\n\t\tconst position = this.object.position;\n\n\t\t_v.copy( position ).sub( this.target );\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t_v.applyQuaternion( this._quat );\n\n\t\t// angle from z-axis around y-axis\n\t\tthis._spherical.setFromVector3( _v );\n\n\t\tif ( this.autoRotate && this.state === _STATE.NONE ) {\n\n\t\t\tthis._rotateLeft( this._getAutoRotationAngle( deltaTime ) );\n\n\t\t}\n\n\t\tif ( this.enableDamping ) {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta * this.dampingFactor;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi * this.dampingFactor;\n\n\t\t} else {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi;\n\n\t\t}\n\n\t\t// restrict theta to be between desired limits\n\n\t\tlet min = this.minAzimuthAngle;\n\t\tlet max = this.maxAzimuthAngle;\n\n\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\tif ( min < - Math.PI ) min += _twoPI; else if ( min > Math.PI ) min -= _twoPI;\n\n\t\t\tif ( max < - Math.PI ) max += _twoPI; else if ( max > Math.PI ) max -= _twoPI;\n\n\t\t\tif ( min <= max ) {\n\n\t\t\t\tthis._spherical.theta = Math.max( min, Math.min( max, this._spherical.theta ) );\n\n\t\t\t} else {\n\n\t\t\t\tthis._spherical.theta = ( this._spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\tMath.max( min, this._spherical.theta ) :\n\t\t\t\t\tMath.min( max, this._spherical.theta );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restrict phi to be between desired limits\n\t\tthis._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n\n\t\tthis._spherical.makeSafe();\n\n\n\t\t// move target to panned location\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis.target.addScaledVector( this._panOffset, this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis.target.add( this._panOffset );\n\n\t\t}\n\n\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\tthis.target.sub( this.cursor );\n\t\tthis.target.clampLength( this.minTargetRadius, this.maxTargetRadius );\n\t\tthis.target.add( this.cursor );\n\n\t\tlet zoomChanged = false;\n\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t// we adjust zoom later in these cases\n\t\tif ( this.zoomToCursor && this._performCursorZoom || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius );\n\n\t\t} else {\n\n\t\t\tconst prevRadius = this._spherical.radius;\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius * this._scale );\n\t\t\tzoomChanged = prevRadius != this._spherical.radius;\n\n\t\t}\n\n\t\t_v.setFromSpherical( this._spherical );\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t_v.applyQuaternion( this._quatInverse );\n\n\t\tposition.copy( this.target ).add( _v );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis._sphericalDelta.theta *= ( 1 - this.dampingFactor );\n\t\t\tthis._sphericalDelta.phi *= ( 1 - this.dampingFactor );\n\n\t\t\tthis._panOffset.multiplyScalar( 1 - this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis._sphericalDelta.set( 0, 0, 0 );\n\n\t\t\tthis._panOffset.set( 0, 0, 0 );\n\n\t\t}\n\n\t\t// adjust camera position\n\t\tif ( this.zoomToCursor && this._performCursorZoom ) {\n\n\t\t\tlet newRadius = null;\n\t\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t// this method avoids floating point error\n\t\t\t\tconst prevRadius = _v.length();\n\t\t\t\tnewRadius = this._clampDistance( prevRadius * this._scale );\n\n\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\tthis.object.position.addScaledVector( this._dollyDirection, radiusDelta );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\tconst mouseBefore = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseBefore.unproject( this.object );\n\n\t\t\t\tconst prevZoom = this.object.zoom;\n\t\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\t\t\t\tthis.object.updateProjectionMatrix();\n\n\t\t\t\tzoomChanged = prevZoom !== this.object.zoom;\n\n\t\t\t\tconst mouseAfter = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseAfter.unproject( this.object );\n\n\t\t\t\tthis.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tnewRadius = _v.length();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\tthis.zoomToCursor = false;\n\n\t\t\t}\n\n\t\t\t// handle the placement of the target\n\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\tthis.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t.transformDirection( this.object.matrix )\n\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t.add( this.object.position );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t_ray.origin.copy( this.object.position );\n\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( this.object.matrix );\n\n\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t// extremely large values\n\t\t\t\t\tif ( Math.abs( this.object.up.dot( _ray.direction ) ) < _TILT_LIMIT ) {\n\n\t\t\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( this.object.up, this.target );\n\t\t\t\t\t\t_ray.intersectPlane( _plane, this.target );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\tconst prevZoom = this.object.zoom;\n\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\n\t\t\tif ( prevZoom !== this.object.zoom ) {\n\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._scale = 1;\n\t\tthis._performCursorZoom = false;\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif ( zoomChanged ||\n\t\t\tthis._lastPosition.distanceToSquared( this.object.position ) > _EPS ||\n\t\t\t8 * ( 1 - this._lastQuaternion.dot( this.object.quaternion ) ) > _EPS ||\n\t\t\tthis._lastTargetPosition.distanceToSquared( this.target ) > _EPS ) {\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\n\t\t\tthis._lastPosition.copy( this.object.position );\n\t\t\tthis._lastQuaternion.copy( this.object.quaternion );\n\t\t\tthis._lastTargetPosition.copy( this.target );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_getAutoRotationAngle( deltaTime ) {\n\n\t\tif ( deltaTime !== null ) {\n\n\t\t\treturn ( _twoPI / 60 * this.autoRotateSpeed ) * deltaTime;\n\n\t\t} else {\n\n\t\t\treturn _twoPI / 60 / 60 * this.autoRotateSpeed;\n\n\t\t}\n\n\t}\n\n\t_getZoomScale( delta ) {\n\n\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\treturn Math.pow( 0.95, this.zoomSpeed * normalizedDelta );\n\n\t}\n\n\t_rotateLeft( angle ) {\n\n\t\tthis._sphericalDelta.theta -= angle;\n\n\t}\n\n\t_rotateUp( angle ) {\n\n\t\tthis._sphericalDelta.phi -= angle;\n\n\t}\n\n\t_panLeft( distance, objectMatrix ) {\n\n\t\t_v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t_v.multiplyScalar( - distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t_panUp( distance, objectMatrix ) {\n\n\t\tif ( this.screenSpacePanning === true ) {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t} else {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t_v.crossVectors( this.object.up, _v );\n\n\t\t}\n\n\t\t_v.multiplyScalar( distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\t_pan( deltaX, deltaY ) {\n\n\t\tconst element = this.domElement;\n\n\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t// perspective\n\t\t\tconst position = this.object.position;\n\t\t\t_v.copy( position ).sub( this.target );\n\t\t\tlet targetDistance = _v.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( ( this.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\tthis._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.object.matrix );\n\t\t\tthis._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.object.matrix );\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t// orthographic\n\t\t\tthis._panLeft( deltaX * ( this.object.right - this.object.left ) / this.object.zoom / element.clientWidth, this.object.matrix );\n\t\t\tthis._panUp( deltaY * ( this.object.top - this.object.bottom ) / this.object.zoom / element.clientHeight, this.object.matrix );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic nor perspective\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\tthis.enablePan = false;\n\n\t\t}\n\n\t}\n\n\t_dollyOut( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale /= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_dollyIn( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale *= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_updateZoomParameters( x, y ) {\n\n\t\tif ( ! this.zoomToCursor ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._performCursorZoom = true;\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\t\tconst dx = x - rect.left;\n\t\tconst dy = y - rect.top;\n\t\tconst w = rect.width;\n\t\tconst h = rect.height;\n\n\t\tthis._mouse.x = ( dx / w ) * 2 - 1;\n\t\tthis._mouse.y = - ( dy / h ) * 2 + 1;\n\n\t\tthis._dollyDirection.set( this._mouse.x, this._mouse.y, 1 ).unproject( this.object ).sub( this.object.position ).normalize();\n\n\t}\n\n\t_clampDistance( dist ) {\n\n\t\treturn Math.max( this.minDistance, Math.min( this.maxDistance, dist ) );\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\t_handleMouseDownRotate( event ) {\n\n\t\tthis._rotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownDolly( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientX );\n\t\tthis._dollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownPan( event ) {\n\n\t\tthis._panStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseMoveRotate( event ) {\n\n\t\tthis._rotateEnd.set( event.clientX, event.clientY );\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMoveDolly( event ) {\n\n\t\tthis._dollyEnd.set( event.clientX, event.clientY );\n\n\t\tthis._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n\t\tif ( this._dollyDelta.y > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t} else if ( this._dollyDelta.y < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t}\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMovePan( event ) {\n\n\t\tthis._panEnd.set( event.clientX, event.clientY );\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseWheel( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientY );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( event.deltaY ) );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( event.deltaY ) );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\t_handleKeyDown( event ) {\n\n\t\tlet needsUpdate = false;\n\n\t\tswitch ( event.code ) {\n\n\t\t\tcase this.keys.UP:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.BOTTOM:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, - this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.RIGHT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( - this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.update();\n\n\t\t}\n\n\n\t}\n\n\t_handleTouchStartRotate( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._rotateStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartPan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyStart.set( 0, distance );\n\n\t}\n\n\t_handleTouchStartDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchStartPan( event );\n\n\t}\n\n\t_handleTouchStartDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchStartRotate( event );\n\n\t}\n\n\t_handleTouchMoveRotate( event ) {\n\n\t\tif ( this._pointers.length == 1 ) {\n\n\t\t\tthis._rotateEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t}\n\n\t_handleTouchMovePan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t}\n\n\t_handleTouchMoveDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyEnd.set( 0, distance );\n\n\t\tthis._dollyDelta.set( 0, Math.pow( this._dollyEnd.y / this._dollyStart.y, this.zoomSpeed ) );\n\n\t\tthis._dollyOut( this._dollyDelta.y );\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\tthis._updateZoomParameters( centerX, centerY );\n\n\t}\n\n\t_handleTouchMoveDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchMovePan( event );\n\n\t}\n\n\t_handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchMoveRotate( event );\n\n\t}\n\n\t// pointers\n\n\t_addPointer( event ) {\n\n\t\tthis._pointers.push( event.pointerId );\n\n\t}\n\n\t_removePointer( event ) {\n\n\t\tdelete this._pointerPositions[ event.pointerId ];\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) {\n\n\t\t\t\tthis._pointers.splice( i, 1 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_isTrackingPointer( event ) {\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_trackPointer( event ) {\n\n\t\tlet position = this._pointerPositions[ event.pointerId ];\n\n\t\tif ( position === undefined ) {\n\n\t\t\tposition = new Vector2();\n\t\t\tthis._pointerPositions[ event.pointerId ] = position;\n\n\t\t}\n\n\t\tposition.set( event.pageX, event.pageY );\n\n\t}\n\n\t_getSecondPointerPosition( event ) {\n\n\t\tconst pointerId = ( event.pointerId === this._pointers[ 0 ] ) ? this._pointers[ 1 ] : this._pointers[ 0 ];\n\n\t\treturn this._pointerPositions[ pointerId ];\n\n\t}\n\n\t//\n\n\t_customWheelEvent( event ) {\n\n\t\tconst mode = event.deltaMode;\n\n\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\tconst newEvent = {\n\t\t\tclientX: event.clientX,\n\t\t\tclientY: event.clientY,\n\t\t\tdeltaY: event.deltaY,\n\t\t};\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 1: // LINE_MODE\n\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // PAGE_MODE\n\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// detect if event was triggered by pinching\n\t\tif ( event.ctrlKey && ! this._controlActive ) {\n\n\t\t\tnewEvent.deltaY *= 10;\n\n\t\t}\n\n\t\treturn newEvent;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( this._pointers.length === 0 ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t//\n\n\tif ( this._isTrackingPointer( event ) ) return;\n\n\t//\n\n\tthis._addPointer( event );\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchStart( event );\n\n\t} else {\n\n\t\tthis._onMouseDown( event );\n\n\t}\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchMove( event );\n\n\t} else {\n\n\t\tthis._onMouseMove( event );\n\n\t}\n\n}\n\nfunction onPointerUp( event ) {\n\n\tthis._removePointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 0:\n\n\t\t\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\t\tthis.dispatchEvent( _endEvent );\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tconst pointerId = this._pointers[ 0 ];\n\t\t\tconst position = this._pointerPositions[ pointerId ];\n\n\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\tthis._onTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseDown( event ) {\n\n\tlet mouseAction;\n\n\tswitch ( event.button ) {\n\n\t\tcase 0:\n\n\t\t\tmouseAction = this.mouseButtons.LEFT;\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tmouseAction = this.mouseButtons.MIDDLE;\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tmouseAction = this.mouseButtons.RIGHT;\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tmouseAction = - 1;\n\n\t}\n\n\tswitch ( mouseAction ) {\n\n\t\tcase MOUSE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseDownDolly( event );\n\n\t\t\tthis.state = _STATE.DOLLY;\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.ROTATE:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.PAN:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onMouseMove( event ) {\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleMouseMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseMoveDolly( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleMouseMovePan( event );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseWheel( event ) {\n\n\tif ( this.enabled === false || this.enableZoom === false || this.state !== _STATE.NONE ) return;\n\n\tevent.preventDefault();\n\n\tthis.dispatchEvent( _startEvent );\n\n\tthis._handleMouseWheel( this._customWheelEvent( event ) );\n\n\tthis.dispatchEvent( _endEvent );\n\n}\n\nfunction onKeyDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tthis._handleKeyDown( event );\n\n}\n\nfunction onTouchStart( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 1:\n\n\t\t\tswitch ( this.touches.ONE ) {\n\n\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tswitch ( this.touches.TWO ) {\n\n\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onTouchMove( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.TOUCH_ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMovePan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_PAN:\n\n\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyPan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n}\n\nfunction onContextMenu( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tevent.preventDefault();\n\n}\n\nfunction interceptControlDown( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = true;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nfunction interceptControlUp( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = false;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.removeEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nexport { OrbitControls };\n","import { MOUSE, TOUCH } from 'three';\n\nimport { OrbitControls } from './OrbitControls.js';\n\n/**\n * This class is intended for transforming a camera over a map from bird's eye perspective.\n * The class shares its implementation with {@link OrbitControls} but uses a specific preset\n * for mouse/touch interaction and disables screen space panning by default.\n *\n * - Orbit: Right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate.\n * - Zoom: Middle mouse, or mousewheel / touch: two-finger spread or squish.\n * - Pan: Left mouse, or arrow keys / touch: one-finger move.\n *\n * @augments OrbitControls\n * @three_import import { MapControls } from 'three/addons/controls/MapControls.js';\n */\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\t/**\n\t\t * Overwritten and set to `false` to pan orthogonal to world-space direction `camera.up`.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.screenSpacePanning = false;\n\n\t\t/**\n\t\t * This object contains references to the mouse actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tLEFT: THREE.MOUSE.PAN,\n\t\t * \tMIDDLE: THREE.MOUSE.DOLLY,\n\t\t * \tRIGHT: THREE.MOUSE.ROTATE\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.mouseButtons = { LEFT: MOUSE.PAN, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.ROTATE };\n\n\t\t/**\n\t\t * This object contains references to the touch actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tONE: THREE.TOUCH.PAN,\n\t\t * \tTWO: THREE.TOUCH.DOLLY_ROTATE\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.touches = { ONE: TOUCH.PAN, TWO: TOUCH.DOLLY_ROTATE };\n\n\t}\n\n}\n\nexport { MapControls };\n","import { MapControls } from 'three/examples/jsm/controls/MapControls'\nimport { Camera, MOUSE, Object3D, Vector3 } from 'three'\nimport { CAMERA_MAX_SHAKE_BUMP, CAMERA_MAX_SHAKE_TILES, KEY_PAN_SPEED, NATIVE_UPDATE_INTERVAL, TILESIZE, USE_KEYBOARD_SHORTCUTS } from '../params'\nimport { MOUSE_BUTTON } from '../event/EventTypeEnum'\nimport { degToRad } from 'three/src/math/MathUtils'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { EventBroker } from '../event/EventBroker'\nimport { EventKey } from '../event/EventKeyEnum'\nimport { DynamiteExplosionEvent } from '../event/WorldEvents'\nimport { SaveGameManager } from '../resource/SaveGameManager'\n\nexport const CAMERA_ROTATION = {\n    none: 0,\n    left: 1,\n    up: 2,\n    right: 3,\n    down: 4,\n} as const\nexport type CameraRotation = typeof CAMERA_ROTATION[keyof typeof CAMERA_ROTATION]\n\nexport class BirdViewControls extends MapControls {\n    private readonly dummyPointerId: number\n    private lockBuild: boolean = false\n    moveTarget?: Vector3\n    lastPanKey: string = ''\n    lockedObject?: Object3D\n    disabled: boolean = false\n    gamePaused: boolean = false\n    shakeOffset: Vector3 = new Vector3()\n    shakeOrigin: Vector3 = new Vector3()\n    shakeTimeout: number = 0\n    bumpTimeout: number = 0\n    buildingCycleIndex: number = 0\n\n    constructor(camera: Camera, readonly domElement: HTMLCanvasElement) { // overwrite domElement to make addEventListener below return KeyboardEvents\n        super(camera, domElement)\n        this.dummyPointerId = this.verifyPointerId()\n        this.mouseButtons = {LEFT: null, MIDDLE: MOUSE.ROTATE, RIGHT: MOUSE.PAN}\n        this.listenToKeyEvents(domElement)\n        this.keyPanSpeed = this.keyPanSpeed * KEY_PAN_SPEED\n        if (!SaveGameManager.preferences.cameraUnlimited) {\n            this.minDistance = GameConfig.instance.main.minDist\n            this.maxDistance = GameConfig.instance.main.maxDist\n            this.minPolarAngle = degToRad(GameConfig.instance.main.minTilt)\n            this.maxPolarAngle = degToRad(GameConfig.instance.main.maxTilt)\n        }\n        if (!USE_KEYBOARD_SHORTCUTS) this.useWASDToPanAndArrowKeysToRotate()\n        EventBroker.subscribe(EventKey.PAUSE_GAME, () => {\n            this.gamePaused = true\n            this.enabled = false\n            this.lastPanKey = ''\n        })\n        EventBroker.subscribe(EventKey.UNPAUSE_GAME, () => {\n            this.gamePaused = false\n            this.updateEnabled()\n        })\n        EventBroker.subscribe(EventKey.DYNAMITE_EXPLOSION, (event: DynamiteExplosionEvent) => {\n            this.shakeOrigin.set(event.position.x, 0, event.position.y)\n            this.shakeTimeout = 1000\n            this.bumpTimeout = 0\n        })\n    }\n\n    private useWASDToPanAndArrowKeysToRotate() {\n        this.keys = {LEFT: 'KeyA', UP: 'KeyW', RIGHT: 'KeyD', BOTTOM: 'KeyS'}\n        ;[{code: 'ArrowUp', rot: CAMERA_ROTATION.up}, {code: 'ArrowLeft', rot: CAMERA_ROTATION.left}, {code: 'ArrowDown', rot: CAMERA_ROTATION.down}, {code: 'ArrowRight', rot: CAMERA_ROTATION.right}].forEach((pair) => {\n            this.domElement.addEventListener('keydown', (event: KeyboardEvent) => {\n                if (event.code === pair.code) this.rotate(pair.rot)\n            })\n        })\n    }\n\n    reset() {\n        this.enabled = true\n        this.moveTarget = undefined\n        this.lockedObject = undefined\n        this.shakeTimeout = 0\n        this.bumpTimeout = 0\n        this.buildingCycleIndex = 0\n    }\n\n    zoom(zoom: number) {\n        if (!this.enabled) return\n        this.domElement.dispatchEvent(new WheelEvent('wheel', {deltaY: 120 * zoom, deltaMode: 0}))\n    }\n\n    setZoom(distance: number) {\n        const minDist = this.minDistance\n        const maxDist = this.maxDistance\n        this.minDistance = distance\n        this.maxDistance = distance\n        this.update()\n        this.minDistance = minDist\n        this.maxDistance = maxDist\n    }\n\n    rotate(rotationIndex: CameraRotation) {\n        if (rotationIndex === CAMERA_ROTATION.none || !this.enabled) return\n        const dx = rotationIndex === CAMERA_ROTATION.left ? 1 : (rotationIndex === CAMERA_ROTATION.right ? -1 : 0)\n        const dy = rotationIndex === CAMERA_ROTATION.up ? 1 : (rotationIndex === CAMERA_ROTATION.down ? -1 : 0)\n        const px = (this.domElement as HTMLElement).clientWidth / 2\n        const py = (this.domElement as HTMLElement).clientHeight / 2\n        const step = py / 8 // => 16 clicks for a 360 no-scope\n        this.domElement.dispatchEvent(new PointerEvent('pointerdown', {pointerId: this.dummyPointerId, button: MOUSE_BUTTON.middle, clientX: px, clientY: py}))\n        this.domElement.dispatchEvent(new PointerEvent('pointermove', {pointerId: this.dummyPointerId, clientX: px + dx * step, clientY: py + dy * step}))\n        this.domElement.dispatchEvent(new PointerEvent('pointerup', {pointerId: this.dummyPointerId, button: MOUSE_BUTTON.middle, clientX: px + dx * step, clientY: py + dy * step}))\n    }\n\n    private verifyPointerId(): number {\n        try {\n            // pointer id 1 should work with Chromium\n            this.domElement.setPointerCapture(1)\n            this.domElement.releasePointerCapture(1)\n            return 1\n        } catch (e1) {\n            try {\n                // pointer id 0 should work with Firefox\n                this.domElement.setPointerCapture(0)\n                this.domElement.releasePointerCapture(0)\n            } catch (e2) {\n                console.warn('Could not find working pointer id. Rotation might not be working', e1, e2)\n            }\n            return 0\n        }\n    }\n\n    jumpTo(location: { x: number, y: number, z: number }) {\n        const offsetTargetToCamera = this.object.position.clone().sub(this.target)\n        this.object.position.set(location.x, location.y, location.z).add(offsetTargetToCamera)\n        this.target.set(location.x, location.y, location.z)\n        this.update()\n    }\n\n    updateControlsSafe(elapsedMs: number) {\n        try {\n            let moveTarget = this.moveTarget\n            if (this.lockedObject) moveTarget = this.lockedObject.getWorldPosition(new Vector3())\n            if (moveTarget) {\n                if (this.target.distanceToSquared(moveTarget) < 1) {\n                    this.moveTarget = undefined\n                    this.updateEnabled()\n                } else {\n                    const nextCameraTargetPos = this.target.clone().add(moveTarget.clone().sub(this.target)\n                        .clampLength(0, GameConfig.instance.main.CameraSpeed * elapsedMs / NATIVE_UPDATE_INTERVAL))\n                    this.jumpTo(nextCameraTargetPos)\n                }\n            } else {\n                this.updateAutoPan() // XXX This should consider elapsed time independent for game speed\n            }\n            this.shakeCamera(elapsedMs)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    private shakeCamera(elapsedMs: number) {\n        if (this.shakeTimeout <= 0) return\n        this.shakeTimeout -= elapsedMs\n        this.bumpTimeout += elapsedMs\n        if (this.bumpTimeout > NATIVE_UPDATE_INTERVAL) {\n            const shakeDistanceTiles = this.object.position.clone().sub(this.shakeOrigin).length() / TILESIZE\n            const shakeMultiplier = (CAMERA_MAX_SHAKE_TILES - shakeDistanceTiles) / CAMERA_MAX_SHAKE_TILES\n            if (shakeMultiplier > 0) {\n                const bump = new Vector3().random().subScalar(0.5).multiplyScalar(2 * shakeMultiplier * CAMERA_MAX_SHAKE_BUMP).sub(this.shakeOffset)\n                this.shakeOffset.add(bump)\n                this.object.position.add(bump)\n                this.target.add(bump)\n                this.update()\n                this.bumpTimeout = 0\n            }\n        }\n        if (this.shakeTimeout <= 0) {\n            this.shakeTimeout = 0\n            this.bumpTimeout = 0\n            this.object.position.sub(this.shakeOffset)\n            this.target.sub(this.shakeOffset)\n            this.update()\n            this.shakeOffset.setScalar(0)\n        }\n    }\n\n    forceMoveToTarget(target: Vector3) {\n        this.moveTarget = target\n        this.enabled = false\n    }\n\n    unlockCamera() {\n        this.lockedObject = undefined\n        this.updateEnabled()\n    }\n\n    setBuildLock(locked: boolean) {\n        this.lockBuild = locked\n        this.updateEnabled()\n    }\n\n    setAutoPan(key: string) {\n        this.lastPanKey = key\n    }\n\n    updateAutoPan() {\n        if (!this.lastPanKey) return\n        const panSpeed = this.keyPanSpeed\n        this.keyPanSpeed = 24\n        this.domElement.dispatchEvent(new KeyboardEvent('keydown', {code: this.lastPanKey, key: this.lastPanKey}))\n        this.keyPanSpeed = panSpeed\n    }\n\n    lockOnObject(object: Object3D) {\n        this.lockedObject = object\n        this.enabled = false\n    }\n\n    updateEnabled() {\n        this.enabled = !this.lockBuild && !this.moveTarget && !this.lockedObject && !this.disabled && !this.gamePaused\n    }\n}\n","import { BufferGeometry, Mesh, MeshPhongMaterial, Vector2 } from 'three'\nimport { TILESIZE } from '../../../params'\nimport { SceneManager } from '../../SceneManager'\nimport { Surface } from '../../terrain/Surface'\nimport { SurfaceMesh } from '../../terrain/SurfaceMesh'\n\nexport class BuildPlacementMarkerMesh extends Mesh<BufferGeometry, MeshPhongMaterial> {\n    sceneMgr: SceneManager\n    lastSurfaceMesh?: SurfaceMesh\n\n    constructor(sceneMgr: SceneManager) {\n        super(new BufferGeometry(), new MeshPhongMaterial({\n            shininess: 0,\n            transparent: true,\n            opacity: 0.4,\n        }))\n        this.sceneMgr = sceneMgr\n        this.visible = false\n    }\n\n    updateMesh(worldPosition: Vector2, offset: Vector2 | undefined, heading: number = 0) {\n        this.visible = !!offset\n        if (!offset) return\n        const posWithOffset = offset.clone().multiplyScalar(TILESIZE).rotateAround(new Vector2(0, 0), heading - Math.PI / 2).add(worldPosition)\n        const surfaceMesh = this.sceneMgr.terrain.getSurfaceFromWorld2D(posWithOffset).mesh\n        if (surfaceMesh === this.lastSurfaceMesh) return\n        this.lastSurfaceMesh = surfaceMesh\n        surfaceMesh.lowMesh.getWorldPosition(this.position)\n        this.position.y += TILESIZE / 20\n        this.geometry?.dispose()\n        this.geometry = surfaceMesh.lowMesh.geometry.clone()\n    }\n\n    setColor(hexColor: number) {\n        this.material.color.setHex(hexColor)\n    }\n\n    getSurface(): Surface {\n        return this.sceneMgr.terrain.getSurfaceFromWorld(this.position)\n    }\n\n    getVisibleSurface(): Surface | undefined {\n        return this.visible ? this.getSurface() : undefined\n    }\n}\n","import { Group, Vector2, Vector3 } from 'three'\nimport { DeselectAll } from '../../../event/LocalEvents'\nimport { TILESIZE } from '../../../params'\nimport { WorldManager } from '../../WorldManager'\nimport { EntityType } from '../EntityType'\nimport { SurfaceType } from '../../terrain/SurfaceType'\nimport { BuildingSite } from './BuildingSite'\nimport { BuildingType } from './BuildingType'\nimport { BuildPlacementMarkerMesh } from './BuildPlacementMarkerMesh'\nimport { PositionComponent } from '../../component/PositionComponent'\nimport { MaterialAmountChanged } from '../../../event/WorldEvents'\nimport { EventBroker } from '../../../event/EventBroker'\n\nexport class BuildPlacementMarker {\n    static readonly goodBuildingMarkerColor: number = 0x005000\n    static readonly goodPathMarkerColor: number = 0x505000\n    static readonly goodWaterMarkerColor: number = 0x000050\n    static readonly invalidMarkerColor: number = 0x500000\n    static readonly tooSteepMarkerColor: number = 0x500050\n\n    readonly group: Group = new Group()\n    readonly markers: BuildPlacementMarkerMesh[] = []\n    readonly buildingMarkerPrimary: BuildPlacementMarkerMesh\n    readonly buildingMarkerSecondary: BuildPlacementMarkerMesh\n    readonly powerPathMarkerPrimary: BuildPlacementMarkerMesh\n    readonly powerPathMarkerSecondary: BuildPlacementMarkerMesh\n    readonly waterPathMarker: BuildPlacementMarkerMesh\n    heading: number = 0\n    lastCheck: boolean = false\n    buildingType?: BuildingType\n    buildingMarkerColor: number = BuildPlacementMarker.goodBuildingMarkerColor\n    pathMarkerColor: number = BuildPlacementMarker.goodPathMarkerColor\n    waterMarkerColor: number = BuildPlacementMarker.goodWaterMarkerColor\n\n    constructor(readonly worldMgr: WorldManager) {\n        this.buildingMarkerPrimary = new BuildPlacementMarkerMesh(this.worldMgr.sceneMgr)\n        this.buildingMarkerSecondary = new BuildPlacementMarkerMesh(this.worldMgr.sceneMgr)\n        this.powerPathMarkerPrimary = new BuildPlacementMarkerMesh(this.worldMgr.sceneMgr)\n        this.powerPathMarkerSecondary = new BuildPlacementMarkerMesh(this.worldMgr.sceneMgr)\n        this.waterPathMarker = new BuildPlacementMarkerMesh(this.worldMgr.sceneMgr)\n        this.addMarker(this.buildingMarkerPrimary)\n        this.addMarker(this.buildingMarkerSecondary)\n        this.addMarker(this.powerPathMarkerPrimary)\n        this.addMarker(this.powerPathMarkerSecondary)\n        this.addMarker(this.waterPathMarker)\n    }\n\n    private addMarker(marker: BuildPlacementMarkerMesh) {\n        this.group.add(marker)\n        this.markers.push(marker)\n    }\n\n    updatePosition(worldPosition?: Vector3) {\n        if (!worldPosition || !this.buildingType) {\n            this.hideAllMarker()\n        } else {\n            this.worldMgr.sceneMgr.birdViewControls.setBuildLock(true)\n            this.updateAllMarker(new Vector2(worldPosition.x, worldPosition.z))\n            this.buildingMarkerPrimary.setColor(this.buildingMarkerColor)\n            this.buildingMarkerSecondary.setColor(this.buildingMarkerColor)\n            this.powerPathMarkerPrimary.setColor(this.pathMarkerColor)\n            this.powerPathMarkerSecondary.setColor(this.pathMarkerColor)\n            this.waterPathMarker.setColor(this.waterMarkerColor)\n        }\n    }\n\n    private updateAllMarker(worldPosition: Vector2) {\n        if (!this.buildingType) return\n        this.buildingMarkerPrimary.updateMesh(worldPosition, new Vector2(0, 0))\n        const sdxv = worldPosition.x - this.buildingMarkerPrimary.position.x - TILESIZE / 2\n        const sdzv = worldPosition.y - this.buildingMarkerPrimary.position.z - TILESIZE / 2\n        const sdx = Math.abs(sdxv) > Math.abs(sdzv) ? Math.sign(sdxv) : 0\n        const sdz = Math.abs(sdzv) > Math.abs(sdxv) ? Math.sign(sdzv) : 0\n        this.heading = Math.atan2(sdz, sdx)\n        this.buildingMarkerSecondary.updateMesh(worldPosition, this.buildingType.secondaryBuildingPart, this.heading)\n        this.powerPathMarkerPrimary.updateMesh(worldPosition, this.buildingType.primaryPowerPath, this.heading)\n        this.powerPathMarkerSecondary.updateMesh(worldPosition, this.buildingType.secondaryPowerPath, this.heading)\n        this.waterPathMarker.updateMesh(worldPosition, this.buildingType.waterPathSurface, this.heading)\n        const allNonWaterPathsAreGround = [this.buildingMarkerPrimary, this.buildingMarkerSecondary, this.powerPathMarkerPrimary, this.powerPathMarkerSecondary]\n            .filter((c) => c.visible).map((c) => this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld(c.position)).every((s) => s.surfaceType === SurfaceType.GROUND && !s.fence && !s.fenceRequested)\n        const isGood = allNonWaterPathsAreGround && (\n                [this.powerPathMarkerPrimary, this.powerPathMarkerSecondary].some((c) => c.visible && c.getSurface().neighbors.some((n) => n.surfaceType === SurfaceType.POWER_PATH)) ||\n                (!this.buildingType.primaryPowerPath && (this.buildingMarkerPrimary.getSurface().neighbors.some((n) => n.surfaceType === SurfaceType.POWER_PATH ||\n                    (this.buildingMarkerSecondary.visible && this.buildingMarkerSecondary.getSurface().neighbors.some((n) => n.surfaceType === SurfaceType.POWER_PATH)))))\n            ) && (!this.waterPathMarker.visible || this.waterPathMarker.getSurface().surfaceType === SurfaceType.WATER)\n            && ![this.buildingMarkerPrimary, this.buildingMarkerSecondary, this.powerPathMarkerPrimary, this.powerPathMarkerSecondary]\n                .some((c) => [...this.worldMgr.entityMgr.rockMonsters, ...this.worldMgr.entityMgr.slugs]\n                    .some((m) => this.worldMgr.ecs.getComponents(m).get(PositionComponent).surface === c.getSurface()))\n        if (isGood) {\n            const tooSteep = [this.buildingMarkerPrimary.getVisibleSurface(), this.buildingMarkerSecondary.getVisibleSurface()].some((s) => {\n                if (!s) return false\n                const offsets = [\n                    this.worldMgr.sceneMgr.terrain.getHeightOffset(s.x, s.y),\n                    this.worldMgr.sceneMgr.terrain.getHeightOffset(s.x + 1, s.y),\n                    this.worldMgr.sceneMgr.terrain.getHeightOffset(s.x + 1, s.y + 1),\n                    this.worldMgr.sceneMgr.terrain.getHeightOffset(s.x, s.y + 1)\n                ]\n                return Math.abs(Math.max(...offsets) - Math.min(...offsets)) > 0.2\n            })\n            if (tooSteep) {\n                this.lastCheck = false\n                this.buildingMarkerColor = BuildPlacementMarker.tooSteepMarkerColor\n                this.pathMarkerColor = BuildPlacementMarker.goodPathMarkerColor\n                this.waterMarkerColor = BuildPlacementMarker.goodWaterMarkerColor\n            } else {\n                this.lastCheck = true\n                this.buildingMarkerColor = BuildPlacementMarker.goodBuildingMarkerColor\n                this.pathMarkerColor = BuildPlacementMarker.goodPathMarkerColor\n                this.waterMarkerColor = BuildPlacementMarker.goodWaterMarkerColor\n            }\n        } else {\n            this.lastCheck = false\n            this.buildingMarkerColor = BuildPlacementMarker.invalidMarkerColor\n            this.pathMarkerColor = BuildPlacementMarker.invalidMarkerColor\n            this.waterMarkerColor = BuildPlacementMarker.invalidMarkerColor\n        }\n    }\n\n    hideAllMarker() {\n        this.worldMgr.sceneMgr.birdViewControls.setBuildLock(false)\n        this.markers.forEach((m) => m.visible = false)\n        this.lastCheck = false\n        this.buildingMarkerColor = BuildPlacementMarker.invalidMarkerColor\n        this.pathMarkerColor = BuildPlacementMarker.invalidMarkerColor\n        this.waterMarkerColor = BuildPlacementMarker.invalidMarkerColor\n    }\n\n    createBuildingSite() {\n        if (!this.buildingType) return\n        const barrierLocations = this.getBarrierLocations()\n        const stats = this.buildingType.stats\n        const neededCrystals = stats?.costCrystal || 0\n        const neededBricks = stats?.costRefinedOre || 0\n        const neededOres = stats?.costOre || 0\n        const needsAnything = neededCrystals || neededOres || neededBricks\n        const primarySurface = this.buildingMarkerPrimary.getSurface()\n        const site = new BuildingSite(this.worldMgr, primarySurface, this.buildingMarkerSecondary.getVisibleSurface(), this.powerPathMarkerPrimary.getVisibleSurface(), this.powerPathMarkerSecondary.getVisibleSurface(), this.buildingType)\n        primarySurface.setSurfaceType(SurfaceType.POWER_PATH_BUILDING)\n        site.heading = this.heading\n        if (needsAnything) site.neededByType.set(EntityType.BARRIER, barrierLocations.length)\n        site.neededByType.set(EntityType.CRYSTAL, neededCrystals)\n        if (this.worldMgr.entityMgr.hasBuilding(EntityType.ORE_REFINERY)) {\n            site.neededByType.set(EntityType.BRICK, neededBricks)\n        } else {\n            site.neededByType.set(EntityType.ORE, neededOres)\n        }\n        this.worldMgr.entityMgr.buildingSites.push(site)\n        EventBroker.publish(new DeselectAll())\n        if (needsAnything) {\n            const closestToolstation = this.worldMgr.entityMgr.getClosestBuildingByType(primarySurface.getCenterWorld(), EntityType.TOOLSTATION)\n            if (closestToolstation) {\n                closestToolstation.spawnBarriers(barrierLocations, site)\n                closestToolstation.spawnMaterials(EntityType.CRYSTAL, neededCrystals)\n                closestToolstation.spawnMaterials(EntityType.BRICK, neededBricks)\n                closestToolstation.spawnMaterials(EntityType.ORE, neededOres)\n                EventBroker.publish(new MaterialAmountChanged())\n            }\n        } else {\n            site.checkComplete()\n        }\n        this.worldMgr.sceneMgr.setBuildModeSelection(undefined)\n    }\n\n    getBarrierLocations(): Vector2[] {\n        const barrierLocations: Vector2[] = []\n        const centerPrimary = this.buildingMarkerPrimary.getSurface().getCenterWorld2D()\n        const barrierOffset = TILESIZE * 9 / 20\n        if (this.buildingMarkerSecondary.visible) {\n            const centerSecondary = this.buildingMarkerSecondary.getSurface().getCenterWorld2D()\n            const dx = Math.sign(centerSecondary.x - centerPrimary.x)\n            const dy = Math.sign(centerSecondary.y - centerPrimary.y)\n            if (dx !== 0) {\n                barrierLocations.push(new Vector2(centerPrimary.x - dx * barrierOffset, centerPrimary.y))\n                barrierLocations.push(new Vector2(centerPrimary.x, centerPrimary.y - barrierOffset))\n                barrierLocations.push(new Vector2(centerPrimary.x, centerPrimary.y + barrierOffset))\n                barrierLocations.push(new Vector2(centerSecondary.x + dx * barrierOffset, centerSecondary.y))\n                barrierLocations.push(new Vector2(centerSecondary.x, centerSecondary.y - barrierOffset))\n                barrierLocations.push(new Vector2(centerSecondary.x, centerSecondary.y + barrierOffset))\n            } else {\n                barrierLocations.push(new Vector2(centerPrimary.x, centerPrimary.y - dy * barrierOffset))\n                barrierLocations.push(new Vector2(centerPrimary.x - barrierOffset, centerPrimary.y))\n                barrierLocations.push(new Vector2(centerPrimary.x + barrierOffset, centerPrimary.y))\n                barrierLocations.push(new Vector2(centerSecondary.x, centerSecondary.y + dy * barrierOffset))\n                barrierLocations.push(new Vector2(centerSecondary.x - barrierOffset, centerSecondary.y))\n                barrierLocations.push(new Vector2(centerSecondary.x + barrierOffset, centerSecondary.y))\n            }\n        } else {\n            barrierLocations.push(new Vector2(centerPrimary.x - barrierOffset, centerPrimary.y))\n            barrierLocations.push(new Vector2(centerPrimary.x, centerPrimary.y - barrierOffset))\n            barrierLocations.push(new Vector2(centerPrimary.x + barrierOffset, centerPrimary.y))\n            barrierLocations.push(new Vector2(centerPrimary.x, centerPrimary.y + barrierOffset))\n        }\n        return barrierLocations\n    }\n\n    setBuildMode(entityType: EntityType | undefined) {\n        this.buildingType = entityType ? BuildingType.from(entityType) : undefined\n        if (!this.buildingType) this.hideAllMarker()\n    }\n\n    hasBuildMode(): boolean {\n        return !!this.buildingType\n    }\n}\n","import { AnimationActivity, RAIDER_ACTIVITY } from '../../anim/AnimationActivity'\nimport { Surface } from '../../../terrain/Surface'\nimport { PathTarget } from '../../PathTarget'\nimport { RAIDER_TOOL } from '../../raider/RaiderTool'\nimport { PRIORITY_IDENTIFIER } from '../PriorityIdentifier'\nimport { BubblesCfg } from '../../../../cfg/BubblesCfg'\nimport { Job, JobFulfiller } from '../Job'\nimport { EntityType } from '../../EntityType'\n\nexport class ClearRubbleJob extends Job {\n    readonly fulfiller: JobFulfiller[] = []\n    lastRubblePositions: PathTarget[] = []\n\n    constructor(readonly surface: Surface) {\n        super()\n        this.lastRubblePositions = this.surface.rubblePositions.map((p) => PathTarget.fromLocation(p))\n        this.requiredTool = RAIDER_TOOL.shovel\n        this.priorityIdentifier = PRIORITY_IDENTIFIER.clearing\n    }\n\n    getWorkplace(entity: JobFulfiller): PathTarget | undefined {\n        if (!this.surface.hasRubble()) return undefined\n        if (entity.entityType === EntityType.BULLDOZER) {\n            return entity.findShortestPath(PathTarget.fromLocation(this.surface.getCenterWorld2D()))?.target\n        } else {\n            const surfaceRubblePositions = this.surface.rubblePositions\n            if (!this.lastRubblePositions.every((d) => surfaceRubblePositions.some((p) => p.equals(d.targetLocation))) ||\n                !surfaceRubblePositions.every((p) => this.lastRubblePositions.some((d) => p.equals(d.targetLocation)))) {\n                this.lastRubblePositions = surfaceRubblePositions.map((p) => PathTarget.fromLocation(p))\n            }\n            return entity.findShortestPath(this.lastRubblePositions)?.target\n        }\n    }\n\n    onJobComplete(fulfiller: JobFulfiller): void {\n        if (fulfiller.entityType === EntityType.BULLDOZER) {\n            while (this.surface.hasRubble()) {\n                this.surface.reduceRubble()\n            }\n            this.surface.clearRubbleJob = undefined\n            super.onJobComplete(fulfiller)\n        } else {\n            this.surface.reduceRubble()\n            if (!this.surface.hasRubble()) {\n                this.surface.clearRubbleJob = undefined\n                super.onJobComplete(fulfiller)\n            }\n        }\n    }\n\n    getWorkActivity(): AnimationActivity {\n        return RAIDER_ACTIVITY.clear\n    }\n\n    getJobBubble(): keyof BubblesCfg {\n        return 'bubbleDig'\n    }\n\n    assign(fulfiller: JobFulfiller) {\n        const index = this.fulfiller.indexOf(fulfiller)\n        if (fulfiller && index === -1) {\n            this.fulfiller.push(fulfiller)\n        }\n    }\n\n    unAssign(fulfiller: JobFulfiller) {\n        this.fulfiller.remove(fulfiller)\n    }\n\n    hasFulfiller(): boolean {\n        return this.fulfiller.length > 0\n    }\n}\n","import { AnimationActivity, RAIDER_ACTIVITY } from '../../anim/AnimationActivity'\nimport { Surface } from '../../../terrain/Surface'\nimport { PathTarget } from '../../PathTarget'\nimport { RAIDER_TOOL } from '../../raider/RaiderTool'\nimport { Job, JobFulfiller } from '../Job'\nimport { PRIORITY_IDENTIFIER } from '../PriorityIdentifier'\nimport { BubblesCfg } from '../../../../cfg/BubblesCfg'\nimport { GameEntity } from '../../../ECS'\n\nexport class DrillJob extends Job {\n    readonly fulfiller: JobFulfiller[] = []\n    digPositionsByFulfiller: Map<GameEntity, PathTarget[]> = new Map()\n\n    constructor(readonly surface: Surface) {\n        super()\n        this.requiredTool = RAIDER_TOOL.drill\n        this.priorityIdentifier = PRIORITY_IDENTIFIER.destruction\n        this.workSoundRaider = 'SFX_Drill'\n        this.workSoundVehicle = 'SND_BIGDIGDRILL'\n    }\n\n    getWorkplace(entity: JobFulfiller): PathTarget | undefined {\n        if (!this.surface.isDigable()) return undefined\n        let digPositions = this.digPositionsByFulfiller.getOrUpdate(entity.entity, () => [])\n        const surfaceDigPositions = this.surface.getDigPositions()\n        if (digPositions.length < 1 ||\n            !digPositions.every((d) => surfaceDigPositions.some((p) => p.equals(d.targetLocation))) ||\n            !surfaceDigPositions.every((p) => digPositions.some((d) => p.equals(d.targetLocation)))\n        ) {\n            const surfaceCenter = this.surface.getCenterWorld2D()\n            const fulfillerWorkRange = entity.stats.pickSphere / 2\n            digPositions = surfaceDigPositions.map((digPos) => {\n                const workPos = digPos.clone().sub(surfaceCenter).setLength(fulfillerWorkRange).add(digPos)\n                return PathTarget.fromLocation(workPos, undefined, surfaceCenter)\n            })\n            this.digPositionsByFulfiller.set(entity.entity, digPositions)\n        }\n        return entity.findShortestPath(digPositions)?.target\n    }\n\n    getWorkActivity(): AnimationActivity {\n        return RAIDER_ACTIVITY.drill\n    }\n\n    getExpectedTimeLeft(): number {\n        const drillPerSecond = this.fulfiller.map((f) => f.getDrillTimeSeconds(this.surface))\n            .map((drillTime) => drillTime > 0 ? 1 / drillTime : 0).reduce((l, r) => l + r, 0)\n        if (!drillPerSecond) {\n            console.warn(`Unexpected drill per second ${drillPerSecond}`)\n            return 120000\n        }\n        return 1000 / drillPerSecond\n    }\n\n    getJobBubble(): keyof BubblesCfg {\n        return 'bubbleDrill'\n    }\n\n    assign(fulfiller: JobFulfiller) {\n        const index = this.fulfiller.indexOf(fulfiller)\n        if (fulfiller && index === -1) {\n            this.fulfiller.push(fulfiller)\n        }\n    }\n\n    unAssign(fulfiller: JobFulfiller) {\n        this.fulfiller.remove(fulfiller)\n    }\n\n    hasFulfiller(): boolean {\n        return this.fulfiller.length > 0\n    }\n}\n","import { AnimationActivity, RAIDER_ACTIVITY } from '../../anim/AnimationActivity'\nimport { Surface } from '../../../terrain/Surface'\nimport { PathTarget } from '../../PathTarget'\nimport { RAIDER_TOOL } from '../../raider/RaiderTool'\nimport { PRIORITY_IDENTIFIER } from '../PriorityIdentifier'\nimport { BubblesCfg } from '../../../../cfg/BubblesCfg'\nimport { Job, JobFulfiller } from '../Job'\n\nexport class ReinforceJob extends Job {\n    readonly fulfiller: JobFulfiller[] = []\n    digPositions: PathTarget[] = []\n\n    constructor(readonly surface: Surface) {\n        super()\n        this.digPositions = this.surface.getDigPositions().map((p) => PathTarget.fromLocation(p))\n        this.requiredTool = RAIDER_TOOL.hammer\n        this.priorityIdentifier = PRIORITY_IDENTIFIER.reinforce\n    }\n\n    getWorkplace(entity: JobFulfiller): PathTarget | undefined {\n        if (!this.surface.isReinforcable()) return undefined\n        const surfaceDigPositions = this.surface.getDigPositions()\n        if (!this.digPositions.every((d) => surfaceDigPositions.some((p) => p.equals(d.targetLocation))) ||\n            !surfaceDigPositions.every((p) => this.digPositions.some((d) => p.equals(d.targetLocation)))) {\n            this.digPositions = surfaceDigPositions.map((p) => PathTarget.fromLocation(p))\n        }\n        return entity.findShortestPath(this.digPositions)?.target\n    }\n\n    onJobComplete(fulfiller: JobFulfiller): void {\n        super.onJobComplete(fulfiller)\n        this.surface.reinforce()\n    }\n\n    getWorkActivity(): AnimationActivity {\n        return RAIDER_ACTIVITY.reinforce\n    }\n\n    getExpectedTimeLeft(): number {\n        return 2700\n    }\n\n    getJobBubble(): keyof BubblesCfg {\n        return 'bubbleReinforce'\n    }\n\n    assign(fulfiller: JobFulfiller) {\n        const index = this.fulfiller.indexOf(fulfiller)\n        if (fulfiller && index === -1) {\n            this.fulfiller.push(fulfiller)\n        }\n    }\n\n    unAssign(fulfiller: JobFulfiller) {\n        this.fulfiller.remove(fulfiller)\n    }\n\n    hasFulfiller(): boolean {\n        return this.fulfiller.length > 0\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { Surface } from '../terrain/Surface'\n\nexport class EmergeComponent extends AbstractGameComponent {\n    emergeDelayMs: number = 0\n\n    constructor(readonly emergeSpawnId: number, readonly triggerSurface: Surface | undefined, readonly emergeSurface: Surface | undefined) {\n        super()\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { Surface } from '../terrain/Surface'\nimport { PRNG } from '../factory/PRNG'\n\nexport class FallInComponent extends AbstractGameComponent {\n    timer: number\n\n    constructor(\n        readonly target: Surface,\n        readonly maxTimerMs: number,\n    ) {\n        super()\n        this.timer = PRNG.terrain.randInt(maxTimerMs)\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { BufferAttribute } from 'three/src/core/BufferAttribute'\nimport { InterleavedBufferAttribute } from 'three'\n\nexport class FluidSurfaceComponent extends AbstractGameComponent {\n    readonly xToY: boolean\n    readonly u: number[] = [0, 0, 1, 0, 1, 1]\n    readonly v: number[] = [1, 0, 0, 1, 0, 1]\n\n    constructor(tileX: number, tileY: number, readonly uvAttribute: BufferAttribute | InterleavedBufferAttribute) {\n        super()\n        this.xToY = (tileX % 2) === (tileY % 2)\n    }\n}\n","import { Surface } from '../../../terrain/Surface'\nimport { SurfaceType } from '../../../terrain/SurfaceType'\nimport { MaterialEntity } from '../../material/MaterialEntity'\nimport { PathTarget } from '../../PathTarget'\nimport { RAIDER_TOOL } from '../../raider/RaiderTool'\nimport { PRIORITY_IDENTIFIER } from '../PriorityIdentifier'\nimport { Job, JobFulfiller } from '../Job'\nimport { AnimationActivity, RAIDER_ACTIVITY } from '../../anim/AnimationActivity'\nimport { BubblesCfg } from '../../../../cfg/BubblesCfg'\n\nexport class CompleteSurfaceJob extends Job {\n    readonly workplace: PathTarget\n    fulfiller: JobFulfiller | undefined\n\n    constructor(readonly surface: Surface, readonly placedItems: MaterialEntity[]) {\n        super()\n        this.requiredTool = RAIDER_TOOL.shovel\n        this.priorityIdentifier = PRIORITY_IDENTIFIER.construction\n        this.workplace = PathTarget.fromLocation(surface.getRandomPosition())\n    }\n\n    onJobComplete(fulfiller: JobFulfiller): void {\n        super.onJobComplete(fulfiller)\n        this.placedItems.forEach((placed) => placed.disposeFromWorld())\n        this.surface.site = undefined\n        this.surface.completeSurfaceJob = undefined\n        const targetSurfaceType = this.surface.surfaceType === SurfaceType.POWER_PATH_BUILDING_SITE ? SurfaceType.POWER_PATH : SurfaceType.GROUND\n        this.surface.setSurfaceType(targetSurfaceType)\n    }\n\n    getWorkplace(entity: JobFulfiller): PathTarget | undefined {\n        if (!this.surface.isWalkable() || !this.surface.site?.complete || this.surface.site.canceled) return undefined\n        return this.workplace\n    }\n\n    getWorkActivity(): AnimationActivity {\n        return RAIDER_ACTIVITY.clear\n    }\n\n    getJobBubble(): keyof BubblesCfg {\n        return 'bubbleBuildPath'\n    }\n\n    assign(fulfiller: JobFulfiller) {\n        if (this.fulfiller !== fulfiller) this.fulfiller?.stopJob()\n        this.fulfiller = fulfiller\n    }\n\n    unAssign(fulfiller: JobFulfiller) {\n        if (this.fulfiller === fulfiller) this.fulfiller = undefined\n    }\n\n    hasFulfiller(): boolean {\n        return !!this.fulfiller\n    }\n}\n","import { Raycaster, Vector2, Vector3 } from 'three'\nimport { SoundManager } from '../../audio/SoundManager'\nimport { DeselectAll, SelectionChanged, UpdateRadarSurface, UpdateRadarTerrain } from '../../event/LocalEvents'\nimport { CavernDiscovered, JobCreateEvent, OreFoundEvent, WorldLocationEvent } from '../../event/WorldEvents'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { BRICK_ORE_VALUE, DEV_MODE, SURFACE_NUM_CONTAINED_ORE, SURFACE_NUM_SEAM_LEVELS, TILESIZE } from '../../params'\nimport { WorldManager } from '../WorldManager'\nimport { BuildingEntity } from '../model/building/BuildingEntity'\nimport { BuildingSite } from '../model/building/BuildingSite'\nimport { EntityType } from '../model/EntityType'\nimport { ClearRubbleJob } from '../model/job/surface/ClearRubbleJob'\nimport { DrillJob } from '../model/job/surface/DrillJob'\nimport { ReinforceJob } from '../model/job/surface/ReinforceJob'\nimport { GameEntity } from '../ECS'\nimport { SurfaceVertex } from './SurfaceGeometry'\nimport { RoofMesh, SurfaceMesh } from './SurfaceMesh'\nimport { SurfaceType } from './SurfaceType'\nimport { Terrain } from './Terrain'\nimport { WALL_TYPE, WallType } from './WallType'\nimport { Job } from '../model/job/Job'\nimport { JOB_STATE } from '../model/job/JobState'\nimport { MaterialSpawner } from '../factory/MaterialSpawner'\nimport { degToRad } from 'three/src/math/MathUtils'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { AnimationGroup } from '../../scene/AnimationGroup'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { EventBroker } from '../../event/EventBroker'\nimport { TooltipComponent } from '../component/TooltipComponent'\nimport { EmergeComponent } from '../component/EmergeComponent'\nimport { FallInComponent } from '../component/FallInComponent'\nimport { FluidSurfaceComponent } from '../component/FluidSurfaceComponent'\nimport { MonsterSpawner } from '../factory/MonsterSpawner'\nimport { PRNG } from '../factory/PRNG'\nimport { GameState } from '../model/GameState'\nimport { CompleteSurfaceJob } from '../model/job/surface/CompleteSurfaceJob'\nimport { MaterialEntity } from '../model/material/MaterialEntity'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { SaveGameManager } from '../../resource/SaveGameManager'\n\nexport class Surface {\n    readonly worldMgr: WorldManager\n    readonly entity: GameEntity\n    containedOres: number = 0\n    containedCrystals: number = 0\n    discovered: boolean = false\n    scanned: boolean = false\n    selected: boolean = false\n    reinforced: boolean = false\n    drillJob?: DrillJob\n    reinforceJob?: ReinforceJob\n    dynamiteJob?: Job\n    clearRubbleJob?: ClearRubbleJob\n    completeSurfaceJob?: CompleteSurfaceJob\n    seamLevel: number = 0\n    drillProgress: number = 0\n\n    readonly mesh: SurfaceMesh\n    readonly roofMesh: RoofMesh\n    wallType: WallType = WALL_TYPE.floor\n    needsMeshUpdate: boolean = false\n\n    rubblePositions: Vector2[] = []\n\n    building?: BuildingEntity\n    pathBlockedByBuilding: boolean = false\n    site?: BuildingSite\n    fence?: GameEntity\n    stud?: AnimationGroup\n    fenceRequested: boolean = false\n    energized: boolean = false\n\n    constructor(readonly terrain: Terrain, public surfaceType: SurfaceType, readonly x: number, readonly y: number) {\n        this.worldMgr = this.terrain.worldMgr\n        this.entity = this.worldMgr.ecs.addEntity()\n        this.updateObjectName()\n        switch (surfaceType) {\n            case SurfaceType.CRYSTAL_SEAM:\n            case SurfaceType.ORE_SEAM:\n                this.seamLevel = SURFACE_NUM_SEAM_LEVELS\n                break\n            case SurfaceType.RUBBLE4:\n            case SurfaceType.RUBBLE3:\n            case SurfaceType.RUBBLE2:\n            case SurfaceType.RUBBLE1:\n                this.rubblePositions = [this.getRandomPosition(), this.getRandomPosition(), this.getRandomPosition(), this.getRandomPosition()]\n                break\n        }\n        this.mesh = new SurfaceMesh(x, y, {selectable: this, surface: this})\n        this.mesh.setProMeshEnabled(SaveGameManager.preferences.wallDetails)\n        const roofTexture = ResourceManager.getSurfaceTexture(this.terrain.levelConf.roofTexture, 0) ?? null // TODO Move to config handling\n        this.roofMesh = new RoofMesh(x, y, roofTexture)\n    }\n\n    private updateObjectName() {\n        const objectName = this.surfaceType.getObjectName()\n        if (objectName) {\n            const tooltipComponent = this.worldMgr.ecs.getComponents(this.entity).get(TooltipComponent)\n            if (tooltipComponent) {\n                tooltipComponent.tooltipText = objectName\n                tooltipComponent.sfxKey = this.surfaceType.getSfxKey()\n            } else {\n                this.worldMgr.ecs.addComponent(this.entity, new TooltipComponent(this.entity, objectName, this.surfaceType.getSfxKey()))\n            }\n        } else {\n            this.worldMgr.ecs.removeComponent(this.entity, TooltipComponent)\n        }\n    }\n\n    /**\n     * @return {boolean} Returns true, if a new cave has been discovered\n     */\n    discover(): boolean {\n        const walls: Map<string, Surface> = new Map()\n        let caveFound = false\n        for (let surface: Surface | undefined = this, stack: Surface[] = []; surface; surface = stack.pop()) {\n            surface.markDiscovered()\n            for (const neighbor of surface.neighbors8) {\n                if (neighbor.surfaceType.floor || neighbor.surfaceType === SurfaceType.HIDDEN_CAVERN || neighbor.surfaceType === SurfaceType.HIDDEN_SLUG_HOLE) {\n                    if (!neighbor.discovered || neighbor.surfaceType === SurfaceType.HIDDEN_CAVERN || neighbor.surfaceType === SurfaceType.HIDDEN_SLUG_HOLE) {\n                        stack.push(neighbor)\n                        caveFound = true\n                    }\n                } else {\n                    walls.set(`${neighbor.x}#${neighbor.y}`, neighbor)\n                }\n            }\n        }\n        walls.forEach((w) => {\n            w.markDiscovered()\n            w.needsMeshUpdate = true\n        })\n        walls.forEach((w) => w.isUnstable() && w.collapse())\n        EventBroker.publish(new UpdateRadarTerrain(this.terrain))\n        return caveFound\n    }\n\n    private markDiscovered() {\n        if (this.neighbors8.some((n) => n.discovered && n.surfaceType.floor)) {\n            switch (this.surfaceType) {\n                case SurfaceType.LAVA5:\n                // fallthrough\n                case SurfaceType.WATER:\n                    this.worldMgr.ecs.addComponent(this.entity, new FluidSurfaceComponent(this.x, this.y, this.mesh.lowMesh.geometry.attributes.uv))\n                    break\n                case SurfaceType.HIDDEN_CAVERN:\n                    this.surfaceType = SurfaceType.GROUND\n                    this.needsMeshUpdate = true\n                    this.updateObjectName()\n                    break\n                case SurfaceType.HIDDEN_SLUG_HOLE:\n                    this.surfaceType = SurfaceType.SLUG_HOLE\n                    this.terrain.slugHoles.add(this)\n                    this.needsMeshUpdate = true\n                    this.updateObjectName()\n                    break\n                case SurfaceType.RECHARGE_SEAM:\n                    this.terrain.rechargeSeams.add(this)\n                    const floorNeighbor = this.neighbors.find((n) => n.surfaceType.floor)\n                    if (floorNeighbor) { // TODO Same code as in terrain loader class\n                        const position = new Vector3(0.5, this.terrain.getHeightOffset(this.x, this.y), 0.5)\n                        const angle = Math.atan2(floorNeighbor.y - this.y, this.x - floorNeighbor.x) + Math.PI / 2\n                        const grp = this.worldMgr.sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.rechargeSparkle, position, angle, true)\n                        grp.scale.setScalar(1 / TILESIZE)\n                        this.mesh.add(grp)\n                    } else {\n                        console.warn('Could not add sparkles to recharge seam, because of missing floor neighbor')\n                    }\n                    break\n            }\n        }\n        if (this.discovered) return\n        this.discovered = true\n        this.worldMgr.entityMgr.discoverSurface(this)\n        this.needsMeshUpdate = true\n    }\n\n    addDrillTimeProgress(drillTimeSeconds: number, elapsedMs: number, drillPosition: Vector2) {\n        if (this.drillProgress >= 1 || drillTimeSeconds <= 0) return\n        const drillProgress = elapsedMs / (drillTimeSeconds * 1000)\n        this.addDrillProgress(drillProgress, drillPosition)\n    }\n\n    addDrillProgress(drillProgress: number, drillPosition: Vector2) {\n        this.drillProgress += drillProgress\n        if (this.drillProgress >= 1) {\n            this.onDrillComplete(drillPosition)\n        }\n    }\n\n    onDrillComplete(drillPosition: Vector2): boolean {\n        this.drillProgress = 0\n        if (this.seamLevel > 0) {\n            this.seamLevel--\n            for (let x = -1; x <= 1; x++) {\n                for (let y = -1; y <= 1; y++) {\n                    this.terrain.getSurface(this.x + x, this.y + y).updateMesh(true)\n                }\n            }\n            const seamDropPosition = new Vector2().copy(drillPosition).sub(this.getCenterWorld2D())\n                .clampLength(TILESIZE / 10, TILESIZE / 10 + PRNG.terrain.randInt(TILESIZE / 2 - TILESIZE / 10))\n                .rotateAround(new Vector2(0, 0), degToRad(-10 + PRNG.terrain.randInt(20)))\n                .add(drillPosition)\n            if (this.surfaceType === SurfaceType.CRYSTAL_SEAM) {\n                const crystal = MaterialSpawner.spawnMaterial(this.worldMgr, EntityType.CRYSTAL, seamDropPosition)\n                EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_CRYSTAL_FOUND, this.worldMgr.ecs.getComponents(crystal.entity).get(PositionComponent)))\n            } else if (this.surfaceType === SurfaceType.ORE_SEAM) {\n                MaterialSpawner.spawnMaterial(this.worldMgr, EntityType.ORE, seamDropPosition)\n                EventBroker.publish(new OreFoundEvent())\n            }\n        }\n        if (this.seamLevel > 0) {\n            return false\n        } else {\n            this.collapse()\n            return true\n        }\n    }\n\n    collapse() {\n        if (this.surfaceType.floor) {\n            console.log('Cannot collapse floor type surface')\n            return\n        }\n        this.cancelJobs()\n        this.worldMgr.ecs.removeComponent(this.entity, FallInComponent)\n        this.worldMgr.ecs.removeComponent(this.entity, EmergeComponent)\n        this.reinforced = false\n        const droppedOre = this.containedOres + (this.surfaceType === SurfaceType.ORE_SEAM ? this.seamLevel : 0)\n        const droppedCrystals = this.containedCrystals + (this.surfaceType === SurfaceType.CRYSTAL_SEAM ? this.seamLevel : 0)\n        this.setSurfaceType(SurfaceType.RUBBLE4)\n        this.containedOres += SURFACE_NUM_CONTAINED_ORE\n        this.needsMeshUpdate = true\n        const caveFound = this.discover()\n        if (caveFound) EventBroker.publish(new CavernDiscovered())\n        if (this.selected) EventBroker.publish(new DeselectAll())\n        // drop contained ores and crystals\n        this.dropContainedMaterials(droppedOre, droppedCrystals)\n        // add crumble animation\n        const crumblePosition = new Vector3(this.x + 0.5, this.terrain.getHeightOffset(this.x, this.y), this.y + 0.5).multiplyScalar(TILESIZE)\n        const wallNeighbors = this.neighbors.filter((n) => !!n.wallType)\n        const randomWallNeighbor = PRNG.terrain.sample(wallNeighbors)\n        if (this.wallType === WALL_TYPE.corner && randomWallNeighbor) { // by default the corner animation goes from this.x+1,this.y+1 to this.x,this.y\n            const neighborToRight = this.terrain.getSurface(this.x - randomWallNeighbor.y + this.y, this.y + randomWallNeighbor.x - this.x)\n            let crumbleAngle = Math.atan2(neighborToRight.x - this.x, neighborToRight.y - this.y)\n            if (!neighborToRight.wallType) crumbleAngle += Math.PI / 2\n            const rockFallAnimName = this.terrain.levelConf.rockFallStyle.outsideCorner\n            this.worldMgr.sceneMgr.addMiscAnim(rockFallAnimName, crumblePosition, crumbleAngle, false)\n        } else if (wallNeighbors.length === 3) {\n            const nonWallNeighbor = this.neighbors.filter((n) => !n.wallType)[0]\n            const crumbleAngle = Math.atan2(this.x - nonWallNeighbor.x, this.y - nonWallNeighbor.y)\n            const rockFallAnimName = this.terrain.levelConf.rockFallStyle.threeSides\n            this.worldMgr.sceneMgr.addMiscAnim(rockFallAnimName, crumblePosition, crumbleAngle, false)\n        } else {\n            const crumbleAngle = !!randomWallNeighbor ? Math.atan2(randomWallNeighbor.x - this.x, randomWallNeighbor.y - this.y) : 0\n            const rockFallAnimName = this.terrain.levelConf.rockFallStyle.tunnel\n            this.worldMgr.sceneMgr.addMiscAnim(rockFallAnimName, crumblePosition, crumbleAngle, false)\n        }\n        // update meshes and wallType\n        this.terrain.updateSurfaceMeshes()\n        this.generateSpiders()\n    }\n\n    private dropContainedMaterials(droppedOre: number, droppedCrystals: number) {\n        for (let c = 0; c < droppedOre && this.containedOres > 0; c++) {\n            this.containedOres--\n            MaterialSpawner.spawnMaterial(this.worldMgr, EntityType.ORE, this.getRandomPosition())\n            EventBroker.publish(new OreFoundEvent())\n        }\n        for (let c = 0; c < droppedCrystals; c++) {\n            const crystal = MaterialSpawner.spawnMaterial(this.worldMgr, EntityType.CRYSTAL, this.getRandomPosition())\n            EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_CRYSTAL_FOUND, this.worldMgr.ecs.getComponents(crystal.entity).get(PositionComponent)))\n        }\n    }\n\n    private generateSpiders() {\n        if (!this.terrain.levelConf.generateSpiders) return\n        if (PRNG.terrain.random() > 0.1) return\n        const numSpiders = Math.pow(Math.round(1 + PRNG.terrain.random()), 2) * Math.round(1 + PRNG.terrain.random())\n        for (let c = 0; c < numSpiders; c++) {\n            MonsterSpawner.spawnMonster(this.worldMgr, EntityType.SMALL_SPIDER, this.getRandomPosition(), PRNG.animation.random() * 2 * Math.PI)\n        }\n    }\n\n    getRandomPosition(): Vector2 {\n        return new Vector2(this.x * TILESIZE + TILESIZE / 4 + PRNG.terrain.random() * TILESIZE / 2,\n            this.y * TILESIZE + TILESIZE / 4 + PRNG.terrain.random() * TILESIZE / 2)\n    }\n\n    cancelJobs() {\n        this.drillJob = Surface.safeRemoveJob(this.drillJob)\n        this.reinforceJob = Surface.safeRemoveJob(this.reinforceJob)\n        this.dynamiteJob = undefined // Dynamite is carried back to storage\n        this.clearRubbleJob = Surface.safeRemoveJob(this.clearRubbleJob)\n        this.completeSurfaceJob = Surface.safeRemoveJob(this.completeSurfaceJob)\n        this.updateJobColor()\n    }\n\n    private static safeRemoveJob(job?: Job): undefined {\n        if (job) job.jobState = JOB_STATE.canceled\n        return undefined\n    }\n\n    reduceRubble() {\n        this.rubblePositions.shift()\n        let hiddenInRubble: number = this.containedOres\n        switch (this.surfaceType) {\n            case SurfaceType.RUBBLE4:\n                this.setSurfaceType(SurfaceType.RUBBLE3)\n                hiddenInRubble = 3\n                break\n            case SurfaceType.RUBBLE3:\n                this.setSurfaceType(SurfaceType.RUBBLE2)\n                hiddenInRubble = 2\n                break\n            case SurfaceType.RUBBLE2:\n                this.setSurfaceType(SurfaceType.RUBBLE1)\n                hiddenInRubble = 1\n                break\n            case SurfaceType.RUBBLE1:\n                this.setSurfaceType(SurfaceType.GROUND)\n                hiddenInRubble = 0\n                break\n        }\n        this.dropContainedMaterials(this.containedOres - hiddenInRubble, 0)\n        if (this.selected) EventBroker.publish(new SelectionChanged(this.worldMgr.entityMgr))\n    }\n\n    isUnstable(): boolean {\n        if (this.surfaceType.floor) return false\n        const adjacent = this.terrain.getAdjacent(this.x, this.y)\n        return [adjacent.left, adjacent.topLeft, adjacent.top].some((s) => s.discovered && s.surfaceType.floor)\n            && [adjacent.top, adjacent.topRight, adjacent.right].some((s) => s.discovered && s.surfaceType.floor)\n            && [adjacent.right, adjacent.bottomRight, adjacent.bottom].some((s) => s.discovered && s.surfaceType.floor)\n            && [adjacent.bottom, adjacent.bottomLeft, adjacent.left].some((s) => s.discovered && s.surfaceType.floor)\n    }\n\n    updateMesh(force: boolean = true) {\n        if (!force && !this.needsMeshUpdate) return\n        this.needsMeshUpdate = false\n        const adjacent = this.terrain.getAdjacent(this.x, this.y)\n        const topLeftVertex = this.getVertex(this.x, this.y, adjacent.left, adjacent.topLeft, adjacent.top)\n        const topRightVertex = this.getVertex(this.x + 1, this.y, adjacent.top, adjacent.topRight, adjacent.right)\n        const bottomRightVertex = this.getVertex(this.x + 1, this.y + 1, adjacent.right, adjacent.bottomRight, adjacent.bottom)\n        const bottomLeftVertex = this.getVertex(this.x, this.y + 1, adjacent.bottom, adjacent.bottomLeft, adjacent.left)\n        this.updateWallType(topLeftVertex, topRightVertex, bottomRightVertex, bottomLeftVertex)\n        this.updateTexture()\n        this.updateJobColor()\n        this.terrain.pathFinder.updateSurface(this)\n    }\n\n    getVertex(x: number, y: number, s1: Surface, s2: Surface, s3: Surface): SurfaceVertex {\n        const high = [this, s1, s2, s3].some((s) => !s.discovered) || ![this, s1, s2, s3].some((s) => s.surfaceType.floor)\n        const minSeamProgress = Math.min(this.getSeamProgress(), s1.getSeamProgress(), s2.getSeamProgress(), s3.getSeamProgress())\n        const offset = this.terrain.getHeightOffset(x, y)\n        return new SurfaceVertex(high, minSeamProgress, offset)\n    }\n\n    private getSeamProgress(): number {\n        return this.seamLevel / SURFACE_NUM_SEAM_LEVELS || 1\n    }\n\n    private updateWallType(topLeft: SurfaceVertex, topRight: SurfaceVertex, bottomRight: SurfaceVertex, bottomLeft: SurfaceVertex) {\n        let wallType: WallType = Surface.getWallType(topLeft.high, topRight.high, bottomRight.high, bottomLeft.high)\n        if (wallType === WALL_TYPE.wall && topLeft.high === bottomRight.high) wallType = WALL_TYPE.weirdCrevice\n        this.wallType = wallType // TODO Update wall type only when necessary\n        this.mesh.setHeights(wallType, topLeft, topRight, bottomRight, bottomLeft)\n        this.roofMesh.setHeights(wallType, topLeft, topRight, bottomRight, bottomLeft)\n        if (this.wallType !== WALL_TYPE.wall) this.cancelReinforceJobs()\n        if (this.wallType < WALL_TYPE.wall) this.worldMgr.ecs.removeComponent(this.entity, EmergeComponent)\n    }\n\n    private static getWallType(topLeft: boolean, topRight: boolean, bottomRight: boolean, bottomLeft: boolean): WallType {\n        const asNum = Number(topLeft) + Number(topRight) + Number(bottomRight) + Number(bottomLeft)\n        switch (asNum) {\n            case 0:\n                return WALL_TYPE.floor\n            case 1:\n                return WALL_TYPE.corner\n            case 2:\n                return WALL_TYPE.wall\n            case 3:\n                return WALL_TYPE.invertedCorner\n            case 4:\n                return WALL_TYPE.roof\n            default:\n                console.warn(`Unexpected wall type (${[topLeft, topRight, bottomRight, bottomLeft]}) given. Using fallback type ${WALL_TYPE.floor}`)\n                return WALL_TYPE.floor\n        }\n    }\n\n    cancelReinforceJobs() {\n        this.reinforceJob = Surface.safeRemoveJob(this.reinforceJob)\n        this.updateJobColor()\n    }\n\n    updateTexture() {\n        let suffix = '', rotation = 0\n        if (!this.discovered) {\n            suffix = '70'\n        } else if (this.wallType === WALL_TYPE.weirdCrevice) {\n            suffix = '77'\n        } else if (this.wallType) {\n            if (this.wallType === WALL_TYPE.corner) {\n                suffix = this.surfaceType.shaping ? '5' + this.surfaceType.matIndex : this.surfaceType.matIndex\n            } else if (this.wallType === WALL_TYPE.invertedCorner) {\n                suffix = '3' + (this.surfaceType.shaping ? this.surfaceType.matIndex : SurfaceType.SOLID_ROCK.matIndex)\n            } else if (this.reinforced) {\n                suffix = '2' + (this.surfaceType.shaping ? this.surfaceType.matIndex : '1')\n            } else if (this.wallType === WALL_TYPE.wall) {\n                suffix = this.surfaceType.shaping ? '0' + this.surfaceType.matIndex : this.surfaceType.matIndex\n            } else {\n                suffix = '00'\n            }\n        } else if (this.surfaceType === SurfaceType.POWER_PATH_BUILDING && this.energized && this.building) {\n            suffix = '66'\n        } else if (this.surfaceType === SurfaceType.POWER_PATH) {\n            const powerPath = this.determinePowerPathTextureNameSuffixAndRotation(rotation, suffix)\n            rotation = powerPath.rotation\n            suffix = powerPath.suffix\n        } else if (!this.surfaceType.floor) { // unstable wall about to collapse (after mission briefing)\n            suffix = SurfaceType.RUBBLE4.matIndex\n        } else {\n            suffix = this.surfaceType.shaping ? '0' + this.surfaceType.matIndex : this.surfaceType.matIndex\n        }\n        const textureFilepath = this.terrain.levelConf.textureBasename + suffix + '.bmp'\n        this.mesh.setTexture(textureFilepath, rotation)\n        const proMeshSuffix = suffix.startsWith('1') ? '10' : suffix\n        const proMeshFilepath = (this.terrain.levelConf.meshBasename + proMeshSuffix).toLowerCase()\n        this.mesh.updateProMesh(proMeshFilepath)\n    }\n\n    private determinePowerPathTextureNameSuffixAndRotation(rotation: number, suffix: string) {\n        const left = this.terrain.getSurface(this.x - 1, this.y).isPath()\n        const top = this.terrain.getSurface(this.x, this.y - 1).isPath()\n        const right = this.terrain.getSurface(this.x + 1, this.y).isPath()\n        const bottom = this.terrain.getSurface(this.x, this.y + 1).isPath()\n        const pathSum = (left ? 1 : 0) + (top ? 1 : 0) + (right ? 1 : 0) + (bottom ? 1 : 0)\n        if (pathSum === 0 || pathSum === 1) {\n            if (left) rotation = -Math.PI / 2\n            else if (top) rotation = Math.PI\n            else if (right) rotation = Math.PI / 2\n            suffix = this.energized ? '75' : '65'\n        } else if (pathSum === 2) {\n            if (left === right) {\n                rotation = left ? Math.PI / 2 : 0\n                suffix = this.energized ? '72' : '62'\n            } else {\n                if (left && bottom) rotation = -Math.PI / 2\n                else if (left && top) rotation = Math.PI\n                else if (top && right) rotation = Math.PI / 2\n                suffix = this.energized ? '73' : '63'\n            }\n        } else if (pathSum === 3) {\n            if (!top) rotation = -Math.PI / 2\n            else if (!right) rotation = Math.PI\n            else if (!bottom) rotation = Math.PI / 2\n            suffix = this.energized ? '74' : '64'\n        } else {\n            suffix = this.energized ? '71' : '60'\n        }\n        return {rotation, suffix}\n    }\n\n    setEnergized(energized: boolean) {\n        if (this.energized === energized) return\n        this.energized = energized\n        this.updateTexture()\n        this.building?.updateEnergyState()\n    }\n\n    isSelectable(): boolean {\n        return (this.surfaceType.selectable || !!this.site) && (this.wallType !== WALL_TYPE.invertedCorner && this.wallType !== WALL_TYPE.weirdCrevice) && !this.selected && this.discovered\n    }\n\n    isInSelection(): boolean {\n        return this.isSelectable() || this.selected\n    }\n\n    select(): boolean {\n        if (!this.isSelectable()) return false\n        this.selected = true\n        this.setHighlightColor(0x6060a0)\n        if (this.surfaceType.floor) SoundManager.playSfxSound('SFX_Floor')\n        else if (this.surfaceType.shaping) SoundManager.playSfxSound('SFX_Wall')\n        if (DEV_MODE) console.log(`Surface selected ${this.x}/${this.y}`, this)\n        return true\n    }\n\n    deselect() {\n        this.selected = false\n        this.updateJobColor()\n    }\n\n    updateJobColor() {\n        if (this.selected) return\n        let color = 0xffffff\n        if (this.dynamiteJob) {\n            color = 0xa06060\n        } else if (this.reinforceJob) {\n            color = 0x60a060\n        } else if (this.drillJob) {\n            color = 0xa0a0a0\n        }\n        this.setHighlightColor(color)\n    }\n\n    setHighlightColor(hex: number) {\n        this.mesh.setHighlightColor(hex)\n    }\n\n    hasRubble(): boolean {\n        return this.surfaceType.hasRubble\n    }\n\n    isPath(): boolean {\n        return this.surfaceType === SurfaceType.POWER_PATH || this.surfaceType === SurfaceType.POWER_PATH_BUILDING\n    }\n\n    isWalkable(): boolean {\n        return this.surfaceType.floor && this.discovered && this.surfaceType !== SurfaceType.LAVA5 && this.surfaceType !== SurfaceType.WATER && !this.pathBlockedByBuilding\n    }\n\n    isDigable(): boolean {\n        return this.surfaceType.digable && this.discovered && (this.wallType === WALL_TYPE.wall || this.wallType === WALL_TYPE.corner)\n    }\n\n    isReinforcable(): boolean {\n        return this.surfaceType.reinforcable && this.discovered && this.wallType === WALL_TYPE.wall && !this.reinforced\n    }\n\n    getDigPositions(): Vector2[] {\n        const digPosition: Vector2[] = []\n        if (this.terrain.getSurface(this.x - 1, this.y).isWalkable()) digPosition.push(new Vector2(this.x * TILESIZE - 1, this.y * TILESIZE + TILESIZE / 2))\n        if (this.terrain.getSurface(this.x, this.y - 1).isWalkable()) digPosition.push(new Vector2(this.x * TILESIZE + TILESIZE / 2, this.y * TILESIZE - 1))\n        if (this.terrain.getSurface(this.x + 1, this.y).isWalkable()) digPosition.push(new Vector2(this.x * TILESIZE + TILESIZE + 1, this.y * TILESIZE + TILESIZE / 2))\n        if (this.terrain.getSurface(this.x, this.y + 1).isWalkable()) digPosition.push(new Vector2(this.x * TILESIZE + TILESIZE / 2, this.y * TILESIZE + TILESIZE + 1))\n        return digPosition\n    }\n\n    reinforce() {\n        this.reinforced = true\n        this.cancelReinforceJobs()\n        this.worldMgr.ecs.removeComponent(this.entity, EmergeComponent)\n        this.updateTexture()\n        EventBroker.publish(new UpdateRadarSurface(this))\n    }\n\n    getCenterWorld2D(): Vector2 {\n        return new Vector2(this.x, this.y).addScalar(0.5).multiplyScalar(TILESIZE)\n    }\n\n    getCenterWorld(): Vector3 {\n        const center = this.getCenterWorld2D()\n        const raycaster = new Raycaster(new Vector3(center.x, 3 * TILESIZE, center.y), new Vector3(0, -1, 0))\n        const intersect = raycaster.intersectObject(this.mesh, true)\n        if (intersect.length < 1) console.warn(`could not determine terrain height for ${center.x}/${center.y}`)\n        const terrainHeight = intersect[0]?.point?.y || 0\n        return new Vector3(center.x, terrainHeight, center.y)\n    }\n\n    disposeFromWorld() {\n        this.mesh?.dispose()\n        this.roofMesh?.dispose()\n    }\n\n    get neighbors(): Surface[] {\n        return [\n            this.terrain.getSurface(this.x - 1, this.y), this.terrain.getSurface(this.x, this.y - 1),\n            this.terrain.getSurface(this.x + 1, this.y), this.terrain.getSurface(this.x, this.y + 1),\n        ]\n    }\n\n    get neighbors8(): Surface[] {\n        return [\n            ...this.neighbors,\n            this.terrain.getSurface(this.x - 1, this.y - 1), this.terrain.getSurface(this.x - 1, this.y + 1),\n            this.terrain.getSurface(this.x + 1, this.y + 1), this.terrain.getSurface(this.x + 1, this.y - 1),\n        ]\n    }\n\n    get neighborsFence(): Surface[] {\n        return [\n            this.terrain.getSurface(this.x - 1, this.y), this.terrain.getSurface(this.x, this.y - 1),\n            this.terrain.getSurface(this.x + 1, this.y), this.terrain.getSurface(this.x, this.y + 1),\n            this.terrain.getSurface(this.x - 2, this.y), this.terrain.getSurface(this.x, this.y - 2),\n            this.terrain.getSurface(this.x + 2, this.y), this.terrain.getSurface(this.x, this.y + 2),\n        ]\n    }\n\n    setBuilding(building?: BuildingEntity) {\n        this.building = building\n        this.setSurfaceType(this.building ? SurfaceType.POWER_PATH_BUILDING : SurfaceType.GROUND)\n    }\n\n    setSurfaceType(surfaceType: SurfaceType) {\n        if (surfaceType === this.surfaceType) return\n        const oldSurfaceType = this.surfaceType\n        const wasPath = this.surfaceType === SurfaceType.POWER_PATH || this.surfaceType === SurfaceType.POWER_PATH_BUILDING\n        this.surfaceType = surfaceType\n        if (this.surfaceType === SurfaceType.WATER || this.surfaceType === SurfaceType.LAVA5) {\n            this.worldMgr.ecs.addComponent(this.entity, new FluidSurfaceComponent(this.x, this.y, this.mesh.lowMesh.geometry.attributes.uv))\n        } else {\n            this.worldMgr.ecs.removeComponent(this.entity, FluidSurfaceComponent)\n        }\n        this.updateTexture()\n        this.updateObjectName()\n        if (oldSurfaceType.connectsPath || this.surfaceType.connectsPath) this.neighbors.forEach((n) => n.updateTexture())\n        EventBroker.publish(new UpdateRadarSurface(this))\n        if (wasPath !== this.isPath()) this.worldMgr.powerGrid.onPathChange(this)\n        this.terrain.pathFinder.updateSurface(this)\n        if (this.selected && !this.surfaceType.selectable) EventBroker.publish(new DeselectAll())\n        if (this.surfaceType === SurfaceType.LAVA5) {\n            this.rubblePositions.length = 0\n            this.containedOres = 0\n            this.containedCrystals = 0\n            this.site?.cancelSite()\n            const materials = [...this.worldMgr.entityMgr.materials] // list will be changed by dispose below\n            materials.forEach((m) => { // XXX Optimize performance\n                const materialSurface = m.getSurface()\n                if (materialSurface !== this) return\n                m.carryJob?.target?.site?.unAssign(m)\n                m.disposeFromWorld()\n                if (m.entityType === EntityType.DEPLETED_CRYSTAL || m.entityType === EntityType.CRYSTAL) {\n                    GameState.totalCrystals--\n                } else if (m.entityType === EntityType.ORE) {\n                    GameState.totalOres--\n                } else if (m.entityType === EntityType.BRICK) {\n                    GameState.totalOres -= BRICK_ORE_VALUE\n                }\n            })\n        } else if ([SurfaceType.RUBBLE4, SurfaceType.RUBBLE3, SurfaceType.RUBBLE2, SurfaceType.RUBBLE1].includes(this.surfaceType)) {\n            if (this.rubblePositions.length < 1) this.rubblePositions = [this.getRandomPosition(), this.getRandomPosition(), this.getRandomPosition(), this.getRandomPosition()]\n            if (oldSurfaceType === SurfaceType.POWER_PATH) {\n                this.containedOres += 2\n            }\n        }\n        if (this.selected) EventBroker.publish(new SelectionChanged(this.worldMgr.entityMgr))\n    }\n\n    canPlaceFence(): boolean {\n        return this.surfaceType.canHaveFence && !this.building && !this.fence && !this.fenceRequested &&\n            [1, 2].some((n) => {\n                return this.terrain.getSurface(this.x - n, this.y).fencePowerSupplier || this.terrain.getSurface(this.x, this.y - n).fencePowerSupplier\n                    || this.terrain.getSurface(this.x + n, this.y).fencePowerSupplier || this.terrain.getSurface(this.x, this.y + n).fencePowerSupplier\n            })\n    }\n\n    get fencePowerSupplier(): boolean {\n        return !!this.fence || (this === this.building?.primarySurface || this === this.building?.secondarySurface)\n    }\n\n    setupDrillJob(): DrillJob | undefined {\n        if (!this.isDigable()) return undefined\n        if (this.drillJob) return this.drillJob\n        this.drillJob = new DrillJob(this)\n        EventBroker.publish(new JobCreateEvent(this.drillJob))\n        this.updateJobColor()\n        return this.drillJob\n    }\n\n    setupReinforceJob(): void {\n        if (!this.isReinforcable() || this.reinforceJob) return\n        this.reinforceJob = new ReinforceJob(this)\n        EventBroker.publish(new JobCreateEvent(this.reinforceJob))\n        this.updateJobColor()\n    }\n\n    setupDynamiteJob(): void {\n        if (!this.isDigable() || this.dynamiteJob) return\n        const targetBuilding = this.worldMgr.entityMgr.getClosestBuildingByType(this.getCenterWorld(), EntityType.TOOLSTATION) // XXX performance cache this\n        if (!targetBuilding) throw new Error('Could not find toolstation to spawn dynamite')\n        const material = MaterialSpawner.spawnMaterial(this.worldMgr, EntityType.DYNAMITE, targetBuilding.getDropPosition2D(), targetBuilding.sceneEntity.heading, this)\n        this.dynamiteJob = material.carryJob\n        this.updateJobColor()\n    }\n\n    setupClearRubbleJob(): ClearRubbleJob | undefined {\n        if (!this.hasRubble()) return undefined\n        if (this.clearRubbleJob) return this.clearRubbleJob\n        this.clearRubbleJob = new ClearRubbleJob(this)\n        this.updateJobColor()\n        EventBroker.publish(new JobCreateEvent(this.clearRubbleJob))\n        return this.clearRubbleJob\n    }\n\n    setupCompleteSurfaceJob(): CompleteSurfaceJob | undefined {\n        if (!this.site?.complete || this.site.canceled) return undefined\n        if (this.completeSurfaceJob) return this.completeSurfaceJob\n        const items: MaterialEntity[] = []\n        this.site.onSiteByType.forEach((itemsOnSite) => items.push(...itemsOnSite))\n        this.completeSurfaceJob = new CompleteSurfaceJob(this, items)\n        EventBroker.publish(new JobCreateEvent(this.completeSurfaceJob))\n        return this.completeSurfaceJob\n    }\n\n    isBlockedByVehicle() {\n        return this.worldMgr.entityMgr.vehicles.some((v) => v.getSurface() === this)\n    }\n\n    isBlockedByRaider() {\n        return this.worldMgr.entityMgr.raiders.some((r) => r.getSurface() === this)\n    }\n\n    isBlocked(): boolean {\n        return this.isBlockedByRaider() || this.isBlockedByVehicle()\n    }\n}\n","// javascript-astar 0.4.1 (converted to typescript by Scarabol)\n// http://github.com/bgrins/javascript-astar\n// Freely distributable under the MIT License.\n// Implements the astar search algorithm in javascript using a Binary Heap.\n// Includes Binary Heap (with modifications) from Marijn Haverbeke.\n// http://eloquentjavascript.net/appendix2.html\n\nfunction pathTo(node: GridNode) {\n    let curr = node\n    const path: GridNode[] = []\n    while (curr.parent) {\n        path.unshift(curr)\n        curr = curr.parent\n    }\n    return path\n}\n\nfunction getHeap() {\n    return new BinaryHeap(function (node: GridNode) {\n        return node.f\n    })\n}\n\nexport const astar = {\n    /**\n     * Perform an A* Search on a graph given a start and end node.\n     * @param {Graph} graph\n     * @param {GridNode} start\n     * @param {GridNode} end\n     * @param {Object} [options]\n     * @param {boolean} [options.closest] Specifies whether to return the path to the closest node if the target is unreachable.\n     * @param {Function} [options.heuristic] Heuristic function (see astar.heuristics).\n     */\n    search(graph: Graph, start: GridNode, end: GridNode, options?: { closest?: boolean; heuristic?: Function }): GridNode[] {\n        graph.cleanDirty()\n        options = options || {}\n        const heuristic = options.heuristic || astar.heuristics.manhattan\n        const closest = options.closest || false\n\n        const openHeap = getHeap()\n        let closestNode = start  // set the start node to be the closest if required\n\n        start.h = heuristic(start, end)\n        graph.markDirty(start)\n\n        openHeap.push(start)\n\n        while (openHeap.size() > 0) {\n            // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n            const currentNode = openHeap.pop()\n\n            // End case -- result has been found, return the traced path.\n            if (currentNode === end) {\n                return pathTo(currentNode)\n            }\n\n            // Normal case -- move currentNode from open to closed, process each of its neighbors.\n            currentNode.closed = true\n\n            // Find all neighbors for the current node.\n            const neighbors = graph.neighbors(currentNode)\n\n            let i = 0\n            const il = neighbors.length\n            for (; i < il; ++i) {\n                const neighbor = neighbors[i]\n\n                if (neighbor.closed || neighbor.isWall()) {\n                    // Not a valid node to process, skip to next neighbor.\n                    continue\n                }\n\n                // The g score is the shortest distance from start to current node.\n                // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n                const gScore = currentNode.g + neighbor.getCost(currentNode)\n                const beenVisited = neighbor.visited\n\n                if (!beenVisited || gScore < neighbor.g) {\n                    // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n                    neighbor.visited = true\n                    neighbor.parent = currentNode\n                    neighbor.h = neighbor.h || heuristic(neighbor, end)\n                    neighbor.g = gScore\n                    neighbor.f = neighbor.g + neighbor.h\n                    graph.markDirty(neighbor)\n                    if (closest) {\n                        // If the neighbour is closer than the current closestNode or if it's equally close but has\n                        // a cheaper path than the current closest node then it becomes the closest node\n                        if (neighbor.h < closestNode.h || (neighbor.h === closestNode.h && neighbor.g < closestNode.g)) {\n                            closestNode = neighbor\n                        }\n                    }\n\n                    if (!beenVisited) {\n                        // Pushing to heap will put it in proper place based on the 'f' value.\n                        openHeap.push(neighbor)\n                    } else {\n                        // Already seen the node, but since it has been rescored we need to reorder it in the heap\n                        openHeap.rescoreElement(neighbor)\n                    }\n                }\n            }\n        }\n\n        if (closest) {\n            return pathTo(closestNode)\n        }\n\n        // No result was found - empty array signifies failure to find path.\n        return []\n    },\n\n    // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n    heuristics: {\n        manhattan(pos0: { x: number, y: number }, pos1: { x: number, y: number }) {\n            const d1 = Math.abs(pos1.x - pos0.x)\n            const d2 = Math.abs(pos1.y - pos0.y)\n            return d1 + d2\n        },\n\n        diagonal(pos0: { x: number, y: number }, pos1: { x: number, y: number }) {\n            const D = 1\n            const D2 = Math.sqrt(2)\n            const d1 = Math.abs(pos1.x - pos0.x)\n            const d2 = Math.abs(pos1.y - pos0.y)\n            return (D * (d1 + d2)) + ((D2 - (2 * D)) * Math.min(d1, d2))\n        },\n    },\n\n    cleanNode(node: GridNode) {\n        node.f = 0\n        node.g = 0\n        node.h = 0\n        node.visited = false\n        node.closed = false\n        node.parent = undefined\n    },\n}\n\nexport class Graph {\n    readonly nodes: GridNode[] = []\n    readonly diagonal: boolean\n    readonly grid: GridNode[][] = []\n    dirtyNodes: GridNode[] = []\n\n    /**\n     * A graph memory structure\n     * @param {Array} gridIn 2D array of input weights\n     * @param {Object} [options]\n     * @param {boolean} [options.diagonal] Specifies whether diagonal moves are allowed\n     */\n    constructor(gridIn: number[][], options?: { diagonal?: boolean }) {\n        options = options || {}\n        this.diagonal = !!options.diagonal\n        for (let x = 0; x < gridIn.length; x++) {\n            this.grid[x] = []\n\n            let y = 0\n            const row = gridIn[x]\n            for (; y < row.length; y++) {\n                const node = new GridNode(x, y, row[y])\n                this.grid[x][y] = node\n                this.nodes.push(node)\n            }\n        }\n        this.init()\n    }\n\n    init() {\n        this.dirtyNodes = []\n        for (let i = 0; i < this.nodes.length; i++) {\n            astar.cleanNode(this.nodes[i])\n        }\n    }\n\n    cleanDirty() {\n        for (let i = 0; i < this.dirtyNodes.length; i++) {\n            astar.cleanNode(this.dirtyNodes[i])\n        }\n        this.dirtyNodes = []\n    }\n\n    markDirty(node: GridNode) {\n        this.dirtyNodes.push(node)\n    }\n\n    neighbors(node: GridNode) {\n        const ret: GridNode[] = []\n        const x = node.x\n        const y = node.y\n        const grid = this.grid\n\n        // West\n        if (grid[x - 1] && grid[x - 1][y]) {\n            ret.push(grid[x - 1][y])\n        }\n\n        // East\n        if (grid[x + 1] && grid[x + 1][y]) {\n            ret.push(grid[x + 1][y])\n        }\n\n        // South\n        if (grid[x] && grid[x][y - 1]) {\n            ret.push(grid[x][y - 1])\n        }\n\n        // North\n        if (grid[x] && grid[x][y + 1]) {\n            ret.push(grid[x][y + 1])\n        }\n\n        if (this.diagonal) {\n            // Southwest\n            if (grid[x - 1] && grid[x - 1][y - 1]\n                && grid[x] && grid[x][y - 1]?.weight // South\n                && grid[x - 1] && grid[x - 1][y]?.weight // West\n            ) {\n                ret.push(grid[x - 1][y - 1])\n            }\n\n            // Southeast\n            if (grid[x + 1] && grid[x + 1][y - 1]\n                && grid[x] && grid[x][y - 1]?.weight // South\n                && grid[x + 1] && grid[x + 1][y]?.weight // East\n            ) {\n                ret.push(grid[x + 1][y - 1])\n            }\n\n            // Northwest\n            if (grid[x - 1] && grid[x - 1][y + 1]\n                && grid[x] && grid[x][y + 1]?.weight // North\n                && grid[x - 1] && grid[x - 1][y]?.weight // West\n            ) {\n                ret.push(grid[x - 1][y + 1])\n            }\n\n            // Northeast\n            if (grid[x + 1] && grid[x + 1][y + 1]\n                && grid[x] && grid[x][y + 1]?.weight // North\n                && grid[x + 1] && grid[x + 1][y]?.weight // East\n            ) {\n                ret.push(grid[x + 1][y + 1])\n            }\n        }\n\n        return ret\n    }\n\n    toString() {\n        const graphString: string[] = []\n        const nodes = this.grid\n        for (let x = 0; x < nodes.length; x++) {\n            const rowDebug: number[] = []\n            const row = nodes[x]\n            for (let y = 0; y < row.length; y++) {\n                rowDebug.push(row[y].weight)\n            }\n            graphString.push(rowDebug.join(' '))\n        }\n        return graphString.join('\\n')\n    }\n}\n\nclass GridNode {\n    x: number\n    y: number\n    weight: number\n    h: number = 0\n    closed: boolean = false\n    visited: boolean = false\n    g: number = 0\n    parent?: GridNode\n    f: number = 0\n\n    constructor(x: number, y: number, weight: number) {\n        this.x = x\n        this.y = y\n        this.weight = weight\n    }\n\n    toString() {\n        return `[${this.x} ${this.y}]`\n    }\n\n    getCost(fromNeighbor: GridNode) {\n        // Take diagonal weight into consideration.\n        if (fromNeighbor && fromNeighbor.x != this.x && fromNeighbor.y != this.y) {\n            return this.weight * 1.41421\n        }\n        return this.weight\n    }\n\n    isWall() {\n        return this.weight === 0\n    }\n}\n\nclass BinaryHeap {\n    content: GridNode[] = []\n    scoreFunction: (node: GridNode) => number\n\n    constructor(scoreFunction: (node: GridNode) => number) {\n        this.content = []\n        this.scoreFunction = scoreFunction\n    }\n\n    push(element: GridNode) {\n        // Add the new element to the end of the array.\n        this.content.push(element)\n\n        // Allow it to sink down.\n        this.sinkDown(this.content.length - 1)\n    }\n\n    pop() {\n        // Store the first element, so we can return it later.\n        const result = this.content[0]\n        // Get the element at the end of the array.\n        const end = this.content.pop()\n        if (!end) throw new Error('Missing node! Expected content to have at least one')\n        // If there are any elements left, put the end element at the\n        // start, and let it bubble up.\n        if (this.content.length > 0) {\n            this.content[0] = end\n            this.bubbleUp(0)\n        }\n        return result\n    }\n\n    remove(node: GridNode) {\n        const i = this.content.indexOf(node)\n\n        // When it is found, the process seen in 'pop' is repeated\n        // to fill up the hole.\n        const end = this.content.pop()\n        if (!end) throw new Error('Missing node! Expected content to have at least one')\n\n        if (i !== this.content.length - 1) {\n            this.content[i] = end\n\n            if (this.scoreFunction(end) < this.scoreFunction(node)) {\n                this.sinkDown(i)\n            } else {\n                this.bubbleUp(i)\n            }\n        }\n    }\n\n    size() {\n        return this.content.length\n    }\n\n    rescoreElement(node: GridNode) {\n        this.sinkDown(this.content.indexOf(node))\n    }\n\n    sinkDown(n: number) {\n        // Fetch the element that has to be sunk.\n        const element = this.content[n]\n\n        // When at 0, an element can not sink any further.\n        while (n > 0) {\n            // Compute the parent element's index, and fetch it.\n            const parentN = ((n + 1) >> 1) - 1\n            const parent = this.content[parentN]\n            // Swap the elements if the parent is greater.\n            if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n                this.content[parentN] = element\n                this.content[n] = parent\n                // Update 'n' to continue at the new position.\n                n = parentN\n            }\n            // Found a parent that is less, no need to sink any further.\n            else {\n                break\n            }\n        }\n    }\n\n    bubbleUp(n: number) {\n        // Look up the target element and its score.\n        const length = this.content.length\n        const element = this.content[n]\n        const elemScore = this.scoreFunction(element)\n\n        while (true) {\n            // Compute the indices of the child elements.\n            const child2N = (n + 1) << 1\n            const child1N = child2N - 1\n            // This is used to store the new position of the element, if any.\n            let swap: number | null = null\n            let child1Score: number = Infinity\n            // If the first child exists (is inside the array)...\n            if (child1N < length) {\n                // Look it up and compute its score.\n                const child1 = this.content[child1N]\n                child1Score = this.scoreFunction(child1)\n\n                // If the score is less than our element's, we need to swap.\n                if (child1Score < elemScore) {\n                    swap = child1N\n                }\n            }\n\n            // Do the same checks for the other child.\n            if (child2N < length) {\n                const child2 = this.content[child2N]\n                const child2Score = this.scoreFunction(child2)\n                if (child2Score < (swap === null ? elemScore : child1Score)) {\n                    swap = child2N\n                }\n            }\n\n            // If the element needs to be moved, swap it, and continue.\n            if (swap !== null) {\n                this.content[n] = this.content[swap]\n                this.content[swap] = element\n                n = swap\n            }\n            // Otherwise, we are done.\n            else {\n                break\n            }\n        }\n    }\n}\n","import { Vector2 } from 'three'\n\nexport class TerrainPathStep {\n    constructor(\n        readonly position: Vector2,\n        readonly direction: Vector2,\n        readonly remainingStepLength: number,\n        public targetReached: boolean = false,\n    ) {\n    }\n}\n\nexport class TerrainPathSegment {\n    readonly startControl: Vector2\n    readonly targetControl: Vector2\n    readonly approxLengths: number[] = new Array(10)\n    private currentLocation: Vector2\n    private currentDirection: Vector2\n    private currentProgress: number = 0\n\n    constructor(\n        readonly startLocation: Vector2,\n        startDir: Vector2,\n        readonly targetLocation: Vector2,\n        targetDir: Vector2,\n    ) {\n        const length = targetLocation.clone().sub(startLocation).length()\n        startDir = startDir.clone().normalize()\n        targetDir = targetDir.clone().normalize()\n        this.startControl = startLocation.clone().addScaledVector(startDir, length / 2)\n        this.targetControl = targetLocation.clone().addScaledVector(targetDir, -length / 2)\n        // Set start condition\n        this.currentLocation = startLocation.clone()\n        this.currentDirection = startDir.clone()\n        // Estimate length\n        let approxLength = 0\n        this.approxLengths[0] = approxLength\n        for (let i = 1, p = this.startLocation; i < this.approxLengths.length; i += 1) {\n            const nextP = this.bezierCurveD0(i / (this.approxLengths.length - 1))\n            approxLength += nextP.clone().sub(p).length()\n            p = nextP\n            this.approxLengths[i] = approxLength\n        }\n    }\n\n    private bezierCurveD0(t: number): Vector2 {\n        const p0 = this.startLocation.clone().multiplyScalar(Math.pow(t, 0) * Math.pow(1 - t, 3))\n        const p1 = this.startControl.clone().multiplyScalar(3 * Math.pow(t, 1) * Math.pow(1 - t, 2))\n        const p2 = this.targetControl.clone().multiplyScalar(3 * Math.pow(t, 2) * Math.pow(1 - t, 1))\n        const p3 = this.targetLocation.clone().multiplyScalar(Math.pow(t, 3) * Math.pow(1 - t, 0))\n        return p0.add(p1).add(p2).add(p3)\n    }\n\n    private bezierCurveD1(t: number): Vector2 {\n        const p0 = this.startControl.clone().sub(this.startLocation).multiplyScalar(3 * Math.pow(1 - t, 2))\n        const p1 = this.targetControl.clone().sub(this.startControl).multiplyScalar(6 * (1 - t) * t)\n        const p2 = this.targetLocation.clone().sub(this.targetControl).multiplyScalar(3 * Math.pow(t, 2))\n        return p0.add(p1).add(p2)\n    }\n\n    step(pos: Vector2, dir: Vector2, stepLength: number, maxTurn: number = Infinity): TerrainPathStep {\n        let remainingStepLength = stepLength\n        let fraction = 1\n        let vec = this.currentLocation.clone().sub(pos)\n        let vecLength = vec.length()\n        update: {\n            if (vecLength >= remainingStepLength) {\n                fraction = vecLength ? remainingStepLength / vecLength : 0\n                remainingStepLength = 0\n                break update\n            }\n            remainingStepLength -= vecLength\n            const totalApproxLength = this.approxLengths[this.approxLengths.length - 1]\n            let p = this.currentProgress * (this.approxLengths.length - 1)\n            let i = Math.trunc(p)\n            let lengthOffset = this.approxLengths[i] ?? totalApproxLength\n            lengthOffset += ((this.approxLengths[i + 1] ?? totalApproxLength) - (this.approxLengths[i] ?? totalApproxLength)) * (p - i)\n            for (; i < this.approxLengths.length - 1; i += 1) {\n                if (this.approxLengths[i + 1] - lengthOffset <= remainingStepLength) {\n                    continue\n                }\n                this.currentProgress = (i +\n                    (remainingStepLength - (this.approxLengths[i] - lengthOffset)) /\n                    (this.approxLengths[i + 1] - this.approxLengths[i])\n                ) / (this.approxLengths.length - 1)\n                remainingStepLength = 0\n                this.currentLocation = this.bezierCurveD0(this.currentProgress)\n                this.currentDirection = this.bezierCurveD1(this.currentProgress)\n                break update\n            }\n            remainingStepLength -= totalApproxLength - lengthOffset\n            this.currentProgress = 1\n            this.currentLocation.copy(this.targetLocation)\n            this.currentDirection = this.bezierCurveD1(this.currentProgress)\n        }\n        const turn = Math.sign(dir.clone().cross(this.currentDirection)) * dir.angleTo(this.currentDirection)\n        fraction = Math.min(fraction, maxTurn / Math.abs(turn))\n        remainingStepLength = Math.min(remainingStepLength, stepLength * (1 - Math.min(1, Math.abs(turn) / maxTurn)))\n        const newPos = pos.clone().multiplyScalar(1 - fraction).addScaledVector(this.currentLocation, fraction)\n        const newDir = dir.clone().rotateAround(new Vector2(), turn * fraction)\n        return new TerrainPathStep(newPos, newDir, remainingStepLength)\n    }\n}\n","import { Vector2 } from 'three'\nimport { PathTarget } from '../model/PathTarget'\nimport { TerrainPathSegment, TerrainPathStep } from './TerrainPathSegment'\n\nexport class TerrainPath {\n    readonly lengthSq: number = 0\n    private segment: TerrainPathSegment | undefined\n\n    constructor(readonly target: PathTarget, readonly locations: Vector2[]) {\n        for (let c = 0; c < this.locations.length - 1; c++) {\n            const start = this.locations[c]\n            const end = this.locations[c + 1]\n            this.lengthSq += start.distanceToSquared(end)\n        }\n    }\n\n    step(pos: Vector2, dir: Vector2, stepLength: number, maxTurn: number = Infinity): TerrainPathStep {\n        if (!this.segment) {\n            if (this.locations.length === 0) {\n                return new TerrainPathStep(pos, dir, stepLength, true)\n            }\n            if (this.locations.length === 1) {\n                this.segment = new TerrainPathSegment(pos, dir, this.locations[0], this.target.focusPoint ? this.target.focusPoint.clone().sub(this.locations[0]) : this.locations[0].clone().sub(pos))\n            } else {\n                const d = this.locations[1].clone().sub(this.locations[0])\n                this.segment = new TerrainPathSegment(pos, dir, this.locations[0].clone().addScaledVector(d, 0.5), d)\n            }\n        }\n        let step = this.segment.step(pos, dir, stepLength, maxTurn)\n        if (step.remainingStepLength > 0) {\n            this.segment = undefined\n            this.locations.shift()\n            step = this.step(step.position, step.direction, step.remainingStepLength, maxTurn)\n        }\n        step.targetReached = this.target.targetLocation.clone().sub(step.position).lengthSq() <= this.target.radiusSq\n        return step\n    }\n}\n","import { Vector2 } from 'three'\nimport { MovableEntityStats } from '../../cfg/GameStatsCfg'\nimport { TILESIZE } from '../../params'\nimport { astar, Graph } from './astar'\nimport { SurfaceType } from './SurfaceType'\nimport { TerrainPath } from './TerrainPath'\nimport { PathTarget } from '../model/PathTarget'\nimport { AnimatedSceneEntity } from '../../scene/AnimatedSceneEntity'\nimport { BuildingEntity } from '../model/building/BuildingEntity'\n\nclass ConfiguredGraph extends Graph {\n    constructor(\n        grid: number[][],\n        readonly precision: number,\n        readonly stats: MovableEntityStats\n    ) {\n        super(grid, {diagonal: true})\n    }\n}\n\ninterface PathFindingSurfaceData {\n    x: number\n    y: number\n    surfaceType: SurfaceType\n    discovered: boolean\n    pathBlockedByBuilding: boolean\n}\n\nexport class PathFinder {\n    readonly graphByCacheKey: Map<string, ConfiguredGraph> = new Map()\n    readonly cachedPathsByKey: Map<string, Vector2[] | undefined> = new Map()\n\n    constructor(readonly surfaces: PathFindingSurfaceData[][]) {\n    }\n\n    updateSurface(surface: PathFindingSurfaceData) {\n        this.graphByCacheKey.forEach((graph) => {\n            const weight = PathFinder.getWeight(surface, graph.stats)\n            for (let x = 0; x < graph.precision; x++) {\n                for (let y = 0; y < graph.precision; y++) {\n                    graph.grid[surface.x * graph.precision + x][surface.y * graph.precision + y].weight = weight\n                }\n            }\n        })\n    }\n\n    findShortestPath(start: Vector2, targets: PathTarget[] | PathTarget | undefined, stats: MovableEntityStats, precision: number, preferredTargetLocation?: Vector2): TerrainPath | undefined {\n        if (!targets) return undefined\n        return PathFinder.getShortest(\n            Array.ensure(targets).map((pathTarget) => this.findTerrainPath(start, pathTarget, stats, precision)),\n            precision, preferredTargetLocation && ((p) => preferredTargetLocation.equals(p.target.targetLocation)),\n        )\n    }\n\n    private findTerrainPath(start: Vector2, target: PathTarget, stats: MovableEntityStats, precision: number): TerrainPath | undefined {\n        const path = this.findPath(start, target.targetLocation, stats, precision)\n        if (!path) return undefined\n        return new TerrainPath(target, path)\n    }\n\n    findClosestObj<T extends {\n        sceneEntity: AnimatedSceneEntity\n    }>(start: Vector2, objects: T[], stats: MovableEntityStats, precision: number): {\n        obj: T,\n        locations: Vector2[],\n        lengthSq: number\n    } | undefined {\n        return PathFinder.getShortest(objects.map((obj) => {\n            if (!obj) return undefined\n            const path = this.findPath(start, obj.sceneEntity.position2D, stats, precision)\n            if (!path) return undefined\n            let lengthSq = 0\n            for (let c = 0; c < path.length - 1; c++) {\n                const start = path[c]\n                const end = path[c + 1]\n                lengthSq += start.distanceToSquared(end)\n            }\n            return {obj: obj, locations: path, lengthSq: lengthSq}\n        }), precision)\n    }\n\n    findClosestBuilding(start: Vector2, buildings: BuildingEntity[], stats: MovableEntityStats, precision: number): {\n        obj: BuildingEntity,\n        locations: Vector2[],\n        lengthSq: number\n    } | undefined {\n        return PathFinder.getShortest(buildings.flatMap((b) => b.getTrainingTargets().flatMap((t) => {\n            const path = this.findPath(start, t.targetLocation, stats, precision)\n            if (!path) return undefined\n            let lengthSq = 0\n            for (let c = 0; c < path.length - 1; c++) {\n                const start = path[c]\n                const end = path[c + 1]\n                lengthSq += start.distanceToSquared(end)\n            }\n            return {obj: b, locations: path, lengthSq: lengthSq}\n        })), precision)\n    }\n\n    private static getShortest<T extends { lengthSq: number }>(objs: (T | undefined)[], precision: number, isPreferred?: (obj: T) => boolean): T | undefined {\n        const shortest = objs.reduce((acc, o) => o && (!acc || o.lengthSq < acc.lengthSq) ? o : acc, undefined)\n        if (!shortest) return undefined\n        const preferred = isPreferred && objs.find((o) => o && isPreferred(o))\n        return preferred && preferred.lengthSq - shortest.lengthSq < Math.pow(TILESIZE / precision, 2) ? preferred : shortest\n    }\n\n    private findPath(start: Vector2, targetLocation: Vector2, stats: MovableEntityStats, precision: number): Vector2[] | undefined {\n        const gridStart = start.clone().divideScalar(TILESIZE / precision).floor()\n        const gridEnd = targetLocation.clone().divideScalar(TILESIZE / precision).floor()\n        const startTileX = Math.floor(gridStart.x / precision) * precision\n        const startTileY = Math.floor(gridStart.y / precision) * precision\n        const endTileX = Math.floor(gridEnd.x / precision) * precision\n        const endTileY = Math.floor(gridEnd.y / precision) * precision\n        if (startTileX === endTileX && startTileY === endTileY) return [targetLocation]\n        const graphKey = `${precision} ${stats.crossLand} ${stats.crossWater} ${stats.crossLava}`\n        const pathKey = `${graphKey} ${startTileX}/${startTileY} -> ${endTileX}/${endTileY}`\n        const resultPath = this.cachedPathsByKey.getOrUpdate(pathKey, () => {\n            const graph = this.graphByCacheKey.getOrUpdate(graphKey, () => this.createGraph(stats, precision))\n            const startNode = graph.grid[gridStart.x][gridStart.y]\n            const endNode = graph.grid[gridEnd.x][gridEnd.y]\n            const startWeights: number[][] = []\n            try {\n                for (let x = startTileX; x < startTileX + precision; x++) {\n                    for (let y = startTileY; y < startTileY + precision; y++) {\n                        startWeights[x] = startWeights[x] ?? []\n                        startWeights[x][y] = graph.grid[x][y].weight\n                        graph.grid[x][y].weight = 1\n                    }\n                }\n                startNode.weight = 1\n                const freshPath = astar.search(graph, startNode, endNode)\n                if (freshPath.length < 1) return undefined // no path found\n                freshPath.pop() // last node is replaced with actual target position\n                return freshPath.map((n) => new Vector2(n.x + 0.5, n.y + 0.5))\n            } finally {\n                for (let x = startTileX; x < startTileX + precision; x++) {\n                    for (let y = startTileY; y < startTileY + precision; y++) {\n                        graph.grid[x][y].weight = startWeights[x][y]\n                    }\n                }\n            }\n        })\n        if (!resultPath) return undefined\n        // return shallow copy to avoid interference\n        const pathWithOffsets = resultPath.map((n) => n.clone().multiplyScalar(TILESIZE / precision))\n        return [...pathWithOffsets, targetLocation]\n    }\n\n    private createGraph(stats: MovableEntityStats, precision: number) {\n        const weights: number[][] = []\n        for (let x = 0; x < this.surfaces.length; x++) {\n            const col: number[] = []\n            for (let y = 0; y < this.surfaces[0].length; y++) {\n                const surface = this.surfaces[x][y]\n                const w = PathFinder.getWeight(surface, stats)\n                for (let c = 0; c < precision; c++) {\n                    col.push(w)\n                }\n            }\n            for (let c = 0; c < precision; c++) {\n                weights.push(col)\n            }\n        }\n        return new ConfiguredGraph(weights, precision, stats)\n    }\n\n    static getWeight(surface: PathFindingSurfaceData, stats: MovableEntityStats): number {\n        if (!surface.surfaceType.floor || !surface.discovered) return 0 // TODO consider EnterWall\n        else if (surface.pathBlockedByBuilding) return 0 // TODO consider EnterToolstore\n        else if (surface.surfaceType.hasRubble) return 1 / (stats.rubbleCoef || 1)\n        else if (surface.surfaceType === SurfaceType.WATER) return stats.crossWater ? 1 : 0\n        else if (surface.surfaceType === SurfaceType.LAVA5) return stats.crossLava ? 1 : 0\n        else if (surface.surfaceType === SurfaceType.POWER_PATH || surface.surfaceType === SurfaceType.POWER_PATH_BUILDING) return 1 / (stats.pathCoef || 1)\n        return stats.crossLand ? 1 : 0\n    }\n\n    resetGraphsAndCaches() {\n        this.graphByCacheKey.forEach((g) => g.init())\n        this.cachedPathsByKey.clear()\n    }\n}\n","import { Vector2, Vector3 } from 'three'\nimport { LevelConfData } from '../LevelLoader'\nimport { SURFACE_NUM_CONTAINED_ORE, TILESIZE } from '../../params'\nimport { WorldManager } from '../WorldManager'\nimport { PathFinder } from './PathFinder'\nimport { Surface } from './Surface'\nimport { SurfaceType } from './SurfaceType'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { WorldLocationEvent } from '../../event/WorldEvents'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { WALL_TYPE } from './WallType'\nimport { EventBroker } from '../../event/EventBroker'\n\nexport class Terrain {\n    heightOffset: number[][] = [[]]\n    width: number = 0\n    height: number = 0\n    surfaces: Surface[][] = []\n    pathFinder: PathFinder = new PathFinder(this.surfaces)\n    slugHoles: Surface[] = []\n    rechargeSeams: Surface[] = []\n\n    constructor(readonly worldMgr: WorldManager, readonly levelConf: LevelConfData) {\n        this.width = levelConf.mapWidth\n        if (this.width < 1) throw new Error('Invalid map width given')\n        this.height = levelConf.mapHeight\n        if (this.height < 1) throw new Error('Invalid map height given')\n    }\n\n    getSurfaceFromWorld(worldPosition: Vector3): Surface {\n        return this.getSurfaceFromWorldXZ(worldPosition.x, worldPosition.z)\n    }\n\n    getSurfaceFromWorld2D(worldPosition: Vector2): Surface {\n        return this.getSurfaceFromWorldXZ(worldPosition.x, worldPosition.y)\n    }\n\n    getSurfaceFromWorldXZ(worldX: number, worldZ: number): Surface {\n        return this.getSurface(worldX / TILESIZE, worldZ / TILESIZE)\n    }\n\n    getSurface(x: number, y: number): Surface {\n        x = Math.floor(x)\n        y = Math.floor(y)\n        return this.getSurfaceOrNull(x, y) || new Surface(this, SurfaceType.SOLID_ROCK, x, y)\n    }\n\n    getSurfaceOrNull(x: number, y: number): Surface | null {\n        if (x >= 0 && x < this.width && y >= 0 && y < this.height) {\n            return this.surfaces[x][y]\n        } else {\n            return null\n        }\n    }\n\n    getAdjacent(x: number, y: number): {\n        left: Surface, topLeft: Surface, top: Surface, topRight: Surface,\n        right: Surface, bottomRight: Surface, bottom: Surface, bottomLeft: Surface\n    } {\n        return {\n            left: this.getSurface(x - 1, y),\n            topLeft: this.getSurface(x - 1, y - 1),\n            top: this.getSurface(x, y - 1),\n            topRight: this.getSurface(x + 1, y - 1),\n            right: this.getSurface(x + 1, y),\n            bottomRight: this.getSurface(x + 1, y + 1),\n            bottom: this.getSurface(x, y + 1),\n            bottomLeft: this.getSurface(x - 1, y + 1),\n        }\n    }\n\n    updateSurfaceMeshes(force: boolean = false) {\n        this.forEachSurface((s) => s.updateMesh(force))\n        this.worldMgr.sceneMgr.floorGroup.updateWorldMatrix(true, true) // otherwise, ray intersection is not working before rendering\n        this.pathFinder.resetGraphsAndCaches()\n    }\n\n    dispose() {\n        this.forEachSurface(s => s.disposeFromWorld())\n    }\n\n    forEachSurface(each: (surface: Surface) => void) {\n        this.surfaces?.forEach((r) => r.forEach((s) => each(s)))\n    }\n\n    countDiggables(): number {\n        let totalDiggables = 0\n        this.forEachSurface((s) => totalDiggables += s.surfaceType.digable ? 1 : 0)\n        return totalDiggables\n    }\n\n    countCrystals(): number {\n        let totalCrystals = 0\n        this.forEachSurface((s) => totalCrystals += s.containedCrystals)\n        return totalCrystals\n    }\n\n    countOres(): number {\n        let totalOres = 0\n        this.forEachSurface((s) => totalOres += s.containedOres + (s.surfaceType === SurfaceType.ORE_SEAM ? s.seamLevel : 0) + (s.surfaceType.digable ? SURFACE_NUM_CONTAINED_ORE : 0))\n        return totalOres\n    }\n\n    createFallIn(source: Surface, target: Surface) { // TODO Move to scene effects generator class and trigger with event\n        const fallInPosition = target.getCenterWorld()\n        const heading = Math.atan2(target.y - source.y, source.x - target.x) + Math.PI / 2\n        const rockFallAnimName = this.levelConf.rockFallStyle.tunnel // fall-ins always come from (reinforcable) walls\n        this.worldMgr.sceneMgr.addMiscAnim(rockFallAnimName, fallInPosition, heading, false)\n        if (target.surfaceType.fallInAffected) target.setSurfaceType(SurfaceType.RUBBLE4)\n        EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_LANDSLIDE, new PositionComponent(target.getCenterWorld(), target)))\n    }\n\n    getFloorPosition(world: Vector2) {\n        const p = world.clone().divideScalar(TILESIZE).floor()\n        const s = world.clone().divideScalar(TILESIZE).sub(p)\n        const dy0 = Terrain.interpolate(this.getHeightOffset(p.x, p.y), this.getHeightOffset(p.x + 1, p.y), s.x)\n        const dy1 = Terrain.interpolate(this.getHeightOffset(p.x, p.y + 1), this.getHeightOffset(p.x + 1, p.y + 1), s.x)\n        const floorY = Terrain.interpolate(dy0, dy1, s.y) * TILESIZE\n        return new Vector3(world.x, floorY, world.y)\n    }\n\n    private static interpolate(y0: number, y1: number, v: number): number {\n        return y0 + v * (y1 - y0)\n    }\n\n    getHeightOffset(x: number, y: number): number {\n        return this.heightOffset[x]?.[y] ?? 0\n    }\n\n    findClosestWall(position: Vector2): Surface | undefined {\n        const checked: Surface[] = []\n        const toCheck: Surface[] = []\n        let next: Surface | undefined = this.getSurfaceFromWorld2D(position)\n        while (next) {\n            if (next.wallType === WALL_TYPE.wall) return next\n            checked.add(next)\n            toCheck.push(...next.neighbors.filter((n) => !checked.includes(n)))\n            next = toCheck.shift()\n        }\n        return undefined\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { Surface } from '../terrain/Surface'\nimport { SurfaceType } from '../terrain/SurfaceType'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { PRNG } from '../factory/PRNG'\n\nexport class LavaErosionComponent extends AbstractGameComponent {\n    readonly erosionTimeMultiplier: number\n    erosionTimer: number = 0\n\n    constructor(readonly surface: Surface, readonly erosionLevel: number) {\n        super()\n        this.erosionTimeMultiplier = 6 - Math.floor((erosionLevel + 1) / 2)\n    }\n\n    canStartNewErosion(): boolean {\n        return this.surface.neighbors.some((s) => s.surfaceType === SurfaceType.LAVA5)\n    }\n\n    increaseErosionLevel(addSmokeEffect: boolean) {\n        if (!this.surface.surfaceType.floor || !this.surface.discovered) return\n        let erosionSurfaceType: SurfaceType = SurfaceType.LAVA1\n        if (this.surface.surfaceType === SurfaceType.LAVA1) erosionSurfaceType = SurfaceType.LAVA2\n        else if (this.surface.surfaceType === SurfaceType.LAVA2) erosionSurfaceType = SurfaceType.LAVA3\n        else if (this.surface.surfaceType === SurfaceType.LAVA3) erosionSurfaceType = SurfaceType.LAVA4\n        else if (this.surface.surfaceType === SurfaceType.LAVA4) erosionSurfaceType = SurfaceType.LAVA5\n        this.surface.setSurfaceType(erosionSurfaceType)\n        if (addSmokeEffect) {\n            const lwsFilename = PRNG.animation.sample([\n                GameConfig.instance.miscObjects.lavaErosionSmoke1,\n                GameConfig.instance.miscObjects.lavaErosionSmoke2,\n                GameConfig.instance.miscObjects.lavaErosionSmoke3,\n                GameConfig.instance.miscObjects.lavaErosionSmoke4,\n            ])\n            const smoke = this.surface.worldMgr.sceneMgr.addMiscAnim(lwsFilename, this.surface.getCenterWorld(), PRNG.animation.random() * 2 * Math.PI, false)\n            smoke.meshList.forEach((m) => m.material.forEach((m) => m.color.setRGB(1, 0.5, 0)))\n        }\n    }\n}\n","import { LevelConfData } from './LevelLoader'\nimport { TILESIZE } from '../params'\nimport { Surface } from './terrain/Surface'\nimport { SurfaceType } from './terrain/SurfaceType'\nimport { Terrain } from './terrain/Terrain'\nimport { WorldManager } from './WorldManager'\nimport { Vector3 } from 'three'\nimport { LavaErosionComponent } from './component/LavaErosionComponent'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { EmergeComponent } from './component/EmergeComponent'\nimport { FallInComponent } from './component/FallInComponent'\nimport { FluidSurfaceComponent } from './component/FluidSurfaceComponent'\nimport { isNum } from '../core/Util'\nimport { PRNG } from './factory/PRNG'\nimport { WALL_TYPE } from './terrain/WallType'\n\nexport class TerrainLoader {\n    static loadTerrain(levelConf: LevelConfData, worldMgr: WorldManager): Terrain {\n        const terrain = new Terrain(worldMgr, levelConf)\n\n        // maps parsed from WAD are row-wise saved, which means y (row) comes first and x (column) second\n        for (let r = 0; r < levelConf.terrainMap.length; r++) {\n            for (let c = 0; c < levelConf.terrainMap[r].length; c++) {\n                terrain.surfaces[c] = terrain.surfaces[c] || []\n                const surfaceTypeNum = levelConf.terrainMap[r][c]\n                let surfaceType = SurfaceType.getByNum(surfaceTypeNum)\n                const predugLevel = levelConf.predugMap[r][c]\n                if (predugLevel === PREDUG_MAP.cavernExposed) {\n                    if (surfaceType === SurfaceType.GROUND || surfaceType === SurfaceType.DIRT\n                        || surfaceType === SurfaceType.SOLID_ROCK || surfaceType === SurfaceType.HARD_ROCK || surfaceType === SurfaceType.LOOSE_ROCK) {\n                        surfaceType = SurfaceType.GROUND\n                    } else if (surfaceType !== SurfaceType.WATER && surfaceType !== SurfaceType.LAVA5) {\n                        console.warn(`Unexpected cavern surface type: ${surfaceType.name}`)\n                    }\n                } else if (predugLevel === PREDUG_MAP.slugHoleExposed || predugLevel === PREDUG_MAP.slugHoleHidden) {\n                    surfaceType = SurfaceType.SLUG_HOLE\n                } else if (predugLevel !== PREDUG_MAP.wall && predugLevel !== PREDUG_MAP.cavernHidden) {\n                    console.warn(`Unexpected predug level: ${predugLevel}`)\n                }\n                // give the path map the highest priority, if it exists\n                const pathMapLevel = levelConf.pathMap && surfaceType.floor ? levelConf.pathMap[r][c] : PATH_MAP.none\n                if (pathMapLevel === PATH_MAP.rubble) {\n                    surfaceType = SurfaceType.RUBBLE4\n                } else if (pathMapLevel === PATH_MAP.powerPath) {\n                    surfaceType = SurfaceType.POWER_PATH\n                } else if (pathMapLevel !== PATH_MAP.none) {\n                    console.warn(`Unexpected path map level: ${pathMapLevel}`)\n                }\n\n                const surface = new Surface(terrain, surfaceType, c, r)\n                if (levelConf.cryOreMap) {\n                    const currentCryOre = levelConf.cryOreMap[r][c]\n                    if (currentCryOre % 2 === 1) {\n                        surface.containedCrystals = (currentCryOre + 1) / 2\n                    } else {\n                        surface.containedOres = currentCryOre / 2\n                    }\n                }\n\n                terrain.surfaces[c].push(surface)\n            }\n        }\n\n        // calculate average height offsets\n        for (let x = 0; x < terrain.width + 1; x++) {\n            terrain.heightOffset[x] = []\n            for (let y = 0; y < terrain.height + 1; y++) {\n                const offsets = [levelConf.surfaceMap?.[y - 1]?.[x - 1], levelConf.surfaceMap?.[y - 1]?.[x], levelConf.surfaceMap?.[y]?.[x - 1], levelConf.surfaceMap?.[y]?.[x]].filter((n) => isNum(n))\n                terrain.heightOffset[x][y] = offsets.reduce((l, r) => l + r, 0) / (offsets.length || 1) * 0.1 / 6 * levelConf.roughLevel\n            }\n        }\n\n        // explore pre-dug surfaces\n        terrain.forEachSurface((s) => {\n            if (levelConf.predugMap[s.y][s.x] === PREDUG_MAP.cavernExposed || levelConf.predugMap[s.y][s.x] === PREDUG_MAP.slugHoleExposed) { // map are rows (y) first, columns (x) second\n                for (let x = s.x - 1; x <= s.x + 1; x++) {\n                    for (let y = s.y - 1; y <= s.y + 1; y++) {\n                        const surface = terrain.getSurfaceOrNull(x, y)\n                        if (surface) {\n                            surface.discovered = true\n                            if (surface.neighbors.some((n) => n.surfaceType.floor)) {\n                                switch (surface.surfaceType) {\n                                    case SurfaceType.LAVA5:\n                                    // fallthrough\n                                    case SurfaceType.WATER:\n                                        worldMgr.ecs.addComponent(surface.entity, new FluidSurfaceComponent(surface.x, surface.y, surface.mesh.lowMesh.geometry.attributes.uv))\n                                        break\n                                    case SurfaceType.SLUG_HOLE:\n                                        terrain.slugHoles.add(surface)\n                                        break\n                                    case SurfaceType.RECHARGE_SEAM:\n                                        terrain.rechargeSeams.add(surface)\n                                        const floorNeighbor = surface.neighbors.find((n) => n.surfaceType.floor)\n                                        if (floorNeighbor) { // TODO Same code as in surface class\n                                            const position = new Vector3(0.5, 0.5 + surface.terrain.getHeightOffset(surface.x, surface.y), 0.5)\n                                            const angle = Math.atan2(floorNeighbor.y - surface.y, surface.x - floorNeighbor.x) + Math.PI / 2\n                                            const grp = worldMgr.sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.rechargeSparkle, position, angle, true)\n                                            grp.scale.setScalar(1 / TILESIZE)\n                                            surface.mesh.add(grp)\n                                        } else {\n                                            console.warn('Could not add sparkles to recharge seam, because of missing floor neighbor')\n                                        }\n                                        break\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        })\n\n        // create hidden caverns\n        terrain.forEachSurface((surface) => {\n            if (levelConf.predugMap[surface.y][surface.x] === PREDUG_MAP.cavernHidden && !surface.surfaceType.floor) {\n                surface.surfaceType = SurfaceType.HIDDEN_CAVERN\n            } else if (levelConf.predugMap[surface.y][surface.x] === PREDUG_MAP.slugHoleHidden) {\n                surface.surfaceType = SurfaceType.HIDDEN_SLUG_HOLE\n            }\n        })\n\n        terrain.updateSurfaceMeshes(true)\n\n        if (levelConf.fallinMap) {\n            for (let x = 0; x < terrain.width; x++) {\n                for (let y = 0; y < terrain.height; y++) {\n                    const maxTimerMs = levelConf.fallinMap[y][x] * levelConf.fallinMultiplier * 1000\n                    if (maxTimerMs > 0) {\n                        const surface = terrain.surfaces[x][y]\n                        worldMgr.ecs.addComponent(surface.entity, new FallInComponent(surface, maxTimerMs))\n                    }\n                }\n            }\n        }\n\n        if (levelConf.erodeMap) {\n            for (let x = 0; x < terrain.width; x++) {\n                for (let y = 0; y < terrain.height; y++) {\n                    const erosionLevel = levelConf.erodeMap[y][x]\n                    if (erosionLevel <= 0) continue\n                    const targetSurface = terrain.getSurface(x, y)\n                    const lavaErosionComponent = new LavaErosionComponent(targetSurface, erosionLevel)\n                    worldMgr.ecs.addComponent(targetSurface.entity, lavaErosionComponent)\n                    if (lavaErosionComponent.erosionLevel % 2 === 0) { // erodes before level starts\n                        for (let c = 0; c < 1 + PRNG.terrain.randInt(4); c++) {\n                            lavaErosionComponent.increaseErosionLevel(false)\n                        }\n                    }\n                }\n            }\n        }\n\n        if (levelConf.emergeMap) {\n            for (let x = 0; x < terrain.width; x++) {\n                for (let y = 0; y < terrain.height; y++) {\n                    const emergeValue = levelConf.emergeMap[y][x]\n                    if (!emergeValue) continue\n                    const surface = terrain.surfaces[x][y]\n                    if (emergeValue % 2 === 1) {\n                        worldMgr.ecs.addComponent(surface.entity, new EmergeComponent(emergeValue + 1, surface, undefined))\n                    } else {\n                        if (surface.surfaceType === SurfaceType.SOLID_ROCK || surface.reinforced || surface.wallType < WALL_TYPE.wall) continue // Not a valid emerge surface\n                        worldMgr.ecs.addComponent(surface.entity, new EmergeComponent(emergeValue, undefined, surface))\n                    }\n                }\n            }\n        }\n        return terrain\n    }\n}\n\nexport const PATH_MAP = {\n    none: 0,\n    rubble: 1,\n    powerPath: 2,\n} as const\n\nexport const PREDUG_MAP = {\n    wall: 0,\n    cavernExposed: 1,\n    cavernHidden: 2,\n    slugHoleExposed: 3,\n    slugHoleHidden: 4,\n} as const\n","import { Frustum, PerspectiveCamera, Vector3 } from 'three'\nimport { CAMERA_FOV, CAMERA_MAX_DISTANCE } from '../params'\n\nexport class BirdViewCamera extends PerspectiveCamera {\n    constructor(aspect: number) {\n        super(CAMERA_FOV, aspect, 0.1, CAMERA_MAX_DISTANCE)\n    }\n\n    getFrustum(r1x: number, r1y: number, r2x: number, r2y: number): Frustum {\n        const startPoint = new Vector3(r1x, r1y, 0.5)\n        const endPoint = new Vector3(r2x, r2y, 0.5)\n        // Avoid invalid frustum\n        if (startPoint.x === endPoint.x) {\n            endPoint.x += Number.EPSILON\n        }\n        if (startPoint.y === endPoint.y) {\n            endPoint.y += Number.EPSILON\n        }\n        // update camera\n        this.updateProjectionMatrix()\n        this.updateMatrixWorld()\n        // update frustum\n        const tmpPoint = new Vector3()\n        tmpPoint.copy(startPoint)\n        tmpPoint.x = Math.min(startPoint.x, endPoint.x)\n        tmpPoint.y = Math.max(startPoint.y, endPoint.y)\n        endPoint.x = Math.max(startPoint.x, endPoint.x)\n        endPoint.y = Math.min(startPoint.y, endPoint.y)\n\n        const vecNear = new Vector3()\n        const vecTopLeft = new Vector3()\n        const vecTopRight = new Vector3()\n        const vecDownRight = new Vector3()\n        const vecDownLeft = new Vector3()\n        vecNear.setFromMatrixPosition(this.matrixWorld)\n        vecTopLeft.copy(tmpPoint)\n        vecTopRight.set(endPoint.x, tmpPoint.y, 0)\n        vecDownRight.copy(endPoint)\n        vecDownLeft.set(tmpPoint.x, endPoint.y, 0)\n\n        vecTopLeft.unproject(this)\n        vecTopRight.unproject(this)\n        vecDownRight.unproject(this)\n        vecDownLeft.unproject(this)\n\n        const vectemp1 = new Vector3()\n        const vectemp2 = new Vector3()\n        const vectemp3 = new Vector3()\n        vectemp1.copy(vecTopLeft).sub(vecNear)\n        vectemp2.copy(vecTopRight).sub(vecNear)\n        vectemp3.copy(vecDownRight).sub(vecNear)\n        vectemp1.normalize()\n        vectemp2.normalize()\n        vectemp3.normalize()\n\n        const deep = Number.MAX_VALUE\n        vectemp1.multiplyScalar(deep)\n        vectemp2.multiplyScalar(deep)\n        vectemp3.multiplyScalar(deep)\n        vectemp1.add(vecNear)\n        vectemp2.add(vecNear)\n        vectemp3.add(vecNear)\n\n        const frustum = new Frustum()\n        const planes = frustum.planes\n\n        planes[0].setFromCoplanarPoints(vecNear, vecTopLeft, vecTopRight)\n        planes[1].setFromCoplanarPoints(vecNear, vecTopRight, vecDownRight)\n        planes[2].setFromCoplanarPoints(vecDownRight, vecDownLeft, vecNear)\n        planes[3].setFromCoplanarPoints(vecDownLeft, vecTopLeft, vecNear)\n        planes[4].setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft)\n        planes[5].setFromCoplanarPoints(vectemp3, vectemp2, vectemp1)\n        planes[5].normal.multiplyScalar(-1)\n\n        return frustum\n    }\n}\n","import { Object3D, PointLight, SpotLight, Vector3 } from 'three'\nimport { EventKey } from '../event/EventKeyEnum'\nimport { ToggleAlarmEvent } from '../event/WorldEvents'\nimport { TILESIZE } from '../params'\nimport { EventBroker } from '../event/EventBroker'\n\nexport class TorchLightCursor extends Object3D {\n    readonly changeListener: (event: { target: { target: Vector3 } }) => void = (e) => {\n        this.position.copy(e.target.target)\n    }\n\n    alarmLights: SpotLight[] = []\n\n    constructor() {\n        super()\n        const torchLight = new PointLight(0xffffff, 9000, 4, 2)\n        torchLight.distance *= TILESIZE\n        torchLight.position.y = 2 * TILESIZE\n        torchLight.castShadow = true\n        this.add(torchLight)\n\n        this.alarmLights = [-1, 1].map((c) => {\n            const alarmLight = new SpotLight(0xff0000, 3000, 0, Math.PI / 4, 0.25)\n            alarmLight.position.set(0, TILESIZE / 2, 0)\n            alarmLight.target = new Object3D()\n            alarmLight.target.position.set(c * TILESIZE / 8, 0, 0)\n            alarmLight.add(alarmLight.target)\n            alarmLight.visible = false\n            this.add(alarmLight)\n            return alarmLight\n        })\n\n        EventBroker.subscribe(EventKey.TOGGLE_ALARM, (event: ToggleAlarmEvent) => {\n            this.alarmLights.forEach((l) => l.visible = event.alarmState)\n        })\n    }\n\n    update(elapsedMs: number) {\n        const rotationRad = Math.PI / 1000 * elapsedMs\n        this.alarmLights.forEach((l) => l.target.position.applyAxisAngle(Object3D.DEFAULT_UP, rotationRad))\n    }\n}\n","import { Scene } from 'three'\nimport { DebugHelper } from '../screen/DebugHelper'\nimport { createContext } from '../core/ImageHelper'\nimport { BaseRenderer } from '../screen/BaseRenderer'\nimport { SpriteImage } from '../core/Sprite'\n\nexport class SceneRenderer extends BaseRenderer {\n    static readonly MAX_FPS = 30 // animations and videos have 25 fps (PAL)\n    readonly debugHelper: DebugHelper\n    screenshotCallback?: (canvas: SpriteImage | undefined) => void\n\n    constructor(canvas: SpriteImage) {\n        super(1000 / SceneRenderer.MAX_FPS, canvas, {antialias: true, powerPreference: 'high-performance'})\n        // this.shadowMap.enabled = true // XXX enable shadows here\n        // this.shadowMap.type = PCFSoftShadowMap // XXX set shadow quality here\n        this.debugHelper = new DebugHelper()\n    }\n\n    async startRendering(scene: Scene): Promise<void> {\n        this.debugHelper.show()\n        return super.startRendering(scene)\n    }\n\n    render() {\n        this.debugHelper.onRenderStart()\n        super.render()\n        this.debugHelper.onRenderDone()\n        this.checkForScreenshot()\n    }\n\n    private checkForScreenshot() {\n        const callback = this.screenshotCallback\n        if (!callback) return\n        this.screenshotCallback = undefined\n        this.renderer?.domElement.toBlob((blob) => {\n            if (!blob) {\n                console.error('Creating blob for screenshot failed. No blob created')\n                callback(undefined)\n                return\n            }\n            const img = document.createElement('img')\n            img.onload = () => {\n                if (!this.renderer) {\n                    console.error('Renderer is not ready for screenshot')\n                    callback(undefined)\n                    return\n                }\n                const context = createContext(this.renderer.domElement.width, this.renderer.domElement.height)\n                context.drawImage(img, 0, 0)\n                callback(context.canvas)\n            }\n            img.src = URL.createObjectURL(blob)\n        })\n    }\n\n    stopRendering() {\n        this.debugHelper.hide()\n        super.stopRendering()\n    }\n}\n","import {\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tOrthographicCamera,\n\tMesh\n} from 'three';\n\n/**\n * Abstract base class for all post processing passes.\n *\n * This module is only relevant for post processing with {@link WebGLRenderer}.\n *\n * @abstract\n * @three_import import { Pass } from 'three/addons/postprocessing/Pass.js';\n */\nclass Pass {\n\n\t/**\n\t * Constructs a new pass.\n\t */\n\tconstructor() {\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isPass = true;\n\n\t\t/**\n\t\t * If set to `true`, the pass is processed by the composer.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enabled = true;\n\n\t\t/**\n\t\t * If set to `true`, the pass indicates to swap read and write buffer after rendering.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.needsSwap = true;\n\n\t\t/**\n\t\t * If set to `true`, the pass clears its buffer before rendering\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.clear = false;\n\n\t\t/**\n\t\t * If set to `true`, the result of the pass is rendered to screen. The last pass in the composers\n\t\t * pass chain gets automatically rendered to screen, no matter how this property is configured.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.renderToScreen = false;\n\n\t}\n\n\t/**\n\t * Sets the size of the pass.\n\t *\n\t * @abstract\n\t * @param {number} width - The width to set.\n\t * @param {number} height - The height to set.\n\t */\n\tsetSize( /* width, height */ ) {}\n\n\t/**\n\t * This method holds the render logic of a pass. It must be implemented in all derived classes.\n\t *\n\t * @abstract\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t * @param {WebGLRenderTarget} writeBuffer - The write buffer. This buffer is intended as the rendering\n\t * destination for the pass.\n\t * @param {WebGLRenderTarget} readBuffer - The read buffer. The pass can access the result from the\n\t * previous pass from this buffer.\n\t * @param {number} deltaTime - The delta time in seconds.\n\t * @param {boolean} maskActive - Whether masking is active or not.\n\t */\n\trender( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever the pass is no longer used in your app.\n\t *\n\t * @abstract\n\t */\n\tdispose() {}\n\n}\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n// https://github.com/mrdoob/three.js/pull/21358\n\nclass FullscreenTriangleGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( [ 0, 2, 0, 0, 2, 0 ], 2 ) );\n\n\t}\n\n}\n\nconst _geometry = new FullscreenTriangleGeometry();\n\n\n/**\n * This module is a helper for passes which need to render a full\n * screen effect which is quite common in context of post processing.\n *\n * The intended usage is to reuse a single full screen quad for rendering\n * subsequent passes by just reassigning the `material` reference.\n *\n * This module can only be used with {@link WebGLRenderer}.\n *\n * @augments Mesh\n * @three_import import { FullScreenQuad } from 'three/addons/postprocessing/Pass.js';\n */\nclass FullScreenQuad {\n\n\t/**\n\t * Constructs a new full screen quad.\n\t *\n\t * @param {?Material} material - The material to render te full screen quad with.\n\t */\n\tconstructor( material ) {\n\n\t\tthis._mesh = new Mesh( _geometry, material );\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever the instance is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\tthis._mesh.geometry.dispose();\n\n\t}\n\n\t/**\n\t * Renders the full screen quad.\n\t *\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t */\n\trender( renderer ) {\n\n\t\trenderer.render( this._mesh, _camera );\n\n\t}\n\n\t/**\n\t * The quad's material.\n\t *\n\t * @type {?Material}\n\t */\n\tget material() {\n\n\t\treturn this._mesh.material;\n\n\t}\n\n\tset material( value ) {\n\n\t\tthis._mesh.material = value;\n\n\t}\n\n}\n\nexport { Pass, FullScreenQuad };\n","import {\n\tColor\n} from 'three';\nimport { Pass } from './Pass.js';\n\n/**\n * This class represents a render pass. It takes a camera and a scene and produces\n * a beauty pass for subsequent post processing effects.\n *\n * ```js\n * const renderPass = new RenderPass( scene, camera );\n * composer.addPass( renderPass );\n * ```\n *\n * @augments Pass\n * @three_import import { RenderPass } from 'three/addons/postprocessing/RenderPass.js';\n */\nclass RenderPass extends Pass {\n\n\t/**\n\t * Constructs a new render pass.\n\t *\n\t * @param {Scene} scene - The scene to render.\n\t * @param {Camera} camera - The camera.\n\t * @param {?Material} [overrideMaterial=null] - The override material. If set, this material is used\n\t * for all objects in the scene.\n\t * @param {?(number|Color|string)} [clearColor=null] - The clear color of the render pass.\n\t * @param {?number} [clearAlpha=null] - The clear alpha of the render pass.\n\t */\n\tconstructor( scene, camera, overrideMaterial = null, clearColor = null, clearAlpha = null ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The scene to render.\n\t\t *\n\t\t * @type {Scene}\n\t\t */\n\t\tthis.scene = scene;\n\n\t\t/**\n\t\t * The camera.\n\t\t *\n\t\t * @type {Camera}\n\t\t */\n\t\tthis.camera = camera;\n\n\t\t/**\n\t\t * The override material. If set, this material is used\n\t\t * for all objects in the scene.\n\t\t *\n\t\t * @type {?Material}\n\t\t * @default null\n\t\t */\n\t\tthis.overrideMaterial = overrideMaterial;\n\n\t\t/**\n\t\t * The clear color of the render pass.\n\t\t *\n\t\t * @type {?(number|Color|string)}\n\t\t * @default null\n\t\t */\n\t\tthis.clearColor = clearColor;\n\n\t\t/**\n\t\t * The clear alpha of the render pass.\n\t\t *\n\t\t * @type {?number}\n\t\t * @default null\n\t\t */\n\t\tthis.clearAlpha = clearAlpha;\n\n\t\t/**\n\t\t * Overwritten to perform a clear operation by default.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.clear = true;\n\n\t\t/**\n\t\t * If set to `true`, only the depth can be cleared when `clear` is to `false`.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.clearDepth = false;\n\n\t\t/**\n\t\t * Overwritten to disable the swap.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.needsSwap = false;\n\t\tthis._oldClearColor = new Color();\n\n\t}\n\n\t/**\n\t * Performs a beauty pass with the configured scene and camera.\n\t *\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t * @param {WebGLRenderTarget} writeBuffer - The write buffer. This buffer is intended as the rendering\n\t * destination for the pass.\n\t * @param {WebGLRenderTarget} readBuffer - The read buffer. The pass can access the result from the\n\t * previous pass from this buffer.\n\t * @param {number} deltaTime - The delta time in seconds.\n\t * @param {boolean} maskActive - Whether masking is active or not.\n\t */\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tconst oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tlet oldClearAlpha, oldOverrideMaterial;\n\n\t\tif ( this.overrideMaterial !== null ) {\n\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t}\n\n\t\tif ( this.clearColor !== null ) {\n\n\t\t\trenderer.getClearColor( this._oldClearColor );\n\t\t\trenderer.setClearColor( this.clearColor, renderer.getClearAlpha() );\n\n\t\t}\n\n\t\tif ( this.clearAlpha !== null ) {\n\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\t\t\trenderer.setClearAlpha( this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth == true ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\tif ( this.clear === true ) {\n\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// restore\n\n\t\tif ( this.clearColor !== null ) {\n\n\t\t\trenderer.setClearColor( this._oldClearColor );\n\n\t\t}\n\n\t\tif ( this.clearAlpha !== null ) {\n\n\t\t\trenderer.setClearAlpha( oldClearAlpha );\n\n\t\t}\n\n\t\tif ( this.overrideMaterial !== null ) {\n\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t}\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n}\n\nexport { RenderPass };\n","/**\n * @module CopyShader\n * @three_import import { CopyShader } from 'three/addons/shaders/CopyShader.js';\n */\n\n/**\n * Full-screen copy shader pass.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst CopyShader = {\n\n\tname: 'CopyShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'opacity': { value: 1.0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\n\t\t}`\n\n};\n\nexport { CopyShader };\n","import {\n\tShaderMaterial,\n\tUniformsUtils\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\n\n/**\n * This pass can be used to create a post processing effect\n * with a raw GLSL shader object. Useful for implementing custom\n * effects.\n *\n * ```js\n * const fxaaPass = new ShaderPass( FXAAShader );\n * composer.addPass( fxaaPass );\n * ```\n *\n * @augments Pass\n * @three_import import { ShaderPass } from 'three/addons/postprocessing/ShaderPass.js';\n */\nclass ShaderPass extends Pass {\n\n\t/**\n\t * Constructs a new shader pass.\n\t *\n\t * @param {Object|ShaderMaterial} [shader] - A shader object holding vertex and fragment shader as well as\n\t * defines and uniforms. It's also valid to pass a custom shader material.\n\t * @param {string} [textureID='tDiffuse'] - The name of the texture uniform that should sample\n\t * the read buffer.\n\t */\n\tconstructor( shader, textureID = 'tDiffuse' ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The name of the texture uniform that should sample the read buffer.\n\t\t *\n\t\t * @type {string}\n\t\t * @default 'tDiffuse'\n\t\t */\n\t\tthis.textureID = textureID;\n\n\t\t/**\n\t\t * The pass uniforms.\n\t\t *\n\t\t * @type {?Object}\n\t\t */\n\t\tthis.uniforms = null;\n\n\t\t/**\n\t\t * The pass material.\n\t\t *\n\t\t * @type {?ShaderMaterial}\n\t\t */\n\t\tthis.material = null;\n\n\t\tif ( shader instanceof ShaderMaterial ) {\n\n\t\t\tthis.uniforms = shader.uniforms;\n\n\t\t\tthis.material = shader;\n\n\t\t} else if ( shader ) {\n\n\t\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t\tthis.material = new ShaderMaterial( {\n\n\t\t\t\tname: ( shader.name !== undefined ) ? shader.name : 'unspecified',\n\t\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\t\tuniforms: this.uniforms,\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t\t} );\n\n\t\t}\n\n\t\t// internals\n\n\t\tthis._fsQuad = new FullScreenQuad( this.material );\n\n\t}\n\n\t/**\n\t * Performs the shader pass.\n\t *\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t * @param {WebGLRenderTarget} writeBuffer - The write buffer. This buffer is intended as the rendering\n\t * destination for the pass.\n\t * @param {WebGLRenderTarget} readBuffer - The read buffer. The pass can access the result from the\n\t * previous pass from this buffer.\n\t * @param {number} deltaTime - The delta time in seconds.\n\t * @param {boolean} maskActive - Whether masking is active or not.\n\t */\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis._fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis._fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis._fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever the pass is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\tthis.material.dispose();\n\n\t\tthis._fsQuad.dispose();\n\n\t}\n\n}\n\nexport { ShaderPass };\n","import { Pass } from './Pass.js';\n\n/**\n * This pass can be used to define a mask during post processing.\n * Meaning only areas of subsequent post processing are affected\n * which lie in the masking area of this pass. Internally, the masking\n * is implemented with the stencil buffer.\n *\n * ```js\n * const maskPass = new MaskPass( scene, camera );\n * composer.addPass( maskPass );\n * ```\n *\n * @augments Pass\n * @three_import import { MaskPass } from 'three/addons/postprocessing/MaskPass.js';\n */\nclass MaskPass extends Pass {\n\n\t/**\n\t * Constructs a new mask pass.\n\t *\n\t * @param {Scene} scene - The 3D objects in this scene will define the mask.\n\t * @param {Camera} camera - The camera.\n\t */\n\tconstructor( scene, camera ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The scene that defines the mask.\n\t\t *\n\t\t * @type {Scene}\n\t\t */\n\t\tthis.scene = scene;\n\n\t\t/**\n\t\t * The camera.\n\t\t *\n\t\t * @type {Camera}\n\t\t */\n\t\tthis.camera = camera;\n\n\t\t/**\n\t\t * Overwritten to perform a clear operation by default.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.clear = true;\n\n\t\t/**\n\t\t * Overwritten to disable the swap.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.needsSwap = false;\n\n\t\t/**\n\t\t * Whether to inverse the mask or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.inverse = false;\n\n\t}\n\n\t/**\n\t * Performs a mask pass with the configured scene and camera.\n\t *\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t * @param {WebGLRenderTarget} writeBuffer - The write buffer. This buffer is intended as the rendering\n\t * destination for the pass.\n\t * @param {WebGLRenderTarget} readBuffer - The read buffer. The pass can access the result from the\n\t * previous pass from this buffer.\n\t * @param {number} deltaTime - The delta time in seconds.\n\t * @param {boolean} maskActive - Whether masking is active or not.\n\t */\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tconst context = renderer.getContext();\n\t\tconst state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tlet writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\trenderer.setRenderTarget( writeBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// unlock color and depth buffer and make them writable for subsequent rendering/clearing\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\tstate.buffers.color.setMask( true );\n\t\tstate.buffers.depth.setMask( true );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setLocked( false );\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t}\n\n}\n\n/**\n * This pass can be used to clear a mask previously defined with {@link MaskPass}.\n *\n * ```js\n * const clearPass = new ClearMaskPass();\n * composer.addPass( clearPass );\n * ```\n *\n * @augments Pass\n */\nclass ClearMaskPass extends Pass {\n\n\t/**\n\t * Constructs a new clear mask pass.\n\t */\n\tconstructor() {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * Overwritten to disable the swap.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.needsSwap = false;\n\n\t}\n\n\t/**\n\t * Performs the clear of the currently defined mask.\n\t *\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t * @param {WebGLRenderTarget} writeBuffer - The write buffer. This buffer is intended as the rendering\n\t * destination for the pass.\n\t * @param {WebGLRenderTarget} readBuffer - The read buffer. The pass can access the result from the\n\t * previous pass from this buffer.\n\t * @param {number} deltaTime - The delta time in seconds.\n\t * @param {boolean} maskActive - Whether masking is active or not.\n\t */\n\trender( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\trenderer.state.buffers.stencil.setLocked( false );\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n}\n\nexport { MaskPass, ClearMaskPass };\n","import {\n\tClock,\n\tHalfFloatType,\n\tNoBlending,\n\tVector2,\n\tWebGLRenderTarget\n} from 'three';\nimport { CopyShader } from '../shaders/CopyShader.js';\nimport { ShaderPass } from './ShaderPass.js';\nimport { ClearMaskPass, MaskPass } from './MaskPass.js';\n\n/**\n * Used to implement post-processing effects in three.js.\n * The class manages a chain of post-processing passes to produce the final visual result.\n * Post-processing passes are executed in order of their addition/insertion.\n * The last pass is automatically rendered to screen.\n *\n * This module can only be used with {@link WebGLRenderer}.\n *\n * ```js\n * const composer = new EffectComposer( renderer );\n *\n * // adding some passes\n * const renderPass = new RenderPass( scene, camera );\n * composer.addPass( renderPass );\n *\n * const glitchPass = new GlitchPass();\n * composer.addPass( glitchPass );\n *\n * const outputPass = new OutputPass()\n * composer.addPass( outputPass );\n *\n * function animate() {\n *\n * \tcomposer.render(); // instead of renderer.render()\n *\n * }\n * ```\n *\n * @three_import import { EffectComposer } from 'three/addons/postprocessing/EffectComposer.js';\n */\nclass EffectComposer {\n\n\t/**\n\t * Constructs a new effect composer.\n\t *\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t * @param {WebGLRenderTarget} [renderTarget] - This render target and a clone will\n\t * be used as the internal read and write buffers. If not given, the composer creates\n\t * the buffers automatically.\n\t */\n\tconstructor( renderer, renderTarget ) {\n\n\t\t/**\n\t\t * The renderer.\n\t\t *\n\t\t * @type {WebGLRenderer}\n\t\t */\n\t\tthis.renderer = renderer;\n\n\t\tthis._pixelRatio = renderer.getPixelRatio();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tconst size = renderer.getSize( new Vector2() );\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = new WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, { type: HalfFloatType } );\n\t\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t\t} else {\n\n\t\t\tthis._width = renderTarget.width;\n\t\t\tthis._height = renderTarget.height;\n\n\t\t}\n\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\t\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\t\t/**\n\t\t * A reference to the internal write buffer. Passes usually write\n\t\t * their result into this buffer.\n\t\t *\n\t\t * @type {WebGLRenderTarget}\n\t\t */\n\t\tthis.writeBuffer = this.renderTarget1;\n\n\t\t/**\n\t\t * A reference to the internal read buffer. Passes usually read\n\t\t * the previous render result from this buffer.\n\t\t *\n\t\t * @type {WebGLRenderTarget}\n\t\t */\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t\t/**\n\t\t * Whether the final pass is rendered to the screen (default framebuffer) or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.renderToScreen = true;\n\n\t\t/**\n\t\t * An array representing the (ordered) chain of post-processing passes.\n\t\t *\n\t\t * @type {Array<Pass>}\n\t\t */\n\t\tthis.passes = [];\n\n\t\t/**\n\t\t * A copy pass used for internal swap operations.\n\t\t *\n\t\t * @private\n\t\t * @type {ShaderPass}\n\t\t */\n\t\tthis.copyPass = new ShaderPass( CopyShader );\n\t\tthis.copyPass.material.blending = NoBlending;\n\n\t\t/**\n\t\t * The internal clock for managing time data.\n\t\t *\n\t\t * @private\n\t\t * @type {Clock}\n\t\t */\n\t\tthis.clock = new Clock();\n\n\t}\n\n\t/**\n\t * Swaps the internal read/write buffers.\n\t */\n\tswapBuffers() {\n\n\t\tconst tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t}\n\n\t/**\n\t * Adds the given pass to the pass chain.\n\t *\n\t * @param {Pass} pass - The pass to add.\n\t */\n\taddPass( pass ) {\n\n\t\tthis.passes.push( pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t}\n\n\t/**\n\t * Inserts the given pass at a given index.\n\t *\n\t * @param {Pass} pass - The pass to insert.\n\t * @param {number} index - The index into the pass chain.\n\t */\n\tinsertPass( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t}\n\n\t/**\n\t * Removes the given pass from the pass chain.\n\t *\n\t * @param {Pass} pass - The pass to remove.\n\t */\n\tremovePass( pass ) {\n\n\t\tconst index = this.passes.indexOf( pass );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tthis.passes.splice( index, 1 );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns `true` if the pass for the given index is the last enabled pass in the pass chain.\n\t *\n\t * @param {number} passIndex - The pass index.\n\t * @return {boolean} Whether the pass for the given index is the last pass in the pass chain.\n\t */\n\tisLastEnabledPass( passIndex ) {\n\n\t\tfor ( let i = passIndex + 1; i < this.passes.length; i ++ ) {\n\n\t\t\tif ( this.passes[ i ].enabled ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t/**\n\t * Executes all enabled post-processing passes in order to produce the final frame.\n\t *\n\t * @param {number} deltaTime - The delta time in seconds. If not given, the composer computes\n\t * its own time delta value.\n\t */\n\trender( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = this.clock.getDelta();\n\n\t\t}\n\n\t\tconst currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tlet maskActive = false;\n\n\t\tfor ( let i = 0, il = this.passes.length; i < il; i ++ ) {\n\n\t\t\tconst pass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tconst context = this.renderer.getContext();\n\t\t\t\t\tconst stencil = this.renderer.state.buffers.stencil;\n\n\t\t\t\t\t//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\t//context.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\t/**\n\t * Resets the internal state of the EffectComposer.\n\t *\n\t * @param {WebGLRenderTarget} [renderTarget] - This render target has the same purpose like\n\t * the one from the constructor. If set, it is used to setup the read and write buffers.\n\t */\n\treset( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tconst size = this.renderer.getSize( new Vector2() );\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t}\n\n\t/**\n\t * Resizes the internal read and write buffers as well as all passes. Similar to {@link WebGLRenderer#setSize},\n\t * this method honors the current pixel ration.\n\t *\n\t * @param {number} width - The width in logical pixels.\n\t * @param {number} height - The height in logical pixels.\n\t */\n\tsetSize( width, height ) {\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tconst effectiveWidth = this._width * this._pixelRatio;\n\t\tconst effectiveHeight = this._height * this._pixelRatio;\n\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\n\n\t\tfor ( let i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Sets device pixel ratio. This is usually used for HiDPI device to prevent blurring output.\n\t * Setting the pixel ratio will automatically resize the composer.\n\t *\n\t * @param {number} pixelRatio - The pixel ratio to set.\n\t */\n\tsetPixelRatio( pixelRatio ) {\n\n\t\tthis._pixelRatio = pixelRatio;\n\n\t\tthis.setSize( this._width, this._height );\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever the composer is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\n\t\tthis.copyPass.dispose();\n\n\t}\n\n}\n\nexport { EffectComposer };\n","/**\n * @module OutputShader\n * @three_import import { OutputShader } from 'three/addons/shaders/OutputShader.js';\n */\n\n/**\n * Performs tone mapping and color space conversion for\n * FX workflows.\n *\n * Used by {@link OutputPass}.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst OutputShader = {\n\n\tname: 'OutputShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'toneMappingExposure': { value: 1 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\t\tprecision highp float;\n\n\t\tuniform mat4 modelViewMatrix;\n\t\tuniform mat4 projectionMatrix;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tprecision highp float;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\t#include <tonemapping_pars_fragment>\n\t\t#include <colorspace_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\n\n\t\t\t// tone mapping\n\n\t\t\t#ifdef LINEAR_TONE_MAPPING\n\n\t\t\t\tgl_FragColor.rgb = LinearToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( REINHARD_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = ReinhardToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( CINEON_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = CineonToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( ACES_FILMIC_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = ACESFilmicToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( AGX_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = AgXToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( NEUTRAL_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = NeutralToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( CUSTOM_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = CustomToneMapping( gl_FragColor.rgb );\n\n\t\t\t#endif\n\n\t\t\t// color space\n\n\t\t\t#ifdef SRGB_TRANSFER\n\n\t\t\t\tgl_FragColor = sRGBTransferOETF( gl_FragColor );\n\n\t\t\t#endif\n\n\t\t}`\n\n};\n\nexport { OutputShader };\n","import {\n\tColorManagement,\n\tRawShaderMaterial,\n\tUniformsUtils,\n\tLinearToneMapping,\n\tReinhardToneMapping,\n\tCineonToneMapping,\n\tAgXToneMapping,\n\tACESFilmicToneMapping,\n\tNeutralToneMapping,\n\tCustomToneMapping,\n\tSRGBTransfer\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { OutputShader } from '../shaders/OutputShader.js';\n\n/**\n * This pass is responsible for including tone mapping and color space conversion\n * into your pass chain. In most cases, this pass should be included at the end\n * of each pass chain. If a pass requires sRGB input (e.g. like FXAA), the pass\n * must follow `OutputPass` in the pass chain.\n *\n * The tone mapping and color space settings are extracted from the renderer.\n *\n * ```js\n * const outputPass = new OutputPass();\n * composer.addPass( outputPass );\n * ```\n *\n * @augments Pass\n * @three_import import { OutputPass } from 'three/addons/postprocessing/OutputPass.js';\n */\nclass OutputPass extends Pass {\n\n\t/**\n\t * Constructs a new output pass.\n\t */\n\tconstructor() {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The pass uniforms.\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tthis.uniforms = UniformsUtils.clone( OutputShader.uniforms );\n\n\t\t/**\n\t\t * The pass material.\n\t\t *\n\t\t * @type {RawShaderMaterial}\n\t\t */\n\t\tthis.material = new RawShaderMaterial( {\n\t\t\tname: OutputShader.name,\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: OutputShader.vertexShader,\n\t\t\tfragmentShader: OutputShader.fragmentShader\n\t\t} );\n\n\t\t// internals\n\n\t\tthis._fsQuad = new FullScreenQuad( this.material );\n\n\t\tthis._outputColorSpace = null;\n\t\tthis._toneMapping = null;\n\n\t}\n\n\t/**\n\t * Performs the output pass.\n\t *\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t * @param {WebGLRenderTarget} writeBuffer - The write buffer. This buffer is intended as the rendering\n\t * destination for the pass.\n\t * @param {WebGLRenderTarget} readBuffer - The read buffer. The pass can access the result from the\n\t * previous pass from this buffer.\n\t * @param {number} deltaTime - The delta time in seconds.\n\t * @param {boolean} maskActive - Whether masking is active or not.\n\t */\n\trender( renderer, writeBuffer, readBuffer/*, deltaTime, maskActive */ ) {\n\n\t\tthis.uniforms[ 'tDiffuse' ].value = readBuffer.texture;\n\t\tthis.uniforms[ 'toneMappingExposure' ].value = renderer.toneMappingExposure;\n\n\t\t// rebuild defines if required\n\n\t\tif ( this._outputColorSpace !== renderer.outputColorSpace || this._toneMapping !== renderer.toneMapping ) {\n\n\t\t\tthis._outputColorSpace = renderer.outputColorSpace;\n\t\t\tthis._toneMapping = renderer.toneMapping;\n\n\t\t\tthis.material.defines = {};\n\n\t\t\tif ( ColorManagement.getTransfer( this._outputColorSpace ) === SRGBTransfer ) this.material.defines.SRGB_TRANSFER = '';\n\n\t\t\tif ( this._toneMapping === LinearToneMapping ) this.material.defines.LINEAR_TONE_MAPPING = '';\n\t\t\telse if ( this._toneMapping === ReinhardToneMapping ) this.material.defines.REINHARD_TONE_MAPPING = '';\n\t\t\telse if ( this._toneMapping === CineonToneMapping ) this.material.defines.CINEON_TONE_MAPPING = '';\n\t\t\telse if ( this._toneMapping === ACESFilmicToneMapping ) this.material.defines.ACES_FILMIC_TONE_MAPPING = '';\n\t\t\telse if ( this._toneMapping === AgXToneMapping ) this.material.defines.AGX_TONE_MAPPING = '';\n\t\t\telse if ( this._toneMapping === NeutralToneMapping ) this.material.defines.NEUTRAL_TONE_MAPPING = '';\n\t\t\telse if ( this._toneMapping === CustomToneMapping ) this.material.defines.CUSTOM_TONE_MAPPING = '';\n\n\t\t\tthis.material.needsUpdate = true;\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.renderToScreen === true ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis._fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis._fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever the pass is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\tthis.material.dispose();\n\t\tthis._fsQuad.dispose();\n\n\t}\n\n}\n\nexport { OutputPass };\n","const GreenScaleShader = {\n    name: 'GreenScaleShader',\n    uniforms: {\n        'tDiffuse': {value: null as never},\n    },\n    vertexShader: /* glsl */`\n            varying vec2 vUv;\n            void main() {\n                vUv = uv;\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n            }`,\n    fragmentShader: /* glsl */`\n            uniform sampler2D tDiffuse;\n            varying vec2 vUv;\n            void main() {\n                vec4 base = texture2D( tDiffuse, vUv );\n                float gray = 0.21 * base.r + 0.71 * base.g + 0.07 * base.b;\n                gl_FragColor = vec4( 0.0, gray, 0.0, base.a );\n            }`,\n}\n\nexport { GreenScaleShader }\n","import { Camera, PerspectiveCamera, Scene, Vector2, Vector3, WebGLRenderer } from 'three'\nimport { cancelAnimationFrameSafe, clearIntervalSafe } from '../core/Util'\nimport { TILESIZE } from '../params'\nimport { EventKey } from '../event/EventKeyEnum'\nimport { FollowerSetCanvasEvent, FollowerSetLookAtEvent } from '../event/LocalEvents'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { OutputPass } from 'three/examples/jsm/postprocessing/OutputPass'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { GreenScaleShader } from './GreenScaleShader'\nimport { ECS, GameEntity } from '../game/ECS'\nimport { AnimatedSceneEntityComponent } from '../game/component/AnimatedSceneEntityComponent'\nimport { BeamUpComponent } from '../game/component/BeamUpComponent'\nimport { EventBroker } from '../event/EventBroker'\nimport { SpriteImage } from '../core/Sprite'\n\nexport class FollowerRenderer {\n    static readonly MAX_FPS = 30\n    readonly camera: Camera = new PerspectiveCamera(45, 1, 0.1, 200)\n    renderer?: WebGLRenderer\n    composer?: EffectComposer\n    trackEntity?: GameEntity\n    started: boolean = false\n    renderInterval?: NodeJS.Timeout\n    lastAnimationRequest?: number\n    angle: number = 0\n\n    constructor(readonly canvas: SpriteImage, readonly scene: Scene, readonly ecs: ECS) {\n        EventBroker.subscribe(EventKey.FOLLOWER_RENDER_START, () => {\n            this.started = true\n            this.startRendering()\n        })\n        EventBroker.subscribe(EventKey.FOLLOWER_RENDER_STOP, () => {\n            this.started = false\n            this.renderInterval = clearIntervalSafe(this.renderInterval)\n        })\n        EventBroker.subscribe(EventKey.PAUSE_GAME, () => {\n            this.renderInterval = clearIntervalSafe(this.renderInterval)\n        })\n        EventBroker.subscribe(EventKey.UNPAUSE_GAME, () => {\n            if (this.started) this.startRendering()\n        })\n        EventBroker.subscribe(EventKey.FOLLOWER_SET_LOOK_AT, (event: FollowerSetLookAtEvent) => {\n            this.trackEntity = event.entity\n        })\n    }\n\n    startRendering() {\n        this.renderInterval = clearIntervalSafe(this.renderInterval)\n        if (!this.trackEntity) return\n        this.renderInterval = setInterval(() => {\n            if (!this.trackEntity) {\n                this.resetTracking()\n                return\n            }\n            if (!this.renderer) {\n                this.renderer = new WebGLRenderer({antialias: true, canvas: this.canvas, powerPreference: 'high-performance'})\n                this.composer = new EffectComposer(this.renderer)\n                this.composer.addPass(new RenderPass(this.scene, this.camera))\n                this.composer.addPass(new ShaderPass(GreenScaleShader))\n                this.composer.addPass(new OutputPass())\n            }\n            const components = this.ecs.getComponents(this.trackEntity)\n            const lookAtPosition = components?.get(AnimatedSceneEntityComponent)?.sceneEntity?.getWorldPosition(new Vector3())\n            if (components?.has(BeamUpComponent) || !lookAtPosition) {\n                this.resetTracking()\n                return\n            }\n            this.angle += Math.PI / 180 / FollowerRenderer.MAX_FPS * 5\n            const off = new Vector2(TILESIZE, 0).rotateAround(new Vector2(0, 0), this.angle)\n            this.camera.position.set(lookAtPosition.x + off.x, lookAtPosition.y + TILESIZE * 1.333, lookAtPosition.z + off.y)\n            this.camera.lookAt(lookAtPosition)\n            this.lastAnimationRequest = cancelAnimationFrameSafe(this.lastAnimationRequest)\n            this.lastAnimationRequest = requestAnimationFrame(() => this.composer?.render())\n        }, 1000 / FollowerRenderer.MAX_FPS)\n        EventBroker.publish(new FollowerSetCanvasEvent(this.canvas))\n    }\n\n    private resetTracking() {\n        this.trackEntity = undefined\n        this.renderer?.clear()\n        this.renderInterval = clearIntervalSafe(this.renderInterval)\n        EventBroker.publish(new FollowerSetCanvasEvent(undefined))\n    }\n\n    dispose() {\n        this.renderInterval = clearIntervalSafe(this.renderInterval)\n        this.renderer?.dispose()\n    }\n}\n","import { AmbientLight, Color } from 'three'\nimport { GameConfig } from '../cfg/GameConfig'\n\nexport class LeveledAmbientLight extends AmbientLight {\n    constructor() {\n        super(new Color().fromArray(GameConfig.instance.main.ambientRGB))\n    }\n\n    setLightLevel(lightLevel: number) {\n        this.intensity = 1.25 + Math.max(0, Math.min(1, lightLevel)) * 11.25\n    }\n}\n","import { Object3D, Sprite, SpriteMaterial, Vector3 } from 'three'\nimport { TILESIZE } from '../params'\nimport { Updatable } from '../game/model/Updateable'\nimport { ResourceManager } from '../resource/ResourceManager'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { Surface } from '../game/terrain/Surface'\n\nexport class ObjectPointer extends Sprite implements Updatable {\n    static readonly HEIGHT_OFFSET_STATIC: number = TILESIZE\n    static readonly HEIGHT_OFFSET_AMPLITUDE: number = TILESIZE / 4\n\n    heightOffset: number = ObjectPointer.HEIGHT_OFFSET_STATIC\n    timer: number = 0\n    surface?: Surface\n\n    constructor() {\n        super(new SpriteMaterial(({map: ResourceManager.getTexture(GameConfig.instance.main.tutorialIcon), depthTest: false})))\n        this.scale.setScalar(15)\n        this.visible = false\n    }\n\n    update(elapsedMs: number) {\n        if (!this.visible) return\n        this.timer = (this.timer + elapsedMs / 120) % (2 * Math.PI)\n        this.position.y = this.heightOffset + Math.sin(this.timer) * ObjectPointer.HEIGHT_OFFSET_AMPLITUDE\n        this.surface?.setHighlightColor(this.timer < Math.PI ? 0xa0a000 : 0xffffff)\n    }\n\n    setTargetObject(target: Object3D) {\n        target.add(this)\n        this.show()\n    }\n\n    setTargetPosition(position: Vector3, surface: Surface) {\n        this.position.copy(position)\n        this.heightOffset = ObjectPointer.HEIGHT_OFFSET_STATIC + position.y\n        this.surface = surface\n        this.show()\n    }\n\n    private show() {\n        this.timer = 0\n        this.position.y = this.heightOffset\n        this.visible = true\n    }\n\n    hide() {\n        this.visible = false\n        this.surface?.setHighlightColor(0xffffff)\n    }\n}\n","import { Camera, Plane, Raycaster, Vector2, Vector3 } from 'three'\nimport { MapRendererCameraRect } from '../worker/MapRendererWorker'\nimport { EventBroker } from '../event/EventBroker'\nimport { UpdateRadarCamera } from '../event/LocalEvents'\nimport { MAP_MAX_UPDATE_INTERVAL } from '../params'\n\nexport class CameraFrustumUpdater {\n    readonly raycaster = new Raycaster()\n    readonly groundPlane = new Plane(new Vector3(0, 1, 0), 0)\n    readonly topLeft = new Vector2(-1, 1)\n    readonly topRight = new Vector2(1, 1)\n    readonly bottomRight = new Vector2(1, -1)\n    readonly bottomLeft = new Vector2(-1, -1)\n    readonly tmpVec = new Vector3()\n    lastTime: number = 0\n    timer: number = 0\n\n    constructor(readonly camera: Camera) {\n    }\n\n    onCameraMoved() {\n        const now = window.performance.now()\n        if (this.timer > 0 && this.lastTime) this.timer -= (now - this.lastTime)\n        this.lastTime = now\n        if (this.timer > 0) return\n        this.timer = MAP_MAX_UPDATE_INTERVAL\n        const rect: MapRendererCameraRect = {\n            topLeft: {x: 0, z: 0},\n            topRight: {x: 0, z: 0},\n            bottomRight: {x: 0, z: 0},\n            bottomLeft: {x: 0, z: 0},\n        }\n        this.raycaster.setFromCamera(this.topLeft, this.camera)\n        if (!this.raycaster.ray.intersectPlane(this.groundPlane, this.tmpVec)) return\n        rect.topLeft.x = this.tmpVec.x\n        rect.topLeft.z = this.tmpVec.z\n        this.raycaster.setFromCamera(this.topRight, this.camera)\n        if (!this.raycaster.ray.intersectPlane(this.groundPlane, this.tmpVec)) return\n        rect.topRight.x = this.tmpVec.x\n        rect.topRight.z = this.tmpVec.z\n        this.raycaster.setFromCamera(this.bottomRight, this.camera)\n        if (!this.raycaster.ray.intersectPlane(this.groundPlane, this.tmpVec)) return\n        rect.bottomRight.x = this.tmpVec.x\n        rect.bottomRight.z = this.tmpVec.z\n        this.raycaster.setFromCamera(this.bottomLeft, this.camera)\n        if (!this.raycaster.ray.intersectPlane(this.groundPlane, this.tmpVec)) return\n        rect.bottomLeft.x = this.tmpVec.x\n        rect.bottomLeft.z = this.tmpVec.z\n        EventBroker.publish(new UpdateRadarCamera(rect))\n    }\n}\n","import { Color, FogExp2, Group, Object3D, PerspectiveCamera, PositionalAudio, Raycaster, Scene, Sprite, Vector2, Vector3 } from 'three'\nimport { LevelConfData } from './LevelLoader'\nimport { BirdViewControls } from '../scene/BirdViewControls'\nimport { BuildPlacementMarker } from './model/building/BuildPlacementMarker'\nimport { EntityType } from './model/EntityType'\nimport { GameState } from './model/GameState'\nimport { Terrain } from './terrain/Terrain'\nimport { TerrainLoader } from './TerrainLoader'\nimport { WorldManager } from './WorldManager'\nimport { BirdViewCamera } from '../scene/BirdViewCamera'\nimport { TorchLightCursor } from '../scene/TorchLightCursor'\nimport { SceneRenderer } from '../scene/SceneRenderer'\nimport { Updatable, updateSafe } from './model/Updateable'\nimport { CAMERA_FOV, CAMERA_MAX_SHAKE_BUMP, CAMERA_MIN_HEIGHT_ABOVE_TERRAIN, CAMERA_PAN_LIMIT_MARGIN, NATIVE_UPDATE_INTERVAL, TILESIZE } from '../params'\nimport { SaveGameManager } from '../resource/SaveGameManager'\nimport { SoundManager } from '../audio/SoundManager'\nimport { SceneEntity } from './SceneEntity'\nimport { AnimationGroup } from '../scene/AnimationGroup'\nimport { createCanvas } from '../core/ImageHelper'\nimport { FollowerRenderer } from '../scene/FollowerRenderer'\nimport { EventKey } from '../event/EventKeyEnum'\nimport { LeveledAmbientLight } from '../scene/LeveledAmbientLight'\nimport { EventBroker } from '../event/EventBroker'\nimport { ObjectPointer } from '../scene/ObjectPointer'\nimport { PathFinder } from './terrain/PathFinder'\nimport { ANIM_ENTITY_ACTIVITY, RAIDER_ACTIVITY } from './model/anim/AnimationActivity'\nimport { Raider } from './model/raider/Raider'\nimport { VehicleEntity } from './model/vehicle/VehicleEntity'\nimport { CameraFrustumUpdater } from '../scene/CameraFrustumUpdater'\nimport { SelectionNameComponent } from './component/SelectionNameComponent'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { PositionComponent } from './component/PositionComponent'\nimport { RaidersAmountChangedEvent } from '../event/LocalEvents'\nimport { RaiderInfoComponent } from './component/RaiderInfoComponent'\n\nexport class SceneManager implements Updatable {\n    readonly scene: Scene\n    readonly cameraBird: BirdViewCamera\n    readonly cameraShoulder: PerspectiveCamera\n    readonly cameraFPV: PerspectiveCamera\n    readonly renderer: SceneRenderer\n    readonly birdViewControls: BirdViewControls\n    readonly sceneObjects: SceneEntity[] = []\n    readonly sprites: (Sprite & Updatable)[] = []\n    readonly raycaster: Raycaster = new Raycaster()\n    readonly objectPointer: ObjectPointer = new ObjectPointer()\n    readonly tempBirdTargetDelta: Vector3 = new Vector3()\n    readonly cameraMinPos = new Vector3()\n    readonly cameraMaxPos = new Vector3()\n    ambientLight: LeveledAmbientLight = new LeveledAmbientLight()\n    terrain!: Terrain // TODO Refactor terrain handling, split into data and mesh\n    floorGroup: Group = new Group()\n    roofGroup: Group = new Group()\n    torchLightCursor: TorchLightCursor = new TorchLightCursor()\n    buildMarker?: BuildPlacementMarker\n    followerRenderer!: FollowerRenderer\n    cameraActive!: PerspectiveCamera\n    entityTurnSpeed: number = 0\n    entityMoveMultiplier: number = 0\n    frustumUpdater: CameraFrustumUpdater\n    fogColor: Color = new Color()\n\n    constructor(readonly worldMgr: WorldManager, canvas: HTMLCanvasElement) {\n        this.worldMgr.sceneMgr = this\n        this.scene = new Scene()\n        const aspect = canvas.width / canvas.height\n        this.cameraBird = new BirdViewCamera(aspect)\n        this.cameraShoulder = new PerspectiveCamera(CAMERA_FOV, aspect, 0.1, 24 * TILESIZE)\n        this.cameraFPV = new PerspectiveCamera(CAMERA_FOV, aspect, 0.1, 24 * TILESIZE)\n        this.renderer = new SceneRenderer(canvas)\n        this.birdViewControls = new BirdViewControls(this.cameraBird, canvas)\n        if (!SaveGameManager.preferences.cameraUnlimited) this.birdViewControls.addEventListener('change', () => this.limitCameraBird())\n        this.frustumUpdater = new CameraFrustumUpdater(this.cameraBird)\n        this.birdViewControls.addEventListener('change', () => this.frustumUpdater.onCameraMoved())\n        EventBroker.subscribe(EventKey.SELECTION_CHANGED, () => {\n            this.setActiveCamera(this.cameraBird) // TODO Only reset camera, when camera parent is affected\n        })\n        EventBroker.subscribe(EventKey.COMMAND_CHANGE_PREFERENCES, () => {\n            this.ambientLight?.setLightLevel(SaveGameManager.preferences.gameBrightness)\n        })\n        EventBroker.subscribe(EventKey.GUI_GO_BACK_BUTTON_CLICKED, () => {\n            this.setBuildModeSelection(undefined)\n        })\n        EventBroker.subscribe(EventKey.RAIDER_AMOUNT_CHANGED, (event: RaidersAmountChangedEvent) => {\n            if (!event.hasRaider) this.setBuildModeSelection(undefined) // TODO Check dependencies precisely\n        })\n        EventBroker.subscribe(EventKey.BUILDINGS_CHANGED, () => {\n            this.setBuildModeSelection(undefined) // TODO Check dependencies precisely\n        })\n        EventBroker.subscribe(EventKey.COMMAND_CHANGE_PREFERENCES, (event) => {\n            this.terrain.forEachSurface((s) => s.mesh.setProMeshEnabled(SaveGameManager.preferences.wallDetails))\n        })\n    }\n\n    setActiveCamera(camera: PerspectiveCamera) {\n        if (this.cameraActive === camera) return\n        GameState.isBirdView = camera === this.cameraBird\n        if (this.torchLightCursor) this.torchLightCursor.visible = GameState.isBirdView\n        this.birdViewControls.disabled = !GameState.isBirdView\n        if (this.roofGroup) this.roofGroup.visible = !GameState.isBirdView\n        if (GameState.isBirdView) {\n            this.scene.background = null\n            this.scene.fog = null\n            const selectedEntityPosition = this.worldMgr.entityMgr?.selection.getPrimarySelected()?.getPosition2D()\n            if (selectedEntityPosition) this.birdViewControls.jumpTo(this.getFloorPosition(selectedEntityPosition))\n        } else {\n            this.scene.background = this.fogColor // fog color must be equal to scene background to avoid \"holes\" in fog at max rendering distance\n            this.scene.fog = new FogExp2(this.fogColor, 0.0025)\n        }\n        // TODO Refactor raider info component updates with ECS\n        this.worldMgr.entityMgr?.selection.raiders.forEach((r) => this.worldMgr.ecs.getComponents(r.entity).get(SelectionNameComponent)?.setVisible(GameState.isBirdView))\n        this.worldMgr.entityMgr?.raiders.forEach((r) => {\n            const infoComponent = r.worldMgr.ecs.getComponents(r.entity).get(RaiderInfoComponent)\n            if (infoComponent) {\n                infoComponent.bubbleSprite.updateVisibleState()\n                infoComponent.hungerSprite.visible = GameState.showObjInfo && GameState.isBirdView\n            }\n        })\n        this.cameraActive = camera\n        this.cameraActive.add(SoundManager.sceneAudioListener)\n        this.renderer.camera = camera\n    }\n\n    setupScene(levelConf: LevelConfData) {\n        this.scene.clear()\n        this.fogColor = new Color().fromArray(levelConf.fogColor)\n        this.ambientLight = new LeveledAmbientLight()\n        this.ambientLight.setLightLevel(SaveGameManager.preferences.gameBrightness)\n        this.scene.add(this.ambientLight)\n\n        this.torchLightCursor = new TorchLightCursor()\n        this.scene.add(this.torchLightCursor)\n        this.birdViewControls.reset()\n        this.birdViewControls.addEventListener('change', this.torchLightCursor.changeListener)\n\n        this.buildMarker = new BuildPlacementMarker(this.worldMgr)\n        this.scene.add(this.buildMarker.group)\n        this.setBuildModeSelection(undefined)\n\n        this.floorGroup = new Group()\n        this.roofGroup = new Group()\n        this.roofGroup.visible = false\n        this.terrain = TerrainLoader.loadTerrain(levelConf, this.worldMgr)\n        this.terrain.forEachSurface((s) => {\n            this.floorGroup.add(s.mesh)\n            this.roofGroup.add(s.roofMesh)\n        })\n        this.scene.add(this.floorGroup)\n        this.scene.add(this.roofGroup)\n\n        this.cameraMinPos.set(CAMERA_PAN_LIMIT_MARGIN * TILESIZE, -GameConfig.instance.main.maxDist, CAMERA_PAN_LIMIT_MARGIN * TILESIZE)\n        this.cameraMaxPos.set((this.terrain.width - CAMERA_PAN_LIMIT_MARGIN) * TILESIZE, GameConfig.instance.main.maxDist, (this.terrain.height - CAMERA_PAN_LIMIT_MARGIN) * TILESIZE)\n        this.setActiveCamera(this.cameraBird)\n\n        const followerCanvas = createCanvas(158, 158)\n        this.followerRenderer = new FollowerRenderer(followerCanvas, this.scene, this.worldMgr.ecs)\n\n        if (levelConf.blockPointersMap) {\n            for (let x = 0; x < levelConf.mapWidth; x++) {\n                for (let y = 0; y < levelConf.mapHeight; y++) {\n                    const tutoBlockId = levelConf.blockPointersMap[y][x]\n                    if (tutoBlockId) {\n                        const tutoBlock = this.terrain.surfaces[x][y]\n                        tutoBlock.mesh.objectPointer = new ObjectPointer()\n                        this.scene.add(tutoBlock.mesh.objectPointer)\n                        this.worldMgr.nerpRunner.tutoBlocksById.getOrUpdate(tutoBlockId, () => []).push(tutoBlock)\n                    }\n                }\n            }\n        }\n    }\n\n    async startScene(): Promise<void> {\n        await this.renderer.startRendering(this.scene)\n        this.frustumUpdater.onCameraMoved()\n    }\n\n    update(elapsedMs: number) {\n        this.sceneObjects.forEach((e) => updateSafe(e, elapsedMs))\n        this.sprites.forEach((s) => updateSafe(s, elapsedMs))\n        updateSafe(this.torchLightCursor, elapsedMs)\n        this.birdViewControls?.updateControlsSafe(elapsedMs)\n        this.objectPointer.update(elapsedMs)\n        Array.from(this.worldMgr.nerpRunner.tutoBlocksById.values()).forEach((s) => s.forEach((t) => {\n            t.mesh.objectPointer?.update(elapsedMs)\n        }))\n        const selectedEntity = this.worldMgr.entityMgr.selection.getPrimarySelected()\n        if (selectedEntity && (this.cameraActive === this.cameraShoulder || this.cameraActive === this.cameraFPV)) {\n            this.updateEgoMovement(selectedEntity, elapsedMs)\n        }\n    }\n\n    private updateEgoMovement(selectedEntity: Raider | VehicleEntity, elapsedMs: number) {\n        if (this.entityTurnSpeed) selectedEntity.sceneEntity.rotateY(this.entityTurnSpeed * elapsedMs / NATIVE_UPDATE_INTERVAL)\n        let animationName = selectedEntity.getDefaultAnimationName()\n        if (this.entityMoveMultiplier) {\n            // TODO Reuse determineStep code here\n            const step = selectedEntity.sceneEntity.getWorldDirection(new Vector3()).setLength(selectedEntity.getSpeed() * elapsedMs / NATIVE_UPDATE_INTERVAL).multiplyScalar(this.entityMoveMultiplier)\n            const world = selectedEntity.getPosition().add(step)\n            const targetPosition = this.worldMgr.sceneMgr.getFloorPosition(new Vector2(world.x, world.z))\n            targetPosition.y += this.worldMgr.ecs.getComponents(selectedEntity.entity).get(PositionComponent)?.floorOffset ?? 0\n            const targetSurface = this.terrain.getSurfaceFromWorld(targetPosition)\n            if (selectedEntity.getSurface() === targetSurface || PathFinder.getWeight(targetSurface, selectedEntity.stats) > 0) {\n                selectedEntity.setPosition(targetPosition)\n                animationName = !!((selectedEntity as Raider).carries) ? ANIM_ENTITY_ACTIVITY.carry : ANIM_ENTITY_ACTIVITY.route\n                selectedEntity.onEntityMoved()\n            } else {\n                const origin = selectedEntity.getPosition()\n                const lookVector = new Vector3(0, 0, 1).applyMatrix4(selectedEntity.sceneEntity.matrix).sub(origin)\n                const vecToSurf = targetSurface.getCenterWorld().clone().sub(origin)\n                if (Math.abs(lookVector.angleTo(vecToSurf)) < Math.PI / 2) {\n                    const drillTimeSeconds = selectedEntity.getDrillTimeSeconds(targetSurface)\n                    if (drillTimeSeconds > 0) {\n                        animationName = RAIDER_ACTIVITY.drill\n                        targetSurface.addDrillTimeProgress(drillTimeSeconds, elapsedMs, selectedEntity.getPosition2D())\n                    }\n                }\n            }\n        }\n        if (selectedEntity.selected) selectedEntity.sceneEntity.setAnimation(animationName) // raider may have slipped, when moved\n    }\n\n    disposeScene() {\n        this.scene.clear()\n        this.renderer.dispose()\n        this.followerRenderer?.dispose()\n        GameState.remainingDiggables = this.terrain?.countDiggables() || 0\n        this.terrain?.dispose()\n        this.sceneObjects.forEach((e) => e.dispose())\n        this.sceneObjects.length = 0\n    }\n\n    resize(width: number, height: number) {\n        this.renderer.setSize(width, height)\n        const aspect = width / height\n        this.cameraBird.aspect = aspect\n        this.cameraBird.updateProjectionMatrix()\n        this.cameraShoulder.aspect = aspect\n        this.cameraShoulder.updateProjectionMatrix()\n        this.cameraFPV.aspect = aspect\n        this.cameraFPV.updateProjectionMatrix()\n    }\n\n    setCursorFloorPosition(position: Vector3) {\n        this.birdViewControls.removeEventListener('change', this.torchLightCursor.changeListener) // XXX Actually only required once\n        this.torchLightCursor.position.copy(position)\n    }\n\n    getFloorPosition(world: Vector2) {\n        return this.terrain.getFloorPosition(world)\n    }\n\n    hasBuildModeSelection(): boolean {\n        return !!this.buildMarker?.hasBuildMode()\n    }\n\n    setBuildModeSelection(entityType: EntityType | undefined) {\n        this.buildMarker?.setBuildMode(entityType)\n    }\n\n    addSceneEntity(sceneEntity: SceneEntity): void {\n        this.sceneObjects.add(sceneEntity)\n        this.scene.add(sceneEntity)\n    }\n\n    disposeSceneEntity(sceneEntity: SceneEntity): void {\n        this.sceneObjects.remove(sceneEntity)\n        this.scene.remove(sceneEntity)\n        sceneEntity.dispose()\n    }\n\n    addMiscAnim(lwsFilename: string, position: Vector3, heading: number, loop: boolean, onRemove?: () => unknown) {\n        const group = new AnimationGroup(lwsFilename, loop ? undefined : () => {\n            this.disposeSceneEntity(group)\n            if (onRemove) onRemove()\n        }).setup().play()\n        group.position.copy(position)\n        group.rotateOnAxis(Object3D.DEFAULT_UP, heading)\n        this.addSceneEntity(group)\n        return group\n    }\n\n    addSprite(sprite: (Sprite & Updatable)) {\n        this.sprites.add(sprite)\n    }\n\n    removeSprite(sprite: (Sprite & Updatable)) {\n        this.sprites.remove(sprite)\n    }\n\n    addPositionalAudio(parent: Object3D, sfxName: string, loop: boolean): number {\n        const audio = new PositionalAudio(SoundManager.sceneAudioListener)\n        audio.setRefDistance(TILESIZE * 5)\n        audio.setRolloffFactor(10)\n        const sfxVolume = SaveGameManager.getSfxVolume()\n        audio.setVolume(sfxVolume)\n        audio.loop = loop\n        const audioId = SoundManager.nextAudioId\n        SoundManager.playingAudio.set(audioId, audio)\n        if (!audio.loop) {\n            audio.onEnded = () => {\n                parent.remove(audio)\n                SoundManager.playingAudio.delete(audioId)\n            }\n        }\n        const audioBuffer = SoundManager.getSoundBuffer(sfxName)\n        if (audioBuffer) {\n            audio.setBuffer(audioBuffer)\n            parent.add(audio)\n            if (sfxVolume > 0) audio.play()\n        }\n        return audioId\n    }\n\n    private limitCameraBird() {\n        this.tempBirdTargetDelta.copy(this.birdViewControls.target)\n        this.birdViewControls.target.clamp(this.cameraMinPos, this.cameraMaxPos)\n        this.tempBirdTargetDelta.sub(this.birdViewControls.target)\n        this.cameraBird.position.sub(this.tempBirdTargetDelta)\n        this.forceCameraBirdAboveFloor()\n    }\n\n    private forceCameraBirdAboveFloor() {\n        const terrainCheckOrigin = this.cameraBird.getWorldPosition(new Vector3())\n        terrainCheckOrigin.y += TILESIZE\n        this.raycaster.set(terrainCheckOrigin, new Vector3(0, -1, 0))\n        const terrainIntersectionPoint = this.raycaster.intersectObject(this.floorGroup, true)?.[0]?.point\n        if (!terrainIntersectionPoint) return\n        const minCameraPosY = terrainIntersectionPoint.y + CAMERA_MIN_HEIGHT_ABOVE_TERRAIN + CAMERA_MAX_SHAKE_BUMP\n        const centerPosition = this.birdViewControls.target.clone()\n        centerPosition.y = 0\n        const groundPosition = this.cameraBird.position.clone()\n        groundPosition.y = 0\n        const origin = new Vector2(this.birdViewControls.target.y, 0)\n        const remote = new Vector2(minCameraPosY, centerPosition.distanceTo(groundPosition))\n        this.birdViewControls.maxPolarAngle = Math.atan2(remote.y - origin.y, remote.x - origin.x)\n    }\n}\n","import { AnimationActivity, RAIDER_ACTIVITY } from '../../anim/AnimationActivity'\nimport { PathTarget } from '../../PathTarget'\nimport { RaiderJob } from './RaiderJob'\nimport { BubblesCfg } from '../../../../cfg/BubblesCfg'\nimport { JobFulfiller } from '../Job'\nimport { RaiderInfoComponent } from '../../../component/RaiderInfoComponent'\nimport { EntityManager } from '../../../EntityManager'\nimport { BuildingEntity } from '../../building/BuildingEntity'\n\nexport class EatBarracksJob extends RaiderJob {\n    building?: BuildingEntity\n    workplaces: PathTarget[]\n\n    constructor(readonly entityMgr: EntityManager, building: BuildingEntity) {\n        super()\n        this.building = building\n        this.workplaces = this.building?.getTrainingTargets()\n    }\n\n    getWorkplace(entity: JobFulfiller): PathTarget | undefined {\n        if (!this.building?.isPowered()) this.workplaces = this.entityMgr.getRaiderEatPathTarget()\n        const target = entity.findShortestPath(this.workplaces)?.target\n        this.building = target?.building\n        return target\n    }\n\n    onJobComplete(fulfiller: JobFulfiller): void {\n        super.onJobComplete(fulfiller)\n        if (!this.raider) return\n        this.raider.foodLevel += 0.25\n        this.raider.worldMgr.ecs.getComponents(this.raider.entity).get(RaiderInfoComponent).setHungerIndicator(this.raider.foodLevel)\n        if (this.raider.foodLevel < 1 && this.building) this.raider.setJob(new EatBarracksJob(this.entityMgr, this.building))\n    }\n\n    getWorkActivity(): AnimationActivity {\n        return RAIDER_ACTIVITY.eat\n    }\n\n    getJobBubble(): keyof BubblesCfg {\n        return 'bubbleEat'\n    }\n}\n","import { EventKey } from '../event/EventKeyEnum'\nimport { JobCreateEvent, UpdatePriorities } from '../event/WorldEvents'\nimport { CHECK_CLEAR_RUBBLE_INTERVAL, ITEM_ACTION_RANGE_SQ, JOB_SCHEDULE_INTERVAL } from '../params'\nimport { BuildingEntity } from './model/building/BuildingEntity'\nimport { Job } from './model/job/Job'\nimport { JOB_STATE } from './model/job/JobState'\nimport { PRIORITY_IDENTIFIER, PriorityIdentifier } from './model/job/PriorityIdentifier'\nimport { GetToolJob } from './model/job/raider/GetToolJob'\nimport { MoveJob } from './model/job/MoveJob'\nimport { TrainRaiderJob } from './model/job/raider/TrainRaiderJob'\nimport { Raider } from './model/raider/Raider'\nimport { VehicleEntity } from './model/vehicle/VehicleEntity'\nimport { WorldManager } from './WorldManager'\nimport { PathTarget } from './model/PathTarget'\nimport { EntityType } from './model/EntityType'\nimport { EatBarracksJob } from './model/job/raider/EatBarracksJob'\nimport { EventBroker } from '../event/EventBroker'\nimport { GameState } from './model/GameState'\nimport { SurfaceType } from './terrain/SurfaceType'\nimport { PRNG } from './factory/PRNG'\n\n/**\n * Tutorial01\n * - Raider should pick up shovel to clear rubble, but not automatically start clearing it\n * - Once job assigned by player, raider should continue and clear rubble\n * Tutorial02\n * - Raider should start drilling when drill job created\n * Tutorial03\n * - Raider should pick shovel and start clearing rubble\n * Tutorial08\n * - Raider should not pick up shovel for clearing\n * - Raider should not pick crystal until moved to same surface\n */\nexport class Supervisor {\n    jobs: Job[] = []\n    priorityIndexList: PriorityIdentifier[] = []\n    assignJobsTimer: number = 0\n    checkClearRubbleTimer: number = 0\n    autoClearRubble: boolean = true\n    scanUnclearedRubble: boolean = true\n\n    constructor(readonly worldMgr: WorldManager) {\n        EventBroker.subscribe(EventKey.JOB_CREATE, (event: JobCreateEvent) => {\n            this.jobs.push(event.job)\n        })\n        EventBroker.subscribe(EventKey.UPDATE_PRIORITIES, (event: UpdatePriorities) => {\n            event.priorityList.forEach((p) => {\n                if (!p.enabled) {\n                    this.worldMgr.entityMgr.raiders.forEach((r) => {\n                        if (r.job?.priorityIdentifier === p.key) r.stopJob()\n                    })\n                    this.worldMgr.entityMgr.vehicles.forEach((v) => {\n                        if (v.job?.priorityIdentifier === p.key) v.stopJob()\n                    })\n                }\n            })\n            this.priorityIndexList = GameState.priorityList.current.map((p) => p.key)\n        })\n        EventBroker.subscribe(EventKey.LEVEL_SELECTED, (event) => {\n            this.jobs = []\n            this.assignJobsTimer = 0\n            this.checkClearRubbleTimer = 0\n            this.autoClearRubble = event.levelConf.levelName.toLowerCase() !== 'tutorial01'\n            this.scanUnclearedRubble = event.levelConf.levelName.toLowerCase() !== 'tutorial08' // TODO Evaluate \"noGather\" from level config\n        })\n    }\n\n    update(elapsedMs: number) {\n        this.assignJobs(elapsedMs)\n        if (this.scanUnclearedRubble) this.checkUnclearedRubble(elapsedMs)\n    }\n\n    assignJobs(elapsedMs: number) {\n        this.assignJobsTimer += elapsedMs\n        if (this.assignJobsTimer < JOB_SCHEDULE_INTERVAL) return\n        this.assignJobsTimer %= JOB_SCHEDULE_INTERVAL\n        const availableJobs: Job[] = []\n        this.jobs = this.jobs.filter((j) => {\n            const result = j.jobState === JOB_STATE.incomplete\n            if (result && !j.hasFulfiller() && GameState.priorityList.isEnabled(j.priorityIdentifier) && (this.autoClearRubble || j.priorityIdentifier !== PRIORITY_IDENTIFIER.clearing)) {\n                availableJobs.push(j)\n            }\n            return result\n        })\n        availableJobs.sort((left, right) => {\n            return Math.sign(GameState.priorityList.getPriority(left.priorityIdentifier) - GameState.priorityList.getPriority(right.priorityIdentifier))\n        })\n        this.worldMgr.entityMgr.raiders.forEach((raider) => {\n            if (!raider.isReadyToTakeAJob() || raider.foodLevel > 0.25) return\n            const barracks = this.worldMgr.entityMgr.getClosestBuildingByType(raider.getPosition(), EntityType.BARRACKS)\n            if (barracks) raider.setJob(new EatBarracksJob(this.worldMgr.entityMgr, barracks))\n        })\n        const unemployedRaider = new Set(this.worldMgr.entityMgr.raiders.filter((r) => r.isReadyToTakeAJob()))\n        const unemployedVehicles = new Set(this.worldMgr.entityMgr.vehicles.filter((v) => v.isReadyToTakeAJob()))\n        availableJobs.forEach((job) => { // XXX better use estimated time to complete job as metric\n            try {\n                let closestVehicle: VehicleEntity | undefined\n                let closestVehicleDistance: number = Infinity\n                unemployedVehicles.forEach((vehicle) => {\n                    try {\n                        const pathToWorkplace = vehicle.findShortestPath(job.getWorkplace(vehicle))\n                        if (!pathToWorkplace) return\n                        const pathToJob = job.carryItem ? vehicle.findShortestPath(PathTarget.fromLocation(job.carryItem.getPosition2D(), ITEM_ACTION_RANGE_SQ)) : pathToWorkplace\n                        if (!pathToJob) return\n                        if (vehicle.isPrepared(job)) {\n                            const dist = pathToJob.lengthSq\n                            if (dist < closestVehicleDistance) {\n                                closestVehicle = vehicle\n                                closestVehicleDistance = dist\n                            }\n                        }\n                    } catch (e) {\n                        console.error(e)\n                    }\n                })\n                if (closestVehicle) {\n                    closestVehicle.setJob(job)\n                    unemployedVehicles.delete(closestVehicle)\n                    return // if vehicle found do not check for raider\n                }\n                let closestRaider: Raider | undefined\n                let minDistance: number = Infinity\n                let closestToolRaider: Raider | undefined\n                let minToolDistance: number = Infinity\n                let closestToolstation: BuildingEntity | undefined\n                const requiredTool = job.requiredTool\n                let closestTrainingRaider: Raider | undefined\n                let minTrainingDistance: number = Infinity\n                let closestTrainingArea: BuildingEntity | undefined\n                const requiredTraining = job.requiredTraining\n                unemployedRaider.forEach((raider) => {\n                    try {\n                        const pathToWorkplace = raider.findShortestPath(job.getWorkplace(raider))\n                        if (!pathToWorkplace) return\n                        const pathToJob = job.carryItem ? raider.findShortestPath(PathTarget.fromLocation(job.carryItem.getPosition2D(), ITEM_ACTION_RANGE_SQ)) : pathToWorkplace\n                        if (!pathToJob) return\n                        if (raider.isPrepared(job)) {\n                            const dist = pathToJob.lengthSq\n                            if (dist < minDistance) {\n                                closestRaider = raider\n                                minDistance = dist\n                            }\n                        } else if (!raider.hasTool(requiredTool)) {\n                            const pathToToolstation = raider.findShortestPath(this.worldMgr.entityMgr.getGetToolTargets())\n                            if (pathToToolstation) {\n                                const dist = pathToToolstation.lengthSq\n                                if (dist < minToolDistance) {\n                                    closestToolRaider = raider\n                                    minToolDistance = dist\n                                    closestToolstation = pathToToolstation.target.building\n                                }\n                            }\n                        } else if (!raider.hasTraining(requiredTraining)) {\n                            const pathToTrainingSite = raider.findShortestPath(this.worldMgr.entityMgr.getTrainingSiteTargets(requiredTraining))\n                            if (pathToTrainingSite) {\n                                const dist = pathToTrainingSite.lengthSq\n                                if (dist < minTrainingDistance) {\n                                    closestTrainingRaider = raider\n                                    minTrainingDistance = dist\n                                    closestTrainingArea = pathToTrainingSite.target.building\n                                }\n                            }\n                        }\n                    } catch (e) {\n                        console.error(e)\n                    }\n                })\n                if (closestRaider) {\n                    closestRaider.setJob(job)\n                    unemployedRaider.delete(closestRaider)\n                } else if (closestToolRaider) {\n                    closestToolRaider.setJob(new GetToolJob(this.worldMgr.entityMgr, requiredTool, closestToolstation), job)\n                    unemployedRaider.delete(closestToolRaider)\n                } else if (closestTrainingRaider) {\n                    closestTrainingRaider.setJob(new TrainRaiderJob(this.worldMgr.entityMgr, requiredTraining, closestTrainingArea), job)\n                    unemployedRaider.delete(closestTrainingRaider)\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        })\n        unemployedRaider.forEach((raider) => {\n            try {\n                const raiderSurface = raider.getSurface()\n                const blockedSite = raiderSurface.site\n                if (blockedSite?.buildingType) raider.setJob(new MoveJob(blockedSite.getWalkOutSurface().getRandomPosition()))\n                if (raiderSurface.surfaceType === SurfaceType.LAVA5) {\n                    const safeNeighbor = PRNG.movement.sample(raiderSurface.neighbors.filter((n) => n.isWalkable())) || raiderSurface\n                    raider.setJob(new MoveJob(safeNeighbor.getRandomPosition()))\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        })\n        unemployedVehicles.forEach((vehicle) => {\n            try {\n                if (vehicle.isReadyToTakeAJob() && vehicle.canClear()) {\n                    const startSurface = vehicle.getSurface()\n                    for (let rad = 0; rad < 10; rad++) {\n                        for (let x = startSurface.x - rad; x <= startSurface.x + rad; x++) {\n                            for (let y = startSurface.y - rad; y <= startSurface.y + rad; y++) {\n                                const surface = this.worldMgr.sceneMgr.terrain.getSurfaceOrNull(x, y)\n                                if (!(surface?.hasRubble()) || !surface?.discovered) continue\n                                const clearRubbleJob = surface.setupClearRubbleJob()\n                                if (!clearRubbleJob || clearRubbleJob.hasFulfiller() || !vehicle.findShortestPath(clearRubbleJob.lastRubblePositions)) continue\n                                vehicle.setJob(clearRubbleJob)\n                            }\n                        }\n                    }\n                }\n                const blockedSite = vehicle.getSurface().site\n                if (blockedSite?.buildingType) {\n                    vehicle.setJob(new MoveJob(blockedSite.getWalkOutSurface().getRandomPosition()))\n                } else {\n                    vehicle.unblockBuildingPowerPath()\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        })\n    }\n\n    checkUnclearedRubble(elapsedMs: number) {\n        this.checkClearRubbleTimer += elapsedMs\n        if (this.checkClearRubbleTimer < CHECK_CLEAR_RUBBLE_INTERVAL) return\n        this.checkClearRubbleTimer %= CHECK_CLEAR_RUBBLE_INTERVAL\n        this.worldMgr.entityMgr.raiders.forEach((raider) => {\n            try {\n                if (!raider.isReadyToTakeAJob()) return\n                const startSurface = raider.getSurface()\n                for (let rad = 0; rad < 10; rad++) {\n                    for (let x = startSurface.x - rad; x <= startSurface.x + rad; x++) {\n                        for (let y = startSurface.y - rad; y <= startSurface.y + rad; y++) {\n                            const surface = this.worldMgr.sceneMgr.terrain.getSurfaceOrNull(x, y)\n                            if (!surface?.hasRubble() || !surface?.discovered) continue\n                            const clearRubbleJob = surface.setupClearRubbleJob()\n                            if (!clearRubbleJob || clearRubbleJob.hasFulfiller()) continue\n                            if (raider.hasTool(clearRubbleJob.requiredTool)) {\n                                if (GameState.priorityList.isEnabled(PRIORITY_IDENTIFIER.clearing) && this.autoClearRubble && raider.findShortestPath(clearRubbleJob.lastRubblePositions)) {\n                                    raider.setJob(clearRubbleJob)\n                                }\n                                return\n                            } else {\n                                const pathToToolstation = raider.findShortestPath(this.worldMgr.entityMgr.getGetToolTargets())\n                                if (pathToToolstation) {\n                                    raider.setJob(new GetToolJob(this.worldMgr.entityMgr, clearRubbleJob.requiredTool, pathToToolstation.target.building))\n                                    return\n                                }\n                            }\n                        }\n                    }\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        })\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { NATIVE_UPDATE_INTERVAL } from '../../params'\nimport { WorldTargetComponent } from '../component/WorldTargetComponent'\nimport { MovableStatsComponent } from '../component/MovableStatsComponent'\nimport { AnimatedSceneEntityComponent } from '../component/AnimatedSceneEntityComponent'\nimport { ANIM_ENTITY_ACTIVITY } from '../model/anim/AnimationActivity'\nimport { EntityPushedComponent } from '../component/EntityPushedComponent'\nimport { HeadingComponent } from '../component/HeadingComponent'\nimport { WorldManager } from '../WorldManager'\n\nexport class MovementSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([PositionComponent, WorldTargetComponent, MovableStatsComponent])\n\n    constructor(readonly worldMgr: WorldManager) {\n        super()\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const positionComponent = components.get(PositionComponent)\n                if (!positionComponent.isDiscovered()) continue\n                const worldTargetComponent = components.get(WorldTargetComponent)\n                const statsComponent = components.get(MovableStatsComponent)\n                const terrain = this.worldMgr.sceneMgr.terrain\n                const targetWorld = terrain.getFloorPosition(worldTargetComponent.position)\n                targetWorld.y += positionComponent.floorOffset\n                const step = targetWorld.clone().sub(positionComponent.position)\n                const entitySpeed = statsComponent.getSpeed(positionComponent.surface.isPath(), positionComponent.surface.hasRubble()) * elapsedMs / NATIVE_UPDATE_INTERVAL\n                const sceneEntityComponent = components.get(AnimatedSceneEntityComponent)\n                if (targetWorld.distanceToSquared(positionComponent.position) <= worldTargetComponent.radiusSq) {\n                    this.ecs.removeComponent(entity, WorldTargetComponent)\n                    this.ecs.removeComponent(entity, HeadingComponent)\n                    this.ecs.removeComponent(entity, EntityPushedComponent)\n                    if (positionComponent.surface.wallType && statsComponent.enterWall) {\n                        this.worldMgr.entityMgr.removeEntity(entity)\n                        this.ecs.removeEntity(entity)\n                        if (sceneEntityComponent) this.worldMgr.sceneMgr.disposeSceneEntity(sceneEntityComponent.sceneEntity)\n                    } else if (sceneEntityComponent) {\n                        sceneEntityComponent.sceneEntity.setAnimation(sceneEntityComponent.sceneEntity.carriedByIndex.size > 0 ? ANIM_ENTITY_ACTIVITY.standCarry : ANIM_ENTITY_ACTIVITY.stand)\n                    }\n                } else if (entitySpeed > 0) {\n                    step.clampLength(0, entitySpeed)\n                    const targetPos = positionComponent.position.clone().add(step)\n                    const targetSurface = terrain.getSurfaceFromWorld(targetPos)\n                    if (!targetSurface.wallType || statsComponent.enterWall) {\n                        positionComponent.position.copy(targetPos)\n                        positionComponent.surface = targetSurface\n                        positionComponent.markDirty()\n                        if (sceneEntityComponent) {\n                            sceneEntityComponent.sceneEntity.setAnimation(sceneEntityComponent.sceneEntity.carriedByIndex.size > 0 ? ANIM_ENTITY_ACTIVITY.carry : ANIM_ENTITY_ACTIVITY.route)\n                        }\n                    } else {\n                        // TODO Move entity along the wall until there is no other option\n                        this.ecs.removeComponent(entity, WorldTargetComponent)\n                        this.ecs.removeComponent(entity, HeadingComponent)\n                        this.ecs.removeComponent(entity, EntityPushedComponent)\n                    }\n                } else {\n                    console.warn(`Entity ${entity} speed (${entitySpeed}) is zero or less`)\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { AnimatedSceneEntityComponent } from '../component/AnimatedSceneEntityComponent'\n\nexport class SceneEntityPositionSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([AnimatedSceneEntityComponent, PositionComponent])\n    readonly dirtyComponents: Set<Function> = new Set([PositionComponent])\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        for (const entity of dirty) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const sceneEntityComponent = components.get(AnimatedSceneEntityComponent)\n                const positionComponent = components.get(PositionComponent)\n                sceneEntityComponent.sceneEntity.position.copy(positionComponent.position)\n                sceneEntityComponent.sceneEntity.position.y += positionComponent.floorOffset\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { AnimatedSceneEntityComponent } from '../component/AnimatedSceneEntityComponent'\nimport { HeadingComponent } from '../component/HeadingComponent'\n\nexport class SceneEntityHeadingSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([AnimatedSceneEntityComponent, HeadingComponent])\n    readonly dirtyComponents: Set<Function> = new Set([HeadingComponent])\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        for (const entity of dirty) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const sceneEntityComponent = components.get(AnimatedSceneEntityComponent)\n                const headingComponent = components.get(HeadingComponent)\n                sceneEntityComponent.sceneEntity.headTowards(headingComponent.location)\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { MovableStatsComponent } from '../component/MovableStatsComponent'\nimport { WorldTargetComponent } from '../component/WorldTargetComponent'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { SurfaceType } from '../terrain/SurfaceType'\nimport { RandomMoveComponent } from '../component/RandomMoveComponent'\nimport { HeadingComponent } from '../component/HeadingComponent'\nimport { PRNG } from '../factory/PRNG'\n\nexport class RandomMoveBehaviorSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([RandomMoveComponent, PositionComponent, MovableStatsComponent])\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const randomMoveComponent = components.get(RandomMoveComponent)\n                if (randomMoveComponent.isOnIdleTimer(elapsedMs) || components.has(WorldTargetComponent)) continue\n                const positionComponent = components.get(PositionComponent)\n                if (!positionComponent.isDiscovered()) continue\n                const statsComponent = components.get(MovableStatsComponent)\n                const targetSurface = PRNG.movement.sample([positionComponent.surface, ...positionComponent.surface.neighbors.filter((n) =>\n                    (!n.wallType || statsComponent.enterWall)\n                    && (!n.surfaceType.floor || statsComponent.crossLand)\n                    && (n.surfaceType !== SurfaceType.LAVA5 || statsComponent.crossLava)\n                    && (n.surfaceType !== SurfaceType.WATER || statsComponent.crossWater)\n                )])\n                const targetLocation = targetSurface.getRandomPosition()\n                this.ecs.addComponent(entity, new WorldTargetComponent(targetLocation, 1))\n                this.ecs.addComponent(entity, new HeadingComponent(targetLocation))\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { NATIVE_UPDATE_INTERVAL } from '../../params'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { FlockComponent } from '../component/FlockComponent'\nimport { Quaternion, Vector3 } from 'three'\n\nfunction clamp(value: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, value))\n}\n\nexport class FlockBehaviorSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([PositionComponent, FlockComponent])\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        const frameMult = elapsedMs / NATIVE_UPDATE_INTERVAL\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const positionComponent = components.get(PositionComponent)\n                if (!positionComponent.isDiscovered()) continue\n                const flockComponent = components.get(FlockComponent)\n\n                const targetPosition = positionComponent.position.clone()\n                targetPosition.y += positionComponent.floorOffset\n                const flockEntities = flockComponent.entities.map((e) => ({\n                    ...e,\n                    pos: e.sceneEntity.position.clone(),\n                    rot: new Quaternion().setFromEuler(e.sceneEntity.rotation),\n                    dir: new Vector3(0, 0, 1).applyEuler(e.sceneEntity.rotation),\n                }))\n                let avgDir = new Vector3()\n                flockEntities.forEach((e) => avgDir.add(e.dir))\n                avgDir.normalize()\n\n                for (const flockEntity of flockEntities) {\n                    let minDist: Vector3 | undefined\n                    flockEntities.forEach((e) => {\n                        if (Object.is(e.sceneEntity, flockEntity.sceneEntity)) return\n                        const dist = e.pos.clone().sub(flockEntity.pos)\n                        if (!minDist || minDist.lengthSq() > dist.lengthSq())\n                            minDist = dist\n                    })\n\n                    let newDir = new Vector3()\n                    if (minDist) {\n                        const minDistLength = minDist.length()\n                        let evasionDir = new Vector3()\n                        if (minDistLength === 0) {\n                            evasionDir.randomDirection()\n                        } else {\n                            evasionDir.copy(minDist).multiplyScalar(-1 / minDistLength)\n                        }\n                        newDir.addScaledVector(evasionDir,\n                            clamp(1 - minDistLength / flockEntity.separationDist, 0, 1) * flockEntity.separationMult)\n                    }\n                    newDir.addScaledVector(flockEntity.dir, flockEntity.inertiaMult / frameMult)\n                    newDir.addScaledVector(avgDir, flockEntity.alignmentMult)\n                    const targetDist = targetPosition.clone().sub(flockEntity.pos)\n                    const targetDistLength = targetDist.length()\n                    if (targetDistLength !== 0) {\n                        const targetDir = targetDist.clone().multiplyScalar(1 / targetDistLength)\n                        newDir.addScaledVector(targetDir,\n                            clamp(targetDistLength / flockEntity.cohesionDist, 0, 1) * flockEntity.cohesionMult)\n                    }\n                    newDir.normalize()\n\n                    const newPos = flockEntity.sceneEntity.position.clone().addScaledVector(newDir, flockEntity.speed * frameMult)\n                    flockEntity.sceneEntity.lookAt(newPos)\n                    flockEntity.sceneEntity.position.copy(newPos)\n                    flockEntity.sceneEntity.visible = true\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { HealthComponent } from '../component/HealthComponent'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { DynamiteExplosionEvent, WorldLocationEvent } from '../../event/WorldEvents'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { SurfaceType } from '../terrain/SurfaceType'\nimport { MovableStatsComponent } from '../component/MovableStatsComponent'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { EventBroker } from '../../event/EventBroker'\nimport { PRNG } from '../factory/PRNG'\n\nexport class DamageSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set<Function>([PositionComponent, HealthComponent])\n    readonly landslides: PositionComponent[] = []\n    readonly dynamiteExplosions: DynamiteExplosionEvent[] = []\n    readonly dynamiteRadiusSq: number = 0\n    readonly dynamiteMaxDamage: number = 0\n\n    constructor() {\n        super()\n        this.dynamiteRadiusSq = Math.pow(GameConfig.instance.main.DynamiteDamageRadius, 2)\n        this.dynamiteMaxDamage = GameConfig.instance.main.DynamiteMaxDamage\n        EventBroker.subscribe(EventKey.DYNAMITE_EXPLOSION, (event: DynamiteExplosionEvent) => {\n            this.dynamiteExplosions.push(event)\n        })\n        EventBroker.subscribe(EventKey.LOCATION_LANDSLIDE, (event: WorldLocationEvent) => {\n            this.landslides.push(event.location)\n        })\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const positionComponent = components.get(PositionComponent)\n                const healthComponent = components.get(HealthComponent)\n                const position = positionComponent.getPosition2D()\n                this.dynamiteExplosions.forEach((explosion) => {\n                    const distanceSq = position.distanceToSquared(explosion.position)\n                    const inRangeSq = 1 - distanceSq / this.dynamiteRadiusSq\n                    if (inRangeSq > 0) {\n                        healthComponent.changeHealth(-this.dynamiteMaxDamage * Math.pow(inRangeSq, 2))\n                    }\n                })\n                if (healthComponent.hitByLavaTimeoutMs > 0) {\n                    healthComponent.hitByLavaTimeoutMs -= elapsedMs\n                } else {\n                    const movableComponent = components.get(MovableStatsComponent)\n                    if (!movableComponent?.crossLava && positionComponent.surface.surfaceType === SurfaceType.LAVA5) {\n                        healthComponent.changeHealth(-(20 + PRNG.damage.randInt(20)))\n                        healthComponent.hitByLavaTimeoutMs = 2000\n                    }\n                }\n                this.landslides.forEach((landslide) => {\n                    if (positionComponent.surface !== landslide.surface) return\n                    healthComponent.changeHealth(-healthComponent.rockFallDamage * 50) // TODO balance fall in damage\n                })\n            } catch (e) {\n                console.error(e)\n            }\n        }\n        this.dynamiteExplosions.length = 0\n        this.landslides.length = 0\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { BeamUpComponent } from '../component/BeamUpComponent'\nimport { TILESIZE } from '../../params'\nimport { WorldManager } from '../WorldManager'\n\nexport class BeamUpSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set<Function>([BeamUpComponent])\n\n    constructor(readonly worldMgr: WorldManager) {\n        super()\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const beamUpComponent = components.get(BeamUpComponent)\n                const position = beamUpComponent.entity.getPosition()\n                if (position.y < 4 * TILESIZE) {\n                    position.y += 4 * TILESIZE / 122 * elapsedMs * 25 / 1000\n                    beamUpComponent.entity.setPosition(position)\n                } else {\n                    beamUpComponent.entity.disposeFromWorld()\n                    this.worldMgr.entityMgr.removeEntity(entity)\n                    this.ecs.removeEntity(entity)\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { OxygenComponent } from '../component/OxygenComponent'\nimport { GameState } from '../model/GameState'\nimport { AirLevelChanged, GameResultEvent, LevelSelectedEvent } from '../../event/WorldEvents'\nimport { GAME_RESULT_STATE } from '../model/GameResult'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { EventBroker } from '../../event/EventBroker'\n\nexport class OxygenSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([OxygenComponent])\n    levelOxygenRate: number = 0\n\n    constructor() {\n        super()\n        EventBroker.subscribe(EventKey.LEVEL_SELECTED, (event: LevelSelectedEvent) => {\n            this.levelOxygenRate = event.levelConf.oxygenRate / 1000 / 100 / 1000\n        })\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        let coefSum = 0\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const oxygenComponent = components.get(OxygenComponent)\n                coefSum += oxygenComponent.oxygenCoefficient\n            } catch (e) {\n                console.error(e)\n            }\n        }\n        const airDiff = coefSum * this.levelOxygenRate * elapsedMs\n        const nextAirLevel = Math.max(0, Math.min(1, GameState.airLevel + airDiff))\n        if (GameState.airLevel !== nextAirLevel) {\n            GameState.airLevel = nextAirLevel\n            EventBroker.publish(new AirLevelChanged(GameState.airLevel))\n            if (GameState.airLevel <= 0) EventBroker.publish(new GameResultEvent(GAME_RESULT_STATE.failed)) // Level 22 has oxygen, but no NERP check\n        }\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { MAP_MARKER_CHANGE, MapMarkerComponent } from '../component/MapMarkerComponent'\nimport { UpdateRadarEntityEvent } from '../../event/LocalEvents'\nimport { EventBroker } from '../../event/EventBroker'\nimport { MAP_MAX_UPDATE_INTERVAL, TILESIZE } from '../../params'\n\nexport class MapMarkerUpdateSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([PositionComponent, MapMarkerComponent])\n    readonly dirtyComponents: Set<Function> = new Set([PositionComponent])\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        for (const entity of dirty) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const mapMarkerComponent = components.get(MapMarkerComponent)\n                const mapMarkerType = mapMarkerComponent.mapMarkerType\n                mapMarkerComponent.lastUpdateMs += elapsedMs\n                const position = components.get(PositionComponent).position\n                if (mapMarkerComponent.lastUpdateMs > MAP_MAX_UPDATE_INTERVAL && position.distanceToSquared(mapMarkerComponent.lastPos) / TILESIZE * 15 > 2) {\n                    EventBroker.publish(new UpdateRadarEntityEvent(mapMarkerType, entity, MAP_MARKER_CHANGE.update, position))\n                    mapMarkerComponent.lastUpdateMs = 0\n                    mapMarkerComponent.lastPos.copy(position)\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n}\n","import { AbstractGameComponent } from '../ECS'\nimport { AnimatedSceneEntity } from '../../scene/AnimatedSceneEntity'\nimport { WorldManager } from '../WorldManager'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { Vector3 } from 'three'\nimport { GameConfig } from '../../cfg/GameConfig'\n\nexport class EntityFrozenComponent extends AbstractGameComponent {\n    readonly iceCubeEntity: AnimatedSceneEntity\n\n    constructor(worldMgr: WorldManager, entity: number, freezerTimeMs: number, position: Vector3, heading: number) {\n        super()\n        this.iceCubeEntity = new AnimatedSceneEntity()\n        this.iceCubeEntity.addAnimated(ResourceManager.getAnimatedData(GameConfig.instance.miscObjects.iceCube))\n        this.iceCubeEntity.setAnimation('Start', () => {\n            this.iceCubeEntity.setAnimation('Normal', () => {\n                this.iceCubeEntity.setAnimation('Melt', () => {\n                    worldMgr.ecs.removeComponent(entity, EntityFrozenComponent)\n                })\n            }, freezerTimeMs) // TODO reduce ice cube time by start and melt?\n        })\n        this.iceCubeEntity.position.copy(position)\n        this.iceCubeEntity.rotation.y = heading\n        worldMgr.sceneMgr.addSceneEntity(this.iceCubeEntity)\n    }\n}\n","import { AbstractGameComponent, GameEntity } from '../ECS'\nimport { SceneMesh } from '../../scene/SceneMesh'\nimport { Vector2 } from 'three'\nimport { EntityType } from '../model/EntityType'\nimport { BuildingType } from '../model/building/BuildingType'\n\nexport class BoulderComponent extends AbstractGameComponent {\n    constructor(\n        readonly entityType: EntityType.BOULDER | EntityType.BOULDER_ICE,\n        readonly mesh: SceneMesh,\n        readonly targetEntity: GameEntity,\n        readonly targetBuildingType: BuildingType,\n        readonly targetLevel: number,\n        readonly targetLocation: Vector2,\n    ) {\n        super()\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { ROCK_MONSTER_BEHAVIOR_STATE, RockMonsterBehaviorComponent } from '../component/RockMonsterBehaviorComponent'\nimport { WorldManager } from '../WorldManager'\nimport { EntityType } from '../model/EntityType'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { AnimatedSceneEntityComponent } from '../component/AnimatedSceneEntityComponent'\nimport { MonsterStatsComponent } from '../component/MonsterStatsComponent'\nimport { WorldTargetComponent } from '../component/WorldTargetComponent'\nimport { PathTarget } from '../model/PathTarget'\nimport { ANIM_ENTITY_ACTIVITY, RAIDER_ACTIVITY, ROCK_MONSTER_ACTIVITY } from '../model/anim/AnimationActivity'\nimport { SurfaceType } from '../terrain/SurfaceType'\nimport { WALL_TYPE } from '../terrain/WallType'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { HealthComponent } from '../component/HealthComponent'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { GameState } from '../model/GameState'\nimport { PathFinder } from '../terrain/PathFinder'\nimport { Euler, Vector2, Vector3 } from 'three'\nimport { MonsterEntityStats } from '../../cfg/GameStatsCfg'\nimport { MaterialEntity } from '../model/material/MaterialEntity'\nimport { TILESIZE } from '../../params'\nimport { DynamiteExplosionEvent, MonsterLaserHitEvent, WorldLocationEvent } from '../../event/WorldEvents'\nimport { RAIDER_SCARE_RANGE, RaiderScareComponent } from '../component/RaiderScareComponent'\nimport { AnimatedSceneEntity } from '../../scene/AnimatedSceneEntity'\nimport { Raider } from '../model/raider/Raider'\nimport { EntityFrozenComponent } from '../component/EntityFrozenComponent'\nimport { EntityPushedComponent } from '../component/EntityPushedComponent'\nimport { BoulderComponent } from '../component/BoulderComponent'\nimport { VehicleTarget } from '../EntityManager'\nimport { HeadingComponent } from '../component/HeadingComponent'\nimport { BeamUpComponent } from '../component/BeamUpComponent'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { EventBroker } from '../../event/EventBroker'\nimport { PRNG } from '../factory/PRNG'\nimport { UpdateRadarEntityEvent } from '../../event/LocalEvents'\nimport { MAP_MARKER_CHANGE, MAP_MARKER_TYPE } from '../component/MapMarkerComponent'\n\nconst ROCKY_GRAB_DISTANCE_SQ = 10 * 10\nconst ROCKY_GATHER_DISTANCE_SQ = 5 * 5\nconst ROCKY_BOULDER_THROW_DISTANCE_SQ = 80 * 80\nconst ROCKY_MELEE_ATTACK_DISTANCE_SQ = 30 * 30\n\nexport class RockMonsterBehaviorSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([RockMonsterBehaviorComponent, PositionComponent, AnimatedSceneEntityComponent, MonsterStatsComponent])\n\n    constructor(readonly worldMgr: WorldManager) {\n        super()\n        EventBroker.subscribe(EventKey.DYNAMITE_EXPLOSION, (event: DynamiteExplosionEvent) => {\n            this.worldMgr.entityMgr.rockMonsters.forEach((m) => {\n                const components = this.ecs.getComponents(m)\n                const positionComponent = components.get(PositionComponent)\n                if (positionComponent.getPosition2D().distanceToSquared(event.position) < Math.pow(GameConfig.instance.main.DynamiteDamageRadius, 2)) {\n                    components.get(AnimatedSceneEntityComponent).sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.wakeUp, () => {\n                        this.ecs.addComponent(m, new RaiderScareComponent(RAIDER_SCARE_RANGE.rocky))\n                        this.ecs.addComponent(m, new RockMonsterBehaviorComponent())\n                        EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_MONSTER, positionComponent))\n                    })\n                }\n            })\n        })\n        EventBroker.subscribe(EventKey.MONSTER_LASER_HIT, (event: MonsterLaserHitEvent) => {\n            const components = this.ecs.getComponents(event.entity)\n            const sceneEntity = components.get(AnimatedSceneEntityComponent).sceneEntity\n            sceneEntity.removeAllCarried()\n            let behaviorComponent = components.get(RockMonsterBehaviorComponent)\n            if (behaviorComponent) {\n                behaviorComponent.boulder = undefined\n                behaviorComponent.changeToIdle()\n                behaviorComponent.state = ROCK_MONSTER_BEHAVIOR_STATE.hitByLaser\n            }\n            const healthComponent = components.get(HealthComponent)\n            // TODO How does laser beam shot damage work in original?\n            const laserDamage = (4 + PRNG.damage.randInt(2)) * event.weaponCfg.defaultDamage\n            healthComponent.changeHealth(-laserDamage)\n            sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.hitHard, () => {\n                if (!behaviorComponent) {\n                    this.ecs.addComponent(event.entity, new RaiderScareComponent(RAIDER_SCARE_RANGE.rocky))\n                    behaviorComponent = this.ecs.addComponent(event.entity, new RockMonsterBehaviorComponent())\n                    const positionComponent = components.get(PositionComponent)\n                    EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_MONSTER, positionComponent))\n                }\n                behaviorComponent.state = ROCK_MONSTER_BEHAVIOR_STATE.idle\n            })\n        })\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        const pathFinder = this.worldMgr.sceneMgr.terrain?.pathFinder\n        const crystals = this.worldMgr.entityMgr.materials.filter((m) => m.entityType === EntityType.CRYSTAL)\n        const drivingVehiclePositions = this.worldMgr.entityMgr.vehicles\n            .filter((v) => v.sceneEntity.currentAnimation === ANIM_ENTITY_ACTIVITY.route)\n            .map((v) => this.ecs.getComponents(v.entity).get(PositionComponent).getPosition2D())\n        const monsterTargetBuildings = GameState.monsterAttackPowerStation ? this.worldMgr.entityMgr.buildings.filter((b) => b.entityType === EntityType.POWER_STATION) : this.worldMgr.entityMgr.buildings\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const behaviorComponent = components.get(RockMonsterBehaviorComponent)\n                const positionComponent = components.get(PositionComponent)\n                const sceneEntity = components.get(AnimatedSceneEntityComponent).sceneEntity\n                if (components.has(EntityFrozenComponent) || components.has(EntityPushedComponent)) {\n                    sceneEntity.removeAllCarried()\n                    behaviorComponent.boulder = undefined\n                    sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                    behaviorComponent.changeToIdle()\n                    continue\n                }\n                const stats = components.get(MonsterStatsComponent).stats\n                const rockyPos = positionComponent.getPosition2D()\n                const targetBuilding = behaviorComponent.targetBuilding\n                const targetWall = behaviorComponent.targetWall\n                switch (behaviorComponent.state) {\n                    case ROCK_MONSTER_BEHAVIOR_STATE.idle:\n                        this.doIdle(behaviorComponent, pathFinder, rockyPos, stats, entity, crystals)\n                        break\n                    case ROCK_MONSTER_BEHAVIOR_STATE.gotoCrystal:\n                        if (positionComponent.surface.surfaceType === SurfaceType.POWER_PATH) {\n                            const prevTargetComponent = components.get(WorldTargetComponent)\n                            this.ecs.removeComponent(entity, WorldTargetComponent)\n                            this.ecs.removeComponent(entity, HeadingComponent)\n                            sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.stamp, () => {\n                                if (prevTargetComponent) {\n                                    this.ecs.addComponent(entity, new WorldTargetComponent(prevTargetComponent.position, prevTargetComponent.radiusSq))\n                                    this.ecs.addComponent(entity, new HeadingComponent(prevTargetComponent.position))\n                                }\n                                sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                            }, 0, () => {\n                                positionComponent.surface.setSurfaceType(SurfaceType.RUBBLE4)\n                                this.worldMgr.sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.smashPath, positionComponent.surface.getCenterWorld(), 0, false)\n                            })\n                        } else {\n                            const vehicleInMeleeRange = this.worldMgr.entityMgr.findVehicleInRange(rockyPos, ROCKY_MELEE_ATTACK_DISTANCE_SQ)\n                            if (vehicleInMeleeRange) {\n                                this.punchVehicle(behaviorComponent, entity, sceneEntity, vehicleInMeleeRange, rockyPos, stats)\n                            } else {\n                                const raiderInGrabRange = this.worldMgr.entityMgr.raiders\n                                    .find((r) => !r.thrown && r.getPosition2D().distanceToSquared(rockyPos) < ROCKY_GRAB_DISTANCE_SQ)\n                                const targetCrystal = behaviorComponent.targetCrystal\n                                if (raiderInGrabRange) {\n                                    this.throwRaider(behaviorComponent, entity, sceneEntity, raiderInGrabRange, positionComponent)\n                                } else if (!targetCrystal || !this.worldMgr.entityMgr.materials.includes(targetCrystal)) {\n                                    behaviorComponent.changeToIdle()\n                                } else if (!components.has(WorldTargetComponent)) {\n                                    const crystalPosition = targetCrystal.getPosition2D()\n                                    if (rockyPos.distanceToSquared(crystalPosition) <= ROCKY_GRAB_DISTANCE_SQ) {\n                                        sceneEntity.lookAt(this.worldMgr.sceneMgr.getFloorPosition(targetCrystal.getPosition2D()))\n                                        behaviorComponent.state = ROCK_MONSTER_BEHAVIOR_STATE.eatCrystal\n                                        sceneEntity.pickupEntity(targetCrystal.sceneEntity)\n                                        targetCrystal.targetSite?.removeItem(targetCrystal)\n                                        sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.eat, () => {\n                                            sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                                            behaviorComponent.numCrystalsEaten++\n                                            sceneEntity.removeAllCarried()\n                                            targetCrystal.disposeFromWorld()\n                                            behaviorComponent.changeToIdle()\n                                        })\n                                    } else {\n                                        const crystalPathTarget = [PathTarget.fromLocation(crystalPosition)]\n                                        const path = pathFinder.findShortestPath(rockyPos, crystalPathTarget, stats, 1)\n                                        if (path && path.locations.length > 0) {\n                                            const targetLocation = path.locations[0]\n                                            this.ecs.addComponent(entity, new WorldTargetComponent(targetLocation, ROCKY_GRAB_DISTANCE_SQ))\n                                            this.ecs.addComponent(entity, new HeadingComponent(targetLocation))\n                                        } else {\n                                            behaviorComponent.changeToIdle()\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        break\n                    case ROCK_MONSTER_BEHAVIOR_STATE.boulderAttack:\n                        if (behaviorComponent.boulder) {\n                            const drivingVehicleCloseBy = drivingVehiclePositions.find((pos) => pos.distanceToSquared(rockyPos) < ROCKY_MELEE_ATTACK_DISTANCE_SQ)\n                            if (drivingVehicleCloseBy) {\n                                this.worldMgr.sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.boulderExplode, behaviorComponent.boulder.getWorldPosition(new Vector3()), behaviorComponent.boulder.rotation.y, false)\n                                sceneEntity.removeAllCarried()\n                                behaviorComponent.boulder = undefined\n                                sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                            } else if (!targetBuilding) {\n                                const closestBuilding = pathFinder.findClosestBuilding(rockyPos, monsterTargetBuildings, stats, 1)\n                                if (closestBuilding) {\n                                    behaviorComponent.targetBuilding = closestBuilding.obj\n                                } else {\n                                    behaviorComponent.state = ROCK_MONSTER_BEHAVIOR_STATE.goHome\n                                }\n                            } else if (this.ecs.getComponents(targetBuilding.entity).has(BeamUpComponent) || !monsterTargetBuildings.includes(targetBuilding)) {\n                                behaviorComponent.changeToIdle()\n                            } else {\n                                const targetBuildingSurface = targetBuilding.buildingSurfaces.find((s) => rockyPos.distanceToSquared(s.getCenterWorld2D()) <= ROCKY_BOULDER_THROW_DISTANCE_SQ)\n                                if (targetBuildingSurface) {\n                                    this.ecs.removeComponent(entity, WorldTargetComponent)\n                                    this.ecs.removeComponent(entity, HeadingComponent)\n                                    const targetLocation = targetBuildingSurface.getCenterWorld2D()\n                                    sceneEntity.lookAt(this.worldMgr.sceneMgr.getFloorPosition(targetLocation))\n                                    behaviorComponent.state = ROCK_MONSTER_BEHAVIOR_STATE.throw\n                                    sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.throw, () => {\n                                        sceneEntity.removeAllCarried()\n                                        if (behaviorComponent.boulder) {\n                                            behaviorComponent.boulder.lookAt(targetBuildingSurface.getCenterWorld())\n                                            this.worldMgr.sceneMgr.scene.add(behaviorComponent.boulder)\n                                            const bulletEntity = this.ecs.addEntity()\n                                            this.ecs.addComponent(bulletEntity, new BoulderComponent(EntityType.BOULDER, behaviorComponent.boulder, targetBuilding.entity, targetBuilding.buildingType, targetBuilding.level, targetLocation))\n                                            this.worldMgr.entityMgr.addEntity(bulletEntity, EntityType.BOULDER)\n                                        }\n                                        behaviorComponent.boulder = undefined\n                                        sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                                        behaviorComponent.changeToIdle()\n                                    })\n                                } else if (!components.has(WorldTargetComponent)) {\n                                    const buildingPathTargets = targetBuilding.getTrainingTargets()\n                                    const path = pathFinder.findShortestPath(rockyPos, buildingPathTargets, stats, 1)\n                                    if (path && path.locations.length > 0) {\n                                        const targetLocation = path.locations[0]\n                                        this.ecs.addComponent(entity, new WorldTargetComponent(targetLocation))\n                                        this.ecs.addComponent(entity, new HeadingComponent(targetLocation))\n                                    } else {\n                                        console.warn('Rocky cannot find path to targets', buildingPathTargets)\n                                        behaviorComponent.changeToIdle()\n                                    }\n                                } else {\n                                    // XXX Adjust balancing for resting\n                                    const chanceToRestPerSecond = stats.restPercent / 20\n                                    if (PRNG.movement.random() < chanceToRestPerSecond * elapsedMs / 1000) {\n                                        const prevState = behaviorComponent.state\n                                        behaviorComponent.state = ROCK_MONSTER_BEHAVIOR_STATE.resting\n                                        this.ecs.removeComponent(entity, WorldTargetComponent)\n                                        this.ecs.removeComponent(entity, HeadingComponent)\n                                        sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.rest, () => {\n                                            behaviorComponent.state = prevState\n                                        })\n                                    }\n                                }\n                            }\n                        } else {\n                            behaviorComponent.targetWall = this.worldMgr.sceneMgr.terrain.findClosestWall(rockyPos)\n                            behaviorComponent.state = ROCK_MONSTER_BEHAVIOR_STATE.gotoWall\n                        }\n                        break\n                    case ROCK_MONSTER_BEHAVIOR_STATE.meleeAttack:\n                        if (positionComponent.surface.surfaceType === SurfaceType.POWER_PATH) {\n                            const prevTargetComponent = components.get(WorldTargetComponent)\n                            this.ecs.removeComponent(entity, WorldTargetComponent)\n                            this.ecs.removeComponent(entity, HeadingComponent)\n                            sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.stamp, () => {\n                                if (prevTargetComponent) {\n                                    this.ecs.addComponent(entity, new WorldTargetComponent(prevTargetComponent.position, prevTargetComponent.radiusSq))\n                                    this.ecs.addComponent(entity, new HeadingComponent(prevTargetComponent.position))\n                                }\n                                sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                            }, 0, () => {\n                                positionComponent.surface.setSurfaceType(SurfaceType.RUBBLE4)\n                                this.worldMgr.sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.smashPath, positionComponent.surface.getCenterWorld(), 0, false)\n                            })\n                        } else {\n                            const vehicleInMeleeRange = this.worldMgr.entityMgr.findVehicleInRange(rockyPos, ROCKY_MELEE_ATTACK_DISTANCE_SQ)\n                            if (vehicleInMeleeRange) {\n                                this.punchVehicle(behaviorComponent, entity, sceneEntity, vehicleInMeleeRange, rockyPos, stats)\n                            } else {\n                                const raiderInGrabRange = this.worldMgr.entityMgr.raiders\n                                    .find((r) => !r.thrown && r.getPosition2D().distanceToSquared(rockyPos) < ROCKY_GRAB_DISTANCE_SQ)\n                                if (raiderInGrabRange) {\n                                    this.throwRaider(behaviorComponent, entity, sceneEntity, raiderInGrabRange, positionComponent)\n                                } else if (!targetBuilding) {\n                                    const closestBuilding = pathFinder.findClosestBuilding(rockyPos, monsterTargetBuildings, stats, 1)\n                                    if (closestBuilding) {\n                                        behaviorComponent.targetBuilding = closestBuilding.obj\n                                    } else {\n                                        behaviorComponent.state = ROCK_MONSTER_BEHAVIOR_STATE.goHome\n                                    }\n                                } else if (this.ecs.getComponents(targetBuilding.entity).has(BeamUpComponent) || !monsterTargetBuildings.includes(targetBuilding)) {\n                                    behaviorComponent.changeToIdle()\n                                } else {\n                                    const targetBuildingSurface = targetBuilding.buildingSurfaces.find((s) => rockyPos.distanceToSquared(s.getCenterWorld2D()) <= ROCKY_MELEE_ATTACK_DISTANCE_SQ)\n                                    if (targetBuildingSurface) {\n                                        this.ecs.removeComponent(entity, WorldTargetComponent)\n                                        this.ecs.removeComponent(entity, HeadingComponent)\n                                        sceneEntity.lookAt(this.worldMgr.sceneMgr.getFloorPosition(targetBuildingSurface.getCenterWorld2D()))\n                                        behaviorComponent.state = ROCK_MONSTER_BEHAVIOR_STATE.punch\n                                        sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.punch, () => {\n                                            sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                                            behaviorComponent.changeToIdle()\n                                        }, 0, () => {\n                                            const buildingComponents = this.ecs.getComponents(targetBuilding.entity)\n                                            const healthComponent = buildingComponents.get(HealthComponent)\n                                            healthComponent.changeHealth(stats.repairValue)\n                                            if (healthComponent.triggerAlarm) EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_UNDER_ATTACK, buildingComponents.get(PositionComponent)))\n                                        })\n                                    } else if (!components.has(WorldTargetComponent)) {\n                                        const buildingPathTargets = targetBuilding.getTrainingTargets()\n                                        const path = pathFinder.findShortestPath(rockyPos, buildingPathTargets, stats, 1)\n                                        if (path && path.locations.length > 0) {\n                                            const targetLocation = path.locations[0]\n                                            this.ecs.addComponent(entity, new WorldTargetComponent(targetLocation))\n                                            this.ecs.addComponent(entity, new HeadingComponent(targetLocation))\n                                        } else {\n                                            console.warn('Rocky cannot find path to targets', buildingPathTargets)\n                                            behaviorComponent.changeToIdle()\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        break\n                    case ROCK_MONSTER_BEHAVIOR_STATE.gotoWall:\n                        if (positionComponent.surface.surfaceType === SurfaceType.POWER_PATH) {\n                            const prevTargetComponent = components.get(WorldTargetComponent)\n                            this.ecs.removeComponent(entity, WorldTargetComponent)\n                            this.ecs.removeComponent(entity, HeadingComponent)\n                            sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.stamp, () => {\n                                if (prevTargetComponent) {\n                                    this.ecs.addComponent(entity, new WorldTargetComponent(prevTargetComponent.position, prevTargetComponent.radiusSq))\n                                    this.ecs.addComponent(entity, new HeadingComponent(prevTargetComponent.position))\n                                }\n                                sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                            }, 0, () => {\n                                positionComponent.surface.setSurfaceType(SurfaceType.RUBBLE4)\n                                this.worldMgr.sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.smashPath, positionComponent.surface.getCenterWorld(), 0, false)\n                            })\n                        } else {\n                            const vehicleInMeleeRange = this.worldMgr.entityMgr.findVehicleInRange(rockyPos, ROCKY_MELEE_ATTACK_DISTANCE_SQ)\n                            if (vehicleInMeleeRange) {\n                                this.punchVehicle(behaviorComponent, entity, sceneEntity, vehicleInMeleeRange, rockyPos, stats)\n                            } else {\n                                const raiderInGrabRange = this.worldMgr.entityMgr.raiders\n                                    .find((r) => !r.thrown && r.getPosition2D().distanceToSquared(rockyPos) < ROCKY_GRAB_DISTANCE_SQ)\n                                if (raiderInGrabRange) {\n                                    this.throwRaider(behaviorComponent, entity, sceneEntity, raiderInGrabRange, positionComponent)\n                                } else if (targetWall?.wallType !== WALL_TYPE.wall) {\n                                    behaviorComponent.changeToIdle()\n                                } else if (!components.has(WorldTargetComponent)) {\n                                    if (targetWall.getDigPositions().some((p) => rockyPos.distanceToSquared(p) <= ROCKY_GATHER_DISTANCE_SQ)) {\n                                        sceneEntity.lookAt(this.worldMgr.sceneMgr.getFloorPosition(targetWall.getCenterWorld2D()))\n                                        behaviorComponent.state = ROCK_MONSTER_BEHAVIOR_STATE.gather\n                                        sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.gather, () => {\n                                            sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.standCarry)\n                                            behaviorComponent.boulder = ResourceManager.getLwoModel(GameConfig.instance.miscObjects.boulder)\n                                            if (!behaviorComponent.boulder) throw new Error(`Cannot spawn boulder missing mesh \"${GameConfig.instance.miscObjects.boulder}\"`)\n                                            const boulderTexture = ResourceManager.getTexture('Creatures/RMonster/greyrock.bmp') // XXX Read boulder texture from config?\n                                            if (boulderTexture) behaviorComponent.boulder.material.forEach((m) => m.map = boulderTexture)\n                                            sceneEntity.pickupEntity(behaviorComponent.boulder)\n                                            behaviorComponent.changeToIdle()\n                                        })\n                                    } else {\n                                        const wallPathTargets = targetWall.getDigPositions().map((p) => PathTarget.fromLocation(p, ROCKY_GATHER_DISTANCE_SQ))\n                                        const path = pathFinder.findShortestPath(rockyPos, wallPathTargets, stats, 1)\n                                        if (path && path.locations.length > 0) {\n                                            const targetLocation = path.locations[0]\n                                            this.ecs.addComponent(entity, new WorldTargetComponent(targetLocation, ROCKY_GATHER_DISTANCE_SQ))\n                                            this.ecs.addComponent(entity, new HeadingComponent(targetLocation))\n                                        } else {\n                                            behaviorComponent.changeToIdle()\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        break\n                    case ROCK_MONSTER_BEHAVIOR_STATE.goHome:\n                        if (!targetWall || targetWall.wallType !== WALL_TYPE.wall) {\n                            behaviorComponent.targetWall = this.worldMgr.sceneMgr.terrain.findClosestWall(rockyPos)\n                        } else if (!components.has(WorldTargetComponent)) {\n                            if (targetWall.getDigPositions().some((p) => rockyPos.distanceToSquared(p) <= ROCKY_GATHER_DISTANCE_SQ)) {\n                                sceneEntity.lookAt(this.worldMgr.sceneMgr.getFloorPosition(targetWall.getCenterWorld2D()))\n                                this.worldMgr.entityMgr.removeEntity(entity)\n                                sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.enter, () => {\n                                    GameState.totalCrystals -= behaviorComponent.numCrystalsEaten\n                                    EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_MONSTER_GONE, positionComponent))\n                                    EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.monster, entity, MAP_MARKER_CHANGE.remove))\n                                    this.worldMgr.sceneMgr.disposeSceneEntity(sceneEntity)\n                                    this.ecs.removeEntity(entity)\n                                })\n                            } else {\n                                const wallPathTargets = targetWall.getDigPositions().map((p) => PathTarget.fromLocation(p, ROCKY_GATHER_DISTANCE_SQ))\n                                const path = pathFinder.findShortestPath(rockyPos, wallPathTargets, stats, 1)\n                                if (path && path.locations.length > 0) {\n                                    const targetLocation = path.locations[0]\n                                    this.ecs.addComponent(entity, new WorldTargetComponent(targetLocation, ROCKY_GATHER_DISTANCE_SQ))\n                                    this.ecs.addComponent(entity, new HeadingComponent(targetLocation))\n                                } else {\n                                    behaviorComponent.changeToIdle()\n                                }\n                            }\n                        }\n                        break\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n\n    private doIdle(behaviorComponent: RockMonsterBehaviorComponent, pathFinder: PathFinder, rockyPos: Vector2, stats: MonsterEntityStats, entity: number, crystals: MaterialEntity[]) {\n        if (behaviorComponent.boulder) {\n            behaviorComponent.state = ROCK_MONSTER_BEHAVIOR_STATE.boulderAttack\n        } else if (behaviorComponent.numCrystalsEaten < stats.capacity && crystals.length > 0) {\n            const closestCrystal = pathFinder.findClosestObj(rockyPos, crystals, stats, 1)\n            if (closestCrystal) {\n                behaviorComponent.state = ROCK_MONSTER_BEHAVIOR_STATE.gotoCrystal\n                behaviorComponent.targetCrystal = closestCrystal.obj\n            } else {\n                behaviorComponent.state = PRNG.movement.random() < 0.2 ? ROCK_MONSTER_BEHAVIOR_STATE.boulderAttack : ROCK_MONSTER_BEHAVIOR_STATE.meleeAttack\n            }\n        } else if (GameState.monsterCongregation && GameState.monsterCongregation.distanceToSquared(rockyPos) > TILESIZE) {\n            const path = pathFinder.findShortestPath(rockyPos, [PathTarget.fromLocation(GameState.monsterCongregation)], stats, 1)\n            if (path && path.locations.length > 0) {\n                const targetLocation = path.locations[0]\n                this.ecs.addComponent(entity, new WorldTargetComponent(targetLocation, 1))\n                this.ecs.addComponent(entity, new HeadingComponent(targetLocation))\n                return\n            }\n        } else {\n            behaviorComponent.state = PRNG.movement.random() < 0.2 ? ROCK_MONSTER_BEHAVIOR_STATE.boulderAttack : ROCK_MONSTER_BEHAVIOR_STATE.meleeAttack\n        }\n    }\n\n    private punchVehicle(behaviorComponent: RockMonsterBehaviorComponent, entity: number, sceneEntity: AnimatedSceneEntity, vehicleInMeleeRange: VehicleTarget, rockyPos: Vector2, stats: MonsterEntityStats) {\n        const prevState = behaviorComponent.state\n        this.ecs.removeComponent(entity, WorldTargetComponent)\n        this.ecs.removeComponent(entity, HeadingComponent)\n        sceneEntity.lookAt(this.worldMgr.sceneMgr.getFloorPosition(vehicleInMeleeRange.position.getPosition2D()))\n        behaviorComponent.state = ROCK_MONSTER_BEHAVIOR_STATE.punch\n        sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.punch, () => {\n            sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n            behaviorComponent.state = prevState\n        }, 0, () => {\n            if (vehicleInMeleeRange.position.getPosition2D().distanceToSquared(rockyPos) < ROCKY_MELEE_ATTACK_DISTANCE_SQ) {\n                const vehicleComponents = this.ecs.getComponents(vehicleInMeleeRange.entity)\n                const healthComponent = vehicleComponents.get(HealthComponent)\n                healthComponent.changeHealth(stats.repairValue)\n                if (healthComponent.triggerAlarm) EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_UNDER_ATTACK, vehicleComponents.get(PositionComponent)))\n            }\n        })\n    }\n\n    private throwRaider(behaviorComponent: RockMonsterBehaviorComponent, entity: GameEntity, sceneEntity: AnimatedSceneEntity, raider: Raider, positionComponent: PositionComponent) {\n        const prevState = behaviorComponent.state\n        this.ecs.removeComponent(entity, WorldTargetComponent)\n        this.ecs.removeComponent(entity, HeadingComponent)\n        behaviorComponent.state = ROCK_MONSTER_BEHAVIOR_STATE.throwMan\n        const prevScale = raider.sceneEntity.getWorldScale(new Vector3())\n        sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.throwMan, () => {\n            raider.sceneEntity.getWorldPosition(raider.sceneEntity.position)\n            raider.sceneEntity.rotation.copy(sceneEntity.rotation)\n            const raiderPositionComponent = this.ecs.getComponents(raider.entity).get(PositionComponent)\n            raiderPositionComponent.position.copy(raider.sceneEntity.position)\n            raiderPositionComponent.surface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld(raiderPositionComponent.position)\n            raiderPositionComponent.markDirty()\n            sceneEntity.depositParent?.remove(raider.sceneEntity)\n            this.worldMgr.sceneMgr.addSceneEntity(raider.sceneEntity)\n            raider.sceneEntity.scale.copy(prevScale)\n            sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n            behaviorComponent.state = prevState\n            sceneEntity.position.add(new Vector3(0, 0, TILESIZE / 2).applyEuler(sceneEntity.rotation))\n            positionComponent.position.copy(sceneEntity.position)\n            positionComponent.surface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld(positionComponent.position)\n            positionComponent.markDirty()\n        })\n        raider.thrown = true\n        raider.dropCarried(true)\n        raider.stopJob()\n        raider.sceneEntity.setAnimation(RAIDER_ACTIVITY.thrown, () => {\n            raider.sceneEntity.setAnimation(RAIDER_ACTIVITY.getUp, () => {\n                raider.thrown = false\n                raider.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n            })\n        })\n        raider.sceneEntity.position.copy(new Vector3(0, 0, 4)) // XXX Why is this offset needed?\n        raider.sceneEntity.rotation.copy(new Euler(0, Math.PI, 0)) // XXX Why is this rotation needed?\n        sceneEntity.depositParent?.add(raider.sceneEntity)\n        const parentScale = new Vector3(1, 1, 1)\n        raider.sceneEntity.parent?.getWorldScale(parentScale)\n        raider.sceneEntity.scale.set(1 / parentScale.x, 1 / parentScale.y, 1 / parentScale.z)\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { HealthComponent } from '../component/HealthComponent'\nimport { WorldManager } from '../WorldManager'\nimport { MonsterStatsComponent } from '../component/MonsterStatsComponent'\nimport { TILESIZE } from '../../params'\nimport { RockMonsterBehaviorComponent } from '../component/RockMonsterBehaviorComponent'\nimport { Surface } from '../terrain/Surface'\nimport { Vector2, Vector3 } from 'three'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { EventBroker } from '../../event/EventBroker'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { PRNG } from '../factory/PRNG'\n\nconst FENCE_RANGE_SQ = TILESIZE / 4 * TILESIZE / 4\n\nexport class ElectricFenceSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([PositionComponent, HealthComponent, MonsterStatsComponent, RockMonsterBehaviorComponent])\n    beamDelayMs: number = 0\n\n    constructor(readonly worldMgr: WorldManager) {\n        super()\n        EventBroker.subscribe(EventKey.LEVEL_SELECTED, () => {\n            this.beamDelayMs = 0\n        })\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        const fenceProtectedSurfaces = this.getFenceProtectedSurfaces()\n        const studProtectedSurfaces = this.getStudProtectedSurfaces(fenceProtectedSurfaces)\n        if (this.beamDelayMs > 0) {\n            this.beamDelayMs -= elapsedMs\n        } else {\n            this.addBeamEffect(studProtectedSurfaces)\n        }\n        fenceProtectedSurfaces.add(...studProtectedSurfaces)\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                if (!components.get(MonsterStatsComponent).stats.canBeHitByFence) continue\n                const positionComponent = components.get(PositionComponent)\n                fenceProtectedSurfaces.forEach((f) => {\n                    if (f.getCenterWorld2D().distanceToSquared(positionComponent.getPosition2D()) >= FENCE_RANGE_SQ) return\n                    components.get(HealthComponent).changeHealth(-100)\n                    if (!f.fence) {\n                        if (this.worldMgr.sceneMgr.terrain.getSurface(f.x - 1, f.y).fence && this.worldMgr.sceneMgr.terrain.getSurface(f.x + 1, f.y).fence) {\n                            this.addBeamX(f.getCenterWorld(), false)\n                        } else {\n                            this.addBeamZ(f.getCenterWorld(), false)\n                        }\n                    }\n                })\n            } catch\n                (e) {\n                console.error(e)\n            }\n        }\n    }\n\n    private addBeamX(beamPos: Vector3, short: boolean) {\n        beamPos.x -= TILESIZE\n        const lwsFilename = short ? GameConfig.instance.miscObjects.shortElectricFenceBeam : GameConfig.instance.miscObjects.longElectricFenceBeam\n        this.worldMgr.sceneMgr.addMiscAnim(lwsFilename, beamPos, Math.PI / 2, false)\n    }\n\n    private addBeamZ(beamPos: Vector3, short: boolean) {\n        beamPos.z -= TILESIZE\n        const lwsFilename = short ? GameConfig.instance.miscObjects.shortElectricFenceBeam : GameConfig.instance.miscObjects.longElectricFenceBeam\n        this.worldMgr.sceneMgr.addMiscAnim(lwsFilename, beamPos, 0, false)\n    }\n\n    private getFenceProtectedSurfaces(): Surface[] {\n        const fenceProtectedSurfaces: Surface[] = []\n        const energizedBuildingSurfaces = this.worldMgr.entityMgr.buildings.filter((b) => b.energized)\n            .flatMap((b) => b.buildingSurfaces)\n        const toCheck = this.worldMgr.entityMgr.placedFences\n            .map((f) => this.ecs.getComponents(f.entity).get(PositionComponent))\n        energizedBuildingSurfaces.forEach((s) => {\n            [[2, 0], [1, 0], [0, 2], [0, 1], [-2, 0], [-1, 0], [0, -2], [0, -1]].forEach((o) => {\n                const next = this.worldMgr.sceneMgr.terrain.getSurface(s.x + o[0], s.y + o[1])\n                if (next.fence) {\n                    const positionComponent = this.ecs.getComponents(next.fence).get(PositionComponent)\n                    toCheck.remove(positionComponent)\n                    fenceProtectedSurfaces.add(positionComponent.surface)\n                }\n            })\n        })\n        let changed = fenceProtectedSurfaces.length > 0\n        while (changed) {\n            changed = toCheck.some((positionComponent) => {\n                return fenceProtectedSurfaces.some((activeSurface) => {\n                    const distance = Math.abs(activeSurface.x - positionComponent.surface.x) + Math.abs(activeSurface.y - positionComponent.surface.y)\n                    if (distance <= 2) {\n                        toCheck.remove(positionComponent)\n                        fenceProtectedSurfaces.add(positionComponent.surface)\n                        return true\n                    }\n                    return false\n                })\n            })\n        }\n        return fenceProtectedSurfaces\n    }\n\n    private getStudProtectedSurfaces(fenceProtectedSurfaces: Surface[]): Surface[] {\n        const studPositions: Surface[] = []\n        const toAdd: Surface[] = []\n        fenceProtectedSurfaces.forEach((origin) => {\n            origin.neighbors.forEach((possibleStud) => {\n                if (!possibleStud.fence && !possibleStud.building && !studPositions.includes(possibleStud) &&\n                    possibleStud.neighbors.some((target) => target !== origin && (target.x === origin.x || target.y === origin.y) &&\n                        ((target.fence && fenceProtectedSurfaces.includes(target)) ||\n                            (target.energized && (target === target.building?.primarySurface || target === target.building?.secondarySurface))))\n                ) {\n                    studPositions.add(possibleStud)\n                    if (!possibleStud.stud) toAdd.add(possibleStud)\n                }\n            })\n        })\n        ;[...this.worldMgr.entityMgr.surfacesWithStuds].forEach((s) => {\n            if (!studPositions.includes(s)) {\n                this.worldMgr.entityMgr.surfacesWithStuds.remove(s)\n                if (s.stud) this.worldMgr.sceneMgr.disposeSceneEntity(s.stud)\n                s.stud = undefined\n            }\n        })\n        toAdd.forEach((s) => {\n            s.stud = this.worldMgr.sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.electricFenceStud, s.getCenterWorld(), 0, true)\n            this.worldMgr.entityMgr.surfacesWithStuds.add(s)\n        })\n        return studPositions\n    }\n\n    addBeamEffect(studProtectedSurfaces: Surface[]) {\n        const longBeams = studProtectedSurfaces.map((surface) => {\n            const lwsFilename = GameConfig.instance.miscObjects.longElectricFenceBeam\n            const beamPos = surface.getCenterWorld()\n            const surfaceLeft = this.worldMgr.sceneMgr.terrain.getSurface(surface.x - 1, surface.y)\n            const surfaceRight = this.worldMgr.sceneMgr.terrain.getSurface(surface.x + 1, surface.y)\n            let beamHeading = 0\n            if ((surfaceLeft.fence || surfaceLeft.building) && (surfaceRight.fence || surfaceRight.building)) {\n                beamPos.x -= TILESIZE\n                beamHeading = Math.PI / 2\n            } else {\n                beamPos.z -= TILESIZE\n            }\n            return {lwsFilename, beamPos, beamHeading}\n        })\n        const shortBeams: { lwsFilename: string, beamPos: Vector3, beamHeading: number }[] = []\n        this.worldMgr.entityMgr.placedFences.forEach((fence) => {\n            const components = this.ecs.getComponents(fence.entity)\n            const fenceSurface = components.get(PositionComponent).surface\n            const neighbors = fenceSurface.neighbors.filter((n) => !!n.fence || n.building?.primarySurface === n || n.building?.secondarySurface === n)\n            neighbors.forEach((n) => {\n                const beamHeading = new Vector2(n.y - fenceSurface.y, n.x - fenceSurface.x).angle() // y is actually z axis here\n                shortBeams.push({lwsFilename: GameConfig.instance.miscObjects.shortElectricFenceBeam, beamPos: fenceSurface.getCenterWorld(), beamHeading})\n            })\n        })\n        const nextBeam = PRNG.animation.sample([...longBeams, ...shortBeams])\n        if (!nextBeam) return\n        this.beamDelayMs += PRNG.animation.randInt(4000)\n        this.worldMgr.sceneMgr.addMiscAnim(nextBeam.lwsFilename, nextBeam.beamPos, nextBeam.beamHeading, false)\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { HealthComponent } from '../component/HealthComponent'\nimport { LastWillComponent } from '../component/LastWillComponent'\nimport { SelectionFrameComponent } from '../component/SelectionFrameComponent'\nimport { SelectionChanged } from '../../event/LocalEvents'\nimport { WorldManager } from '../WorldManager'\nimport { EventBroker } from '../../event/EventBroker'\n\nexport class DeathSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([HealthComponent, LastWillComponent])\n    readonly dirtyComponents: Set<Function> = new Set([HealthComponent])\n\n    constructor(readonly worldMgr: WorldManager) {\n        super()\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        for (const entity of dirty) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const healthComponent = components.get(HealthComponent)\n                if (healthComponent.health <= 0) {\n                    const selectionFrameComponent = components.get(SelectionFrameComponent)\n                    this.ecs.removeComponent(entity, SelectionFrameComponent)\n                    components.get(LastWillComponent).onDeath()\n                    this.ecs.removeComponent(entity, LastWillComponent)\n                    if (selectionFrameComponent?.isSelected()) {\n                        if (this.worldMgr.entityMgr.selection.building?.entity === entity) {\n                            this.worldMgr.entityMgr.selection.building = undefined\n                        }\n                        this.worldMgr.entityMgr.selection.raiders.removeAll((v) => v.entity === entity)\n                        this.worldMgr.entityMgr.selection.vehicles.removeAll((v) => v.entity === entity)\n                        if (this.worldMgr.entityMgr.selection.fence?.entity === entity) {\n                            this.worldMgr.entityMgr.selection.fence = undefined\n                        }\n                        selectionFrameComponent.deselect()\n                        EventBroker.publish(new SelectionChanged(this.worldMgr.entityMgr))\n                    }\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n}\n","import { RaiderJob } from './RaiderJob'\nimport { JobFulfiller } from '../Job'\nimport { PathTarget } from '../../PathTarget'\nimport { BubblesCfg } from '../../../../cfg/BubblesCfg'\nimport { Vector2 } from 'three'\nimport { Raider } from '../../raider/Raider'\n\nexport class RunPanicJob extends RaiderJob {\n    runTarget: PathTarget\n\n    constructor(runTarget: Vector2) {\n        super()\n        this.runTarget = PathTarget.fromLocation(runTarget)\n    }\n\n    getWorkplace(entity: JobFulfiller): PathTarget | undefined {\n        return this.runTarget\n    }\n\n    getJobBubble(): keyof BubblesCfg {\n        return 'bubbleFlee'\n    }\n\n    unAssign(raider: Raider) {\n        super.unAssign(raider)\n        if (this.raider) this.raider.scared = false\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { RaiderScareComponent } from '../component/RaiderScareComponent'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { WorldManager } from '../WorldManager'\nimport { RunPanicJob } from '../model/job/raider/RunPanicJob'\nimport { EventBroker } from '../../event/EventBroker'\nimport { SelectionChanged } from '../../event/LocalEvents'\n\nexport class RaiderScareSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([PositionComponent, RaiderScareComponent])\n\n    constructor(readonly worldMgr: WorldManager) {\n        super()\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const positionComponent = components.get(PositionComponent)\n                const scareComponent = components.get(RaiderScareComponent)\n                let selectionChanged: boolean = false\n                this.worldMgr.entityMgr.raiders.forEach((r) => {\n                    if (!r.canBeScared()) return\n                    const raiderPos = this.ecs.getComponents(r.entity).get(PositionComponent)\n                    const distanceSq = raiderPos.getPosition2D().distanceToSquared(positionComponent.getPosition2D())\n                    if (distanceSq >= scareComponent.scareRadiusSq) return\n                    r.scared = true\n                    if (r.selected) {\n                        r.deselect()\n                        this.worldMgr.entityMgr.selection.raiders.remove(r)\n                        selectionChanged = true\n                    }\n                    r.dropCarried(true)\n                    const scareNeighbors = positionComponent.surface.neighbors\n                    const safeNeighbors = raiderPos.surface.neighbors.filter((s) => s !== positionComponent.surface && !scareNeighbors.includes(s))\n                    const runTarget = ([...safeNeighbors, ...scareNeighbors].find((s) => s.isWalkable()) ?? raiderPos.surface).getRandomPosition()\n                    r.setJob(new RunPanicJob(runTarget))\n                })\n                if (selectionChanged) EventBroker.publish(new SelectionChanged(this.worldMgr.entityMgr))\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { SLUG_BEHAVIOR_STATE, SlugBehaviorComponent } from '../component/SlugBehaviorComponent'\nimport { WorldManager } from '../WorldManager'\nimport { MonsterStatsComponent } from '../component/MonsterStatsComponent'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { WorldTargetComponent } from '../component/WorldTargetComponent'\nimport { PathTarget } from '../model/PathTarget'\nimport { AnimatedSceneEntityComponent } from '../component/AnimatedSceneEntityComponent'\nimport { ANIM_ENTITY_ACTIVITY, SLUG_ACTIVITY } from '../model/anim/AnimationActivity'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { GameState } from '../model/GameState'\nimport { MaterialAmountChanged, WorldLocationEvent } from '../../event/WorldEvents'\nimport { SLUG_MAX_IDLE_TIME, SLUG_SUCK_TIME } from '../../params'\nimport { AnimatedSceneEntity } from '../../scene/AnimatedSceneEntity'\nimport { MaterialSpawner } from '../factory/MaterialSpawner'\nimport { EntityType } from '../model/EntityType'\nimport { EntityFrozenComponent } from '../component/EntityFrozenComponent'\nimport { EntityPushedComponent } from '../component/EntityPushedComponent'\nimport { HeadingComponent } from '../component/HeadingComponent'\nimport { EventBroker } from '../../event/EventBroker'\nimport { PRNG } from '../factory/PRNG'\nimport { UpdateRadarEntityEvent } from '../../event/LocalEvents'\nimport { MAP_MARKER_CHANGE, MAP_MARKER_TYPE } from '../component/MapMarkerComponent'\n\nconst SLUG_SUCK_DISTANCE_SQ = 25 * 25\nconst SLUG_ENTER_DISTANCE_SQ = 5 * 5\n\nexport class SlugBehaviorSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([SlugBehaviorComponent, MonsterStatsComponent])\n\n    constructor(readonly worldMgr: WorldManager) {\n        super()\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        const pathFinder = this.worldMgr.sceneMgr.terrain?.pathFinder\n        const scarerPositions = this.worldMgr.entityMgr.birdScarer.map((b) => this.ecs.getComponents(b).get(PositionComponent))\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const behaviorComponent = components.get(SlugBehaviorComponent)\n                const positionComponent = components.get(PositionComponent)\n                const sceneEntity = components.get(AnimatedSceneEntityComponent).sceneEntity\n                if (components.has(EntityFrozenComponent) || components.has(EntityPushedComponent)) {\n                    this.changeToIdle(sceneEntity, behaviorComponent)\n                    continue\n                }\n                const stats = components.get(MonsterStatsComponent).stats\n                const slugPos = positionComponent.getPosition2D()\n                switch (behaviorComponent.state) {\n                    case SLUG_BEHAVIOR_STATE.idle:\n                        if (behaviorComponent.targetBuilding) {\n                            behaviorComponent.state = SLUG_BEHAVIOR_STATE.leech\n                        } else if (behaviorComponent.energyLeeched) {\n                            behaviorComponent.state = SLUG_BEHAVIOR_STATE.goEnter\n                        } else if (behaviorComponent.idleTimer > SLUG_MAX_IDLE_TIME) {\n                            behaviorComponent.state = SLUG_BEHAVIOR_STATE.goEnter\n                        } else if (!components.has(WorldTargetComponent)) {\n                            behaviorComponent.idleTimer += elapsedMs\n                            const energizedBuildings = this.worldMgr.entityMgr.buildings.filter((b) => b.energized && b.getPosition2D().distanceToSquared(slugPos) < Math.pow(stats.attackRadius, 2))\n                            const closestBuilding = pathFinder.findClosestBuilding(slugPos, energizedBuildings, stats, 1)\n                            if (closestBuilding) {\n                                behaviorComponent.state = SLUG_BEHAVIOR_STATE.leech\n                                behaviorComponent.targetBuilding = closestBuilding.obj\n                            } else {\n                                const randomTarget = PRNG.movement.sample([positionComponent.surface, ...positionComponent.surface.neighbors.filter((n) => n.isWalkable())]).getRandomPosition()\n                                this.ecs.addComponent(entity, new WorldTargetComponent(randomTarget, SLUG_ENTER_DISTANCE_SQ))\n                                this.ecs.addComponent(entity, new HeadingComponent(randomTarget))\n                            }\n                        }\n                        break\n                    case SLUG_BEHAVIOR_STATE.leech:\n                        if (!behaviorComponent.targetBuilding?.energized) {\n                            this.ecs.removeComponent(entity, WorldTargetComponent)\n                            this.worldMgr.ecs.removeComponent(entity, HeadingComponent)\n                            this.changeToIdle(sceneEntity, behaviorComponent)\n                        } else {\n                            const scarerInRange = scarerPositions.find((pos) => pos.getPosition2D().distanceToSquared(slugPos) < stats.alertRadius)\n                            if (scarerInRange) {\n                                this.ecs.removeComponent(entity, WorldTargetComponent)\n                                this.worldMgr.ecs.removeComponent(entity, HeadingComponent)\n                                this.changeToIdle(sceneEntity, behaviorComponent)\n                                const safeNeighbors = scarerInRange.surface.neighbors.filter((s) => s !== scarerInRange.surface)\n                                const safePos = (safeNeighbors.find((s) => s.isWalkable()) || scarerInRange.surface).getRandomPosition()\n                                this.ecs.addComponent(entity, new WorldTargetComponent(safePos, SLUG_ENTER_DISTANCE_SQ))\n                                this.ecs.addComponent(entity, new HeadingComponent(safePos))\n                            } else {\n                                const targetSurface = behaviorComponent.targetBuilding.buildingSurfaces.find((s) => s.getCenterWorld2D().distanceToSquared(slugPos) <= SLUG_SUCK_DISTANCE_SQ)\n                                if (targetSurface) {\n                                    if (components.has(WorldTargetComponent)) {\n                                        sceneEntity.headTowards(targetSurface.getCenterWorld2D())\n                                        this.ecs.removeComponent(entity, WorldTargetComponent)\n                                        this.worldMgr.ecs.removeComponent(entity, HeadingComponent)\n                                        EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_POWER_DRAIN, new PositionComponent(positionComponent.position, positionComponent.surface)))\n                                    }\n                                    sceneEntity.setAnimation(SLUG_ACTIVITY.suck, () => {\n                                        GameState.numCrystal--\n                                        EventBroker.publish(new MaterialAmountChanged())\n                                        MaterialSpawner.spawnMaterial(this.worldMgr, EntityType.DEPLETED_CRYSTAL, positionComponent.getPosition2D())\n                                        behaviorComponent.state = SLUG_BEHAVIOR_STATE.goEnter\n                                        behaviorComponent.energyLeeched = true\n                                    }, SLUG_SUCK_TIME)\n                                } else if (!components.has(WorldTargetComponent)) {\n                                    const buildingPathTargets = behaviorComponent.targetBuilding.getTrainingTargets()\n                                    const path = pathFinder.findShortestPath(slugPos, buildingPathTargets, stats, 1)\n                                    if (path && path.locations.length > 0) {\n                                        const targetLocation = path.locations[0]\n                                        this.ecs.addComponent(entity, new WorldTargetComponent(targetLocation))\n                                        this.ecs.addComponent(entity, new HeadingComponent(targetLocation))\n                                    } else {\n                                        console.warn('Slug cannot find path to targets', buildingPathTargets)\n                                        this.ecs.removeComponent(entity, WorldTargetComponent)\n                                        this.worldMgr.ecs.removeComponent(entity, HeadingComponent)\n                                        this.changeToIdle(sceneEntity, behaviorComponent)\n                                    }\n                                }\n                            }\n                        }\n                        break\n                    case SLUG_BEHAVIOR_STATE.goEnter:\n                        if (!behaviorComponent.targetEnter) {\n                            const enterTargets = this.worldMgr.sceneMgr.terrain.slugHoles.map((h) => PathTarget.fromLocation(h.getRandomPosition(), SLUG_ENTER_DISTANCE_SQ))\n                            const path = pathFinder.findShortestPath(positionComponent.getPosition2D(), enterTargets, stats, 1)\n                            if (path && path.locations.length > 0) {\n                                behaviorComponent.targetEnter = path.target\n                            } else {\n                                const randomTarget = PRNG.movement.sample([positionComponent.surface, ...positionComponent.surface.neighbors.filter((n) => n.isWalkable())]).getRandomPosition()\n                                this.ecs.addComponent(entity, new WorldTargetComponent(randomTarget, SLUG_ENTER_DISTANCE_SQ))\n                                this.ecs.addComponent(entity, new HeadingComponent(randomTarget))\n                            }\n                        } else if (behaviorComponent.targetEnter.targetLocation.distanceToSquared(slugPos) <= SLUG_ENTER_DISTANCE_SQ) {\n                            this.worldMgr.entityMgr.removeEntity(entity)\n                            sceneEntity.setAnimation(SLUG_ACTIVITY.enter, () => {\n                                EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_SLUG_GONE, positionComponent))\n                                EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.monster, entity, MAP_MARKER_CHANGE.remove))\n                                this.worldMgr.sceneMgr.disposeSceneEntity(sceneEntity)\n                                this.ecs.removeEntity(entity)\n                            })\n                        } else if (!components.has(WorldTargetComponent)) {\n                            const path = pathFinder.findShortestPath(slugPos, behaviorComponent.targetEnter, stats, 1)\n                            if (path && path.locations.length > 0) {\n                                const targetLocation = path.locations[0]\n                                this.ecs.addComponent(entity, new WorldTargetComponent(targetLocation, SLUG_ENTER_DISTANCE_SQ))\n                                this.ecs.addComponent(entity, new HeadingComponent(targetLocation))\n                            } else {\n                                const randomTarget = PRNG.movement.sample([positionComponent.surface, ...positionComponent.surface.neighbors.filter((n) => n.isWalkable())]).getRandomPosition()\n                                this.ecs.addComponent(entity, new WorldTargetComponent(randomTarget, SLUG_ENTER_DISTANCE_SQ))\n                                this.ecs.addComponent(entity, new HeadingComponent(randomTarget))\n                            }\n                        }\n                        break\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n\n    private changeToIdle(sceneEntity: AnimatedSceneEntity, behaviorComponent: SlugBehaviorComponent) {\n        if (behaviorComponent.state === SLUG_BEHAVIOR_STATE.emerge) return\n        sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n        behaviorComponent.targetBuilding = undefined\n        behaviorComponent.targetEnter = undefined\n        behaviorComponent.state = SLUG_BEHAVIOR_STATE.idle\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { ScannerComponent } from '../component/ScannerComponent'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { UpdateRadarEntityEvent, UpdateRadarTerrain } from '../../event/LocalEvents'\nimport { WorldManager } from '../WorldManager'\nimport { MAP_MARKER_CHANGE, MAP_MARKER_TYPE } from '../component/MapMarkerComponent'\nimport { EventBroker } from '../../event/EventBroker'\n\nexport class TerrainScannerSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([ScannerComponent, PositionComponent])\n\n    constructor(readonly worldMgr: WorldManager) {\n        super()\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        let scanned = false\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const scannerComponent = components.get(ScannerComponent)\n                const positionComponent = components.get(PositionComponent)\n                if (scannerComponent.scanDelay > 0) {\n                    scannerComponent.scanDelay -= elapsedMs\n                    const radius = (1 - (scannerComponent.scanDelay % 1000) / 1000) * (scannerComponent.range - 0.5)\n                    EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.scanner, entity, MAP_MARKER_CHANGE.update, positionComponent.position, radius))\n                } else {\n                    scannerComponent.scanDelay = 5000\n                    const origin = positionComponent.surface\n                    for (let dx = -scannerComponent.range - 1; dx <= scannerComponent.range; dx++) {\n                        for (let dy = -scannerComponent.range - 1; dy <= scannerComponent.range; dy++) {\n                            if (dx === 0 && dy === 0) continue\n                            const neighbor = this.worldMgr.sceneMgr.terrain.getSurface(origin.x + dx, origin.y + dy)\n                            if (!neighbor.scanned && origin.getCenterWorld2D().distanceToSquared(neighbor.getCenterWorld2D()) < scannerComponent.rangeSQ) {\n                                neighbor.scanned = true\n                                scanned = true\n                            }\n                        }\n                    }\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        }\n        if (scanned) EventBroker.publish(new UpdateRadarTerrain(this.worldMgr.sceneMgr.terrain))\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { BulletComponent } from '../component/BulletComponent'\nimport { WorldManager } from '../WorldManager'\nimport { Vector2 } from 'three'\nimport { EntityType } from '../model/EntityType'\nimport { MonsterStatsComponent } from '../component/MonsterStatsComponent'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { HealthComponent } from '../component/HealthComponent'\nimport { EntityFrozenComponent } from '../component/EntityFrozenComponent'\nimport { AnimatedSceneEntityComponent } from '../component/AnimatedSceneEntityComponent'\nimport { EntityPushedComponent } from '../component/EntityPushedComponent'\nimport { WorldTargetComponent } from '../component/WorldTargetComponent'\nimport { HeadingComponent } from '../component/HeadingComponent'\nimport { GameConfig } from '../../cfg/GameConfig'\n\nexport class BulletSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([BulletComponent])\n\n    constructor(readonly worldMgr: WorldManager) {\n        super()\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        const targets = [...this.worldMgr.entityMgr.rockMonsters, ...this.worldMgr.entityMgr.slugs]\n            .map((e) => {\n                const components = this.ecs.getComponents(e)\n                return {\n                    entity: e,\n                    stats: components.get(MonsterStatsComponent)?.stats,\n                    pos: components.get(PositionComponent),\n                    health: components.get(HealthComponent),\n                    heading: components.get(AnimatedSceneEntityComponent).sceneEntity.rotation.y,\n                }\n            }).filter((t) => !!t.stats && !!t.pos && !!t.health && t.health.health > 0)\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const bulletComponent = components.get(BulletComponent)\n                const location = new Vector2(bulletComponent.bulletAnim.position.x, bulletComponent.bulletAnim.position.z)\n                if (bulletComponent.targetLocation.distanceToSquared(location) > 1) {\n                    const step = bulletComponent.targetLocation.clone().sub(location).clampLength(0, elapsedMs / 10)\n                    bulletComponent.bulletAnim.position.x += step.x\n                    bulletComponent.bulletAnim.position.z += step.y\n                    targets.some((t) => {\n                        const targetStats = t.stats\n                        if (!targetStats.canBeShotAt) return false\n                        const targetLocation = t.pos.getPosition2D()\n                        const bulletPos = bulletComponent.bulletAnim.position\n                        const bulletLocation = new Vector2(bulletPos.x, bulletPos.z)\n                        if (targetLocation.distanceToSquared(bulletLocation) >= Math.pow(targetStats.collRadius, 2)) return false\n                        if (bulletComponent.bulletType === EntityType.LASER_SHOT) {\n                            this.worldMgr.sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.lazerHit, t.pos.position, 0, false)\n                            t.health.changeHealth(-targetStats.laserDamage)\n                        } else if (bulletComponent.bulletType === EntityType.FREEZER_SHOT) {\n                            this.worldMgr.sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.freezerHit, t.pos.position, 0, false)\n                            t.health.changeHealth(-targetStats.freezerDamage)\n                            if (targetStats.canFreeze && !this.ecs.getComponents(t.entity).has(EntityFrozenComponent)) {\n                                const entityFrozenComponent = new EntityFrozenComponent(this.worldMgr, t.entity, targetStats.freezerTimeMs, t.pos.position, t.heading)\n                                this.ecs.removeComponent(t.entity, WorldTargetComponent)\n                                this.ecs.removeComponent(t.entity, HeadingComponent)\n                                this.ecs.addComponent(t.entity, entityFrozenComponent)\n                            }\n                        } else if (bulletComponent.bulletType === EntityType.PUSHER_SHOT) {\n                            this.worldMgr.sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.pusherHit, t.pos.position, 0, false)\n                            t.health.changeHealth(-targetStats.pusherDamage)\n                            if (targetStats.canPush && !this.ecs.getComponents(t.entity).has(EntityPushedComponent)) {\n                                this.ecs.removeComponent(t.entity, WorldTargetComponent)\n                                this.ecs.removeComponent(t.entity, HeadingComponent)\n                                const pushTarget = t.pos.getPosition2D().add(step.clone().setLength(t.stats.pusherDist))\n                                this.ecs.addComponent(t.entity, new WorldTargetComponent(pushTarget, 1))\n                                this.ecs.addComponent(t.entity, new EntityPushedComponent())\n                            }\n                        }\n                        this.worldMgr.entityMgr.removeEntity(entity)\n                        this.worldMgr.sceneMgr.disposeSceneEntity(bulletComponent.bulletAnim)\n                        this.ecs.removeEntity(entity)\n                        return true\n                    })\n                } else {\n                    this.worldMgr.entityMgr.removeEntity(entity)\n                    this.worldMgr.sceneMgr.disposeSceneEntity(bulletComponent.bulletAnim)\n                    this.ecs.removeEntity(entity)\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { BoulderComponent } from '../component/BoulderComponent'\nimport { Vector2 } from 'three'\nimport { HealthComponent } from '../component/HealthComponent'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { WorldLocationEvent } from '../../event/WorldEvents'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { EntityType } from '../model/EntityType'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { EventBroker } from '../../event/EventBroker'\nimport { WorldManager } from '../WorldManager'\nimport { WeaponTypeCfg } from '../../cfg/WeaponTypeCfg'\n\nexport class BoulderSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([BoulderComponent])\n    readonly boulderStats: WeaponTypeCfg\n\n    constructor(readonly worldMgr: WorldManager) {\n        super()\n        this.boulderStats = GameConfig.instance.weaponTypes.boulder\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const boulderComponent = components.get(BoulderComponent)\n                const location = new Vector2(boulderComponent.mesh.position.x, boulderComponent.mesh.position.z)\n                if (boulderComponent.targetLocation.distanceToSquared(location) > 1) {\n                    const step = boulderComponent.targetLocation.clone().sub(location).clampLength(0, elapsedMs / 10)\n                    boulderComponent.mesh.position.x += step.x\n                    boulderComponent.mesh.position.z += step.y\n                } else {\n                    const boulderExplode = boulderComponent.entityType === EntityType.BOULDER_ICE ? GameConfig.instance.miscObjects.boulderExplodeIce : GameConfig.instance.miscObjects.boulderExplode\n                    this.worldMgr.sceneMgr.addMiscAnim(boulderExplode, boulderComponent.mesh.position, 0, false)\n                    const boulderDamage = this.boulderStats.damageByEntityType[boulderComponent.targetBuildingType.entityType]?.[boulderComponent.targetLevel] || this.boulderStats.defaultDamage\n                    const buildingComponents = this.ecs.getComponents(boulderComponent.targetEntity)\n                    const healthComponent = buildingComponents.get(HealthComponent)\n                    healthComponent.changeHealth(-boulderDamage)\n                    if (healthComponent.triggerAlarm) EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_UNDER_ATTACK, buildingComponents.get(PositionComponent)))\n                    this.worldMgr.entityMgr.removeEntity(entity)\n                    this.worldMgr.sceneMgr.scene.remove(boulderComponent.mesh)\n                    this.ecs.removeEntity(entity)\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { LavaErosionComponent } from '../component/LavaErosionComponent'\nimport { SurfaceType } from '../terrain/SurfaceType'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { LevelSelectedEvent } from '../../event/WorldEvents'\nimport { EventBroker } from '../../event/EventBroker'\n\n/**\n * Only one new surface erodes at a time,\n * but multiple surfaces with erosion can progress\n * then their progress appears grouped\n *\n * In Level10 (120, 20, 500) a surface with erosion map value 7 progress each 48 seconds, and new took 45 seconds\n * In Level10 (120, 20, 500) a surface with erosion map value 9 progress each 25 seconds, but new take 45 seconds\n *\n * In Level18 (120, 30, 600) a surface with erosion map value 2 progress each 25 seconds\n * In Level18 (120, 30, 600) a surface with erosion map value 6 progress each 37 seconds\n *\n * In Level21 ( 60,  7, 300) a surface with erosion map value 5 progress each 25 seconds\n *\n * In Level22 ( 20, 40, 300) a surface with erosion map value 5 progress each 20 seconds\n *\n * In Level24 ( 40,  5, 300) a surface with erosion map value 9 progress each  6 seconds, but new take 20 seconds\n */\nexport class LavaErosionSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([LavaErosionComponent])\n    erodeTriggerTimeMs: number = 0\n    increaseErosionDelayMs: number = 0\n    powerPathLockTimeMs: number = 0\n    triggerNewErosionTimer: number = 0\n\n    static readonly erodibleSurfaceTypes: SurfaceType[] = [\n        SurfaceType.GROUND, SurfaceType.POWER_PATH, SurfaceType.POWER_PATH_BUILDING_SITE,\n        SurfaceType.LAVA1, SurfaceType.LAVA2, SurfaceType.LAVA3, SurfaceType.LAVA4,\n        SurfaceType.RUBBLE1, SurfaceType.RUBBLE2, SurfaceType.RUBBLE3, SurfaceType.RUBBLE4,\n    ]\n\n    constructor() {\n        super()\n        EventBroker.subscribe(EventKey.LEVEL_SELECTED, (levelSelectedEvent: LevelSelectedEvent) => {\n            this.erodeTriggerTimeMs = levelSelectedEvent.levelConf.erodeTriggerTimeMs\n            this.increaseErosionDelayMs = levelSelectedEvent.levelConf.erodeErodeTimeMs\n            this.powerPathLockTimeMs = levelSelectedEvent.levelConf.erodeLockTimeMs\n            this.triggerNewErosionTimer = 0\n        })\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        let canStartNewErosion = false\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const erosionComponent = components.get(LavaErosionComponent)\n                if (erosionComponent.surface.surfaceType === SurfaceType.LAVA5) {\n                    this.ecs.removeComponent(entity, LavaErosionComponent)\n                } else if (erosionComponent.surface.discovered && LavaErosionSystem.erodibleSurfaceTypes.includes(erosionComponent.surface.surfaceType)) {\n                    if (erosionComponent.surface.surfaceType.hasErosion) {\n                        erosionComponent.erosionTimer += elapsedMs\n                        const erosionDelayMs = erosionComponent.erosionTimeMultiplier * this.increaseErosionDelayMs\n                        if (erosionComponent.erosionTimer > erosionDelayMs) {\n                            erosionComponent.erosionTimer -= erosionDelayMs\n                            erosionComponent.increaseErosionLevel(true)\n                        }\n                    } else if (this.triggerNewErosionTimer > (this.erodeTriggerTimeMs + (erosionComponent.surface.isPath() ? this.powerPathLockTimeMs : 0)) && erosionComponent.canStartNewErosion()) {\n                        this.triggerNewErosionTimer -= this.erodeTriggerTimeMs\n                        erosionComponent.increaseErosionLevel(true)\n                    } else if (canStartNewErosion || erosionComponent.canStartNewErosion()) {\n                        canStartNewErosion = true\n                    }\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        }\n        if (canStartNewErosion) {\n            this.triggerNewErosionTimer += elapsedMs\n        }\n    }\n}\n","import { Surface } from './Surface'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { GameState } from '../model/GameState'\nimport { EntityType } from '../model/EntityType'\nimport { WorldManager } from '../WorldManager'\nimport { EventBroker } from '../../event/EventBroker'\n\nexport class PowerGrid {\n    energySources: Set<Surface> = new Set()\n    energizedSurfaces: Set<Surface> = new Set()\n\n    constructor(worldMgr: WorldManager) {\n        EventBroker.subscribe(EventKey.MATERIAL_AMOUNT_CHANGED, () => {\n            const energyConsumer = worldMgr.entityMgr.buildings.filter((b) => b.energized && b.crystalDrain > 0).reverse()\n            for (let c = 0; c < energyConsumer.length && GameState.usedCrystals > GameState.numCrystal; c++) {\n                energyConsumer[c].setEnergized(false)\n            }\n            if (GameState.numCrystal <= 0) worldMgr.entityMgr.buildings.forEach((b) => {\n                if (b.entityType === EntityType.POWER_STATION) b.setEnergized(false)\n            })\n        })\n    }\n\n    addEnergySource(energySources: Surface[]) {\n        energySources.forEach((s) => {\n            this.energySources.add(s)\n            this.markEnergized(s)\n        })\n    }\n\n    removeEnergySource(energySources: Surface[]) {\n        energySources.forEach((s) => this.energySources.delete(s))\n        this.rebuild()\n    }\n\n    onPathChange(surface: Surface) {\n        if (surface.isPath()) {\n            if (surface.neighbors.some((n) => n.energized)) {\n                this.markEnergized(surface)\n            }\n        } else {\n            this.rebuild()\n        }\n    }\n\n    private rebuild() {\n        const addedToGrid = new Set<Surface>()\n        const removedFromGrid = new Set<Surface>(this.energizedSurfaces)\n        this.energySources.forEach((s) => PowerGrid.partitionPathGrid(s, addedToGrid, removedFromGrid))\n        addedToGrid.forEach((s) => this.markEnergized(s))\n        removedFromGrid.forEach((s) => this.unmarkEnergized(s))\n    }\n\n    private static partitionPathGrid(surface: Surface, added: Set<Surface>, removed: Set<Surface>) {\n        if (!surface.isPath() || added.has(surface)) return\n        added.add(surface)\n        removed.delete(surface)\n        surface.neighbors.forEach((n) => this.partitionPathGrid(n, added, removed))\n    }\n\n    private markEnergized(surface: Surface) {\n        if (surface.energized || !surface.isPath()) return\n        surface.setEnergized(true)\n        this.energizedSurfaces.add(surface)\n        surface.neighbors.forEach((n) => this.markEnergized(n))\n    }\n\n    private unmarkEnergized(surface: Surface) {\n        if (!surface.energized) return\n        surface.setEnergized(false)\n        this.energizedSurfaces.delete(surface)\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { EmergeComponent } from '../component/EmergeComponent'\nimport { EventBroker } from '../../event/EventBroker'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { EntityType, MonsterEntityType } from '../model/EntityType'\nimport { LevelSelectedEvent, MonsterEmergeEvent, WorldLocationEvent } from '../../event/WorldEvents'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { Surface } from '../terrain/Surface'\nimport { MonsterSpawner } from '../factory/MonsterSpawner'\nimport { AnimatedSceneEntityComponent } from '../component/AnimatedSceneEntityComponent'\nimport { ANIM_ENTITY_ACTIVITY, ROCK_MONSTER_ACTIVITY } from '../model/anim/AnimationActivity'\nimport { RAIDER_SCARE_RANGE, RaiderScareComponent } from '../component/RaiderScareComponent'\nimport { RockMonsterBehaviorComponent } from '../component/RockMonsterBehaviorComponent'\nimport { WorldManager } from '../WorldManager'\nimport { WALL_TYPE } from '../terrain/WallType'\nimport { SurfaceType } from '../terrain/SurfaceType'\n\nexport class EmergeSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([EmergeComponent])\n\n    emergeCreature: MonsterEntityType = EntityType.NONE\n    emergeTimeoutMs: number = 0\n\n    constructor(readonly worldMgr: WorldManager) {\n        super()\n        EventBroker.subscribe(EventKey.LEVEL_SELECTED, (event: LevelSelectedEvent) => {\n            this.emergeCreature = event.levelConf.emergeCreature\n            this.emergeTimeoutMs = event.levelConf.emergeTimeOutMs\n        })\n        EventBroker.subscribe(EventKey.MONSTER_EMERGE, (event: MonsterEmergeEvent) => {\n            this.emergeFromSurface(event.surface)\n        })\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        if (!this.emergeCreature) return\n        const busySurfaces = new Set<Surface>()\n        ;[...this.worldMgr.entityMgr.raiders, ...this.worldMgr.entityMgr.vehicles]\n            .forEach((e) => busySurfaces.add(this.ecs.getComponents(e.entity).get(PositionComponent).surface))\n        const emergeSpawns: Map<number, Surface[]> = new Map()\n        const triggeredEmerges: Set<EmergeComponent> = new Set()\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const emergeComponent = components.get(EmergeComponent)\n                if (emergeComponent.emergeDelayMs > 0) {\n                    emergeComponent.emergeDelayMs -= elapsedMs\n                    continue\n                }\n                if (emergeComponent.triggerSurface && busySurfaces.has(emergeComponent.triggerSurface)) {\n                    triggeredEmerges.add(emergeComponent)\n                }\n                if (emergeComponent.emergeSurface) {\n                    emergeSpawns.getOrUpdate(emergeComponent.emergeSpawnId, () => []).add(emergeComponent.emergeSurface)\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        }\n        triggeredEmerges.forEach((emergeComponent) => {\n            emergeSpawns.getOrUpdate(emergeComponent.emergeSpawnId, () => []).forEach((surface) => {\n                emergeComponent.emergeDelayMs = this.emergeTimeoutMs\n                if (surface.wallType !== WALL_TYPE.wall) return // walls might change from undiscovered or inverted corner to actual wall\n                EventBroker.publish(new MonsterEmergeEvent(surface))\n            })\n        })\n    }\n\n    emergeFromSurface(spawn: Surface) {\n        const target = spawn.neighbors.find((n) => n.surfaceType.floor && n.discovered && n.surfaceType !== SurfaceType.LAVA5 && n.surfaceType !== SurfaceType.WATER)\n        if (!target) return\n        const spawnCenter = spawn.getCenterWorld2D()\n        const targetCenter = target.getCenterWorld2D()\n        const angle = Math.atan2(targetCenter.x - spawnCenter.x, targetCenter.y - spawnCenter.y)\n        const monster = MonsterSpawner.spawnMonster(this.worldMgr, this.emergeCreature, spawnCenter.clone().add(targetCenter).divideScalar(2), angle)\n        const components = this.ecs.getComponents(monster)\n        const sceneEntity = components.get(AnimatedSceneEntityComponent).sceneEntity\n        const positionComponent = components.get(PositionComponent)\n        sceneEntity.setAnimation(ROCK_MONSTER_ACTIVITY.emerge, () => {\n            sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n            this.ecs.addComponent(monster, new RaiderScareComponent(RAIDER_SCARE_RANGE.rocky))\n            this.ecs.addComponent(monster, new RockMonsterBehaviorComponent())\n        })\n        EventBroker.publish(new WorldLocationEvent(EventKey.LOCATION_MONSTER, positionComponent))\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { EventBroker } from '../../event/EventBroker'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { GameResultEvent, LevelSelectedEvent, MaterialAmountChanged, RequestedRaidersChanged, RequestedVehiclesChanged } from '../../event/WorldEvents'\nimport { EntityType } from '../model/EntityType'\nimport { TeleportComponent } from '../component/TeleportComponent'\nimport { CHECK_SPAWN_RAIDER_TIMER, CHECK_SPAWN_VEHICLE_TIMER, TILESIZE } from '../../params'\nimport { Raider } from '../model/raider/Raider'\nimport { Vector2 } from 'three'\nimport { VehicleFactory } from '../model/vehicle/VehicleFactory'\nimport { GameState } from '../model/GameState'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { ANIM_ENTITY_ACTIVITY } from '../model/anim/AnimationActivity'\nimport { HealthComponent } from '../component/HealthComponent'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { OxygenComponent } from '../component/OxygenComponent'\nimport { RaiderInfoComponent } from '../component/RaiderInfoComponent'\nimport { SceneSelectionComponent } from '../component/SceneSelectionComponent'\nimport { SelectionFrameComponent } from '../component/SelectionFrameComponent'\nimport { MoveJob } from '../model/job/MoveJob'\nimport { BuildingsChangedEvent, RaidersAmountChangedEvent, UpdateRadarEntityEvent } from '../../event/LocalEvents'\nimport { MAP_MARKER_CHANGE, MAP_MARKER_TYPE, MapMarkerComponent } from '../component/MapMarkerComponent'\nimport { WorldManager } from '../WorldManager'\nimport { GAME_RESULT_STATE, GameResultState } from '../model/GameResult'\nimport { PRNG } from '../factory/PRNG'\n\nexport class TeleportSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([TeleportComponent])\n    requestedRaiders: number = 0\n    spawnRaiderTimer: number = 0\n    requestedVehicleTypes: EntityType[] = []\n    spawnVehicleTimer: number = 0\n    poweredBuildings: Set<GameEntity> = new Set()\n    disableEndTeleport: boolean = false\n    gameState: GameResultState = GAME_RESULT_STATE.undecided\n\n    constructor(readonly worldMgr: WorldManager) {\n        super()\n        EventBroker.subscribe(EventKey.LEVEL_SELECTED, (event: LevelSelectedEvent) => {\n            this.requestedRaiders = 0\n            this.spawnRaiderTimer = 0\n            this.requestedVehicleTypes.length = 0\n            this.spawnVehicleTimer = 0\n            this.poweredBuildings?.clear()\n            this.disableEndTeleport = event.levelConf.disableEndTeleport\n            this.gameState = GAME_RESULT_STATE.undecided\n        })\n        EventBroker.subscribe(EventKey.REQUESTED_RAIDERS_CHANGED, (event: RequestedRaidersChanged) => {\n            this.requestedRaiders = event.numRequested\n        })\n        EventBroker.subscribe(EventKey.REQUESTED_VEHICLES_CHANGED, (event: RequestedVehiclesChanged) => {\n            const requestedChange = event.numRequested - this.requestedVehicleTypes.count((e) => e === event.vehicle)\n            for (let c = 0; c < -requestedChange; c++) {\n                this.requestedVehicleTypes.removeLast(event.vehicle)\n            }\n            for (let c = 0; c < requestedChange; c++) {\n                this.requestedVehicleTypes.push(event.vehicle)\n            }\n        })\n        EventBroker.subscribe(EventKey.BUILDINGS_CHANGED, (event: BuildingsChangedEvent) => {\n            this.poweredBuildings = event.poweredBuildings\n        })\n        EventBroker.subscribe(EventKey.GAME_RESULT_STATE, (event: GameResultEvent) => {\n            this.gameState = event.result\n        })\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        const teleports: TeleportComponent[] = []\n        entities.forEach((e) => {\n            if (this.poweredBuildings.has(e)) teleports.add(this.ecs.getComponents(e).get(TeleportComponent))\n        })\n        try {\n            for (this.spawnRaiderTimer += elapsedMs; this.spawnRaiderTimer >= CHECK_SPAWN_RAIDER_TIMER; this.spawnRaiderTimer -= CHECK_SPAWN_RAIDER_TIMER) {\n                if (this.requestedRaiders > 0 && !this.worldMgr.entityMgr.hasMaxRaiders()) {\n                    const teleport = teleports.find((t) => t.canTeleportIn(EntityType.PILOT))\n                    if (!teleport) break\n                    this.requestedRaiders--\n                    EventBroker.publish(new RequestedRaidersChanged(this.requestedRaiders))\n                    const raider = new Raider(this.worldMgr, true)\n                    const heading = teleport.heading\n                    const worldPosition = new Vector2(0, -TILESIZE / 2).rotateAround(new Vector2(0, 0), -heading).add(teleport.primaryPathSurface.getCenterWorld2D())\n                    const walkOutPos = teleport.primaryPathSurface.getRandomPosition()\n                    teleport.operating = true\n                    const floorPosition = this.worldMgr.sceneMgr.getFloorPosition(worldPosition)\n                    const surface = this.worldMgr.sceneMgr.terrain.getSurfaceFromWorld(floorPosition)\n                    const positionComponent = this.worldMgr.ecs.addComponent(raider.entity, new PositionComponent(floorPosition, surface))\n                    raider.sceneEntity.position.copy(floorPosition)\n                    raider.sceneEntity.position.y += positionComponent.floorOffset\n                    raider.sceneEntity.rotation.y = heading\n                    raider.sceneEntity.visible = surface.discovered\n                    this.worldMgr.sceneMgr.addSceneEntity(raider.sceneEntity)\n                    raider.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.teleportIn, () => {\n                        raider.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                        if (this.gameState !== GAME_RESULT_STATE.undecided) {\n                            if (!this.disableEndTeleport) setTimeout(() => raider.beamUp(), PRNG.animation.randInt(3000))\n                            return // no need to set up raider after game ended\n                        }\n                        let healthComponent: HealthComponent\n                        if (raider.entityType === EntityType.PILOT) {\n                            healthComponent = this.worldMgr.ecs.addComponent(raider.entity, new HealthComponent(false, 16, 10, raider.sceneEntity, true, GameConfig.instance.getRockFallDamage(raider.entityType, raider.level)))\n                            this.worldMgr.ecs.addComponent(raider.entity, new OxygenComponent(raider.stats.oxygenCoef))\n                            const infoComp = this.worldMgr.ecs.addComponent(raider.entity, new RaiderInfoComponent(raider.sceneEntity))\n                            this.worldMgr.sceneMgr.addSprite(infoComp.bubbleSprite)\n                            infoComp.setHungerIndicator((raider as Raider).foodLevel)\n                        } else {\n                            healthComponent = this.worldMgr.ecs.addComponent(raider.entity, new HealthComponent(false, 24, 14, raider.sceneEntity, false, GameConfig.instance.getRockFallDamage(raider.entityType, raider.level)))\n                        }\n                        this.worldMgr.sceneMgr.addSprite(healthComponent.healthBarSprite)\n                        this.worldMgr.sceneMgr.addSprite(healthComponent.healthFontSprite)\n                        const sceneSelectionComponent = this.worldMgr.ecs.addComponent(raider.entity, new SceneSelectionComponent(raider.sceneEntity, {gameEntity: raider.entity, entityType: raider.entityType}, raider.stats))\n                        this.worldMgr.ecs.addComponent(raider.entity, new SelectionFrameComponent(sceneSelectionComponent.pickSphere, raider.stats))\n                        if (walkOutPos) raider.setJob(new MoveJob(walkOutPos))\n                        this.worldMgr.entityMgr.raidersInBeam.remove(raider)\n                        this.worldMgr.entityMgr.raiders.push(raider)\n                        EventBroker.publish(new RaidersAmountChangedEvent(this.worldMgr.entityMgr))\n                        this.worldMgr.ecs.addComponent(raider.entity, new MapMarkerComponent(MAP_MARKER_TYPE.default))\n                        EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.default, raider.entity, MAP_MARKER_CHANGE.update, floorPosition))\n                        teleport.operating = false\n                    })\n                    this.worldMgr.entityMgr.raidersInBeam.push(raider)\n                }\n            }\n        } catch (e) {\n            console.error(e)\n        }\n        try {\n            for (this.spawnVehicleTimer += elapsedMs; this.spawnVehicleTimer >= CHECK_SPAWN_VEHICLE_TIMER; this.spawnVehicleTimer -= CHECK_SPAWN_VEHICLE_TIMER) {\n                if (this.requestedVehicleTypes.length > 0) {\n                    const spawnedVehicleType = this.requestedVehicleTypes.find((vType) => {\n                        const stats = VehicleFactory.getVehicleStatsByType(vType)\n                        if (GameState.numCrystal < stats.costCrystal) return false\n                        const teleportBuilding = teleports.find((t) => t.canTeleportIn(vType))\n                        if (!teleportBuilding) return false\n                        GameState.numCrystal -= stats.costCrystal\n                        EventBroker.publish(new MaterialAmountChanged())\n                        const vehicle = VehicleFactory.createVehicleFromType(vType, this.worldMgr)\n                        const worldPosition = (teleportBuilding.waterPathSurface ?? teleportBuilding.primaryPathSurface).getCenterWorld2D()\n                        teleportBuilding.operating = true\n                        const floorPosition = vehicle.worldMgr.sceneMgr.getFloorPosition(worldPosition)\n                        const surface = vehicle.worldMgr.sceneMgr.terrain.getSurfaceFromWorld(floorPosition)\n                        const positionComponent = vehicle.worldMgr.ecs.addComponent(vehicle.entity, new PositionComponent(floorPosition, surface))\n                        vehicle.sceneEntity.position.copy(floorPosition)\n                        vehicle.sceneEntity.position.y += positionComponent.floorOffset\n                        vehicle.sceneEntity.rotation.y = teleportBuilding.heading\n                        vehicle.sceneEntity.visible = surface.discovered\n                        vehicle.worldMgr.sceneMgr.addSceneEntity(vehicle.sceneEntity)\n                        vehicle.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.teleportIn, () => {\n                            vehicle.sceneEntity.setAnimation(ANIM_ENTITY_ACTIVITY.stand)\n                            const healthComponent: HealthComponent = vehicle.worldMgr.ecs.addComponent(vehicle.entity, new HealthComponent(false, 24, 14, vehicle.sceneEntity, false, GameConfig.instance.getRockFallDamage(vehicle.entityType, vehicle.level)))\n                            vehicle.worldMgr.sceneMgr.addSprite(healthComponent.healthBarSprite)\n                            vehicle.worldMgr.sceneMgr.addSprite(healthComponent.healthFontSprite)\n                            const sceneSelectionComponent = vehicle.worldMgr.ecs.addComponent(vehicle.entity, new SceneSelectionComponent(vehicle.sceneEntity, {gameEntity: vehicle.entity, entityType: vehicle.entityType}, vehicle.stats))\n                            vehicle.worldMgr.ecs.addComponent(vehicle.entity, new SelectionFrameComponent(sceneSelectionComponent.pickSphere, vehicle.stats))\n                            this.worldMgr.entityMgr.vehiclesInBeam.remove(vehicle)\n                            this.worldMgr.entityMgr.vehicles.push(vehicle)\n                            EventBroker.publish(new RaidersAmountChangedEvent(vehicle.worldMgr.entityMgr))\n                            vehicle.worldMgr.ecs.addComponent(vehicle.entity, new MapMarkerComponent(MAP_MARKER_TYPE.default))\n                            EventBroker.publish(new UpdateRadarEntityEvent(MAP_MARKER_TYPE.default, vehicle.entity, MAP_MARKER_CHANGE.update, floorPosition))\n                            teleportBuilding.operating = false\n                        })\n                        this.worldMgr.entityMgr.vehiclesInBeam.push(vehicle)\n                        return true\n                    })\n                    if (spawnedVehicleType) {\n                        this.requestedVehicleTypes.remove(spawnedVehicleType)\n                        EventBroker.publish(new RequestedVehiclesChanged(spawnedVehicleType, this.requestedVehicleTypes.count((e) => e === spawnedVehicleType)))\n                    }\n                }\n            }\n        } catch (e) {\n            console.error(e)\n        }\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { FallInComponent } from '../component/FallInComponent'\nimport { PRNG } from '../factory/PRNG'\n\nexport class FallInSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([FallInComponent])\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const fallInComponent = components.get(FallInComponent)\n                if (!fallInComponent.target.discovered || !fallInComponent.target.surfaceType.floor) continue\n                if (fallInComponent.timer > 0) {\n                    fallInComponent.timer -= elapsedMs\n                    continue\n                }\n                fallInComponent.timer = fallInComponent.maxTimerMs\n                const origin = PRNG.terrain.sample(fallInComponent.target.neighbors.filter((n) => n.isReinforcable()))\n                if (origin) origin.terrain.createFallIn(origin, fallInComponent.target)\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n}\n","import { AbstractGameSystem, GameEntity } from '../ECS'\nimport { FluidSurfaceComponent } from '../component/FluidSurfaceComponent'\nimport { EventBroker } from '../../event/EventBroker'\nimport { EventKey } from '../../event/EventKeyEnum'\n\nexport class FluidSurfaceSystem extends AbstractGameSystem {\n    private static readonly firstIndexGroup = [0, 2, 3, 4]\n\n    readonly componentsRequired: Set<Function> = new Set([FluidSurfaceComponent])\n    progress: number = 0\n\n    constructor() {\n        super()\n        EventBroker.subscribe(EventKey.LEVEL_SELECTED, () => {\n            this.progress = 0\n        })\n    }\n\n    update(elapsedMs: number, entities: Set<GameEntity>, dirty: Set<GameEntity>): void {\n        this.progress = (this.progress + Math.PI * elapsedMs / 2500) % (2 * Math.PI)\n        const wave = Math.sin(this.progress) * 0.08\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const fluidComponent = components.get(FluidSurfaceComponent)\n                for (let index = 0; index < 6; index++) {\n                    const indexToLoc = FluidSurfaceSystem.firstIndexGroup.includes(index) === fluidComponent.xToY\n                    const waveX = indexToLoc ? wave : 0\n                    const waveY = indexToLoc ? 0 : wave * 0.75\n                    fluidComponent.uvAttribute.setXY(index, fluidComponent.u[index] + waveX, fluidComponent.v[index] + waveY)\n                    fluidComponent.uvAttribute.needsUpdate = true\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n}\n","import { AdditiveBlending, DoubleSide, Group, Mesh, MeshStandardMaterial, PlaneGeometry } from 'three'\n\nclass BeamMat extends MeshStandardMaterial {\n    constructor(isBlue: boolean) {\n        super()\n        this.side = DoubleSide\n        if (isBlue) {\n            this.color.set(0, 0, 1)\n            this.opacity = 0.6\n        }\n        this.blending = AdditiveBlending\n        this.depthWrite = false\n        this.transparent = true\n    }\n}\n\nexport class LaserBeamMesh extends Group {\n    constructor(length: number) {\n        super()\n        // outer blue beam\n        const geoYBlue = new PlaneGeometry(length, 1.6, 1, 1)\n        geoYBlue.rotateY(Math.PI / 2)\n        geoYBlue.translate(0, 0, length / 2)\n        const geoXBlue = new PlaneGeometry(length, 1.6, 1, 1)\n        geoXBlue.rotateY(Math.PI / 2)\n        geoXBlue.rotateZ(Math.PI / 2)\n        geoXBlue.translate(0, 0, length / 2)\n        const blueMat = new BeamMat(true)\n        this.add(new Mesh(geoYBlue, blueMat))\n        this.add(new Mesh(geoXBlue, blueMat))\n        // inner white beam\n        const geoYWhite = new PlaneGeometry(length, 0.4, 1, 1)\n        geoYWhite.rotateY(Math.PI / 2)\n        geoYWhite.translate(0, 0, length / 2)\n        const geoXWhite = new PlaneGeometry(length, 0.4, 1, 1)\n        geoXWhite.rotateY(Math.PI / 2)\n        geoXWhite.rotateZ(Math.PI / 2)\n        geoXWhite.translate(0, 0, length / 2)\n        const whiteMat = new BeamMat(false)\n        this.add(new Mesh(geoYWhite, whiteMat))\n        this.add(new Mesh(geoXWhite, whiteMat))\n    }\n}\n","import { AbstractGameSystem } from '../ECS'\nimport { EventBroker } from '../../event/EventBroker'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { MaterialAmountChanged, MonsterLaserHitEvent, ShootLaserEvent } from '../../event/WorldEvents'\nimport { Group, Object3D, Raycaster, Vector2, Vector3 } from 'three'\nimport { WorldManager } from '../WorldManager'\nimport { LaserBeamTurretComponent } from '../component/LaserBeamTurretComponent'\nimport { GameState } from '../model/GameState'\nimport { PositionComponent } from '../component/PositionComponent'\nimport { EntityType } from '../model/EntityType'\nimport { MaterialSpawner } from '../factory/MaterialSpawner'\nimport { AnimatedSceneEntityComponent } from '../component/AnimatedSceneEntityComponent'\nimport { LaserBeamMesh } from '../../scene/LaserBeamMesh'\nimport { SurfaceMesh } from '../terrain/SurfaceMesh'\nimport { PickSphereMesh, SceneSelectionComponent } from '../component/SceneSelectionComponent'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { PRNG } from '../factory/PRNG'\n\nclass LaserShot {\n    timeout: number = 250\n\n    constructor(readonly group: Group) {\n    }\n}\n\nexport class LaserShotSystem extends AbstractGameSystem {\n    readonly componentsRequired: Set<Function> = new Set([LaserBeamTurretComponent])\n    readonly raycaster: Raycaster = new Raycaster()\n    readonly laserShots: LaserShot[] = []\n\n    constructor(readonly worldMgr: WorldManager) {\n        super()\n        EventBroker.subscribe(EventKey.SHOOT_LASER, (event: ShootLaserEvent) => {\n            this.onShootLaser(event)\n        })\n    }\n\n    private onShootLaser(event: ShootLaserEvent) {\n        if (GameState.numCrystal < 1) return\n        const components = this.worldMgr.ecs.getComponents(event.entity)\n        const turretComponent = components.get(LaserBeamTurretComponent)\n        if (turretComponent.fireDelay > 0) return\n        const sceneEntityComponent = components.get(AnimatedSceneEntityComponent)\n        const positionComponent = components.get(PositionComponent)\n        if (!turretComponent || !sceneEntityComponent || !positionComponent) return\n        GameState.dischargedCrystals += turretComponent.weaponCfg.dischargeRate\n        if (GameState.dischargedCrystals >= 1) {\n            this.spawnDepletedEnergyCrystal(positionComponent)\n        }\n        turretComponent.fireDelay = turretComponent.weaponCfg.rechargeTimeMs\n        sceneEntityComponent.sceneEntity.getFireNullParents().forEach((parent) => {\n            this.worldMgr.sceneMgr.addPositionalAudio(sceneEntityComponent.sceneEntity, 'SFX_Laser', false)\n            this.addLaserShot(parent, turretComponent)\n        })\n    }\n\n    private spawnDepletedEnergyCrystal(positionComponent: PositionComponent) {\n        GameState.dischargedCrystals--\n        GameState.numCrystal--\n        EventBroker.publish(new MaterialAmountChanged())\n        const closestToolstore = this.worldMgr.entityMgr.getClosestBuildingByType(positionComponent.position, EntityType.TOOLSTATION)\n        let spawnPos: Vector2 | undefined\n        if (closestToolstore) {\n            spawnPos = closestToolstore.getDropPosition2D()\n        } else if (positionComponent.surface.isWalkable()) {\n            spawnPos = positionComponent.surface.getRandomPosition()\n        } else {\n            const walkableNeighbor = positionComponent.surface.neighbors.find((n) => n.isWalkable())\n            if (walkableNeighbor) spawnPos = walkableNeighbor.getRandomPosition()\n        }\n        if (spawnPos) MaterialSpawner.spawnMaterial(this.worldMgr, EntityType.DEPLETED_CRYSTAL, spawnPos)\n    }\n\n    private addLaserShot(parent: { worldPos: Vector3; worldDirection: Vector3 }, turretComponent: LaserBeamTurretComponent) {\n        this.raycaster.set(parent.worldPos, parent.worldDirection)\n        this.raycaster.far = turretComponent.weaponCfg.weaponRange\n        let beamLength = turretComponent.weaponCfg.weaponRange\n        // TODO Check laser beam shot collision with buildings and vehicles\n        const rockyPickSpheres = this.worldMgr.entityMgr.rockMonsters\n            .map((r) => this.ecs.getComponents(r).get(SceneSelectionComponent)?.pickSphere).filter((m) => !!m)\n        const rockyIntersection = this.raycaster.intersectObjects<PickSphereMesh>(rockyPickSpheres, false)[0]\n        if (rockyIntersection) {\n            beamLength = rockyIntersection.distance\n            const rocky = rockyIntersection.object.userData.gameEntity\n            EventBroker.publish(new MonsterLaserHitEvent(rocky, turretComponent.weaponCfg))\n            const soundParent = new Object3D()\n            soundParent.position.copy(rockyIntersection.point)\n            this.worldMgr.sceneMgr.addPositionalAudio(soundParent, 'SFX_LaserHit', false)\n            this.worldMgr.sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.boulderExplode, rockyIntersection.point, PRNG.animation.random() * 2 * Math.PI, false)\n        } else {\n            const floorIntersection = this.raycaster.intersectObjects<SurfaceMesh>(this.worldMgr.sceneMgr.floorGroup.children, true)[0]\n            if (floorIntersection) {\n                beamLength = floorIntersection.distance\n                const surface = floorIntersection.object.userData.selectable\n                if (surface?.surfaceType.statsLaserName) {\n                    const laserDestroyTime = turretComponent.weaponCfg[surface.surfaceType.statsLaserName]\n                    if (laserDestroyTime) {\n                        // XXX original game needs 13 shots with double or 27 with single laser turret to collapse medium wall\n                        const laserProgress = Math.min(1 / (laserDestroyTime / 50), 1)\n                        surface.addDrillProgress(laserProgress, new Vector2()) // XXX Actually drill pos parameter not needed for not-seam walls?\n                    }\n                }\n                const soundParent = new Object3D()\n                soundParent.position.copy(floorIntersection.point)\n                this.worldMgr.sceneMgr.addPositionalAudio(soundParent, 'SFX_LaserHit', false)\n                this.worldMgr.sceneMgr.addMiscAnim(GameConfig.instance.miscObjects.boulderExplode, floorIntersection.point, PRNG.animation.random() * 2 * Math.PI, false)\n            } // else { // XXX Stop laser shot beam at roof intersection\n        }\n        const mesh = new LaserBeamMesh(beamLength)\n        mesh.position.copy(parent.worldPos)\n        mesh.lookAt(parent.worldPos.clone().add(parent.worldDirection))\n        this.laserShots.add(new LaserShot(mesh))\n        this.worldMgr.sceneMgr.scene.add(mesh)\n        const soundParent = new Object3D()\n        soundParent.position.copy(parent.worldPos)\n        this.worldMgr.sceneMgr.addPositionalAudio(soundParent, 'SFX_LazerRecharge', false)\n    }\n\n    update(elapsedMs: number, entities: Set<number>, dirty: Set<number>): void {\n        const currentShots = [...this.laserShots]\n        this.laserShots.length = 0\n        currentShots.forEach((s) => {\n            if (s.timeout > 0) {\n                s.timeout -= elapsedMs\n                this.laserShots.add(s)\n            } else {\n                this.worldMgr.sceneMgr.scene.remove(s.group)\n            }\n        })\n        for (const entity of entities) {\n            try {\n                const components = this.ecs.getComponents(entity)\n                const turretComponent = components.get(LaserBeamTurretComponent)\n                if (turretComponent.fireDelay > 0) {\n                    turretComponent.fireDelay -= elapsedMs\n                }\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    }\n}\n","import { LevelConfData } from './LevelLoader'\nimport { clearIntervalSafe } from '../core/Util'\nimport { EventKey } from '../event/EventKeyEnum'\nimport { GameResultEvent, MaterialAmountChanged, ToggleAlarmEvent } from '../event/WorldEvents'\nimport { NerpRunner } from '../nerp/NerpRunner'\nimport { DEV_MODE, UPDATE_INTERVAL_MS } from '../params'\nimport { EntityManager } from './EntityManager'\nimport { EntityType } from './model/EntityType'\nimport { GameState } from './model/GameState'\nimport { updateSafe } from './model/Updateable'\nimport { SceneManager } from './SceneManager'\nimport { Supervisor } from './Supervisor'\nimport { ECS } from './ECS'\nimport { MovementSystem } from './system/MovementSystem'\nimport { SceneEntityPositionSystem } from './system/SceneEntityPositionSystem'\nimport { SceneEntityHeadingSystem } from './system/SceneEntityHeadingSystem'\nimport { RandomMoveBehaviorSystem } from './system/RandomMoveBehaviorSystem'\nimport { FlockBehaviorSystem } from './system/FlockBehaviorSystem'\nimport { DamageSystem } from './system/DamageSystem'\nimport { BeamUpSystem } from './system/BeamUpSystem'\nimport { OxygenSystem } from './system/OxygenSystem'\nimport { MapMarkerUpdateSystem } from './system/MapMarkerUpdateSystem'\nimport { RockMonsterBehaviorSystem } from './system/RockMonsterBehaviorSystem'\nimport { ElectricFenceSystem } from './system/ElectricFenceSystem'\nimport { DeathSystem } from './system/DeathSystem'\nimport { RaiderScareSystem } from './system/RaiderScareSystem'\nimport { SlugBehaviorSystem } from './system/SlugBehaviorSystem'\nimport { TerrainScannerSystem } from './system/TerrainScannerSystem'\nimport { BulletSystem } from './system/BulletSystem'\nimport { BoulderSystem } from './system/BoulderSystem'\nimport { MaterialEntity } from './model/material/MaterialEntity'\nimport { LavaErosionSystem } from './system/LavaErosionSystem'\nimport { SaveGameManager } from '../resource/SaveGameManager'\nimport { EventBroker } from '../event/EventBroker'\nimport { PowerGrid } from './terrain/PowerGrid'\nimport { EmergeSystem } from './system/EmergeSystem'\nimport { SoundManager } from '../audio/SoundManager'\nimport { TeleportSystem } from './system/TeleportSystem'\nimport { FallInSystem } from './system/FallInSystem'\nimport { FluidSurfaceSystem } from './system/FluidSurfaceSystem'\nimport { LaserShotSystem } from './system/LaserShotSystem'\nimport { GAME_RESULT_STATE } from './model/GameResult'\nimport { NerpScript } from '../nerp/NerpScript'\nimport { PRNG } from './factory/PRNG'\n\nexport class WorldManager {\n    readonly ecs: ECS = new ECS()\n    readonly jobSupervisor: Supervisor = new Supervisor(this)\n    sceneMgr!: SceneManager\n    entityMgr!: EntityManager\n    nerpRunner: NerpRunner = new NerpRunner(this, new NerpScript(), [])\n    powerGrid: PowerGrid\n    gameLoopInterval?: NodeJS.Timeout\n    gameTimeMs: number = 0\n    firstUnpause: boolean = true\n    crystalsQuota: number = 0\n\n    constructor() {\n        this.powerGrid = new PowerGrid(this) // TODO Transform power grid into system with components\n        this.ecs.addSystem(new MovementSystem(this))\n        this.ecs.addSystem(new SceneEntityPositionSystem())\n        this.ecs.addSystem(new SceneEntityHeadingSystem())\n        this.ecs.addSystem(new RandomMoveBehaviorSystem())\n        this.ecs.addSystem(new FlockBehaviorSystem())\n        this.ecs.addSystem(new DamageSystem())\n        this.ecs.addSystem(new BeamUpSystem(this))\n        this.ecs.addSystem(new MapMarkerUpdateSystem())\n        this.ecs.addSystem(new RockMonsterBehaviorSystem(this))\n        this.ecs.addSystem(new ElectricFenceSystem(this))\n        this.ecs.addSystem(new DeathSystem(this))\n        if (!DEV_MODE) this.ecs.addSystem(new OxygenSystem())\n        this.ecs.addSystem(new RaiderScareSystem(this))\n        this.ecs.addSystem(new SlugBehaviorSystem(this))\n        this.ecs.addSystem(new TerrainScannerSystem(this))\n        this.ecs.addSystem(new BulletSystem(this))\n        this.ecs.addSystem(new BoulderSystem(this))\n        this.ecs.addSystem(new LavaErosionSystem())\n        this.ecs.addSystem(new EmergeSystem(this))\n        this.ecs.addSystem(new TeleportSystem(this))\n        this.ecs.addSystem(new FallInSystem())\n        this.ecs.addSystem(new FluidSurfaceSystem())\n        this.ecs.addSystem(new LaserShotSystem(this))\n        EventBroker.subscribe(EventKey.CAVERN_DISCOVERED, () => GameState.discoveredCaverns++)\n        EventBroker.subscribe(EventKey.PAUSE_GAME, () => this.stopLoop())\n        EventBroker.subscribe(EventKey.UNPAUSE_GAME, () => {\n            this.startLoop()\n            if (this.firstUnpause) {\n                this.firstUnpause = false\n                this.sceneMgr.terrain.forEachSurface((s) => {\n                    if (s.isUnstable()) s.collapse() // crumble unsupported walls\n                })\n            }\n        })\n        EventBroker.subscribe(EventKey.LOCATION_RAIDER_DISCOVERED, () => GameState.hiddenObjectsFound++)\n        EventBroker.subscribe(EventKey.TOGGLE_ALARM, (event: ToggleAlarmEvent) => {\n            GameState.alarmMode = event.alarmState\n            if (GameState.alarmMode) SoundManager.playSfxSound('SFX_Siren')\n        })\n    }\n\n    setup(levelConf: LevelConfData) {\n        this.ecs.reset()\n        this.gameTimeMs = 0\n        this.nerpRunner = new NerpRunner(this, levelConf.nerpScript, levelConf.nerpMessages)\n        this.firstUnpause = true\n        const gameSpeedIndex = Math.round(SaveGameManager.preferences.gameSpeed * 5)\n        GameState.gameSpeedMultiplier = [0.5, 0.75, 1, 1.5, 2, 2.5, 3][gameSpeedIndex] // XXX Publish speed change as event on network\n        this.crystalsQuota = levelConf.reward?.quota?.crystals || 0\n    }\n\n    start() {\n        this.nerpRunner.start()\n    }\n\n    stop() {\n        this.nerpRunner.stop()\n        this.stopLoop()\n    }\n\n    private startLoop() {\n        this.stopLoop() // avoid duplicate intervals\n        this.gameLoopInterval = setInterval(this.mainLoop.bind(this), UPDATE_INTERVAL_MS)\n    }\n\n    private stopLoop() {\n        this.gameLoopInterval = clearIntervalSafe(this.gameLoopInterval)\n    }\n\n    private mainLoop() {\n        const elapsedGameTimeMs = UPDATE_INTERVAL_MS * GameState.gameSpeedMultiplier\n        this.gameTimeMs += elapsedGameTimeMs\n        this.ecs.update(elapsedGameTimeMs)\n        updateSafe(this.entityMgr, elapsedGameTimeMs)\n        updateSafe(this.sceneMgr, elapsedGameTimeMs)\n        updateSafe(this.jobSupervisor, elapsedGameTimeMs)\n        this.checkCrystalFailure()\n    }\n\n    async teleportEnd(): Promise<void> {\n        PRNG.animation.shuffle([...this.entityMgr.raiders.filter((r) => !r.vehicle), ...this.entityMgr.vehicles, ...this.entityMgr.buildings])\n            .forEach((e, i) => setTimeout(() => e.beamUp(), i * 200))\n        return new Promise((resolve) => setTimeout(() => resolve(), 10000))\n    }\n\n    depositItem(item: MaterialEntity) {\n        if (item.entityType === EntityType.ORE || item.entityType === EntityType.CRYSTAL || item.entityType === EntityType.BRICK) {\n            if (item.entityType === EntityType.ORE) GameState.numOre++\n            else if (item.entityType === EntityType.CRYSTAL) GameState.numCrystal++\n            else if (item.entityType === EntityType.BRICK) GameState.numBrick++\n            EventBroker.publish(new MaterialAmountChanged())\n        }\n    }\n\n    checkCrystalFailure() {\n        try {\n            if (this.crystalsQuota < 1 || GameState.totalCrystals >= this.crystalsQuota) return\n            EventBroker.publish(new GameResultEvent(GAME_RESULT_STATE.crystalFailure))\n        } catch (e) {\n            console.error(e)\n        }\n    }\n}\n","import { KeyEventType } from './EventTypeEnum'\n\nexport class GameKeyboardEvent {\n    eventEnum: KeyEventType\n    type: string\n    bubbles: boolean\n    key: string\n    code: string\n\n    constructor(eventEnum: KeyEventType, event: KeyboardEvent) {\n        this.eventEnum = eventEnum\n        this.type = event.type\n        this.bubbles = false // disable bubbling otherwise we'll trigger this same event handler again\n        this.key = event.key\n        this.code = event.code\n    }\n}\n","import { Object3D, Raycaster, Vector2, Vector3 } from 'three'\nimport { GameSelection } from '../game/model/GameSelection'\nimport { VehicleEntity } from '../game/model/vehicle/VehicleEntity'\nimport { MaterialEntity } from '../game/model/material/MaterialEntity'\nimport { Surface } from '../game/terrain/Surface'\nimport { WorldManager } from '../game/WorldManager'\nimport { Terrain } from '../game/terrain/Terrain'\nimport { BuildingEntity } from '../game/model/building/BuildingEntity'\nimport { Raider } from '../game/model/raider/Raider'\nimport { EntityType } from '../game/model/EntityType'\nimport { PickSphereMesh, SceneSelectionComponent } from '../game/component/SceneSelectionComponent'\nimport { GameEntity } from '../game/ECS'\nimport { SelectionFrameComponent } from '../game/component/SelectionFrameComponent'\nimport { SurfaceMesh } from '../game/terrain/SurfaceMesh'\n\nexport interface CursorTarget {\n    raider?: Raider\n    vehicle?: VehicleEntity\n    monster?: { entity: GameEntity }\n    fence?: MaterialEntity\n    building?: BuildingEntity\n    material?: MaterialEntity\n    surface?: Surface\n    intersectionPoint?: Vector3\n    entityType?: EntityType\n}\n\nexport class SelectionRaycaster {\n    readonly terrain: Terrain\n\n    constructor(readonly worldMgr: WorldManager) {\n        this.terrain = worldMgr.sceneMgr.terrain\n    }\n\n    getSelectionByRay(origin: Vector2): GameSelection {\n        const raycaster = new SceneRaycaster(this.worldMgr, origin)\n        const selection = new GameSelection()\n        selection.raiders.push(...raycaster.getEntities(this.worldMgr.entityMgr.raiders.filter((r) => !r.vehicle), false))\n        if (selection.isEmpty()) selection.vehicles.push(...raycaster.getEntities(this.worldMgr.entityMgr.vehicles, true))\n        if (selection.isEmpty()) selection.building = raycaster.getEntities(this.worldMgr.entityMgr.buildings, true)[0]\n        if (selection.isEmpty()) selection.fence = raycaster.getEntities(this.worldMgr.entityMgr.placedFences, false)[0]\n        if (selection.isEmpty() && this.terrain) selection.surface = raycaster.getSurfaceIntersection(this.worldMgr.sceneMgr.floorGroup.children)\n        return selection\n    }\n\n    getFirstCursorTarget(origin: Vector2): CursorTarget {\n        const raycaster = new SceneRaycaster(this.worldMgr, origin)\n        const raider = raycaster.getFirstEntity(this.worldMgr.entityMgr.raiders.filter((r) => !r.vehicle))\n        if (raider) return {raider: raider, entityType: raider.entityType}\n        const material = raycaster.getFirstEntity(this.worldMgr.entityMgr.materials)\n        if (material) return {material: material, entityType: material.entityType}\n        const vehicle = raycaster.getFirstEntity(this.worldMgr.entityMgr.vehicles)\n        if (vehicle) return {vehicle: vehicle, entityType: vehicle.entityType}\n        const monster = raycaster.getFirstEntity(this.worldMgr.entityMgr.rockMonsters.map((m) => ({entity: m})))\n        if (monster) return {monster: monster, entityType: EntityType.ROCK_MONSTER}\n        const fence = raycaster.getFirstEntity(this.worldMgr.entityMgr.placedFences)\n        if (fence) return {fence: fence, entityType: EntityType.ELECTRIC_FENCE}\n        const building = raycaster.getFirstEntity(this.worldMgr.entityMgr.buildings)\n        if (building) return {building: building, entityType: building.entityType}\n        if (this.terrain) {\n            const intersection = raycaster.raycaster.intersectObjects<SurfaceMesh>(this.worldMgr.sceneMgr.floorGroup.children, true)[0]\n            if (intersection) {\n                const surface = intersection.object.userData.selectable\n                if (surface?.discovered) {\n                    if (surface.building && surface.pathBlockedByBuilding) {\n                        return {building: surface.building, entityType: surface.building.entityType}\n                    }\n                    return {surface: surface, intersectionPoint: intersection.point}\n                }\n            }\n        }\n        return {}\n    }\n}\n\nclass SceneRaycaster {\n    readonly raycaster: Raycaster\n\n    constructor(readonly worldMgr: WorldManager, origin: Vector2) {\n        this.raycaster = new Raycaster()\n        this.raycaster.setFromCamera(origin, this.worldMgr.sceneMgr.cameraActive)\n    }\n\n    getEntities<T extends { entity: GameEntity }>(entities: T[], allowDoubleSelection: boolean): T[] {\n        const objects = entities.map((m) => this.worldMgr.ecs.getComponents(m.entity).get(SceneSelectionComponent).pickSphere).filter((p) => !!p)\n        const intersection = this.raycaster.intersectObjects<PickSphereMesh>(objects, false)[0]\n        if (!intersection) return []\n        const gameEntity = intersection.object.userData.gameEntity\n        if (gameEntity) {\n            const selectionFrameComponent = this.worldMgr.ecs.getComponents(gameEntity).get(SelectionFrameComponent)\n            if (!!selectionFrameComponent && (!selectionFrameComponent.isSelected() || allowDoubleSelection)) {\n                const selectable = entities.find((e) => e.entity === gameEntity)\n                if (selectable) return [selectable]\n            }\n        }\n        return []\n    }\n\n    getFirstEntity<T extends { entity: GameEntity }>(entities: T[]): T | undefined {\n        const objects = entities.map((m) => this.worldMgr.ecs.getComponents(m.entity).get(SceneSelectionComponent).pickSphere).filter((p) => !!p)\n        const intersection = this.raycaster.intersectObjects<PickSphereMesh>(objects, false)[0]\n        if (!intersection) return undefined\n        const gameEntity = intersection.object.userData.gameEntity\n        return entities.find((e) => e.entity === gameEntity)\n    }\n\n    getSurfaceIntersection(surfaces: Object3D[]): Surface | undefined {\n        const intersection = this.raycaster.intersectObjects<SurfaceMesh>(surfaces, true)[0]\n        if (intersection) return intersection?.object?.userData?.selectable\n        return undefined\n    }\n}\n","import { Frustum, Mesh, Vector2, Vector3 } from 'three'\nimport { KEY_EVENT, MOUSE_BUTTON, POINTER_EVENT } from '../../event/EventTypeEnum'\nimport { GameKeyboardEvent } from '../../event/GameKeyboardEvent'\nimport { GamePointerEvent } from '../../event/GamePointerEvent'\nimport { DeselectAll, SelectionChanged, SelectionFrameChangeEvent } from '../../event/LocalEvents'\nimport { JobCreateEvent, MaterialAmountChanged, MonsterEmergeEvent, ShootLaserEvent } from '../../event/WorldEvents'\nimport { ManVehicleJob } from '../../game/model/job/ManVehicleJob'\nimport { TrainRaiderJob } from '../../game/model/job/raider/TrainRaiderJob'\nimport { DEV_MODE, FPV_ENTITY_TURN_SPEED, POINTER_THRESHOLD_DOWN_UP_CLICK } from '../../params'\nimport { ScreenLayer } from './ScreenLayer'\nimport { Cursor } from '../../cfg/PointersCfg'\nimport { EntityType } from '../../game/model/EntityType'\nimport { Surface } from '../../game/terrain/Surface'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { CursorManager } from '../CursorManager'\nimport { CursorTarget, SelectionRaycaster } from '../../scene/SelectionRaycaster'\nimport { WorldManager } from '../../game/WorldManager'\nimport { GameState } from '../../game/model/GameState'\nimport { MoveJob } from '../../game/model/job/MoveJob'\nimport { MaterialEntity } from '../../game/model/material/MaterialEntity'\nimport { RaiderInfoComponent } from '../../game/component/RaiderInfoComponent'\nimport { GameSelection } from '../../game/model/GameSelection'\nimport { Rect } from '../../core/Rect'\nimport { EventBroker } from '../../event/EventBroker'\nimport { TooltipComponent } from '../../game/component/TooltipComponent'\nimport { WALL_TYPE } from '../../game/terrain/WallType'\nimport { SceneSelectionComponent } from '../../game/component/SceneSelectionComponent'\nimport { SaveGameManager } from '../../resource/SaveGameManager'\nimport { SpriteImage } from '../../core/Sprite'\n\nexport class GameLayer extends ScreenLayer {\n    private pointerDown?: { x: number, y: number }\n    private readonly beforeUnloadListener = (event: BeforeUnloadEvent): string | undefined => {\n        if (DEV_MODE) return undefined\n        // XXX save complete game state in local storage and allow page reload\n        event.preventDefault()\n        return event.returnValue = 'Level progress will be lost!'\n    }\n    cursorRelativePos: Vector2 = new Vector2()\n\n    constructor(readonly worldMgr: WorldManager) {\n        super()\n        this.ratio = SaveGameManager.calcScreenRatio()\n        EventBroker.subscribe(EventKey.SELECTION_CHANGED, () => {\n            const cursorTarget = new SelectionRaycaster(this.worldMgr).getFirstCursorTarget(this.cursorRelativePos)\n            CursorManager.changeCursor(this.determineCursor(cursorTarget))\n        })\n        this.addEventListener('pointermove', (event): boolean => {\n            const gameEvent = new GamePointerEvent(POINTER_EVENT.move, event)\n            ;[gameEvent.canvasX, gameEvent.canvasY] = this.transformCoords(gameEvent.clientX, gameEvent.clientY)\n            return this.handlePointerMoveEvent(gameEvent)\n        })\n        this.addEventListener('pointerdown', (event): boolean => {\n            if (event.button !== MOUSE_BUTTON.main) return false\n            const gameEvent = new GamePointerEvent(POINTER_EVENT.down, event)\n            ;[gameEvent.canvasX, gameEvent.canvasY] = this.transformCoords(gameEvent.clientX, gameEvent.clientY)\n            if (!this.worldMgr.sceneMgr.buildMarker?.buildingType && !this.worldMgr.entityMgr.selection.doubleSelect && GameState.isBirdView) {\n                this.pointerDown = {x: gameEvent.canvasX, y: gameEvent.canvasY}\n            }\n            return false\n        })\n        this.addEventListener('pointerup', (event): boolean => {\n            if (event.button !== MOUSE_BUTTON.main) return false\n            const gameEvent = new GamePointerEvent(POINTER_EVENT.up, event)\n            ;[gameEvent.canvasX, gameEvent.canvasY] = this.transformCoords(gameEvent.clientX, gameEvent.clientY)\n            this.handlePointerUpEvent(gameEvent)\n            return false\n        })\n        // signal to screen master for camera controls listening on canvas for events\n        ;(['pointerleave', 'mousemove', 'mouseleave'] as (keyof HTMLElementEventMap)[]).forEach((eventType) => {\n            this.addEventListener(eventType, (): boolean => false)\n        })\n        this.addEventListener('keydown', (event): boolean => {\n            const gameEvent = new GameKeyboardEvent(KEY_EVENT.down, event)\n            return this.handleKeyDownEvent(gameEvent)\n        })\n        this.addEventListener('keyup', (event): boolean => {\n            const gameEvent = new GameKeyboardEvent(KEY_EVENT.up, event)\n            return this.handleKeyUpEvent(gameEvent)\n        })\n        this.addEventListener('wheel', (): boolean => true) // signal to screen master for camera controls listening on canvas for events\n    }\n\n    reset() {\n        super.reset()\n        this.pointerDown = undefined\n        EventBroker.publish(new SelectionFrameChangeEvent(undefined))\n    }\n\n    show() {\n        super.show()\n        window.addEventListener('beforeunload', this.beforeUnloadListener)\n    }\n\n    hide() {\n        super.hide()\n        window.removeEventListener('beforeunload', this.beforeUnloadListener)\n    }\n\n    handlePointerMoveEvent(event: GamePointerEvent): boolean {\n        if (this.pointerDown && event.pointerType === 'mouse' && !GameState.noMultiSelect) {\n            const w = event.canvasX - this.pointerDown.x\n            const h = event.canvasY - this.pointerDown.y\n            EventBroker.publish(new SelectionFrameChangeEvent(new Rect(this.pointerDown.x, this.pointerDown.y, w, h)))\n        }\n        this.cursorRelativePos.x = (event.canvasX / this.canvas.width) * 2 - 1\n        this.cursorRelativePos.y = -(event.canvasY / this.canvas.height) * 2 + 1\n        const cursorTarget = new SelectionRaycaster(this.worldMgr).getFirstCursorTarget(this.cursorRelativePos)\n        CursorManager.changeCursor(this.determineCursor(cursorTarget))\n        if (event.pointerType === 'mouse' && cursorTarget.intersectionPoint) this.worldMgr.sceneMgr.setCursorFloorPosition(cursorTarget.intersectionPoint)\n        this.publishTooltipEvent(cursorTarget)\n        this.worldMgr.sceneMgr.buildMarker?.updatePosition(cursorTarget.intersectionPoint)\n        const doubleSelection = this.worldMgr.entityMgr.selection.doubleSelect\n        if (cursorTarget.intersectionPoint && doubleSelection) {\n            doubleSelection.sceneEntity.pointLaserAt(cursorTarget.intersectionPoint)\n        }\n        return false\n    }\n\n    private publishTooltipEvent(cursorTarget: CursorTarget): void {\n        const tooltipComponent = [\n            cursorTarget.material?.entity,\n            cursorTarget.raider?.entity,\n            cursorTarget.vehicle?.entity,\n            cursorTarget.monster?.entity,\n            cursorTarget.fence?.entity,\n            cursorTarget.building?.entity,\n            cursorTarget.surface?.site?.entity,\n            cursorTarget.surface?.entity,\n        ].map((e) => {\n            if (!e) return null\n            return this.worldMgr.ecs.getComponents(e).get(TooltipComponent)\n        }).find((c) => !!c)\n        if (!tooltipComponent) return\n        EventBroker.publish(tooltipComponent.createEvent())\n    }\n\n    private handlePointerUpEvent(event: GamePointerEvent) {\n        const x = event.canvasX / (this.canvas.width / 2) - 1\n        const y = -event.canvasY / (this.canvas.height / 2) + 1\n        const cursorTargetSurface = new SelectionRaycaster(this.worldMgr).getSelectionByRay(new Vector2(x, y)).surface\n        if (cursorTargetSurface) {\n            this.worldMgr.nerpRunner.tutoBlocksById.forEach((surfaces, tutoBlockId) => {\n                if (surfaces.includes(cursorTargetSurface)) {\n                    GameState.tutoBlockClicks.upsert(tutoBlockId, (current) => (current || 0) + 1)\n                }\n            })\n        }\n        if (this.worldMgr.sceneMgr.buildMarker?.buildingType && this.worldMgr.sceneMgr.buildMarker.lastCheck) {\n            this.worldMgr.sceneMgr.buildMarker.createBuildingSite()\n            return\n        }\n        const doubleSelect = this.worldMgr.entityMgr.selection.doubleSelect\n        if (doubleSelect) {\n            EventBroker.publish(new ShootLaserEvent(doubleSelect.entity))\n            return\n        }\n        if (!this.pointerDown) return\n        const downUpDistance = Math.abs(event.canvasX - this.pointerDown.x) + Math.abs(event.canvasY - this.pointerDown.y)\n        if (downUpDistance < POINTER_THRESHOLD_DOWN_UP_CLICK) {\n            this.cursorRelativePos.x = (event.canvasX / this.canvas.width) * 2 - 1\n            this.cursorRelativePos.y = -(event.canvasY / this.canvas.height) * 2 + 1\n            if (this.worldMgr.sceneMgr.hasBuildModeSelection()) {\n                this.worldMgr.sceneMgr.setBuildModeSelection(undefined)\n            } else if (this.worldMgr.entityMgr.selection.raiders.length > 0 || this.worldMgr.entityMgr.selection.vehicles.length > 0) {\n                const cursorTarget = new SelectionRaycaster(this.worldMgr).getFirstCursorTarget(this.cursorRelativePos)\n                const cursorTargetSurface = cursorTarget.surface\n                if (cursorTargetSurface) {\n                    this.worldMgr.nerpRunner.tutoBlocksById.forEach((surfaces, tutoBlockId) => {\n                        if (surfaces.includes(cursorTargetSurface)) {\n                            GameState.tutoBlockClicks.upsert(tutoBlockId, (current) => (current || 0) + 1)\n                        }\n                    })\n                }\n                if (cursorTarget.vehicle) {\n                    const selectedRaiders = this.worldMgr.entityMgr.selection.raiders\n                    if (selectedRaiders.length > 0 && !cursorTarget.vehicle.driver) {\n                        const manVehicleJob = new ManVehicleJob(cursorTarget.vehicle)\n                        selectedRaiders.some((r) => {\n                            if (r.hasTraining(manVehicleJob.requiredTraining)) {\n                                r.setJob(manVehicleJob)\n                            } else {\n                                const requiredTraining = manVehicleJob.requiredTraining\n                                const closestTrainingSite = r.findShortestPath(this.worldMgr.entityMgr.getTrainingSiteTargets(requiredTraining))\n                                if (!closestTrainingSite) return false\n                                r.setJob(new TrainRaiderJob(r.worldMgr.entityMgr, requiredTraining, closestTrainingSite.target.building), manVehicleJob)\n                            }\n                            EventBroker.publish(new DeselectAll())\n                            return true\n                        })\n                        EventBroker.publish(new JobCreateEvent(manVehicleJob))\n                    } else {\n                        const selection = new GameSelection()\n                        selection.vehicles.push(cursorTarget.vehicle)\n                        this.worldMgr.entityMgr.selection.set(selection)\n                        EventBroker.publish(this.worldMgr.entityMgr.selection.isEmpty() ? new DeselectAll() : new SelectionChanged(this.worldMgr.entityMgr))\n                    }\n                } else if (cursorTarget.material) {\n                    this.worldMgr.entityMgr.selection.assignCarryJob(cursorTarget.material)\n                    if (!this.worldMgr.entityMgr.selection.isEmpty()) EventBroker.publish(new DeselectAll())\n                } else if (cursorTargetSurface) {\n                    if (this.worldMgr.entityMgr.selection.canDrill(cursorTargetSurface)) {\n                        const drillJob = cursorTargetSurface.setupDrillJob()\n                        if (drillJob) this.worldMgr.entityMgr.selection.assignDrillJob(drillJob)\n                    } else if (this.worldMgr.entityMgr.selection.canClear() && cursorTargetSurface.hasRubble()) {\n                        const clearJob = cursorTargetSurface.setupClearRubbleJob()\n                        if (clearJob) this.worldMgr.entityMgr.selection.assignClearRubbleJob(clearJob)\n                    } else if (this.worldMgr.entityMgr.selection.canClear() && !!cursorTargetSurface.site?.complete && !cursorTargetSurface.site.canceled && !cursorTargetSurface.site.buildingType) {\n                        this.worldMgr.entityMgr.selection.assignCompleteSurfaceJob(cursorTargetSurface)\n                    } else if (this.worldMgr.entityMgr.selection.canMove()) {\n                        if (cursorTargetSurface.isWalkable()) {\n                            this.worldMgr.entityMgr.selection.raiders.forEach((r) => r.setJob(new MoveJob(cursorTargetSurface.getRandomPosition())))\n                        }\n                        this.worldMgr.entityMgr.selection.vehicles.forEach((v) => v.setJob(new MoveJob(cursorTargetSurface.getCenterWorld2D())))\n                    }\n                    if (!this.worldMgr.entityMgr.selection.isEmpty()) EventBroker.publish(new DeselectAll())\n                } else if (cursorTarget.raider || cursorTarget.building) {\n                    const selection = new GameSelection()\n                    if (cursorTarget.raider) selection.raiders.push(cursorTarget.raider)\n                    selection.building = cursorTarget.building\n                    this.worldMgr.entityMgr.selection.set(selection)\n                    EventBroker.publish(this.worldMgr.entityMgr.selection.isEmpty() ? new DeselectAll() : new SelectionChanged(this.worldMgr.entityMgr))\n                } else {\n                    const x = (this.pointerDown.x + event.canvasX) / this.canvas.width - 1\n                    const y = -(this.pointerDown.y + event.canvasY) / this.canvas.height + 1\n                    const selection = new SelectionRaycaster(this.worldMgr).getSelectionByRay(new Vector2(x, y))\n                    this.worldMgr.entityMgr.selection.set(selection)\n                    EventBroker.publish(this.worldMgr.entityMgr.selection.isEmpty() ? new DeselectAll() : new SelectionChanged(this.worldMgr.entityMgr))\n                }\n            } else {\n                const x = (this.pointerDown.x + event.canvasX) / this.canvas.width - 1\n                const y = -(this.pointerDown.y + event.canvasY) / this.canvas.height + 1\n                const selection = new SelectionRaycaster(this.worldMgr).getSelectionByRay(new Vector2(x, y))\n                this.worldMgr.entityMgr.selection.set(selection)\n                EventBroker.publish(this.worldMgr.entityMgr.selection.isEmpty() ? new DeselectAll() : new SelectionChanged(this.worldMgr.entityMgr))\n            }\n        } else if (event.pointerType === 'mouse' && !GameState.noMultiSelect) {\n            const r1x = (this.pointerDown.x / this.canvas.width) * 2 - 1\n            const r1y = -(this.pointerDown.y / this.canvas.height) * 2 + 1\n            const r2x = (event.canvasX / this.canvas.width) * 2 - 1\n            const r2y = -(event.canvasY / this.canvas.height) * 2 + 1\n            const selection = this.getEntitiesInFrustum(r1x, r1y, r2x, r2y)\n            this.worldMgr.entityMgr.selection.set(selection)\n            EventBroker.publish(this.worldMgr.entityMgr.selection.isEmpty() ? new DeselectAll() : new SelectionChanged(this.worldMgr.entityMgr))\n        }\n        this.pointerDown = undefined\n        EventBroker.publish(new SelectionFrameChangeEvent(undefined))\n    }\n\n    getEntitiesInFrustum(r1x: number, r1y: number, r2x: number, r2y: number): GameSelection {\n        const frustum = this.worldMgr.sceneMgr.cameraBird.getFrustum(r1x, r1y, r2x, r2y)\n        const selection = new GameSelection()\n        selection.raiders.push(...this.worldMgr.entityMgr.raiders.filter((r) => {\n            const pickSphere = this.worldMgr.ecs.getComponents(r.entity).get(SceneSelectionComponent).pickSphere\n            return r.isInSelection() && GameLayer.isInFrustum(pickSphere, frustum)\n        }))\n        const hasRaiderSelected = selection.raiders.length > 0\n        selection.vehicles.push(...this.worldMgr.entityMgr.vehicles.filter((v) => {\n            const pickSphere = this.worldMgr.ecs.getComponents(v.entity).get(SceneSelectionComponent).pickSphere\n            return v.isInSelection() && (!hasRaiderSelected || v.driver) && GameLayer.isInFrustum(pickSphere, frustum)\n        }))\n        if (selection.isEmpty()) selection.building = this.worldMgr.entityMgr.buildings.find((b) => {\n            const pickSphere = this.worldMgr.ecs.getComponents(b.entity).get(SceneSelectionComponent).pickSphere\n            return GameLayer.isInFrustum(pickSphere, frustum)\n        })\n        return selection\n    }\n\n    private static isInFrustum(pickSphere: Mesh, frustum: Frustum) {\n        if (!pickSphere) return false\n        const selectionCenter = new Vector3()\n        pickSphere.getWorldPosition(selectionCenter)\n        return frustum.containsPoint(selectionCenter)\n    }\n\n    handleKeyDownEvent(event: GameKeyboardEvent): boolean {\n        const cameraActive = this.worldMgr.sceneMgr.cameraActive\n        const selectedEntity = this.worldMgr.entityMgr.selection.getPrimarySelected()\n        if ((cameraActive === this.worldMgr.sceneMgr.cameraShoulder || cameraActive === this.worldMgr.sceneMgr.cameraFPV) && !!selectedEntity) {\n            if (event.key === 'ArrowLeft' || event.key === 'a') {\n                this.worldMgr.sceneMgr.entityTurnSpeed = FPV_ENTITY_TURN_SPEED\n                return true\n            } else if (event.key === 'ArrowUp' || event.key === 'w') {\n                this.worldMgr.sceneMgr.entityMoveMultiplier = 1\n                return true\n            } else if (event.key === 'ArrowRight' || event.key === 'd') {\n                this.worldMgr.sceneMgr.entityTurnSpeed = -FPV_ENTITY_TURN_SPEED\n                return true\n            } else if (event.key === 'ArrowDown' || event.key === 's') {\n                this.worldMgr.sceneMgr.entityMoveMultiplier = -1\n                return true\n            }\n        }\n        return false\n    }\n\n    handleKeyUpEvent(event: GameKeyboardEvent): boolean {\n        if (event.key === ' ') {\n            GameState.showObjInfo = !GameState.showObjInfo\n            this.worldMgr.entityMgr.raiders.forEach((r) => {\n                const infoComponent = r.worldMgr.ecs.getComponents(r.entity).get(RaiderInfoComponent)\n                infoComponent.bubbleSprite.updateVisibleState()\n                infoComponent.hungerSprite.visible = GameState.showObjInfo && GameState.isBirdView\n            })\n            return true\n        } else if (['ArrowLeft', 'a', 'ArrowRight', 'd'].some((k) => event.key === k)) {\n            this.worldMgr.sceneMgr.entityTurnSpeed = 0\n        } else if (['ArrowUp', 'w', 'ArrowDown', 's'].some((k) => event.key === k)) {\n            this.worldMgr.sceneMgr.entityMoveMultiplier = 0\n        } else if (DEV_MODE) {\n            if (this.worldMgr.entityMgr.selection.surface) {\n                if (event.key === 'c') {\n                    this.worldMgr.entityMgr.selection.surface.collapse()\n                    EventBroker.publish(new DeselectAll())\n                    return true\n                } else if (event.key === 'f') {\n                    const surface = this.worldMgr.entityMgr.selection.surface\n                    if (!surface.surfaceType.floor) {\n                        const fallInTarget = surface.neighbors.find((n) => n.isWalkable() && !n.surfaceType.hasErosion)\n                        if (fallInTarget) this.worldMgr.sceneMgr.terrain.createFallIn(surface, fallInTarget)\n                    }\n                    EventBroker.publish(new DeselectAll())\n                    return true\n                } else if (event.key === 'm') {\n                    const surface = this.worldMgr.entityMgr.selection.surface\n                    if (surface.wallType === WALL_TYPE.wall) {\n                        EventBroker.publish(new MonsterEmergeEvent(surface))\n                    }\n                }\n            }\n            if (event.key === 'h') {\n                GameState.numCrystal += 50\n                EventBroker.publish(new MaterialAmountChanged())\n            }\n        }\n        return false\n    }\n\n    takeScreenshotFromLayer(): Promise<SpriteImage | undefined> {\n        return new Promise<SpriteImage | undefined>((resolve) => {\n            this.worldMgr.sceneMgr.renderer.screenshotCallback = resolve\n        })\n    }\n\n    resize(width: number, height: number) {\n        super.resize(width, height)\n        this.worldMgr.sceneMgr?.resize(width, height)\n    }\n\n    determineCursor(cursorTarget: CursorTarget): Cursor {\n        if (this.worldMgr.sceneMgr.hasBuildModeSelection()) {\n            return this.worldMgr.sceneMgr.buildMarker?.lastCheck ? 'canBuild' : 'cannotBuild'\n        }\n        if (cursorTarget.raider) return 'selected'\n        if (cursorTarget.vehicle) {\n            if (!cursorTarget.vehicle.driver && this.worldMgr.entityMgr.selection.raiders.length > 0) {\n                return 'getIn'\n            }\n            return 'selected'\n        }\n        if (cursorTarget.monster) return 'selected'\n        if (cursorTarget.fence) return 'selected'\n        if (cursorTarget.building) return 'selected'\n        if (cursorTarget.material) return this.determineMaterialCursor(cursorTarget.material)\n        if (cursorTarget.surface) return this.determineSurfaceCursor(cursorTarget.surface)\n        return 'standard'\n    }\n\n    private determineMaterialCursor(material: MaterialEntity): Cursor {\n        if (this.worldMgr.entityMgr.selection.canPickup()) {\n            if (material.entityType === EntityType.ORE) {\n                return 'pickUpOre'\n            } else {\n                return 'pickUp'\n            }\n        }\n        return 'selected'\n    }\n\n    private determineSurfaceCursor(surface: Surface): Cursor {\n        if (this.worldMgr.entityMgr.selection.canMove()) {\n            if (surface.surfaceType.digable) {\n                if (this.worldMgr.entityMgr.selection.canDrill(surface)) {\n                    return 'drill'\n                }\n            } else if (surface.surfaceType.floor) {\n                if (surface.hasRubble() && this.worldMgr.entityMgr.selection.canClear()) {\n                    return 'clear'\n                }\n                return 'manGo'\n            }\n        }\n        return surface.surfaceType.cursor\n    }\n\n    onGlobalMouseMoveEvent(e: PointerEvent) {\n        const event = new GamePointerEvent(POINTER_EVENT.move, e)\n        ;[event.canvasX, event.canvasY] = this.transformCoords(event.clientX, event.clientY)\n        this.onGlobalMouseEvent(event)\n    }\n\n    onGlobalMouseLeaveEvent(e: PointerEvent) {\n        const event = new GamePointerEvent(POINTER_EVENT.move, e)\n        ;[event.canvasX, event.canvasY] = this.transformCoords(event.clientX, event.clientY)\n        this.onGlobalMouseEvent(event)\n    }\n\n    private onGlobalMouseEvent(event: GamePointerEvent) {\n        if (!this.active || !SaveGameManager.preferences.edgeScrolling) return\n        const screenPanOffset = 4\n        let key: string = ''\n        if (event.canvasX < screenPanOffset) {\n            key = 'KeyA'\n        } else if (event.canvasX > this.canvas.width - screenPanOffset) {\n            key = 'KeyD'\n        }\n        if (event.canvasY < screenPanOffset) {\n            key = 'KeyW'\n        } else if (event.canvasY > this.canvas.height - screenPanOffset) {\n            key = 'KeyS'\n        }\n        this.worldMgr.sceneMgr.birdViewControls.setAutoPan(key)\n    }\n}\n","import { SpriteContext } from '../../core/Sprite'\nimport { PlaySoundEvent } from '../../event/GuiCommand'\nimport { CursorManager } from '../../screen/CursorManager'\nimport { GuiHoverEvent, GuiPointerDownEvent, GuiPointerUpEvent } from '../event/GuiEvent'\nimport { BaseEvent, EventTypeMap } from '../../event/EventTypeMap'\nimport { EventBroker } from '../../event/EventBroker'\n\nexport class BaseElement {\n    parent?: BaseElement\n    x: number = 0\n    y: number = 0\n    relX: number = 0\n    relY: number = 0\n    width: number = 0\n    height: number = 0\n    children: BaseElement[] = []\n    hidden: boolean = false\n    disabled: boolean = false\n    hover: boolean = false\n    pressed: boolean = false\n    pointerDown?: { x: number, y: number }\n    onClick?: (cx: number, cy: number) => void\n\n    reset() {\n        this.hidden = false\n        this.disabled = false\n        this.hover = false\n        this.pressed = false\n        this.children.forEach((c) => c.reset())\n    }\n\n    addChild<T extends BaseElement>(child: T): T {\n        child.parent = this\n        this.children.push(child)\n        child.updatePosition()\n        return child\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        this.children.forEach((child) => child.onRedraw(context))\n        this.children.forEach((child) => child.drawHover(context))\n    }\n\n    drawHover(context: SpriteContext) {\n    }\n\n    isInactive(): boolean {\n        for (let parent = this.parent; !!parent; parent = parent.parent) if (parent.isInactive()) return true\n        return this.hidden || this.disabled\n    }\n\n    hide() {\n        this.hidden = true\n        this.children.forEach((child) => child.hide())\n    }\n\n    show() {\n        this.hidden = false\n        this.children.forEach((child) => child.show())\n    }\n\n    updatePosition() {\n        this.x = this.parent ? this.parent.x + this.relX : this.relX\n        this.y = this.parent ? this.parent.y + this.relY : this.relY\n        this.children.forEach((child) => child.updatePosition())\n    }\n\n    isInRect(sx: number, sy: number) {\n        return sx >= this.x && sy >= this.y && sx < this.x + this.width && sy < this.y + this.height\n    }\n\n    onPointerMove(event: GuiHoverEvent): void {\n        const inRect = this.isInRect(event.sx, event.sy)\n        if (inRect && !this.hover) this.onHoverStart()\n        else if (!inRect && this.hover) this.onHoverEnd()\n        if (!this.isInactive()) {\n            event.hoverStateChanged = event.hoverStateChanged || this.hover !== inRect\n            this.hover = inRect\n            if (!this.hover) this.pressed = false\n        }\n        this.children.forEach((child) => child.onPointerMove(event))\n        if (this.hover && this.pointerDown && (Math.abs(event.sx - this.pointerDown.x) > 5 || Math.abs(event.sy - this.pointerDown.y) > 5)) {\n            this.onDrag(event.sx, event.sy)\n        } else {\n            this.pointerDown = undefined\n        }\n    }\n\n    onHoverStart(): void {\n    }\n\n    onHoverEnd(): void {\n    }\n\n    onDrag(x: number, y: number): void {\n    }\n\n    onPointerDown(event: GuiPointerDownEvent): boolean {\n        this.pointerDown = undefined\n        if (this.isInactive()) return false\n        this.pointerDown = {x: event.sy, y: event.sy}\n        const oldState = this.pressed\n        if (this.isInRect(event.sx, event.sy)) {\n            if (!this.pressed && this.onClick) {\n                this.pressed = true\n            }\n        } else {\n            this.pressed = false\n        }\n        let stateChanged = this.pressed !== oldState\n        this.children.forEach((child) => stateChanged = child.onPointerDown(event) || stateChanged)\n        return stateChanged\n    }\n\n    onPointerUp(event: GuiPointerUpEvent): boolean {\n        this.pointerDown = undefined\n        if (this.isInactive()) return false\n        const inRect = this.isInRect(event.sx, event.sy)\n        let stateChanged = false\n        this.children.forEach((child) => stateChanged = child.onPointerUp(event) || stateChanged)\n        if (!stateChanged && inRect && this.pressed) {\n            this.clicked(event)\n        }\n        stateChanged = this.pressed || stateChanged\n        this.pressed = false\n        return stateChanged\n    }\n\n    clicked(event: GuiPointerDownEvent) {\n        if (this.onClick) {\n            CursorManager.changeCursor('okay', 1000)\n            this.publishEvent(new PlaySoundEvent('SFX_ButtonPressed', false))\n            this.onClick(event.sx, event.sy)\n        }\n    }\n\n    onPointerLeave(): boolean {\n        let stateChanged = this.pressed || this.hover\n        this.pressed = false\n        this.hover = false\n        this.children.forEach((child) => stateChanged = child.onPointerLeave() || stateChanged)\n        return stateChanged\n    }\n\n    notifyRedraw() {\n        this.parent?.notifyRedraw()\n    }\n\n    publishEvent(event: BaseEvent) {\n        // TODO This should not be inlined, but replaced with some GUI specific event bus or merged with GuiManager\n        EventBroker.publish(event)\n    }\n\n    registerEventListener<Type extends keyof EventTypeMap>(eventType: Type, callback: (event: EventTypeMap[Type]) => void) {\n        // TODO This should not be inlined, but replaced with some GUI specific event bus or merged with GuiManager\n        EventBroker.subscribe(eventType, callback)\n    }\n}\n","import { BaseButtonCfg } from '../../cfg/ButtonCfg'\nimport { SpriteContext, SpriteImage } from '../../core/Sprite'\nimport { ChangeTooltip, HideTooltip } from '../../event/GuiCommand'\nimport { GuiHoverEvent, GuiPointerDownEvent, GuiPointerUpEvent } from '../event/GuiEvent'\nimport { BaseElement } from './BaseElement'\nimport { TOOLTIP_DELAY_SFX } from '../../params'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { clearIntervalSafe } from '../../core/Util'\nimport { EventBroker } from '../../event/EventBroker'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { GuiButtonBlinkEvent } from '../../event/LocalEvents'\n\nexport class Button extends BaseElement {\n    buttonType: string\n    imgNormal?: SpriteImage\n    imgHover?: SpriteImage\n    imgPressed?: SpriteImage\n    imgDisabled?: SpriteImage\n    tooltip: string\n    tooltipSfx: string\n    hoverFrame: boolean = false\n    blink: boolean = false\n    blinkInterval?: NodeJS.Timeout\n\n    constructor(btnCfgPart: Partial<BaseButtonCfg>, readonly blinkingByDefault: boolean = false) {\n        super()\n        const btnCfg = Object.assign(new BaseButtonCfg(), btnCfgPart)\n        this.buttonType = btnCfg.buttonType\n        if (btnCfg.normalFile) this.imgNormal = ResourceManager.getImageOptional(btnCfg.normalFile)\n        if (btnCfg.highlightFile) this.imgHover = ResourceManager.getImageOptional(btnCfg.highlightFile)\n        if (btnCfg.pressedFile) this.imgPressed = ResourceManager.getImageOptional(btnCfg.pressedFile)\n        if (btnCfg.disabledFile) this.imgDisabled = ResourceManager.getImageOptional(btnCfg.disabledFile)\n        this.relX = btnCfg.relX\n        this.relY = btnCfg.relY\n        this.width = Button.ignoreUndefinedMax(btnCfg.width, this.imgNormal?.width, this.imgPressed?.width, this.imgHover?.width)\n        this.height = Button.ignoreUndefinedMax(btnCfg.height, this.imgNormal?.height, this.imgPressed?.height, this.imgHover?.height)\n        this.tooltip = GameConfig.instance.getTooltipText(btnCfg.tooltipKey) || btnCfg.tooltipText\n        this.tooltipSfx = btnCfg.tooltipSfx\n        this.updatePosition()\n        this.onClick = () => console.log(`button pressed: ${this.buttonType}`)\n        if (blinkingByDefault) this.startBlinking()\n        EventBroker.subscribe(EventKey.GUI_BUTTON_BLINK, (event: GuiButtonBlinkEvent) => {\n            if (this.buttonType.toLowerCase() !== event.buttonType.toLowerCase()) return\n            if (event.blinking) {\n                if (!this.blinkInterval) this.startBlinking()\n            } else {\n                if (this.blinkInterval) this.stopBlinking()\n            }\n        })\n    }\n\n    private static ignoreUndefinedMax(...numbers: (number | undefined)[]): number {\n        return Math.max(...numbers.map((n) => n || 0))\n    }\n\n    startBlinking() {\n        this.stopBlinking()\n        this.blinkInterval = setInterval(() => {\n            this.blink = !this.blink\n            this.notifyRedraw()\n        }, 500)\n    }\n\n    private stopBlinking() {\n        this.blinkInterval = clearIntervalSafe(this.blinkInterval)\n        this.blink = false\n        this.notifyRedraw()\n    }\n\n    reset() {\n        super.reset()\n        if (this.blinkingByDefault) {\n            this.startBlinking()\n        } else {\n            this.stopBlinking()\n        }\n    }\n\n    onHoverStart(): void {\n        super.onHoverStart()\n        if (this.isInactive()) {\n            this.showTooltipDisabled()\n        } else if (this.tooltip || this.tooltipSfx) {\n            this.showTooltip()\n        }\n    }\n\n    onHoverEnd() {\n        super.onHoverEnd()\n        this.publishEvent(new HideTooltip(this.tooltip))\n    }\n\n    showTooltip() {\n        this.publishEvent(new ChangeTooltip(this.tooltip, 0, this.tooltipSfx, TOOLTIP_DELAY_SFX))\n    }\n\n    showTooltipDisabled() {\n    }\n\n    onPointerMove(event: GuiHoverEvent): void {\n        super.onPointerMove(event)\n        if (event.hoverStateChanged) this.notifyRedraw()\n    }\n\n    onPointerDown(event: GuiPointerDownEvent): boolean {\n        const stateChanged = super.onPointerDown(event)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    onPointerUp(event: GuiPointerUpEvent): boolean {\n        const stateChanged = super.onPointerUp(event)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    clicked(event: GuiPointerDownEvent) {\n        super.clicked(event)\n        this.publishEvent(new HideTooltip(this.tooltip))\n    }\n\n    onPointerLeave(): boolean {\n        const stateChanged = super.onPointerLeave()\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        let img = this.imgNormal\n        if (this.disabled) {\n            img = this.imgDisabled || this.imgPressed || this.imgNormal\n        } else if (this.pressed) {\n            img = this.imgPressed || this.imgNormal\n        } else if (this.hover || this.blinkInterval) {\n            img = this.imgHover || this.imgNormal\n        }\n        if (img && !this.blink) context.drawImage(img, this.x, this.y)\n        super.onRedraw(context)\n    }\n\n    drawHover(context: SpriteContext) {\n        super.drawHover(context)\n        if (!this.disabled && this.hover && this.hoverFrame) {\n            context.strokeStyle = '#0f0'\n            context.lineWidth = 2\n            context.strokeRect(this.x - context.lineWidth / 2, this.y - context.lineWidth / 2, this.width + context.lineWidth - 1, this.height + context.lineWidth - 1)\n        }\n    }\n}\n","import { PanelCfg } from '../../cfg/PanelCfg'\nimport { SpriteContext, SpriteImage } from '../../core/Sprite'\nimport { clearTimeoutSafe } from '../../core/Util'\nimport { NATIVE_UPDATE_INTERVAL, PANEL_ANIMATION_MULTIPLIER } from '../../params'\nimport { BaseElement } from './BaseElement'\nimport { ResourceManager } from '../../resource/ResourceManager'\n\nexport class Panel extends BaseElement {\n    img?: SpriteImage\n    xOut: number = 0\n    yOut: number = 0\n    xIn: number = 0\n    yIn: number = 0\n    animationTimeout?: NodeJS.Timeout\n    movedIn: boolean = true // xIn, yIn is the collapsed position out of screen\n\n    constructor(panelCfg?: PanelCfg) {\n        super()\n        if (panelCfg) {\n            this.img = ResourceManager.getImage(panelCfg.filename)\n            this.xOut = panelCfg.xOut\n            this.yOut = panelCfg.yOut\n            this.xIn = panelCfg.xIn\n            this.yIn = panelCfg.yIn\n            this.relX = this.xIn\n            this.relY = this.yIn\n            this.width = this.img.width\n            this.height = this.img.height\n        }\n    }\n\n    reset() {\n        super.reset()\n        this.animationTimeout = clearTimeoutSafe(this.animationTimeout)\n        this.relX = this.xIn\n        this.relY = this.yIn\n        this.movedIn = true\n        this.updatePosition()\n    }\n\n    isInactive(): boolean {\n        return !!this.animationTimeout || super.isInactive()\n    }\n\n    setMovedIn(movedIn: boolean, onDone?: () => void) {\n        if (this.movedIn !== movedIn) {\n            this.toggleState(onDone)\n        } else if (onDone) {\n            onDone()\n        }\n    }\n\n    toggleState(onDone?: () => void) {\n        this.animationTimeout = clearTimeoutSafe(this.animationTimeout)\n        if (this.movedIn) {\n            this.movedIn = false\n            this.updateAnimation(this.xOut, this.yOut, PANEL_ANIMATION_MULTIPLIER, onDone)\n        } else {\n            this.movedIn = true\n            this.updateAnimation(this.xIn, this.yIn, PANEL_ANIMATION_MULTIPLIER, onDone)\n        }\n    }\n\n    protected updateAnimation(targetX: number, targetY: number, speed: number, onDone: (() => void) | undefined) {\n        const diffX = targetX - this.relX\n        const diffY = targetY - this.relY\n        if (Math.abs(diffX) <= Math.sqrt(Math.abs(diffX)) * speed && Math.abs(diffY) <= Math.sqrt(Math.abs(diffY)) * speed) {\n            this.relX = targetX\n            this.relY = targetY\n            this.animationTimeout = undefined\n            if (onDone) onDone()\n        } else {\n            this.relX += Math.round(Math.sign(diffX) * Math.sqrt(Math.abs(diffX)) * speed)\n            this.relY += Math.round(Math.sign(diffY) * Math.sqrt(Math.abs(diffY)) * speed)\n            this.animationTimeout = setTimeout(() => {\n                this.updateAnimation(targetX, targetY, speed, onDone)\n            }, NATIVE_UPDATE_INTERVAL)\n        }\n        this.updatePosition()\n        this.notifyRedraw()\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        if (this.img) context.drawImage(this.img, this.x, this.y)\n        super.onRedraw(context)\n    }\n}\n","import { TypedWorkerBackend, TypedWorkerThreaded } from './TypedWorker'\nimport { MapSurfaceRect } from '../gui/radar/MapSurfaceRect'\nimport { MAP_MAX_UPDATE_INTERVAL, MAP_PANEL_SURFACE_RECT_MARGIN, TILESIZE } from '../params'\nimport { getSpriteContext, SpriteContext, SpriteImage } from '../core/Sprite'\nimport { MAP_MARKER_TYPE, MapMarkerType } from '../game/component/MapMarkerComponent'\nimport { Vector2 } from 'three'\n\nexport const enum MapRendererWorkerRequestType {\n    RESPONSE_MAP_RENDERER = 1, // start with 1 for truthiness safety\n    MAP_RENDERER_INIT,\n    MAP_RENDER_TERRAIN,\n    MAP_RENDER_SURFACE,\n    MAP_RENDER_ENTITIES,\n    MAP_RENDER_CAMERA,\n}\n\ntype MapRendererInitMessage = {\n    type: MapRendererWorkerRequestType.MAP_RENDERER_INIT\n    terrainSprite: SpriteImage\n    entitySprite: SpriteImage\n    monsterSprite: SpriteImage\n    materialSprite: SpriteImage\n    geoScanSprite: SpriteImage\n    cameraSprite: SpriteImage\n}\n\ntype MapRendererTerrainRenderMessage = {\n    type: MapRendererWorkerRequestType.MAP_RENDER_TERRAIN\n    requestId: number\n    offset: { x: number, y: number }\n    surfaceRectSize: number\n    terrain: MapSurfaceRect[][]\n}\n\ntype MapRendererSurfaceRenderMessage = {\n    type: MapRendererWorkerRequestType.MAP_RENDER_SURFACE\n    requestId: number\n    offset: { x: number, y: number }\n    surfaceRectSize: number\n    surface: MapSurfaceRect\n}\n\ntype MapRendererEntitiesRenderMessage = {\n    type: MapRendererWorkerRequestType.MAP_RENDER_ENTITIES\n    requestId: number\n    offset: { x: number, y: number }\n    surfaceRectSize: number\n    mapMarkerType: MapMarkerType\n    entities: { x: number, z: number, r: number }[]\n}\n\ntype MapRendererCameraRenderMessage = {\n    type: MapRendererWorkerRequestType.MAP_RENDER_CAMERA\n    requestId: number\n    offset: { x: number, y: number }\n    surfaceRectSize: number\n    rect: MapRendererCameraRect | undefined\n}\n\nexport type MapRendererCameraRect = {\n    topLeft: { x: number, z: number }\n    topRight: { x: number, z: number }\n    bottomRight: { x: number, z: number }\n    bottomLeft: { x: number, z: number }\n}\n\nexport type MapRendererMessage = MapRendererInitMessage | MapRendererTerrainRenderMessage | MapRendererSurfaceRenderMessage | MapRendererEntitiesRenderMessage | MapRendererCameraRenderMessage\n\nexport type MapRendererResponse = {\n    type: MapRendererWorkerRequestType.RESPONSE_MAP_RENDERER\n    requestId: number\n}\n\nexport class MapRendererWorker {\n    surfaceContext: SpriteContext | null = null\n    entityContext: SpriteContext | null = null\n    monsterContext: SpriteContext | null = null\n    materialContext: SpriteContext | null = null\n    geoScanContext: SpriteContext | null = null\n    cameraContext: SpriteContext | null = null\n    blocked: Set<MapMarkerType> = new Set()\n    markedDirty: Map<MapMarkerType, MapRendererEntitiesRenderMessage> = new Map()\n\n    constructor(readonly worker: TypedWorkerBackend<MapRendererMessage, MapRendererResponse>) {\n        this.worker.onMessageFromFrontend = (msg) => this.processMessage(msg)\n    }\n\n    processMessage(msg: MapRendererMessage) {\n        if (msg.type === MapRendererWorkerRequestType.MAP_RENDERER_INIT) {\n            this.surfaceContext = getSpriteContext(msg.terrainSprite)\n            this.monsterContext = getSpriteContext(msg.monsterSprite)\n            this.materialContext = getSpriteContext(msg.materialSprite)\n            this.geoScanContext = getSpriteContext(msg.geoScanSprite)\n            this.entityContext = getSpriteContext(msg.entitySprite)\n            this.cameraContext = getSpriteContext(msg.cameraSprite)\n        } else {\n            switch (msg.type) {\n                case MapRendererWorkerRequestType.MAP_RENDER_TERRAIN:\n                    this.redrawTerrain(msg.offset, msg.surfaceRectSize, msg.terrain)\n                    break\n                case MapRendererWorkerRequestType.MAP_RENDER_SURFACE:\n                    this.redrawSurface(msg.offset, msg.surfaceRectSize, msg.surface)\n                    break\n                case MapRendererWorkerRequestType.MAP_RENDER_ENTITIES:\n                    switch (msg.mapMarkerType) {\n                        case MAP_MARKER_TYPE.default:\n                            this.redrawEntitiesContext(msg, this.entityContext, '#e8d400', 4)\n                            break\n                        case MAP_MARKER_TYPE.monster:\n                            this.redrawEntitiesContext(msg, this.monsterContext, '#f00', 3)\n                            break\n                        case MAP_MARKER_TYPE.material:\n                            this.redrawEntitiesContext(msg, this.materialContext, '#0f0', 2)\n                            break\n                        case MAP_MARKER_TYPE.scanner:\n                            this.redrawGeoScanContext(msg)\n                            break\n                    }\n                    break\n                case MapRendererWorkerRequestType.MAP_RENDER_CAMERA:\n                    this.redrawCamera(msg.offset, msg.surfaceRectSize, msg.rect)\n                    break\n            }\n            this.worker.sendResponse({type: MapRendererWorkerRequestType.RESPONSE_MAP_RENDERER, requestId: msg.requestId})\n        }\n    }\n\n    private redrawEntitiesContext(msg: MapRendererEntitiesRenderMessage, context: SpriteContext | null, rectColor: string, rectSize: number) {\n        if (!context) return\n        if (this.blocked.has(msg.mapMarkerType)) {\n            this.markedDirty.set(msg.mapMarkerType, msg)\n            return\n        }\n        this.blocked.add(msg.mapMarkerType)\n        setTimeout(() => {\n            this.blocked.delete(msg.mapMarkerType)\n            const dirty = this.markedDirty.get(msg.mapMarkerType)\n            this.markedDirty.delete(msg.mapMarkerType)\n            if (dirty) this.redrawEntitiesContext(dirty, context, rectColor, rectSize)\n        }, MAP_MAX_UPDATE_INTERVAL)\n        context.clearRect(0, 0, context.canvas.width, context.canvas.height)\n        context.fillStyle = rectColor\n        const normalizedRectSize = Math.max(1, Math.round(rectSize / 15 * msg.surfaceRectSize))\n        msg.entities.forEach((e) => {\n            const x = Math.round(e.x * msg.surfaceRectSize / TILESIZE - msg.offset.x - normalizedRectSize / 2)\n            const y = Math.round(e.z * msg.surfaceRectSize / TILESIZE - msg.offset.y - normalizedRectSize / 2)\n            context.fillRect(x, y, normalizedRectSize, normalizedRectSize)\n        })\n    }\n\n    private redrawGeoScanContext(msg: MapRendererEntitiesRenderMessage) {\n        const geoScanContext = this.geoScanContext\n        if (!geoScanContext) return\n        if (this.blocked.has(msg.mapMarkerType)) {\n            this.markedDirty.set(msg.mapMarkerType, msg)\n            return\n        }\n        this.blocked.add(msg.mapMarkerType)\n        setTimeout(() => {\n            this.blocked.delete(msg.mapMarkerType)\n            const dirty = this.markedDirty.get(msg.mapMarkerType)\n            this.markedDirty.delete(msg.mapMarkerType)\n            if (dirty) this.redrawGeoScanContext(dirty)\n        }, MAP_MAX_UPDATE_INTERVAL)\n        geoScanContext.clearRect(0, 0, geoScanContext.canvas.width, geoScanContext.canvas.height)\n        geoScanContext.strokeStyle = '#fff'\n        geoScanContext.lineWidth = 1\n        msg.entities.forEach((e) => {\n            const scanRadius = Math.round(e.r * msg.surfaceRectSize)\n            const x = Math.round(e.x * msg.surfaceRectSize / TILESIZE - msg.offset.x)\n            const y = Math.round(e.z * msg.surfaceRectSize / TILESIZE - msg.offset.y)\n            geoScanContext.beginPath()\n            geoScanContext.setLineDash([1, 1])\n            geoScanContext.ellipse(x, y, scanRadius, scanRadius, 0, 0, 2 * Math.PI)\n            geoScanContext.stroke()\n        })\n    }\n\n    private redrawTerrain(offset: { x: number, y: number }, surfaceRectSize: number, terrain: MapSurfaceRect[][]) {\n        if (!this.surfaceContext) return\n        this.surfaceContext.fillStyle = '#000'\n        this.surfaceContext.fillRect(0, 0, this.surfaceContext.canvas.width, this.surfaceContext.canvas.height)\n        terrain.forEach((r) => r.forEach((s) => this.redrawSurface(offset, surfaceRectSize, s)))\n    }\n\n    private redrawSurface(offset: { x: number, y: number }, surfaceRectSize: number, surfaceRect: MapSurfaceRect) {\n        if (!this.surfaceContext) return\n        const surfaceX = Math.round(surfaceRect.x * surfaceRectSize - offset.x)\n        const surfaceY = Math.round(surfaceRect.y * surfaceRectSize - offset.y)\n        const rectSize = surfaceRectSize - MAP_PANEL_SURFACE_RECT_MARGIN\n        this.surfaceContext.fillStyle = surfaceRect.borderColor ? surfaceRect.borderColor : surfaceRect.surfaceColor\n        this.surfaceContext.fillRect(surfaceX, surfaceY, rectSize, rectSize)\n        if (surfaceRect.borderColor) {\n            this.surfaceContext.fillStyle = surfaceRect.surfaceColor\n            this.surfaceContext.fillRect(surfaceX, surfaceY, rectSize, rectSize)\n        }\n    }\n\n    private redrawCamera(offset: { x: number, y: number }, surfaceRectSize: number, rect: MapRendererCameraRect | undefined) {\n        if (!this.cameraContext) return\n        this.cameraContext.clearRect(0, 0, this.cameraContext.canvas.width, this.cameraContext.canvas.height)\n        if (!rect) return\n        // draw camera frustum\n        this.cameraContext.beginPath()\n        const [topLeft, topRight, bottomRight, bottomLeft] = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft]\n            .map((s) => (new Vector2(s.x, s.z).multiplyScalar(surfaceRectSize / TILESIZE).sub(offset)))\n        this.cameraContext.moveTo(topLeft.x, topLeft.y)\n        this.cameraContext.lineTo(topRight.x, topRight.y)\n        this.cameraContext.lineTo(bottomRight.x, bottomRight.y)\n        this.cameraContext.lineTo(bottomLeft.x, bottomLeft.y)\n        this.cameraContext.closePath()\n        this.cameraContext.strokeStyle = '#ccc'\n        this.cameraContext.lineWidth = 0.5\n        this.cameraContext.stroke()\n        // draw arrow inside of frustum\n        this.cameraContext.beginPath()\n        const topMid = topRight.clone().sub(topLeft).multiplyScalar(0.5).add(topLeft)\n        const bottomMid = bottomRight.clone().sub(bottomLeft).multiplyScalar(0.5).add(bottomLeft)\n        const topDown = bottomMid.clone().sub(topMid)\n        const arrowTip = topDown.clone().multiplyScalar(0.15).add(topMid)\n        this.cameraContext.moveTo(arrowTip.x, arrowTip.y)\n        const midLeft = bottomLeft.clone().sub(topLeft).multiplyScalar(0.5).add(topLeft)\n        const midRight = bottomRight.clone().sub(topRight).multiplyScalar(0.5).add(topRight)\n        const mid = midRight.clone().sub(midLeft)\n        const tipRight = mid.clone().multiplyScalar(0.65).add(midLeft)\n        const shaftRight = mid.clone().multiplyScalar(0.55).add(midLeft)\n        const shaftBottomRight = topDown.clone().multiplyScalar(0.425).add(shaftRight)\n        const tipLeft = mid.clone().multiplyScalar(0.35).add(midLeft)\n        const shaftLeft = mid.clone().multiplyScalar(0.45).add(midLeft)\n        const shaftBottomLeft = topDown.clone().multiplyScalar(0.425).add(shaftLeft)\n        this.cameraContext.lineTo(tipRight.x, tipRight.y)\n        this.cameraContext.lineTo(shaftRight.x, shaftRight.y)\n        this.cameraContext.lineTo(shaftBottomRight.x, shaftBottomRight.y)\n        this.cameraContext.lineTo(shaftBottomLeft.x, shaftBottomLeft.y)\n        this.cameraContext.lineTo(shaftLeft.x, shaftLeft.y)\n        this.cameraContext.lineTo(tipLeft.x, tipLeft.y)\n        this.cameraContext.closePath()\n        this.cameraContext.strokeStyle = '#ccc'\n        this.cameraContext.lineWidth = 0.5\n        this.cameraContext.stroke()\n    }\n}\n\nconst worker: Worker = self as any\nnew MapRendererWorker(new TypedWorkerThreaded(worker))\n","import { TypedWorker, TypedWorkerFallback, TypedWorkerFrontend } from '../../worker/TypedWorker'\nimport { MapSurfaceRect } from './MapSurfaceRect'\nimport { MapRendererCameraRect, MapRendererMessage, MapRendererResponse, MapRendererWorker, MapRendererWorkerRequestType } from '../../worker/MapRendererWorker'\nimport { MapMarkerType } from '../../game/component/MapMarkerComponent'\n\nexport class MapRenderer {\n    readonly resolveCallbackById: Map<number, (() => void)> = new Map()\n    readonly worker: TypedWorker<MapRendererMessage>\n    requestId: number = 1 // start with 1 for truthiness safety\n\n    constructor(terrainSprite: HTMLCanvasElement, entitySprite: HTMLCanvasElement, monsterSprite: HTMLCanvasElement, materialSprite: HTMLCanvasElement, geoScanSprite: HTMLCanvasElement, camSprite: HTMLCanvasElement) {\n        const msgInit: MapRendererMessage = {\n            type: MapRendererWorkerRequestType.MAP_RENDERER_INIT,\n            terrainSprite: terrainSprite,\n            entitySprite: entitySprite,\n            monsterSprite: monsterSprite,\n            materialSprite: materialSprite,\n            geoScanSprite: geoScanSprite,\n            cameraSprite: camSprite,\n        }\n        try {\n            msgInit.terrainSprite = terrainSprite.transferControlToOffscreen()\n            msgInit.monsterSprite = monsterSprite.transferControlToOffscreen()\n            msgInit.materialSprite = materialSprite.transferControlToOffscreen()\n            msgInit.entitySprite = entitySprite.transferControlToOffscreen()\n            msgInit.geoScanSprite = geoScanSprite.transferControlToOffscreen()\n            msgInit.cameraSprite = camSprite.transferControlToOffscreen()\n            const worker = new Worker(new URL('../../worker/MapRendererWorker', import.meta.url), {type: 'module'})\n            this.worker = new TypedWorkerFrontend(worker, (r: MapRendererResponse) => this.onResponseFromWorker(r))\n            this.worker.sendMessage(msgInit, [msgInit.terrainSprite, msgInit.monsterSprite, msgInit.materialSprite, msgInit.entitySprite, msgInit.geoScanSprite, msgInit.cameraSprite])\n        } catch (e) {\n            console.warn('Could not setup threaded worker!\\nUsing fallback to main thread, which might has bad performance.', e)\n            const worker = new TypedWorkerFallback((r: MapRendererResponse) => this.onResponseFromWorker(r))\n            new MapRendererWorker(worker)\n            this.worker = worker\n            this.worker.sendMessage(msgInit)\n        }\n    }\n\n    onResponseFromWorker(response: MapRendererResponse) {\n        if (response.type === MapRendererWorkerRequestType.RESPONSE_MAP_RENDERER) {\n            this.resolveCallbackById.get(response.requestId)?.()\n            this.resolveCallbackById.delete(response.requestId)\n        }\n    }\n\n    redrawTerrain(offset: { x: number, y: number }, surfaceRectSize: number, surfaceMap: MapSurfaceRect[][]): Promise<void> {\n        return new Promise((resolve) => {\n            const requestId = this.requestId++\n            this.resolveCallbackById.set(requestId, resolve)\n            this.worker.sendMessage({type: MapRendererWorkerRequestType.MAP_RENDER_TERRAIN, requestId: requestId, offset: offset, surfaceRectSize: surfaceRectSize, terrain: surfaceMap})\n        })\n    }\n\n    redrawSurface(offset: { x: number, y: number }, surfaceRectSize: number, surface: MapSurfaceRect): Promise<void> {\n        return new Promise((resolve) => {\n            const requestId = this.requestId++\n            this.resolveCallbackById.set(requestId, resolve)\n            this.worker.sendMessage({type: MapRendererWorkerRequestType.MAP_RENDER_SURFACE, requestId: requestId, offset: offset, surfaceRectSize: surfaceRectSize, surface: surface})\n        })\n    }\n\n    redrawEntities(offset: { x: number, y: number }, mapMarkerType: MapMarkerType, surfaceRectSize: number, entities: { x: number, z: number, r: number }[]): Promise<void> {\n        return new Promise((resolve) => {\n            const requestId = this.requestId++\n            this.resolveCallbackById.set(requestId, resolve)\n            this.worker.sendMessage({type: MapRendererWorkerRequestType.MAP_RENDER_ENTITIES, requestId: requestId, mapMarkerType: mapMarkerType, offset: offset, surfaceRectSize: surfaceRectSize, entities: entities})\n        })\n    }\n\n    redrawCamera(offset: { x: number, y: number }, surfaceRectSize: number, rect: MapRendererCameraRect | undefined): Promise<void> {\n        return new Promise((resolve) => {\n            const requestId = this.requestId++\n            this.resolveCallbackById.set(requestId, resolve)\n            this.worker.sendMessage({type: MapRendererWorkerRequestType.MAP_RENDER_CAMERA, requestId: requestId, offset: offset, surfaceRectSize: surfaceRectSize, rect: rect})\n        })\n    }\n}\n","import { createCanvas } from '../../core/ImageHelper'\nimport { SpriteContext, SpriteImage } from '../../core/Sprite'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { FollowerSetLookAtEvent, InitRadarMap, UpdateRadarCamera, UpdateRadarEntityEvent, UpdateRadarSurface, UpdateRadarTerrain } from '../../event/LocalEvents'\nimport { MAP_MARKER_CHANGE, MAP_MARKER_TYPE, MapMarkerType } from '../../game/component/MapMarkerComponent'\nimport { BaseElement } from '../base/BaseElement'\nimport { MapSurfaceRect } from './MapSurfaceRect'\nimport { MapRenderer } from './MapRenderer'\nimport { GameEntity } from '../../game/ECS'\nimport { CameraControl, ChangeTooltip } from '../../event/GuiCommand'\nimport { CursorManager } from '../../screen/CursorManager'\nimport { DEV_MODE, TILESIZE, TOOLTIP_DELAY_SFX, TOOLTIP_DELAY_TEXT_SCENE } from '../../params'\nimport { EventBroker } from '../../event/EventBroker'\nimport { Vector2 } from 'three'\nimport { MapRendererCameraRect } from '../../worker/MapRendererWorker'\nimport { Panel } from '../base/Panel'\n\nexport class MapView extends BaseElement {\n    readonly mapRenderer: MapRenderer\n    readonly surfaceSprite: SpriteImage\n    readonly entitySprite: SpriteImage\n    readonly monsterSprite: SpriteImage\n    readonly materialSprite: SpriteImage\n    readonly geoScanSprite: SpriteImage\n    readonly cameraSprite: SpriteImage\n    readonly offset: { x: number, y: number } = {x: 0, y: 0}\n    readonly surfaceMap: MapSurfaceRect[][] = []\n    readonly entitiesByOrder: Map<MapMarkerType, Map<GameEntity, { x: number, z: number, r: number }>> = new Map()\n    surfaceRectSizeMin: number = DEV_MODE ? 3 : 10\n    surfaceRectSizeMax: number = 15\n    surfaceRectSize: number = 10\n    terrainWidth: number = 0\n    terrainHeight: number = 0\n    lastSurface?: MapSurfaceRect\n    lastEntity?: GameEntity\n    entityBelowCursor?: GameEntity\n    cameraRect?: MapRendererCameraRect\n\n    constructor(readonly parentPanel: Panel) {\n        super()\n        this.width = 152\n        this.height = 149\n        this.surfaceSprite = createCanvas(this.width, this.height)\n        this.entitySprite = createCanvas(this.width, this.height)\n        this.monsterSprite = createCanvas(this.width, this.height)\n        this.materialSprite = createCanvas(this.width, this.height)\n        this.geoScanSprite = createCanvas(this.width, this.height)\n        this.cameraSprite = createCanvas(this.width, this.height)\n        this.mapRenderer = new MapRenderer(this.surfaceSprite, this.entitySprite, this.monsterSprite, this.materialSprite, this.geoScanSprite, this.cameraSprite)\n        this.relX = 15\n        this.relY = 15\n        this.onClick = (cx: number, cy: number) => {\n            if (this.entityBelowCursor) EventBroker.publish(new FollowerSetLookAtEvent(this.entityBelowCursor))\n            this.offset.x += (cx - this.x - this.width / 2)\n            this.offset.y += (cy - this.y - this.height / 2)\n            this.offset.x = Math.max(-this.width / 2, Math.min(this.terrainWidth * this.surfaceRectSize - this.width / 2, this.offset.x))\n            this.offset.y = Math.max(-this.height / 2, Math.min(this.terrainHeight * this.surfaceRectSize - this.height / 2, this.offset.y))\n            this.redrawAll()\n        }\n        this.registerEventListener(EventKey.INIT_RADAR_MAP, (event: InitRadarMap) => {\n            this.terrainWidth = event.terrainWidth\n            this.terrainHeight = event.terrainHeight\n            this.offset.x = event.focusTile.x * this.surfaceRectSize - this.width / 2\n            this.offset.y = event.focusTile.y * this.surfaceRectSize - this.height / 2\n            this.surfaceMap.length = 0\n            event.surfaces.forEach((s) => {\n                this.surfaceMap[s.x] = this.surfaceMap[s.x] || []\n                this.surfaceMap[s.x][s.y] = s\n            })\n            this.redrawAll()\n        })\n        this.registerEventListener(EventKey.UPDATE_RADAR_TERRAIN, (event: UpdateRadarTerrain) => {\n            this.terrainWidth = event.terrainWidth\n            this.terrainHeight = event.terrainHeight\n            this.surfaceMap.length = 0\n            event.surfaces.forEach((s) => {\n                this.surfaceMap[s.x] = this.surfaceMap[s.x] || []\n                this.surfaceMap[s.x][s.y] = s\n            })\n            this.mapRenderer.redrawTerrain(this.offset, this.surfaceRectSize, this.surfaceMap).then(() => this.notifyRedraw())\n        })\n        this.registerEventListener(EventKey.UPDATE_RADAR_SURFACE, (event: UpdateRadarSurface) => {\n            const s = event.surfaceRect\n            this.surfaceMap[s.x] = this.surfaceMap[s.x] || []\n            this.surfaceMap[s.x][s.y] = s\n            this.mapRenderer.redrawSurface(this.offset, this.surfaceRectSize, event.surfaceRect).then(() => this.notifyRedraw())\n        })\n        this.registerEventListener(EventKey.UPDATE_RADAR_ENTITY, (event: UpdateRadarEntityEvent) => {\n            const entities = this.entitiesByOrder.getOrUpdate(event.mapMarkerType, () => new Map())\n            switch (event.change) {\n                case MAP_MARKER_CHANGE.update:\n                    if (event.position) entities.set(event.entity, {x: event.position.x, z: event.position.z, r: event.radius ?? 0})\n                    break\n                case MAP_MARKER_CHANGE.remove:\n                    entities.delete(event.entity)\n                    break\n            }\n            this.mapRenderer.redrawEntities(this.offset, event.mapMarkerType, this.surfaceRectSize, Array.from(entities.values())).then(() => this.notifyRedraw())\n        })\n        this.registerEventListener(EventKey.UPDATE_RADAR_CAMERA, (event: UpdateRadarCamera) => {\n            this.cameraRect = event.cameraRect\n            this.mapRenderer.redrawCamera(this.offset, this.surfaceRectSize, this.cameraRect).then(() => this.notifyRedraw())\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.surfaceMap.length = 0\n        this.entitiesByOrder.clear()\n        this.cameraRect = undefined\n    }\n\n    zoomIn(): void {\n        if (this.surfaceRectSize < this.surfaceRectSizeMax) {\n            this.offset.x += (this.offset.x + this.width / 2) / this.surfaceRectSize\n            this.offset.y += (this.offset.y + this.height / 2) / this.surfaceRectSize\n            this.surfaceRectSize++\n            this.redrawAll()\n        }\n    }\n\n    zoomOut(): void {\n        if (this.surfaceRectSize > this.surfaceRectSizeMin) {\n            this.offset.x -= (this.offset.x + this.width / 2) / this.surfaceRectSize\n            this.offset.y -= (this.offset.y + this.height / 2) / this.surfaceRectSize\n            this.surfaceRectSize--\n            this.redrawAll()\n        }\n    }\n\n    private redrawAll() {\n        Promise.all([\n            this.mapRenderer.redrawTerrain(this.offset, this.surfaceRectSize, this.surfaceMap),\n            this.mapRenderer.redrawEntities(this.offset, MAP_MARKER_TYPE.default, this.surfaceRectSize, Array.from(this.entitiesByOrder.getOrUpdate(MAP_MARKER_TYPE.default, () => new Map()).values())),\n            this.mapRenderer.redrawEntities(this.offset, MAP_MARKER_TYPE.monster, this.surfaceRectSize, Array.from(this.entitiesByOrder.getOrUpdate(MAP_MARKER_TYPE.monster, () => new Map()).values())),\n            this.mapRenderer.redrawEntities(this.offset, MAP_MARKER_TYPE.material, this.surfaceRectSize, Array.from(this.entitiesByOrder.getOrUpdate(MAP_MARKER_TYPE.material, () => new Map()).values())),\n            this.mapRenderer.redrawEntities(this.offset, MAP_MARKER_TYPE.scanner, this.surfaceRectSize, Array.from(this.entitiesByOrder.getOrUpdate(MAP_MARKER_TYPE.scanner, () => new Map()).values())),\n            this.mapRenderer.redrawCamera(this.offset, this.surfaceRectSize, this.cameraRect),\n        ]).then(() => this.notifyRedraw())\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        super.onRedraw(context)\n        context.drawImage(this.surfaceSprite, this.x, this.y)\n        context.drawImage(this.entitySprite, this.x, this.y)\n        context.drawImage(this.monsterSprite, this.x, this.y)\n        context.drawImage(this.materialSprite, this.x, this.y)\n        context.drawImage(this.geoScanSprite, this.x, this.y)\n        context.drawImage(this.cameraSprite, this.x, this.y)\n    }\n\n    isInRect(sx: number, sy: number): boolean {\n        const inRect = super.isInRect(sx, sy)\n        this.entityBelowCursor = undefined\n        if (inRect) {\n            this.entitiesByOrder.forEach((entities) => {\n                entities.forEach((pos, entity) => {\n                    const tx = (sx - this.x + this.offset.x)\n                    const ty = (sy - this.y + this.offset.y)\n                    const ex = pos.x / TILESIZE * this.surfaceRectSize\n                    const ez = pos.z / TILESIZE * this.surfaceRectSize\n                    const dx = tx - ex\n                    const dz = ty - ez\n                    if (Math.abs(dx) <= 2 && Math.abs(dz) <= 2) { // TODO sync with rect size in MapRendererWorker\n                        this.entityBelowCursor = entity\n                        CursorManager.changeCursor('trackObject')\n                        if (this.lastEntity !== entity) {\n                            this.lastEntity = entity\n                            // TODO get entity object name and publish tooltip event\n                        }\n                    }\n                })\n            })\n            const surfaceX = Math.floor((sx - this.x + this.offset.x) / this.surfaceRectSize)\n            const surfaceY = Math.floor((sy - this.y + this.offset.y) / this.surfaceRectSize)\n            const surface = this.surfaceMap[surfaceX]?.[surfaceY]\n            if (surface && surface !== this.lastSurface) {\n                this.lastSurface = surface\n                const objectName = surface.objectName\n                if (objectName) EventBroker.publish(new ChangeTooltip(objectName, TOOLTIP_DELAY_TEXT_SCENE, surface.sfxKey, TOOLTIP_DELAY_SFX))\n            }\n        }\n        return inRect\n    }\n\n    onDrag(x: number, y: number) {\n        super.onDrag(x, y)\n        const tx = (x - this.x + this.offset.x)\n        const ty = (y - this.y + this.offset.y)\n        const worldPos = new Vector2(tx, ty).multiplyScalar(TILESIZE / this.surfaceRectSize)\n        EventBroker.publish(new CameraControl({jumpToWorld: worldPos}))\n    }\n\n    notifyRedraw() {\n        if (this.parentPanel.movedIn) return\n        super.notifyRedraw()\n    }\n}\n","import { BaseElement } from '../base/BaseElement'\nimport { PanelCfg } from '../../cfg/PanelCfg'\nimport { SpriteContext, SpriteImage } from '../../core/Sprite'\nimport { clearIntervalSafe } from '../../core/Util'\nimport { FollowerSetCanvasEvent } from '../../event/LocalEvents'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { EventBroker } from '../../event/EventBroker'\nimport { BaseEvent } from '../../event/EventTypeMap'\n\nexport class FollowerView extends BaseElement {\n    readonly overlay: SpriteImage\n    renderInterval?: NodeJS.Timeout\n    followerCanvas?: SpriteImage\n\n    constructor(panelCfg: PanelCfg) {\n        super()\n        this.relX = panelCfg.xIn\n        this.relY = panelCfg.yIn\n        this.overlay = ResourceManager.getImage(panelCfg.filename)\n        this.registerEventListener(EventKey.FOLLOWER_SET_CANVAS, (event: FollowerSetCanvasEvent) => {\n            this.followerCanvas = event.canvas\n        })\n    }\n\n    show() {\n        super.show()\n        this.renderInterval = clearIntervalSafe(this.renderInterval)\n        this.renderInterval = setInterval(() => {\n            if (this.followerCanvas) this.notifyRedraw()\n        })\n        EventBroker.publish(new BaseEvent(EventKey.FOLLOWER_RENDER_START))\n    }\n\n    hide() {\n        super.hide()\n        this.renderInterval = clearIntervalSafe(this.renderInterval)\n        EventBroker.publish(new BaseEvent(EventKey.FOLLOWER_RENDER_STOP))\n    }\n\n    reset() {\n        super.reset()\n        this.renderInterval = clearIntervalSafe(this.renderInterval)\n        EventBroker.publish(new BaseEvent(EventKey.FOLLOWER_RENDER_STOP))\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        if (this.followerCanvas) {\n            context.drawImage(this.followerCanvas, this.x - 8, this.y - 2)\n            if (this.overlay) context.drawImage(this.overlay, this.x + 4, this.y - 2)\n        }\n    }\n}\n","import { ButtonRadarCfg } from '../../cfg/ButtonsCfg'\nimport { PanelCfg } from '../../cfg/PanelCfg'\nimport { BaseElement } from '../base/BaseElement'\nimport { Button } from '../base/Button'\nimport { Panel } from '../base/Panel'\nimport { MapView } from './MapView'\nimport { SpriteContext, SpriteImage } from '../../core/Sprite'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { FollowerView } from './FollowerView'\n\nexport class RadarPanel extends Panel {\n    readonly fill: SpriteImage\n    readonly map: MapView\n    readonly follower: FollowerView\n    readonly btnToggle: Button\n    readonly btnMap: Button\n    readonly btnTagged: Button\n    readonly btnZoomIn: Button\n    readonly btnZoomOut: Button\n    lastView?: BaseElement\n\n    constructor(panelCfg: PanelCfg, panelFillCfg: PanelCfg, panelOverlayCfg: PanelCfg, buttonsCfg: ButtonRadarCfg) {\n        super(panelCfg)\n        this.fill = ResourceManager.getImage(panelFillCfg.filename)\n        this.map = this.addChild(new MapView(this))\n        this.follower = this.addChild(new FollowerView(panelOverlayCfg))\n        this.btnToggle = this.addChild(new Button(buttonsCfg.panelButtonRadarToggle))\n        this.btnToggle.onClick = () => this.toggleState()\n        this.btnMap = this.addChild(new Button(buttonsCfg.panelButtonRadarMapView))\n        this.btnMap.onClick = () => {\n            this.map.show()\n            this.follower.hide()\n            this.lastView = this.map\n            this.btnZoomIn.hidden = this.map.hidden\n            this.btnZoomOut.hidden = this.map.hidden\n        }\n        this.btnTagged = this.addChild(new Button(buttonsCfg.panelButtonRadarTaggedObjectView))\n        this.btnTagged.onClick = () => {\n            this.map.hide()\n            this.follower.show()\n            this.lastView = this.follower\n            this.btnZoomIn.hidden = this.map.hidden\n            this.btnZoomOut.hidden = this.map.hidden\n        }\n        this.btnZoomIn = this.addChild(new Button(buttonsCfg.panelButtonRadarZoomIn))\n        this.btnZoomIn.onClick = () => this.map.zoomIn()\n        this.btnZoomIn.hidden = this.map.hidden\n        this.btnZoomOut = this.addChild(new Button(buttonsCfg.panelButtonRadarZoomOut))\n        this.btnZoomOut.onClick = () => this.map.zoomOut()\n        this.btnZoomOut.hidden = this.map.hidden\n    }\n\n    toggleState(onDone?: () => void) {\n        super.toggleState(() => {\n            if (!this.movedIn && this.lastView) {\n                this.lastView.hidden = false\n                if (this.lastView === this.map) {\n                    this.btnZoomIn.hidden = this.map.hidden\n                    this.btnZoomOut.hidden = this.map.hidden\n                }\n            }\n            if (onDone) onDone()\n        })\n        if (this.movedIn) {\n            this.map.hidden = true\n            this.follower.hidden = true\n        }\n    }\n\n    reset() {\n        super.reset()\n        this.map.hide()\n        this.follower.hide()\n        this.lastView = this.map\n        this.btnZoomIn.hidden = this.map.hidden\n        this.btnZoomOut.hidden = this.map.hidden\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        if (this.fill) context.drawImage(this.fill, this.x, this.y)\n        this.map.onRedraw(context)\n        this.follower.onRedraw(context)\n        if (this.img) context.drawImage(this.img, this.x, this.y)\n        this.btnToggle.onRedraw(context)\n        this.btnMap.onRedraw(context)\n        this.btnTagged.onRedraw(context)\n        this.btnZoomIn.onRedraw(context)\n        this.btnZoomOut.onRedraw(context)\n        this.children.forEach((child) => child.drawHover(context))\n    }\n}\n","import { SpriteImage } from '../../core/Sprite'\nimport { TextInfoMessageEntryCfg } from '../../cfg/TextInfoMessageCfg'\nimport { DEFAULT_FONT_NAME } from '../../params'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { BitmapFontWorkerPool } from '../../worker/BitmapFontWorkerPool'\n\nexport class TextInfoMessage {\n    constructor(\n        readonly textImage: SpriteImage | undefined,\n        readonly infoImage: SpriteImage | undefined,\n        readonly sfxSample: string | undefined,\n    ) {\n    }\n\n    static async fromConfig(cfg: TextInfoMessageEntryCfg, maxWidth: number): Promise<TextInfoMessage> {\n        const infoImage = cfg.imageFilename ? ResourceManager.getImage(cfg.imageFilename) : undefined\n        maxWidth = maxWidth - (infoImage?.width || 0)\n        const textImage = await BitmapFontWorkerPool.instance.createTextImage(DEFAULT_FONT_NAME, cfg.text, maxWidth)\n        return new TextInfoMessage(textImage, infoImage, cfg.sfxName)\n    }\n}\n","import { PanelCfg } from '../../cfg/PanelCfg'\nimport { SpriteContext, SpriteImage } from '../../core/Sprite'\nimport { clearIntervalSafe, clearTimeoutSafe } from '../../core/Util'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { RaiderTrainingCompleteEvent, SetSpaceToContinueEvent } from '../../event/LocalEvents'\nimport { PlaySoundEvent } from '../../event/GuiCommand'\nimport { Panel } from '../base/Panel'\nimport { TextInfoMessage } from './TextInfoMessage'\nimport { TextInfoMessageCfg, TextInfoMessageEntryCfg } from '../../cfg/TextInfoMessageCfg'\nimport { AIR_LEVEL_LEVEL_LOW, AIR_LEVEL_WARNING_STEP } from '../../params'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { AirLevelChanged, GameResultEvent, NerpMessageEvent, NerpSuppressArrowEvent } from '../../event/WorldEvents'\nimport { GAME_RESULT_STATE } from '../../game/model/GameResult'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { Button } from '../base/Button'\nimport { EventBroker } from '../../event/EventBroker'\nimport { BaseEvent } from '../../event/EventTypeMap'\n\nexport class MessagePanel extends Panel {\n    private readonly maxAirLevelWidth = 236\n    readonly textInfoMessageCache: Map<TextInfoMessageEntryCfg, Promise<TextInfoMessage>> = new Map()\n\n    imgAir: SpriteImage\n    imgNoAir: SpriteImage\n    currentMessage?: TextInfoMessage\n    messageTimeout?: NodeJS.Timeout\n\n    airLevelWidth: number = this.maxAirLevelWidth\n    nextAirWarning: number = 1 - AIR_LEVEL_WARNING_STEP\n    blinkLabel: boolean = false\n    blinkInterval?: NodeJS.Timeout\n\n    btnNext: Button\n    btnRepeat: Button\n    suppressArrow: boolean = false\n\n    constructor(panelCfg: PanelCfg, textInfoMessageConfig: TextInfoMessageCfg) {\n        super(panelCfg)\n        this.relX = this.xOut = this.xIn = 42\n        this.relY = this.yOut = this.yIn = 409\n        this.imgAir = ResourceManager.getImage('Interface/Airmeter/msgpanel_air_juice.bmp')\n        this.imgNoAir = ResourceManager.getImage('Interface/Airmeter/msgpanel_noair.bmp')\n\n        this.btnNext = this.addChild(new Button({\n            normalFile: GameConfig.instance.main.nextButton,\n            relX: GameConfig.instance.main.nextButtonPos.x - this.relX,\n            relY: GameConfig.instance.main.nextButtonPos.y - this.relY,\n            tooltipText: GameConfig.instance.getTooltipText('ToolTip_NextMessage'),\n        }, true))\n        this.btnNext.onClick = () => {\n            EventBroker.publish(new BaseEvent(EventKey.NERP_MESSAGE_NEXT))\n        }\n        this.btnRepeat = this.addChild(new Button({\n            normalFile: GameConfig.instance.main.backButton,\n            relX: GameConfig.instance.main.backButtonPos.x - this.relX,\n            relY: GameConfig.instance.main.backButtonPos.y - this.relY,\n            tooltipText: GameConfig.instance.getTooltipText('ToolTip_Back')\n        }))\n        this.btnRepeat.onClick = () => {\n            // TODO Restart message animation and voice line\n            console.warn('Not yet implemented')\n        }\n\n        this.registerEventListener(EventKey.LOCATION_CRYSTAL_FOUND, () => this.setMessage(textInfoMessageConfig.textCrystalFound))\n        this.registerEventListener(EventKey.CAVERN_DISCOVERED, () => this.setMessage(textInfoMessageConfig.textCavernDiscovered))\n        this.registerEventListener(EventKey.ORE_FOUND, () => this.setMessage(textInfoMessageConfig.textOreFound))\n        this.registerEventListener(EventKey.AIR_LEVEL_CHANGED, (event: AirLevelChanged) => {\n            this.onAirLevelChanged(event.airLevel, textInfoMessageConfig)\n        })\n        this.registerEventListener(EventKey.GAME_RESULT_STATE, (event: GameResultEvent) => {\n            if (event.result === GAME_RESULT_STATE.complete) this.setMessage(textInfoMessageConfig.textGameCompleted)\n        })\n        this.registerEventListener(EventKey.RAIDER_TRAINING_COMPLETE, (event: RaiderTrainingCompleteEvent) => event.training && this.setMessage(textInfoMessageConfig.textManTrained))\n        this.registerEventListener(EventKey.VEHICLE_UPGRADE_COMPLETE, () => this.setMessage(textInfoMessageConfig.textUnitUpgraded))\n        this.registerEventListener(EventKey.NERP_MESSAGE, (event: NerpMessageEvent) => {\n            const customMessageCfg = new TextInfoMessageEntryCfg()\n            customMessageCfg.text = event.text\n            this.setTimedMessage(customMessageCfg, event.arrowDisabled ? event.messageTimeoutMs : 0, event.arrowDisabled)\n        })\n        this.registerEventListener(EventKey.NERP_MESSAGE_NEXT, () => {\n            this.removeMessage()\n        })\n        this.registerEventListener(EventKey.NERP_SUPPRESS_ARROW, (event: NerpSuppressArrowEvent) => {\n            this.suppressArrow = event.suppressArrow\n            this.btnNext.hidden = event.suppressArrow\n        })\n        this.registerEventListener(EventKey.SET_SPACE_TO_CONTINUE, (event: SetSpaceToContinueEvent) => {\n            if (event.state) {\n                this.setTimedMessage(textInfoMessageConfig.textSpaceToContinue, 0, true)\n            } else {\n                this.unsetMessage(textInfoMessageConfig.textSpaceToContinue)\n            }\n        })\n    }\n\n    private onAirLevelChanged(airLevel: number, textInfoMessageConfig: TextInfoMessageCfg) {\n        if (airLevel <= 0) return\n        const nextAirLevelWidth = Math.round(this.maxAirLevelWidth * airLevel)\n        if (this.airLevelWidth === nextAirLevelWidth) return\n        const nextPercent = nextAirLevelWidth / this.maxAirLevelWidth\n        if (nextPercent < this.nextAirWarning) {\n            const critical = nextPercent <= AIR_LEVEL_LEVEL_LOW\n            if (critical && !this.blinkInterval) this.blinkInterval = setInterval(() => {\n                this.blinkLabel = !this.blinkLabel\n                this.notifyRedraw()\n            }, 1000)\n            const infoMessageCfg = critical ? textInfoMessageConfig.textAirSupplyLow : textInfoMessageConfig.textAirSupplyRunningOut\n            this.setMessage(infoMessageCfg)\n        }\n        this.nextAirWarning = Math.min(1 - AIR_LEVEL_WARNING_STEP, Math.floor(nextAirLevelWidth / this.maxAirLevelWidth / AIR_LEVEL_WARNING_STEP) * AIR_LEVEL_WARNING_STEP)\n        this.airLevelWidth = nextAirLevelWidth\n        this.notifyRedraw()\n    }\n\n    reset() {\n        super.reset()\n        this.airLevelWidth = this.maxAirLevelWidth\n        this.nextAirWarning = 1 - AIR_LEVEL_WARNING_STEP\n        this.blinkLabel = false\n        this.blinkInterval = clearIntervalSafe(this.blinkInterval)\n        this.currentMessage = undefined\n        this.btnNext.hidden = true\n        this.btnRepeat.hidden = true\n        this.suppressArrow = false\n    }\n\n    setMessage(cfg: TextInfoMessageEntryCfg) {\n        if (this.currentMessage) return\n        this.setTimedMessage(cfg, GameConfig.instance.main.textPauseTimeMs, true)\n    }\n\n    private setTimedMessage(cfg: TextInfoMessageEntryCfg, timeout: number, arrowHidden: boolean) {\n        this.btnNext.hidden = arrowHidden || this.suppressArrow\n        this.btnRepeat.hidden = !!cfg.imageFilename\n        const maxMessageWidth = GameConfig.instance.main.nextButtonPos.x - this.x - 20\n        this.textInfoMessageCache.getOrUpdate(cfg, () => TextInfoMessage.fromConfig(cfg, maxMessageWidth)).then((msg: TextInfoMessage) => {\n            this.messageTimeout = clearTimeoutSafe(this.messageTimeout)\n            this.currentMessage = msg\n            const textImageHeight = this.currentMessage.textImage?.height || 0\n            this.yOut = Math.max(480 - 409, 480 - 26 - textImageHeight)\n            this.setMovedIn(textImageHeight <= 42)\n            this.notifyRedraw()\n            if (this.currentMessage.sfxSample) this.publishEvent(new PlaySoundEvent(this.currentMessage.sfxSample, true))\n            if (timeout > 0) {\n                this.messageTimeout = setTimeout(() => {\n                    this.messageTimeout = undefined\n                    this.removeMessage()\n                }, timeout)\n            }\n        })\n    }\n\n    private unsetMessage(cfg: TextInfoMessageEntryCfg) {\n        this.textInfoMessageCache.getOrUpdate(cfg, () => TextInfoMessage.fromConfig(cfg, this.width)).then((msg: TextInfoMessage) => {\n            if (this.currentMessage === msg) this.removeMessage()\n        })\n    }\n\n    private removeMessage() {\n        this.currentMessage = undefined\n        this.setMovedIn(true)\n        this.btnNext.hidden = true\n        this.btnRepeat.hidden = true\n        this.notifyRedraw()\n    }\n\n    updatePosition() {\n        super.updatePosition()\n        this.btnNext.relY = GameConfig.instance.main.nextButtonPos.y - this.y\n        this.btnNext.updatePosition()\n        this.btnRepeat.relY = GameConfig.instance.main.backButtonPos.y - this.y\n        this.btnRepeat.updatePosition()\n    }\n\n    onRedraw(context: SpriteContext) {\n        super.onRedraw(context)\n        context.drawImage(this.imgAir, this.x + 85, this.y + 6, this.airLevelWidth, 8)\n        if (this.blinkLabel) context.drawImage(this.imgNoAir, this.x + 21, this.y)\n        const textImage = this.currentMessage?.textImage\n        const infoImage = this.currentMessage?.infoImage\n        if (textImage) {\n            let txtX = (this.btnNext.relX - textImage.width) / 2\n            if (infoImage) txtX = (this.width - textImage.width - infoImage.width) / 2\n            context.drawImage(textImage, this.x + 6 + txtX, this.y + 26)\n        }\n        if (infoImage) {\n            const infoX = this.x + this.width - infoImage.width\n            context.drawImage(infoImage, infoX, this.y + 16)\n        }\n    }\n}\n","import { ButtonCfg } from '../../cfg/ButtonCfg'\nimport { SpriteContext } from '../../core/Sprite'\nimport { BaseElement } from '../base/BaseElement'\nimport { GameConfig } from '../../cfg/GameConfig'\n\nexport class SideBarLabel extends BaseElement {\n    tooltip: string\n    label: string\n\n    constructor(btnCfg: ButtonCfg) {\n        super()\n        this.relX = btnCfg.relX\n        this.relY = btnCfg.relY\n        this.width = btnCfg.width\n        this.height = btnCfg.height\n        this.tooltip = GameConfig.instance.getTooltipText(btnCfg.tooltipKey)\n        this.label = '0'\n        this.updatePosition()\n    }\n\n    reset() {\n        super.reset()\n        this.label = '0'\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        context.textAlign = 'center'\n        context.font = 'bold 10px sans-serif'\n        context.fillStyle = '#fff'\n        context.fillText(this.label, this.x + this.width / 2, this.y + this.height - 2)\n        super.onRedraw(context)\n    }\n}\n","import { ButtonCrystalSideBarCfg } from '../../cfg/ButtonsCfg'\nimport { PanelCfg } from '../../cfg/PanelCfg'\nimport { SpriteContext, SpriteImage } from '../../core/Sprite'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { LevelSelectedEvent, MaterialAmountChanged, UsedCrystalsChanged } from '../../event/WorldEvents'\nimport { Panel } from '../base/Panel'\nimport { SideBarLabel } from './SideBarLabel'\nimport { ResourceManager } from '../../resource/ResourceManager'\n\nexport class PanelCrystalSideBar extends Panel {\n    labelOre: SideBarLabel\n    labelCrystal: SideBarLabel\n    imgNoCrystal: SpriteImage\n    imgSmallCrystal: SpriteImage\n    imgUsedCrystal: SpriteImage\n    imgOre: SpriteImage\n\n    numCrystal: number = 0\n    usedCrystals: number = 0\n    neededCrystals: number = 0\n    totalOre: number = 0\n\n    constructor(panelCfg: PanelCfg, buttonsCfg: ButtonCrystalSideBarCfg) {\n        super(panelCfg)\n        this.labelOre = this.addChild(new SideBarLabel(buttonsCfg.panelButtonCrystalSideBarOre))\n        this.labelCrystal = this.addChild(new SideBarLabel(buttonsCfg.panelButtonCrystalSideBarCrystals))\n        this.imgNoCrystal = ResourceManager.getImage('Interface/RightPanel/NoSmallCrystal.bmp')\n        this.imgSmallCrystal = ResourceManager.getImage('Interface/RightPanel/SmallCrystal.bmp')\n        this.imgUsedCrystal = ResourceManager.getImage('Interface/RightPanel/UsedCrystal.bmp')\n        this.imgOre = ResourceManager.getImage('Interface/RightPanel/CrystalSideBar_Ore.bmp')\n        this.registerEventListener(EventKey.MATERIAL_AMOUNT_CHANGED, (event: MaterialAmountChanged) => {\n            this.numCrystal = event.numCrystal\n            this.totalOre = event.totalOre\n            this.labelCrystal.label = this.numCrystal.toString()\n            this.labelOre.label = this.totalOre.toString()\n            this.notifyRedraw()\n        })\n        this.registerEventListener(EventKey.USED_CRYSTALS_CHANGED, (event: UsedCrystalsChanged) => {\n            this.usedCrystals = event.usedCrystals\n        })\n        this.registerEventListener(EventKey.LEVEL_SELECTED, (event: LevelSelectedEvent) => {\n            this.neededCrystals = event.levelConf.reward?.quota?.crystals || 0\n            this.notifyRedraw()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.numCrystal = 0\n        this.usedCrystals = 0\n        this.totalOre = 0\n    }\n\n    onRedraw(context: SpriteContext) {\n        super.onRedraw(context)\n        // draw crystals\n        let curX = this.x + this.width - 8\n        let curY = this.y + this.height - 34\n        for (let c = 0; (this.neededCrystals < 1 || c < Math.max(this.neededCrystals, this.numCrystal)) && curY >= Math.max(this.imgNoCrystal.height, this.imgSmallCrystal.height, this.imgUsedCrystal.height); c++) {\n            let imgCrystal = this.imgNoCrystal\n            if (this.usedCrystals > c) {\n                imgCrystal = this.imgUsedCrystal\n            } else if (this.numCrystal > c) {\n                imgCrystal = this.imgSmallCrystal\n            }\n            curY -= imgCrystal.height\n            context.drawImage(imgCrystal, curX - imgCrystal.width / 2, curY)\n        }\n        // draw ores\n        curX = this.x + this.width - 21\n        curY = this.y + this.height - 42\n        for (let i = 0; i < this.totalOre && curY >= this.imgOre.height; ++i) {\n            curY -= this.imgOre.height\n            context.drawImage(this.imgOre, curX - this.imgOre.width / 2, curY)\n        }\n    }\n}\n","import { TypedWorkerThreaded } from './TypedWorker'\nimport { AbstractWorkerSystem } from './AbstractWorkerSystem'\nimport { SpriteImage } from '../core/Sprite'\nimport { EntityType } from '../game/model/EntityType'\nimport { createContext, imgDataToCanvas } from '../core/ImageHelper'\nimport { EntityDependencyChecked } from '../cfg/GameConfig'\nimport { BitmapFont, BitmapFontData } from '../core/BitmapFont'\n\nexport const enum DependencySpriteWorkerRequestType {\n    SETUP = 1, // start with 1 for truthiness safety\n    CREATE_SPRITE,\n}\n\nexport interface DependencySpriteWorkerSetupRequest {\n    type: DependencySpriteWorkerRequestType.SETUP\n    upgradeNames: string[]\n    tooltipFontData: BitmapFontData\n    plusSignImgData: ImageData\n    equalSignImgData: ImageData\n    interfaceImageData: Map<string, [ImageData, ImageData]>\n    interfaceBuildImageData: Map<string, [ImageData, ImageData]>\n}\n\nexport interface DependencySpriteWorkerCreateSpriteRequest {\n    type: DependencySpriteWorkerRequestType.CREATE_SPRITE\n    dependencies: EntityDependencyChecked[]\n}\n\nexport type DependencySpriteWorkerRequest = DependencySpriteWorkerSetupRequest | DependencySpriteWorkerCreateSpriteRequest\n\nexport interface DependencySpriteWorkerResponse {\n    dependencyImage?: ImageData\n}\n\nexport class DependencySpriteSystem extends AbstractWorkerSystem<DependencySpriteWorkerRequest, DependencySpriteWorkerResponse> {\n    readonly interfaceImages: Map<string, [SpriteImage, SpriteImage]> = new Map()\n    readonly interfaceBuildImages: Map<string, [SpriteImage, SpriteImage]> = new Map()\n    upgradeNames?: string[]\n    tooltipFont?: BitmapFont\n    plusSignImg?: SpriteImage\n    equalsSignImg?: SpriteImage\n\n    onMessageFromFrontend(workerRequestHash: string, request: DependencySpriteWorkerRequest): void {\n        switch (request.type) {\n            case DependencySpriteWorkerRequestType.SETUP:\n                this.upgradeNames = request.upgradeNames\n                this.tooltipFont = new BitmapFont(request.tooltipFontData)\n                this.plusSignImg = imgDataToCanvas(request.plusSignImgData)\n                this.equalsSignImg = imgDataToCanvas(request.equalSignImgData)\n                request.interfaceImageData.forEach((imgData, key) => this.interfaceImages\n                    .set(key.toLowerCase(), [imgDataToCanvas(imgData[0]), imgDataToCanvas(imgData[1])]))\n                request.interfaceBuildImageData.forEach((imgData, key) => this.interfaceBuildImages\n                    .set(key.toLowerCase(), [imgDataToCanvas(imgData[0]), imgDataToCanvas(imgData[1])]))\n                this.sendResponse(workerRequestHash, {})\n                break\n            case DependencySpriteWorkerRequestType.CREATE_SPRITE:\n                const upgradeNames = this.upgradeNames\n                const tooltipFont = this.tooltipFont\n                const plusSignImg = this.plusSignImg\n                const equalsSignImg = this.equalsSignImg\n                if (!upgradeNames || !tooltipFont || !plusSignImg || !equalsSignImg) {\n                    console.error('Dependency sprite worker not yet setup', upgradeNames, tooltipFont, plusSignImg, equalsSignImg)\n                    this.sendResponse(workerRequestHash, {})\n                    return\n                }\n                let totalWidth = 0\n                let totalHeight = 0\n                const deps = request.dependencies.map((dep) => {\n                    let depImages: [SpriteImage, SpriteImage] | undefined\n                    if (dep.entityType === EntityType.PILOT) {\n                        depImages = this.interfaceImages.get('Interface_MenuItem_TeleportMan'.toLowerCase()) // TODO Improve config parsing and use specific key here\n                    } else {\n                        depImages = this.interfaceBuildImages.get(dep.itemKey.toLowerCase()) // TODO Improve config parsing and use specific key here\n                    }\n                    if (!Array.isArray(depImages) || depImages.length !== 2) throw new Error(`Unexpected dependency images array (${depImages})`)\n                    const depImg = dep.isOk ? depImages[0] : depImages[1]\n                    totalWidth += depImg.width\n                    totalHeight = Math.max(totalHeight, depImg.height)\n                    return {img: depImg, level: dep.minLevel}\n                })\n                totalWidth += plusSignImg.width * (deps.length - 1)\n                totalWidth += equalsSignImg.width * 2\n                const dependencySprite = createContext(totalWidth, totalHeight)\n                let posX = 0\n                deps.forEach((s, index) => {\n                    dependencySprite.drawImage(s.img, posX, (totalHeight - s.img.height) / 2)\n                    if (s.level) {\n                        const upgradeName = upgradeNames[s.level - 1]\n                        if (upgradeName) {\n                            const minLevelImg = tooltipFont.createTextImage(upgradeName)\n                            if (minLevelImg) dependencySprite.drawImage(minLevelImg, posX + 3, (totalHeight - s.img.height) / 2 + 3)\n                        }\n                    }\n                    posX += s.img.width\n                    const signImg = index === deps.length - 1 ? equalsSignImg : plusSignImg\n                    dependencySprite.drawImage(signImg, posX, (totalHeight - signImg.height) / 2)\n                    posX += signImg.width\n                })\n                this.sendResponse(workerRequestHash, {dependencyImage: dependencySprite.getImageData(0, 0, dependencySprite.canvas.width, dependencySprite.canvas.height)})\n                break\n        }\n    }\n}\n\nconst worker: Worker = self as any\nnew DependencySpriteSystem(new TypedWorkerThreaded(worker))\n","import { AbstractWorkerPool } from './AbstractWorkerPool'\nimport { TypedWorkerFallback, WorkerRequestMessage, WorkerResponseMessage } from './TypedWorker'\nimport { DependencySpriteSystem, DependencySpriteWorkerCreateSpriteRequest, DependencySpriteWorkerRequest, DependencySpriteWorkerRequestType, DependencySpriteWorkerResponse } from './DependencySpriteWorker'\nimport { EntityDependencyChecked, GameConfig } from '../cfg/GameConfig'\nimport { SpriteImage } from '../core/Sprite'\nimport { BitmapFontData } from '../core/BitmapFont'\nimport { imgDataToCanvas } from '../core/ImageHelper'\n\nexport class DependencySpriteWorkerPool extends AbstractWorkerPool<DependencySpriteWorkerRequest, DependencySpriteWorkerResponse> {\n    static readonly instance = new DependencySpriteWorkerPool()\n    static readonly dependencySpriteCache: Map<string, SpriteImage> = new Map()\n\n    setupPool(args: {\n        teleportManImageData: Map<string, [ImageData, ImageData]>,\n        tooltipFontData: BitmapFontData,\n        plusSign: ImageData,\n        equalSign: ImageData,\n        depInterfaceBuildImageData: Map<string, [ImageData, ImageData]>,\n    }) {\n        return this.startPool(4, {\n            type: DependencySpriteWorkerRequestType.SETUP,\n            upgradeNames: GameConfig.instance.upgradeNames,\n            tooltipFontData: args.tooltipFontData,\n            plusSignImgData: args.plusSign,\n            equalSignImgData: args.equalSign,\n            interfaceImageData: args.teleportManImageData,\n            interfaceBuildImageData: args.depInterfaceBuildImageData,\n        })\n    }\n\n    async createDependenciesSprite(dependencies: EntityDependencyChecked[]): Promise<SpriteImage | undefined> {\n        const depHash = dependencies.map((d) => `${d.itemKey}:${d.minLevel}=${d.isOk}`).join(';')\n        const fromCache = DependencySpriteWorkerPool.dependencySpriteCache.get(depHash)\n        if (fromCache) return fromCache\n        const message: DependencySpriteWorkerCreateSpriteRequest & { hash: string } = {type: DependencySpriteWorkerRequestType.CREATE_SPRITE, dependencies: dependencies, hash: depHash}\n        const response = await this.processMessage(message)\n        const imgData = response.dependencyImage\n        if (!imgData) return undefined\n        const dependencyImage = imgDataToCanvas(imgData)\n        DependencySpriteWorkerPool.dependencySpriteCache.set(depHash, dependencyImage)\n        return dependencyImage\n    }\n\n    protected createWorker() {\n        return new Worker(new URL('./DependencySpriteWorker', import.meta.url), {type: 'module'}) // do not change this line otherwise no worker.js is exported for production\n    }\n\n    protected attachFallbackSystem(worker: TypedWorkerFallback<WorkerRequestMessage<DependencySpriteWorkerRequest>, WorkerResponseMessage<DependencySpriteWorkerResponse>>) {\n        new DependencySpriteSystem(worker)\n    }\n}\n","import { Button } from '../base/Button'\nimport { ChangeTooltip, HideTooltip } from '../../event/GuiCommand'\nimport { DEV_MODE, TOOLTIP_DELAY_SFX } from '../../params'\nimport { SpriteContext, SpriteImage } from '../../core/Sprite'\nimport { EntityType, getEntityTypeByName } from '../../game/model/EntityType'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { BuildingsChangedEvent, RaidersAmountChangedEvent } from '../../event/LocalEvents'\nimport { EntityDependency, EntityDependencyChecked, GameConfig } from '../../cfg/GameConfig'\nimport { DependencySpriteWorkerPool } from '../../worker/DependencySpriteWorkerPool'\nimport { clearTimeoutSafe } from '../../core/Util'\nimport { InterfaceImageEntryCfg } from '../../cfg/InterfaceImageCfg'\n\nexport class IconPanelButton extends Button {\n    tooltipDisabled: string\n    tooltipDisabledSfx: string\n    hotkey: string\n    isDisabled: () => boolean = () => true\n    hasRaider: boolean = false\n    discoveredBuildingsMaxLevel: Map<EntityType, number> = new Map()\n    dependencyTooltipImage?: SpriteImage\n    showDependencies: boolean = false\n    hasUnfulfilledDependency: boolean = false\n    showDependenciesTimeout?: NodeJS.Timeout\n\n    constructor(interfaceImageCfg: InterfaceImageEntryCfg, parentWidth: number, menuIndex: number) {\n        super(interfaceImageCfg)\n        this.relX = parentWidth - 59\n        this.relY = 9 + this.height * menuIndex\n        this.hoverFrame = true\n        this.tooltipDisabled = interfaceImageCfg.tooltipDisabled\n        this.tooltipDisabledSfx = interfaceImageCfg.tooltipDisabledSfx\n        this.hotkey = interfaceImageCfg.hotkey\n        this.onClick = () => console.log(`menu item pressed: ${this.buttonType}`)\n        this.addDependencyCheck(getEntityTypeByName(this.buttonType))\n    }\n\n    addDependencyCheck(entityType: EntityType) {\n        if (!entityType) return\n        const dependencies = GameConfig.instance.dependencies[entityType.toLowerCase()]\n        if (!dependencies) return\n        if (dependencies.some((d) => d.entityType === EntityType.PILOT)) {\n            this.registerEventListener(EventKey.RAIDER_AMOUNT_CHANGED, (event: RaidersAmountChangedEvent) => {\n                this.hasRaider = event.hasRaider\n                this.updateDependenciesSprite(dependencies)\n            })\n        }\n        this.registerEventListener(EventKey.BUILDINGS_CHANGED, (event: BuildingsChangedEvent) => {\n            this.discoveredBuildingsMaxLevel = event.discoveredBuildingsMaxLevel\n            this.updateDependenciesSprite(dependencies)\n        })\n    }\n\n    private updateDependenciesSprite(dependencies: EntityDependency[]) {\n        const checked: EntityDependencyChecked[] = dependencies.map((d: EntityDependency): EntityDependencyChecked => ({\n            entityType: d.entityType,\n            itemKey: d.itemKey,\n            minLevel: d.minLevel,\n            isOk: (d.entityType === EntityType.PILOT && this.hasRaider)\n                || (this.discoveredBuildingsMaxLevel.getOrUpdate(d.entityType, () => -1) >= d.minLevel),\n        }))\n        this.hasUnfulfilledDependency = !DEV_MODE && checked.some((d) => !d.isOk)\n        DependencySpriteWorkerPool.instance.createDependenciesSprite(checked).then((dependencySprite) => this.dependencyTooltipImage = dependencySprite)\n        this.updateState(true)\n    }\n\n    showTooltipDisabled() {\n        super.showTooltipDisabled()\n        if (this.tooltipDisabled || this.tooltipDisabledSfx) {\n            this.publishEvent(new ChangeTooltip(this.tooltipDisabled, 0, this.tooltipDisabledSfx, TOOLTIP_DELAY_SFX))\n        }\n    }\n\n    reset() {\n        super.reset()\n        this.hasUnfulfilledDependency = false\n        this.hasRaider = false\n        this.discoveredBuildingsMaxLevel = new Map()\n        this.updateState(false)\n        this.showDependenciesTimeout = clearTimeoutSafe(this.showDependenciesTimeout)\n    }\n\n    hide() {\n        super.hide()\n        this.showDependenciesTimeout = clearTimeoutSafe(this.showDependenciesTimeout)\n    }\n\n    updateState(autoRedraw: boolean = true) {\n        const targetState = this.isDisabled()\n        const stateChanged = this.disabled !== targetState\n        this.disabled = targetState\n        if (stateChanged) {\n            if (autoRedraw) this.notifyRedraw()\n            if (this.disabled) {\n                this.publishEvent(new HideTooltip(this.tooltip))\n            } else {\n                this.publishEvent(new HideTooltip(this.tooltipDisabled))\n            }\n        }\n        return stateChanged\n    }\n\n    onPointerLeave(): boolean {\n        let stateChanged = super.onPointerLeave()\n        if (this.showDependencies || this.showDependenciesTimeout) {\n            this.showDependencies = false\n            this.showDependenciesTimeout = clearTimeoutSafe(this.showDependenciesTimeout)\n            stateChanged = true\n        }\n        return stateChanged\n    }\n\n    onRedraw(context: SpriteContext) {\n        super.onRedraw(context)\n        if (this.showDependencies && this.dependencyTooltipImage) {\n            context.drawImage(this.dependencyTooltipImage, this.x - this.dependencyTooltipImage.width, this.y + (this.height - this.dependencyTooltipImage.height) / 2)\n        }\n    }\n\n    isInRect(sx: number, sy: number): boolean {\n        const inRect = super.isInRect(sx, sy)\n        if (inRect) {\n            if (!this.showDependenciesTimeout) {\n                this.showDependenciesTimeout = setTimeout(() => {\n                    this.showDependencies = true\n                    this.notifyRedraw()\n                }, 500)\n            }\n        } else {\n            this.showDependencies = false\n            this.showDependenciesTimeout = clearTimeoutSafe(this.showDependenciesTimeout)\n        }\n        return inRect\n    }\n}\n","import { Button } from '../base/Button'\nimport { Panel } from '../base/Panel'\nimport { IconPanelButton } from './IconPanelButton'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { SpriteContext } from '../../core/Sprite'\nimport { EventBroker } from '../../event/EventBroker'\nimport { DeselectAll, GuiBackButtonClicked } from '../../event/LocalEvents'\nimport { InterfaceImageEntryCfg } from '../../cfg/InterfaceImageCfg'\n\nexport class IconSubPanel extends Panel {\n    readonly iconPanelButtons: IconPanelButton[] = []\n\n    constructor(numOfItems: number, onBackPanel: Panel | undefined, deselectAll: boolean) {\n        super()\n        if (onBackPanel) {\n            this.addChild(new Button(GameConfig.instance.interfaceBackButton)).onClick = () => {\n                if (deselectAll) {\n                    this.publishEvent(new DeselectAll())\n                } else {\n                    this.toggleState(() => onBackPanel.toggleState())\n                }\n                EventBroker.publish(new GuiBackButtonClicked())\n            }\n        }\n        const frameImgCfg = GameConfig.instance.interfaceSurroundImages[numOfItems]\n        this.img = onBackPanel ? ResourceManager.getImage(frameImgCfg.imgName) : ResourceManager.getImage(frameImgCfg.imgNameWoBackName)\n        this.xOut = -this.img.width\n        this.width = this.img.width\n    }\n\n    addMenuItem(interfaceImageCfg: InterfaceImageEntryCfg | undefined) {\n        if (!interfaceImageCfg) throw new Error(`No menu item config given`)\n        const menuItem = this.addChild(new IconPanelButton(interfaceImageCfg, this.width, this.iconPanelButtons.length))\n        this.iconPanelButtons.push(menuItem)\n        return menuItem\n    }\n\n    toggleState(onDone?: () => void) {\n        super.toggleState(onDone)\n        if (this.movedIn) {\n            this.iconPanelButtons.forEach((button) => button.showDependencies = false)\n        } else {\n            this.updateAllButtonStates()\n        }\n    }\n\n    updateAllButtonStates() {\n        this.iconPanelButtons.forEach((button) => button.updateState(false))\n        this.notifyRedraw()\n    }\n\n    isInactive(): boolean {\n        return this.movedIn || super.isInactive()\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.movedIn) return\n        super.onRedraw(context)\n    }\n}\n","import { SelectBuildMode } from '../../event/GuiCommand'\nimport { EntityType } from '../../game/model/EntityType'\nimport { Panel } from '../base/Panel'\nimport { IconSubPanel } from './IconSubPanel'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { InterfaceBuildImage } from '../../cfg/InterfaceImageCfg'\n\nexport class BuildingPanel extends IconSubPanel {\n    constructor(onBackPanel: Panel) {\n        super(10, onBackPanel, false)\n        this.addBuildMenuItem('toolstation', EntityType.TOOLSTATION)\n        this.addBuildMenuItem('teleportPad', EntityType.TELEPORT_PAD)\n        this.addBuildMenuItem('docks', EntityType.DOCKS)\n        this.addBuildMenuItem('powerStation', EntityType.POWER_STATION)\n        this.addBuildMenuItem('barracks', EntityType.BARRACKS)\n        this.addBuildMenuItem('upgrade', EntityType.UPGRADE)\n        this.addBuildMenuItem('geoDome', EntityType.GEODOME)\n        this.addBuildMenuItem('oreRefinery', EntityType.ORE_REFINERY)\n        this.addBuildMenuItem('gunstation', EntityType.GUNSTATION)\n        this.addBuildMenuItem('teleportBig', EntityType.TELEPORT_BIG)\n    }\n\n    addBuildMenuItem(interfaceBuildImage: InterfaceBuildImage, entityType: EntityType) {\n        const item = super.addMenuItem(GameConfig.instance.interfaceBuildImages[interfaceBuildImage])\n        item.isDisabled = () => item.hasUnfulfilledDependency\n        item.onClick = () => this.publishEvent(new SelectBuildMode(entityType))\n        item.tooltip = GameConfig.instance.objectNames[entityType.toLowerCase()]\n        if (!item.tooltip) console.warn(`Could not determine tooltip for ${entityType}`)\n        item.tooltipSfx = GameConfig.instance.objTtSFXs[entityType.toLowerCase()]\n        if (!item.tooltipSfx) console.warn(`Could not determine tooltip SFX for ${entityType}`)\n        item.tooltipDisabled = item.tooltip\n        item.tooltipDisabledSfx = item.tooltipSfx\n    }\n}\n","import { EventKey } from '../../event/EventKeyEnum'\nimport { PickTool } from '../../event/GuiCommand'\nimport { BuildingsChangedEvent, SelectionChanged } from '../../event/LocalEvents'\nimport { EntityType } from '../../game/model/EntityType'\nimport { RAIDER_TOOL, RaiderTool } from '../../game/model/raider/RaiderTool'\nimport { Panel } from '../base/Panel'\nimport { IconPanelButton } from './IconPanelButton'\nimport { IconSubPanel } from './IconSubPanel'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { InterfaceImage } from '../../cfg/InterfaceImageCfg'\n\nexport class GetToolPanel extends IconSubPanel {\n    hasToolstation: boolean = false\n    everyHasTool: Map<RaiderTool, boolean> = new Map()\n\n    constructor(onBackPanel: Panel) {\n        super(8, onBackPanel, false)\n        this.addGetToolItem('getDrill', RAIDER_TOOL.drill)\n        this.addGetToolItem('getSpade', RAIDER_TOOL.shovel)\n        this.addGetToolItem('getHammer', RAIDER_TOOL.hammer)\n        this.addGetToolItem('getSpanner', RAIDER_TOOL.spanner)\n        this.addGetToolItem('getFreezerGun', RAIDER_TOOL.freezerGun)\n        this.addGetToolItem('getLaser', RAIDER_TOOL.laser)\n        this.addGetToolItem('getPusherGun', RAIDER_TOOL.pusherGun)\n        this.addGetToolItem('getBirdScarer', RAIDER_TOOL.birdScarer)\n        this.registerEventListener(EventKey.BUILDINGS_CHANGED, (event: BuildingsChangedEvent) => {\n            this.hasToolstation = BuildingsChangedEvent.hasUsable(event, EntityType.TOOLSTATION)\n            this.updateAllButtonStates()\n        })\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.everyHasTool = event.everyHasTool\n            this.updateAllButtonStates()\n        })\n    }\n\n    addGetToolItem(interfaceImage: InterfaceImage, tool: RaiderTool): IconPanelButton {\n        const menuItem = super.addMenuItem(GameConfig.instance.interfaceImages[interfaceImage])\n        menuItem.isDisabled = () => !this.hasToolstation || !!this.everyHasTool.get(tool)\n        menuItem.onClick = () => this.publishEvent(new PickTool(tool))\n        return menuItem\n    }\n\n    reset() {\n        super.reset()\n        this.hasToolstation = false\n        this.everyHasTool = new Map()\n    }\n}\n","import { SpriteContext } from '../../core/Sprite'\nimport { BaseElement } from '../base/BaseElement'\n\nexport class IconPanelButtonLabel extends BaseElement {\n    label: string = ''\n\n    constructor() {\n        super()\n        this.relX = 4\n        this.relY = 11\n    }\n\n    setLabel(label: number) {\n        this.label = (label || '').toString()\n    }\n\n    reset() {\n        super.reset()\n        this.label = ''\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        context.textAlign = 'left'\n        context.font = 'bold 10px sans-serif'\n        context.fillStyle = this.disabled || (this.parent && this.parent.disabled) ? '#444' : '#fff'\n        context.fillText(this.label, this.x, this.y)\n        super.onRedraw(context)\n    }\n}\n","import { SpriteContext, SpriteImage } from '../../core/Sprite'\nimport { GuiPointerDownEvent } from '../event/GuiEvent'\nimport { IconPanelButton } from './IconPanelButton'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { InterfaceImageEntryCfg } from '../../cfg/InterfaceImageCfg'\n\nexport class IconPanelToggleButton extends IconPanelButton {\n    toggleState: boolean = false\n    imgOnNormal?: SpriteImage\n    imgOnHover?: SpriteImage\n    imgOnPressed?: SpriteImage\n    imgOnDisabled?: SpriteImage\n    isToggled: () => boolean = () => false\n\n    constructor(menuItemOffCfg: InterfaceImageEntryCfg, menuItemOnCfg: InterfaceImageEntryCfg, parentWidth: number, menuIndex: number) {\n        super(menuItemOffCfg, parentWidth, menuIndex)\n        if (menuItemOnCfg.normalFile) this.imgOnNormal = ResourceManager.getImage(menuItemOnCfg.normalFile)\n        if (menuItemOnCfg.highlightFile) this.imgOnHover = ResourceManager.getImage(menuItemOnCfg.highlightFile)\n        if (menuItemOnCfg.pressedFile) this.imgOnPressed = ResourceManager.getImage(menuItemOnCfg.pressedFile)\n        if (menuItemOnCfg.disabledFile) this.imgOnDisabled = ResourceManager.getImage(menuItemOnCfg.disabledFile)\n    }\n\n    clicked(event: GuiPointerDownEvent) {\n        this.toggleState = !this.toggleState\n        super.clicked(event)\n    }\n\n    updateState(autoRedraw: boolean = true): boolean {\n        const stateChanged = super.updateState(false)\n        const targetToggleState = this.isToggled()\n        const toggleStateChanged = this.toggleState = targetToggleState\n        this.toggleState = targetToggleState\n        if ((stateChanged || toggleStateChanged) && autoRedraw) this.notifyRedraw()\n        return stateChanged || toggleStateChanged\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        let img = this.toggleState ? this.imgOnNormal : this.imgNormal\n        if (this.disabled) {\n            if (this.toggleState) {\n                img = this.imgOnDisabled || this.imgOnPressed || this.imgOnNormal\n            } else {\n                img = this.imgDisabled || this.imgPressed || this.imgNormal\n            }\n        } else if (this.pressed) {\n            if (this.toggleState) {\n                img = this.imgOnPressed || this.imgOnNormal\n            } else {\n                img = this.imgPressed || this.imgNormal\n            }\n        } else if (this.hover) {\n            if (this.toggleState) {\n                img = this.imgOnHover || this.imgOnNormal\n            } else {\n                img = this.imgHover || this.imgNormal\n            }\n        }\n        if (img) context.drawImage(img, this.x, this.y)\n        this.children.forEach((child) => child.onRedraw(context))\n        this.children.forEach((child) => child.drawHover(context))\n    }\n}\n","import { EventKey } from '../../../event/EventKeyEnum'\nimport { BeamUpBuilding, ChangeBuildingPowerState, ChangeTooltip, ForceRedrawTooltip, RepairBuilding, UpgradeBuilding } from '../../../event/GuiCommand'\nimport { SelectionChanged } from '../../../event/LocalEvents'\nimport { Panel } from '../../base/Panel'\nimport { IconPanelToggleButton } from '../IconPanelToggleButton'\nimport { IconSubPanel } from '../IconSubPanel'\nimport { TOOLTIP_DELAY_SFX } from '../../../params'\nimport { GameConfig } from '../../../cfg/GameConfig'\nimport { TooltipSpriteBuilder } from '../../../resource/TooltipSpriteBuilder'\n\nexport class SelectBuildingPanel extends IconSubPanel {\n    buildingNeedsRepair: boolean = false\n    buildingCanSwitchPower: boolean = false\n    buildingPowerSwitchState: boolean = false\n    buildingCanUpgrade: boolean = false\n    buildingMissingOreForUpgrade: number = 0\n\n    constructor(onBackPanel: Panel) {\n        super(4, onBackPanel, true)\n        const repairBuildingItem = this.addMenuItem(GameConfig.instance.interfaceImages.repair)\n        repairBuildingItem.isDisabled = () => !this.buildingNeedsRepair\n        repairBuildingItem.onClick = () => this.publishEvent(new RepairBuilding())\n        const menuItemOffCfg = GameConfig.instance.interfaceImages.powerOff\n        const menuItemOnCfg = GameConfig.instance.interfaceImages.powerOn\n        const powerSwitchItem = this.addChild(new IconPanelToggleButton(menuItemOffCfg, menuItemOnCfg, this.width, this.iconPanelButtons.length))\n        this.iconPanelButtons.push(powerSwitchItem)\n        powerSwitchItem.isDisabled = () => !this.buildingCanSwitchPower\n        powerSwitchItem.isToggled = () => !this.buildingPowerSwitchState\n        powerSwitchItem.onClick = () => this.publishEvent(new ChangeBuildingPowerState(!powerSwitchItem.toggleState))\n        const upgradeItem = this.addMenuItem(GameConfig.instance.interfaceImages.upgradeBuilding)\n        upgradeItem.isDisabled = () => !this.buildingCanUpgrade\n        upgradeItem.onClick = () => this.publishEvent(new UpgradeBuilding())\n        upgradeItem.showTooltipDisabled = () => {\n            let event: ChangeTooltip\n            if (this.buildingMissingOreForUpgrade) {\n                event = new ChangeTooltip(upgradeItem.tooltipDisabled, 0, upgradeItem.tooltipDisabledSfx, TOOLTIP_DELAY_SFX, () => {\n                    return TooltipSpriteBuilder.getBuildingMissingOreForUpgradeTooltipSprite(this.buildingMissingOreForUpgrade)\n                })\n            } else {\n                event = new ChangeTooltip(upgradeItem.tooltipDisabled, 0, upgradeItem.tooltipDisabledSfx, TOOLTIP_DELAY_SFX)\n            }\n            this.publishEvent(event)\n        }\n        const deleteBuildingItem = this.addMenuItem(GameConfig.instance.interfaceImages.deleteBuilding)\n        deleteBuildingItem.isDisabled = () => false\n        deleteBuildingItem.onClick = () => this.publishEvent(new BeamUpBuilding())\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.buildingNeedsRepair = event.buildingNeedsRepair\n            this.buildingCanSwitchPower = event.buildingCanSwitchPower\n            this.buildingPowerSwitchState = event.buildingPowerSwitchState\n            this.buildingCanUpgrade = event.buildingCanUpgrade\n            this.buildingMissingOreForUpgrade = event.buildingMissingOreForUpgrade\n            this.updateAllButtonStates()\n            if (this.buildingMissingOreForUpgrade) {\n                this.iconPanelButtons.forEach((b) => {\n                    b.publishEvent(new ForceRedrawTooltip(upgradeItem.tooltipDisabled, () => {\n                        return TooltipSpriteBuilder.getBuildingMissingOreForUpgradeTooltipSprite(this.buildingMissingOreForUpgrade)\n                    }))\n                })\n            }\n        })\n        this.registerEventListener(EventKey.MATERIAL_AMOUNT_CHANGED, () => {\n            this.updateAllButtonStates()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.buildingCanSwitchPower = false\n        this.buildingPowerSwitchState = false\n        this.buildingCanUpgrade = false\n        this.buildingMissingOreForUpgrade = 0\n    }\n}\n","import { BeamUpFence } from '../../../event/GuiCommand'\nimport { Panel } from '../../base/Panel'\nimport { IconSubPanel } from '../IconSubPanel'\nimport { GameConfig } from '../../../cfg/GameConfig'\n\nexport class SelectFencePanel extends IconSubPanel {\n    constructor(onBackPanel: Panel) {\n        super(1, onBackPanel, true)\n        const beamUpFence = this.addMenuItem(GameConfig.instance.interfaceImages.deleteElectricFence)\n        beamUpFence.isDisabled = () => false\n        beamUpFence.onClick = () => this.publishEvent(new BeamUpFence())\n    }\n}\n","import { EventKey } from '../../../event/EventKeyEnum'\nimport { CreatePowerPath, MakeRubble, PlaceFence } from '../../../event/GuiCommand'\nimport { RaidersAmountChangedEvent, SelectionChanged } from '../../../event/LocalEvents'\nimport { Panel } from '../../base/Panel'\nimport { IconSubPanel } from '../IconSubPanel'\nimport { EntityType } from '../../../game/model/EntityType'\nimport { GameConfig } from '../../../cfg/GameConfig'\n\nexport class SelectFloorPanel extends IconSubPanel {\n    isGround: boolean = false\n    hasRaider: boolean = false\n    isPowerPath: boolean = false\n    canPlaceFence: boolean = false\n\n    constructor(onBackPanel: Panel) {\n        super(3, onBackPanel, true)\n        const pathItem = this.addMenuItem(GameConfig.instance.interfaceImages.layPath)\n        pathItem.addDependencyCheck(EntityType.POWER_PATH)\n        pathItem.onClick = () => this.publishEvent(new CreatePowerPath())\n        pathItem.isDisabled = () => !this.isGround || !this.hasRaider\n        const removeItem = this.addMenuItem(GameConfig.instance.interfaceImages.removePath)\n        removeItem.onClick = () => this.publishEvent(new MakeRubble())\n        removeItem.isDisabled = () => !this.isPowerPath\n        const placeFenceItem = this.addMenuItem(GameConfig.instance.interfaceImages.placeFence)\n        placeFenceItem.addDependencyCheck(EntityType.ELECTRIC_FENCE)\n        placeFenceItem.isDisabled = () => placeFenceItem.hasUnfulfilledDependency || !this.canPlaceFence\n        placeFenceItem.onClick = () => this.publishEvent(new PlaceFence())\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.isGround = event.isGround\n            this.isPowerPath = event.isPowerPath\n            this.canPlaceFence = event.canPlaceFence\n            this.updateAllButtonStates()\n        })\n        this.registerEventListener(EventKey.RAIDER_AMOUNT_CHANGED, (event: RaidersAmountChangedEvent) => {\n            this.hasRaider = event.hasRaider\n            this.updateAllButtonStates()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.isGround = false\n        this.isPowerPath = false\n        this.canPlaceFence = false\n    }\n}\n","import { EventKey } from '../../../event/EventKeyEnum'\nimport { RepairLava } from '../../../event/GuiCommand'\nimport { SelectionChanged } from '../../../event/LocalEvents'\nimport { Panel } from '../../base/Panel'\nimport { IconSubPanel } from '../IconSubPanel'\nimport { GameConfig } from '../../../cfg/GameConfig'\n\nexport class SelectLavaErosionPanel extends IconSubPanel {\n    private hasRepairLava: boolean = false\n\n    constructor(onBackPanel: Panel) {\n        super(1, onBackPanel, true)\n        const cancelBuilding = this.addMenuItem(GameConfig.instance.interfaceImages.repairLava)\n        cancelBuilding.isDisabled = () => this.hasRepairLava\n        cancelBuilding.onClick = () => this.publishEvent(new RepairLava())\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.hasRepairLava = event.hasRepairLava\n            this.updateAllButtonStates()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.hasRepairLava = false\n    }\n}\n","import { EventKey } from '../../../event/EventKeyEnum'\nimport { CAMERA_VIEW_MODE, ChangeCameraEvent, DropBirdScarer, RaiderBeamUp, RaiderDrop, RaiderEat, RaiderUpgrade } from '../../../event/GuiCommand'\nimport { BuildingsChangedEvent, SelectionChanged } from '../../../event/LocalEvents'\nimport { EntityType } from '../../../game/model/EntityType'\nimport { Panel } from '../../base/Panel'\nimport { IconPanelButton } from '../IconPanelButton'\nimport { IconSubPanel } from '../IconSubPanel'\nimport { GameConfig } from '../../../cfg/GameConfig'\n\nexport class SelectRaiderPanel extends IconSubPanel {\n    getToolItem: IconPanelButton\n    trainItem: IconPanelButton\n\n    someCarries: boolean = false\n    everyHasMaxLevel: boolean = false\n    hasToolstation: boolean = false\n    hasBirdScarer: boolean = false\n\n    constructor(onBackPanel: Panel) {\n        super(10, onBackPanel, true)\n        const feedItem = this.addMenuItem(GameConfig.instance.interfaceImages.goFeed)\n        feedItem.isDisabled = () => false\n        feedItem.onClick = () => this.publishEvent(new RaiderEat())\n        const unloadItem = this.addMenuItem(GameConfig.instance.interfaceImages.unLoadMiniFigure)\n        unloadItem.isDisabled = () => !this.someCarries\n        unloadItem.onClick = () => this.publishEvent(new RaiderDrop())\n        this.addMenuItem(GameConfig.instance.interfaceImages.miniFigurePickUp)\n        this.getToolItem = this.addMenuItem(GameConfig.instance.interfaceImages.getTool)\n        this.getToolItem.isDisabled = () => false\n        const dropBirdScarer = this.addMenuItem(GameConfig.instance.interfaceImages.dropBirdScarer)\n        dropBirdScarer.isDisabled = () => !this.hasBirdScarer\n        dropBirdScarer.onClick = () => this.publishEvent(new DropBirdScarer())\n        const upgradeItem = this.addMenuItem(GameConfig.instance.interfaceImages.upgradeMan)\n        upgradeItem.isDisabled = () => this.everyHasMaxLevel || !this.hasToolstation\n        upgradeItem.onClick = () => this.publishEvent(new RaiderUpgrade())\n        this.trainItem = this.addMenuItem(GameConfig.instance.interfaceImages.trainSkill)\n        this.trainItem.isDisabled = () => false\n        const firstPersonView = this.addMenuItem(GameConfig.instance.interfaceImages.gotoFirstPerson)\n        firstPersonView.isDisabled = () => false\n        firstPersonView.onClick = () => this.publishEvent(new ChangeCameraEvent(CAMERA_VIEW_MODE.fpv))\n        const shoulderView = this.addMenuItem(GameConfig.instance.interfaceImages.gotoSecondPerson)\n        shoulderView.isDisabled = () => false\n        shoulderView.onClick = () => this.publishEvent(new ChangeCameraEvent(CAMERA_VIEW_MODE.shoulder))\n        const deleteRaiderItem = this.addMenuItem(GameConfig.instance.interfaceImages.deleteMan)\n        deleteRaiderItem.isDisabled = () => false\n        deleteRaiderItem.onClick = () => this.publishEvent(new RaiderBeamUp())\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.someCarries = event.someCarries\n            this.everyHasMaxLevel = event.everyHasMaxLevel\n            this.hasBirdScarer = event.someHasBirdScarer\n            this.updateAllButtonStates()\n        })\n        this.registerEventListener(EventKey.BUILDINGS_CHANGED, (event: BuildingsChangedEvent) => {\n            this.hasToolstation = BuildingsChangedEvent.hasUsable(event, EntityType.TOOLSTATION)\n            this.updateAllButtonStates()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.someCarries = false\n        this.everyHasMaxLevel = false\n        this.hasToolstation = false\n        this.hasBirdScarer = false\n    }\n}\n","import { EventKey } from '../../../event/EventKeyEnum'\nimport { CreateClearRubbleJob, PlaceFence } from '../../../event/GuiCommand'\nimport { SelectionChanged } from '../../../event/LocalEvents'\nimport { Panel } from '../../base/Panel'\nimport { IconSubPanel } from '../IconSubPanel'\nimport { EntityType } from '../../../game/model/EntityType'\nimport { GameConfig } from '../../../cfg/GameConfig'\n\nexport class SelectRubblePanel extends IconSubPanel {\n    hasRubble: boolean = false\n    canPlaceFence: boolean = false\n\n    constructor(onBackPanel: Panel) {\n        super(2, onBackPanel, true)\n        const clearRubbleItem = this.addMenuItem(GameConfig.instance.interfaceImages.clearRubble)\n        clearRubbleItem.isDisabled = () => !this.hasRubble\n        clearRubbleItem.onClick = () => this.publishEvent(new CreateClearRubbleJob())\n        const placeFenceItem = this.addMenuItem(GameConfig.instance.interfaceImages.placeFence)\n        placeFenceItem.addDependencyCheck(EntityType.ELECTRIC_FENCE)\n        placeFenceItem.isDisabled = () => placeFenceItem.hasUnfulfilledDependency || !this.canPlaceFence\n        placeFenceItem.onClick = () => this.publishEvent(new PlaceFence())\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.hasRubble = event.hasRubble\n            this.canPlaceFence = event.canPlaceFence\n            this.updateAllButtonStates()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.hasRubble = false\n        this.canPlaceFence = false\n    }\n}\n","import { CancelBuilding } from '../../../event/GuiCommand'\nimport { Panel } from '../../base/Panel'\nimport { IconSubPanel } from '../IconSubPanel'\nimport { GameConfig } from '../../../cfg/GameConfig'\n\nexport class SelectSitePanel extends IconSubPanel {\n    constructor(onBackPanel: Panel) {\n        super(1, onBackPanel, true)\n        const cancelBuilding = this.addMenuItem(GameConfig.instance.interfaceImages.cancelConstruction)\n        cancelBuilding.isDisabled = () => false\n        cancelBuilding.onClick = () => this.publishEvent(new CancelBuilding())\n    }\n}\n","import { EventKey } from '../../../event/EventKeyEnum'\nimport { VehicleBeamUp, VehicleCallMan } from '../../../event/GuiCommand'\nimport { SelectionChanged } from '../../../event/LocalEvents'\nimport { Panel } from '../../base/Panel'\nimport { IconSubPanel } from '../IconSubPanel'\nimport { GameConfig } from '../../../cfg/GameConfig'\n\nexport class SelectVehicleEmptyPanel extends IconSubPanel {\n    vehicleHasJob: boolean = false\n\n    constructor(onBackPanel: Panel) {\n        super(2, onBackPanel, true)\n        const manVehicleItem = this.addMenuItem(GameConfig.instance.interfaceImages.getIn)\n        manVehicleItem.onClick = () => this.publishEvent(new VehicleCallMan())\n        manVehicleItem.isDisabled = () => this.vehicleHasJob\n        const deleteVehicleItem = this.addMenuItem(GameConfig.instance.interfaceImages.deleteVehicle)\n        deleteVehicleItem.isDisabled = () => false\n        deleteVehicleItem.onClick = () => this.publishEvent(new VehicleBeamUp())\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.vehicleHasJob = event.vehicleHasCallManJob\n            manVehicleItem.updateState()\n        })\n    }\n}\n","import { EventKey } from '../../../event/EventKeyEnum'\nimport { CAMERA_VIEW_MODE, ChangeCameraEvent, VehicleBeamUp, VehicleDriverGetOut, VehicleLoad, VehicleUnload } from '../../../event/GuiCommand'\nimport { SelectionChanged } from '../../../event/LocalEvents'\nimport { Panel } from '../../base/Panel'\nimport { IconSubPanel } from '../IconSubPanel'\nimport { IconPanelButton } from '../IconPanelButton'\nimport { GameConfig } from '../../../cfg/GameConfig'\n\nexport class SelectVehicleManedPanel extends IconSubPanel {\n    readonly upgradeItem: IconPanelButton\n    noVehicleWithCarried: boolean = false\n    someVehicleCanLoad: boolean = false\n    hasUpgradeSite: boolean = false\n    noVehicleWithDriver: boolean = false\n\n    constructor(onBackPanel: Panel) {\n        super(7, onBackPanel, true)\n        const unloadVehicleItem = this.addMenuItem(GameConfig.instance.interfaceImages.unLoadVehicle)\n        unloadVehicleItem.isDisabled = () => this.noVehicleWithCarried\n        unloadVehicleItem.onClick = () => this.publishEvent(new VehicleUnload())\n        const loadVehicleItem = this.addMenuItem(GameConfig.instance.interfaceImages.vehiclePickUp)\n        loadVehicleItem.isDisabled = () => !this.someVehicleCanLoad\n        loadVehicleItem.onClick = () => this.publishEvent(new VehicleLoad())\n        this.upgradeItem = this.addMenuItem(GameConfig.instance.interfaceImages.upgradeVehicle)\n        this.upgradeItem.isDisabled = () => !this.hasUpgradeSite\n        const leaveVehicleItem = this.addMenuItem(GameConfig.instance.interfaceImages.getOut)\n        leaveVehicleItem.isDisabled = () => this.noVehicleWithDriver\n        leaveVehicleItem.onClick = () => this.publishEvent(new VehicleDriverGetOut())\n        const firstPersonView = this.addMenuItem(GameConfig.instance.interfaceImages.gotoFirstPerson)\n        firstPersonView.isDisabled = () => false\n        firstPersonView.onClick = () => this.publishEvent(new ChangeCameraEvent(CAMERA_VIEW_MODE.fpv))\n        const shoulderView = this.addMenuItem(GameConfig.instance.interfaceImages.gotoSecondPerson)\n        shoulderView.isDisabled = () => false\n        shoulderView.onClick = () => this.publishEvent(new ChangeCameraEvent(CAMERA_VIEW_MODE.shoulder))\n        const deleteVehicleItem = this.addMenuItem(GameConfig.instance.interfaceImages.deleteVehicle)\n        deleteVehicleItem.isDisabled = () => false\n        deleteVehicleItem.onClick = () => this.publishEvent(new VehicleBeamUp())\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.noVehicleWithCarried = !event.vehicleWithCarried\n            this.someVehicleCanLoad = event.someVehicleCanLoad\n            this.hasUpgradeSite = event.hasUpgradeSite\n            this.noVehicleWithDriver = event.noVehicleWithDriver\n            unloadVehicleItem.updateState()\n            loadVehicleItem.updateState()\n            this.upgradeItem.updateState()\n            leaveVehicleItem.updateState()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.noVehicleWithCarried = false\n        this.someVehicleCanLoad = false\n        this.hasUpgradeSite = false\n        this.noVehicleWithDriver = false\n    }\n}\n","import { EventKey } from '../../../event/EventKeyEnum'\nimport { CancelSurfaceJobs, CreateDrillJob, CreateDynamiteJob, CreateReinforceJob } from '../../../event/GuiCommand'\nimport { BuildingsChangedEvent, RaidersAmountChangedEvent, RaiderTrainingCompleteEvent, SelectionChanged } from '../../../event/LocalEvents'\nimport { EntityType } from '../../../game/model/EntityType'\nimport { RAIDER_TRAINING } from '../../../game/model/raider/RaiderTraining'\nimport { Panel } from '../../base/Panel'\nimport { IconSubPanel } from '../IconSubPanel'\nimport { GameConfig } from '../../../cfg/GameConfig'\n\nexport class SelectWallPanel extends IconSubPanel {\n    isDrillable: boolean = false\n    isReinforcable: boolean = false\n    hasDemolition: boolean = false\n    hasToolstation: boolean = false\n    hasToolstationLevel2: boolean = false\n\n    constructor(onBackPanel: Panel) {\n        super(4, onBackPanel, true)\n        const itemDrill = this.addMenuItem(GameConfig.instance.interfaceImages.dig)\n        itemDrill.isDisabled = () => !this.isDrillable\n        itemDrill.onClick = () => this.publishEvent(new CreateDrillJob())\n        const itemReinforce = this.addMenuItem(GameConfig.instance.interfaceImages.reinforce)\n        itemReinforce.isDisabled = () => !this.isReinforcable\n        itemReinforce.onClick = () => this.publishEvent(new CreateReinforceJob())\n        const itemDynamite = this.addMenuItem(GameConfig.instance.interfaceImages.dynamite)\n        itemDynamite.isDisabled = () => !(this.hasDemolition && this.hasToolstation) && !this.hasToolstationLevel2\n        itemDynamite.onClick = () => this.publishEvent(new CreateDynamiteJob())\n        const itemDeselect = this.addMenuItem(GameConfig.instance.interfaceImages.deselectDig)\n        itemDeselect.isDisabled = () => false\n        itemDeselect.onClick = () => this.publishEvent(new CancelSurfaceJobs())\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.isDrillable = event.isDrillable\n            this.isReinforcable = event.isReinforcable\n            this.updateAllButtonStates()\n        })\n        this.registerEventListener(EventKey.BUILDINGS_CHANGED, (event: BuildingsChangedEvent) => {\n            this.hasToolstation = BuildingsChangedEvent.hasUsable(event, EntityType.TOOLSTATION)\n            this.hasToolstationLevel2 = BuildingsChangedEvent.hasUsable(event, EntityType.TOOLSTATION, 2)\n        })\n        this.registerEventListener(EventKey.RAIDER_TRAINING_COMPLETE, (event: RaiderTrainingCompleteEvent) => {\n            this.hasDemolition = this.hasDemolition || event.training === RAIDER_TRAINING.demolition\n        })\n        this.registerEventListener(EventKey.RAIDER_AMOUNT_CHANGED, (event: RaidersAmountChangedEvent) => {\n            this.hasDemolition = event.hasDemolition\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.isDrillable = false\n        this.isReinforcable = false\n        this.hasDemolition = false\n        this.hasToolstation = false\n        this.hasToolstationLevel2 = false\n    }\n}\n","import { EventKey } from '../../event/EventKeyEnum'\nimport { TrainRaider } from '../../event/GuiCommand'\nimport { SelectionChanged } from '../../event/LocalEvents'\nimport { RAIDER_TRAINING, RaiderTraining } from '../../game/model/raider/RaiderTraining'\nimport { Panel } from '../base/Panel'\nimport { IconSubPanel } from './IconSubPanel'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { InterfaceImage } from '../../cfg/InterfaceImageCfg'\n\nexport class TrainRaiderPanel extends IconSubPanel {\n    canDoTraining: Map<RaiderTraining, boolean> = new Map()\n\n    constructor(onBackPanel: Panel) {\n        super(6, onBackPanel, false)\n        this.addTrainingItem('trainDriver', RAIDER_TRAINING.driver)\n        this.addTrainingItem('trainEngineer', RAIDER_TRAINING.engineer)\n        this.addTrainingItem('trainGeologist', RAIDER_TRAINING.geologist)\n        this.addTrainingItem('trainPilot', RAIDER_TRAINING.pilot)\n        this.addTrainingItem('trainSailor', RAIDER_TRAINING.sailor)\n        this.addTrainingItem('trainDynamite', RAIDER_TRAINING.demolition)\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.canDoTraining = event.canDoTraining\n            this.updateAllButtonStates()\n        })\n    }\n\n    private addTrainingItem(interfaceImage: InterfaceImage, training: RaiderTraining) {\n        const trainingItem = this.addMenuItem(GameConfig.instance.interfaceImages[interfaceImage])\n        trainingItem.isDisabled = () => !this.canDoTraining.get(training)\n        trainingItem.onClick = () => this.publishEvent(new TrainRaider(training))\n    }\n\n    reset() {\n        super.reset()\n        this.canDoTraining = new Map()\n    }\n}\n","import { EventKey } from '../../event/EventKeyEnum'\nimport { RequestedVehiclesChanged } from '../../event/WorldEvents'\nimport { EntityType } from '../../game/model/EntityType'\nimport { Panel } from '../base/Panel'\nimport { IconPanelButtonLabel } from './IconPanelButtonLabel'\nimport { IconSubPanel } from './IconSubPanel'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { InterfaceBuildImage } from '../../cfg/InterfaceImageCfg'\n\nexport class VehiclePanel extends IconSubPanel {\n    requestedVehiclesByType: Map<EntityType, number> = new Map()\n    btnLabelByType: Map<EntityType, IconPanelButtonLabel> = new Map()\n\n    constructor(numOfItems: number, readonly onBackPanel: Panel) {\n        super(numOfItems, onBackPanel, false)\n        this.registerEventListener(EventKey.REQUESTED_VEHICLES_CHANGED, (event: RequestedVehiclesChanged) => {\n            this.requestedVehiclesByType.set(event.vehicle, event.numRequested)\n            this.btnLabelByType.get(event.vehicle)?.setLabel(event.numRequested)\n        })\n    }\n\n    addVehicleMenuItem(interfaceBuildImage: InterfaceBuildImage, entityType: EntityType) {\n        const item = super.addMenuItem(GameConfig.instance.interfaceBuildImages[interfaceBuildImage])\n        item.isDisabled = () => item.hasUnfulfilledDependency\n        item.onClick = () => {\n            this.toggleState(() => this.onBackPanel.toggleState())\n            this.publishEvent(new RequestedVehiclesChanged(entityType, this.requestedVehiclesByType.getOrUpdate(entityType, () => 0) + 1))\n        }\n        item.tooltip = GameConfig.instance.objectNames[entityType.toLowerCase()]\n        if (!item.tooltip) console.warn(`Could not determine tooltip for ${entityType}`)\n        item.tooltipSfx = GameConfig.instance.objTtSFXs[entityType.toLowerCase()]\n        if (!item.tooltipSfx) console.warn(`Could not determine tooltip SFX for ${entityType}`)\n        item.tooltipDisabled = item.tooltip\n        item.tooltipDisabledSfx = item.tooltipSfx\n        this.btnLabelByType.set(entityType, item.addChild(new IconPanelButtonLabel()))\n    }\n}\n","import { IconSubPanel } from './IconSubPanel'\nimport { VEHICLE_UPGRADE, VehicleUpgrade } from '../../game/model/vehicle/VehicleUpgrade'\nimport { Panel } from '../base/Panel'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { SelectionChanged } from '../../event/LocalEvents'\nimport { UpgradeVehicle } from '../../event/GuiCommand'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { InterfaceImage } from '../../cfg/InterfaceImageCfg'\n\nexport class UpgradeVehiclePanel extends IconSubPanel {\n    canInstallUpgrade: Map<VehicleUpgrade, boolean> = new Map()\n\n    constructor(onBackPanel: Panel) {\n        super(4, onBackPanel, false)\n        this.addUpgradeItem('upgradeCarry', VEHICLE_UPGRADE.carry)\n        this.addUpgradeItem('upgradeScan', VEHICLE_UPGRADE.scan)\n        this.addUpgradeItem('upgradeEngine', VEHICLE_UPGRADE.speed)\n        this.addUpgradeItem('upgradeDrill', VEHICLE_UPGRADE.drill)\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.canInstallUpgrade = event.canInstallUpgrade\n            this.updateAllButtonStates()\n        })\n    }\n\n    private addUpgradeItem(interfaceImage: InterfaceImage, upgrade: VehicleUpgrade) {\n        const upgradeItem = this.addMenuItem(GameConfig.instance.interfaceImages[interfaceImage])\n        upgradeItem.isDisabled = () => !this.canInstallUpgrade.get(upgrade)\n        upgradeItem.onClick = () => this.publishEvent(new UpgradeVehicle(upgrade))\n    }\n\n    reset() {\n        super.reset()\n        this.canInstallUpgrade = new Map()\n    }\n}\n","import { IconSubPanel } from '../IconSubPanel'\nimport { CAMERA_VIEW_MODE, CameraViewMode, ChangeCameraEvent } from '../../../event/GuiCommand'\nimport { GameConfig } from '../../../cfg/GameConfig'\n\nexport class ChangeCameraPanel extends IconSubPanel {\n    cameraViewMode?: CameraViewMode\n\n    constructor() {\n        super(3, undefined, false)\n        const birdViewItem = this.addMenuItem(GameConfig.instance.interfaceImages.gotoTopView)\n        birdViewItem.isDisabled = () => this.cameraViewMode === CAMERA_VIEW_MODE.bird\n        birdViewItem.onClick = () => this.publishEvent(new ChangeCameraEvent(CAMERA_VIEW_MODE.bird))\n        const shoulderViewItem = this.addMenuItem(GameConfig.instance.interfaceImages.gotoSecondPerson)\n        shoulderViewItem.isDisabled = () => this.cameraViewMode === CAMERA_VIEW_MODE.shoulder\n        shoulderViewItem.onClick = () => this.publishEvent(new ChangeCameraEvent(CAMERA_VIEW_MODE.shoulder))\n        const fpvViewItem = this.addMenuItem(GameConfig.instance.interfaceImages.gotoFirstPerson)\n        fpvViewItem.isDisabled = () => this.cameraViewMode === CAMERA_VIEW_MODE.fpv\n        fpvViewItem.onClick = () => this.publishEvent(new ChangeCameraEvent(CAMERA_VIEW_MODE.fpv))\n    }\n\n    reset() {\n        super.reset()\n        this.cameraViewMode = undefined\n    }\n}\n","import { EventKey } from '../../event/EventKeyEnum'\nimport { CAMERA_VIEW_MODE, ChangeCameraEvent } from '../../event/GuiCommand'\nimport { BuildingsChangedEvent, GuiBuildButtonClicked, GuiGetToolButtonClicked, GuiTrainRaiderButtonClicked, RaidersAmountChangedEvent, SELECT_PANEL_TYPE, SelectionChanged, ShowMissionBriefingEvent } from '../../event/LocalEvents'\nimport { RequestedRaidersChanged } from '../../event/WorldEvents'\nimport { EntityType } from '../../game/model/EntityType'\nimport { MAX_RAIDER_REQUEST } from '../../params'\nimport { Panel } from '../base/Panel'\nimport { BuildingPanel } from './BuildingPanel'\nimport { GetToolPanel } from './GetToolPanel'\nimport { IconPanelButtonLabel } from './IconPanelButtonLabel'\nimport { IconSubPanel } from './IconSubPanel'\nimport { SelectBuildingPanel } from './select/SelectBuildingPanel'\nimport { SelectFencePanel } from './select/SelectFencePanel'\nimport { SelectFloorPanel } from './select/SelectFloorPanel'\nimport { SelectLavaErosionPanel } from './select/SelectLavaErosionPanel'\nimport { SelectRaiderPanel } from './select/SelectRaiderPanel'\nimport { SelectRubblePanel } from './select/SelectRubblePanel'\nimport { SelectSitePanel } from './select/SelectSitePanel'\nimport { SelectVehicleEmptyPanel } from './select/SelectVehicleEmptyPanel'\nimport { SelectVehicleManedPanel } from './select/SelectVehicleManedPanel'\nimport { SelectWallPanel } from './select/SelectWallPanel'\nimport { TrainRaiderPanel } from './TrainRaiderPanel'\nimport { VehiclePanel } from './VehiclePanel'\nimport { UpgradeVehiclePanel } from './UpgradeVehiclePanel'\nimport { ChangeCameraPanel } from './select/ChangeCameraPanel'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { SpriteContext } from '../../core/Sprite'\nimport { EventBroker } from '../../event/EventBroker'\n\nexport class MainPanel extends Panel {\n    subPanels: IconSubPanel[] = []\n    mainPanel: IconSubPanel // don't use root itself, since sub panel must be decoupled from (animated) main panel position\n    selectWallPanel: SelectWallPanel\n    selectFloorPanel: SelectFloorPanel\n    selectRubblePanel: SelectRubblePanel\n    selectSitePanel: SelectSitePanel\n    selectLavaErosionPanel: SelectLavaErosionPanel\n    selectRaiderPanel: SelectRaiderPanel\n\n    numRequestedRaiders: number = 0\n    hasRaiderTeleport: boolean = false\n    hasMaxRaiders: boolean = false\n    lastSelectionEvent?: SelectionChanged\n\n    constructor() {\n        super()\n        this.relX = this.xOut = 640 - 16\n        this.xIn = 640 + 95\n        this.relY = this.yOut = this.yIn = 9\n        this.movedIn = false\n        this.mainPanel = this.addSubPanel(new IconSubPanel(4, undefined, false))\n        this.mainPanel.relX = this.mainPanel.xOut\n        this.mainPanel.relY = this.mainPanel.yOut\n        this.mainPanel.movedIn = false\n\n        const buildingPanel = this.addSubPanel(new BuildingPanel(this.mainPanel))\n        const smallVehiclePanel = this.addSubPanel(new VehiclePanel(6, this.mainPanel))\n        smallVehiclePanel.addVehicleMenuItem('hoverboard', EntityType.HOVERBOARD)\n        smallVehiclePanel.addVehicleMenuItem('smallDigger', EntityType.SMALL_DIGGER)\n        smallVehiclePanel.addVehicleMenuItem('smallTruck', EntityType.SMALL_TRUCK)\n        smallVehiclePanel.addVehicleMenuItem('smallCat', EntityType.SMALL_CAT)\n        smallVehiclePanel.addVehicleMenuItem('smallMLP', EntityType.SMALL_MLP)\n        smallVehiclePanel.addVehicleMenuItem('smallHeli', EntityType.SMALL_HELI)\n        const largeVehiclePanel = this.addSubPanel(new VehiclePanel(5, this.mainPanel))\n        largeVehiclePanel.addVehicleMenuItem('bullDozer', EntityType.BULLDOZER)\n        largeVehiclePanel.addVehicleMenuItem('walkerDigger', EntityType.WALKER_DIGGER)\n        largeVehiclePanel.addVehicleMenuItem('largeMLP', EntityType.LARGE_MLP)\n        largeVehiclePanel.addVehicleMenuItem('largeDigger', EntityType.LARGE_DIGGER)\n        largeVehiclePanel.addVehicleMenuItem('largeCat', EntityType.LARGE_CAT)\n        this.selectWallPanel = this.addSubPanel(new SelectWallPanel(this.mainPanel))\n        this.selectFloorPanel = this.addSubPanel(new SelectFloorPanel(this.mainPanel))\n        this.selectRubblePanel = this.addSubPanel(new SelectRubblePanel(this.mainPanel))\n        this.selectSitePanel = this.addSubPanel(new SelectSitePanel(this.mainPanel))\n        this.selectLavaErosionPanel = this.addSubPanel(new SelectLavaErosionPanel(this.mainPanel))\n        const selectBuildingPanel = this.addSubPanel(new SelectBuildingPanel(this.mainPanel))\n        this.selectRaiderPanel = this.addSubPanel(new SelectRaiderPanel(this.mainPanel))\n        const trainRaiderPanel = this.addSubPanel(new TrainRaiderPanel(this.selectRaiderPanel))\n        this.selectRaiderPanel.trainItem.onClick = () => {\n            this.selectRaiderPanel.toggleState(() => trainRaiderPanel.toggleState())\n            this.publishEvent(new GuiTrainRaiderButtonClicked())\n        }\n        const getToolPanel = this.addSubPanel(new GetToolPanel(this.selectRaiderPanel))\n        this.selectRaiderPanel.getToolItem.onClick = () => {\n            this.selectRaiderPanel.toggleState(() => getToolPanel.toggleState())\n            this.publishEvent(new GuiGetToolButtonClicked())\n        }\n        const selectVehicleEmptyPanel = this.addSubPanel(new SelectVehicleEmptyPanel(this.mainPanel))\n        const selectVehicleManedPanel = this.addSubPanel(new SelectVehicleManedPanel(this.mainPanel))\n        const upgradeVehiclePanel = this.addSubPanel(new UpgradeVehiclePanel(selectVehicleManedPanel))\n        selectVehicleManedPanel.upgradeItem.onClick = () => selectVehicleManedPanel.toggleState(() => upgradeVehiclePanel.toggleState())\n        const selectFencePanel = this.addSubPanel(new SelectFencePanel(this.mainPanel))\n        const cameraViewPanel = this.addSubPanel(new ChangeCameraPanel())\n\n        const teleportRaider = this.mainPanel.addMenuItem(GameConfig.instance.interfaceImages.teleportMan)\n        teleportRaider.addDependencyCheck(EntityType.PILOT)\n        teleportRaider.isDisabled = () => this.hasMaxRaiders || this.numRequestedRaiders >= MAX_RAIDER_REQUEST || !this.hasRaiderTeleport\n        teleportRaider.updateState()\n        teleportRaider.onClick = () => this.publishEvent(new RequestedRaidersChanged(this.numRequestedRaiders + 1))\n        const requestedRaiderLabel = teleportRaider.addChild(new IconPanelButtonLabel())\n        requestedRaiderLabel.registerEventListener(EventKey.REQUESTED_RAIDERS_CHANGED, (event: RequestedRaidersChanged) => {\n            requestedRaiderLabel.setLabel(event.numRequested)\n        })\n        this.registerEventListener(EventKey.REQUESTED_RAIDERS_CHANGED, (event: RequestedRaidersChanged) => {\n            this.numRequestedRaiders = event.numRequested\n            teleportRaider.updateState()\n        })\n        const buildingItem = this.mainPanel.addMenuItem(GameConfig.instance.interfaceImages.buildBuilding)\n        buildingItem.isDisabled = () => false\n        buildingItem.onClick = () => {\n            this.mainPanel.toggleState(() => buildingPanel.toggleState())\n            EventBroker.publish(new GuiBuildButtonClicked())\n        }\n        const smallVehicleItem = this.mainPanel.addMenuItem(GameConfig.instance.interfaceImages.buildSmallVehicle)\n        smallVehicleItem.isDisabled = () => false\n        smallVehicleItem.onClick = () => this.mainPanel.toggleState(() => smallVehiclePanel.toggleState())\n        const largeVehicleItem = this.mainPanel.addMenuItem(GameConfig.instance.interfaceImages.buildLargeVehicle)\n        largeVehicleItem.isDisabled = () => false\n        largeVehicleItem.onClick = () => this.mainPanel.toggleState(() => largeVehiclePanel.toggleState())\n\n        this.registerEventListener(EventKey.SELECTION_CHANGED, (event: SelectionChanged) => {\n            this.lastSelectionEvent = event\n            if (event.selectPanelType === SELECT_PANEL_TYPE.raider) this.selectSubPanel(this.selectRaiderPanel)\n            else if (event.selectPanelType === SELECT_PANEL_TYPE.vehicle) this.selectSubPanel(event.noVehicleWithDriver ? selectVehicleEmptyPanel : selectVehicleManedPanel)\n            else if (event.selectPanelType === SELECT_PANEL_TYPE.building) this.selectSubPanel(selectBuildingPanel)\n            else if (event.selectPanelType === SELECT_PANEL_TYPE.surface) this.onSelectedSurfaceChange(event.isFloor, event.hasRubble, event.isSite, event.hasErosion)\n            else if (event.selectPanelType === SELECT_PANEL_TYPE.fence) this.selectSubPanel(selectFencePanel)\n            else this.selectSubPanel(this.mainPanel)\n        })\n        this.registerEventListener(EventKey.BUILDINGS_CHANGED, (event: BuildingsChangedEvent) => {\n            this.hasRaiderTeleport = BuildingsChangedEvent.hasUsable(event, EntityType.TOOLSTATION)\n                || BuildingsChangedEvent.hasUsable(event, EntityType.TELEPORT_PAD)\n            teleportRaider.updateState()\n        })\n        this.registerEventListener(EventKey.RAIDER_AMOUNT_CHANGED, (event: RaidersAmountChangedEvent) => {\n            this.hasMaxRaiders = event.hasMaxRaiders\n            teleportRaider.updateState()\n        })\n        this.registerEventListener(EventKey.SHOW_MISSION_BRIEFING, (event: ShowMissionBriefingEvent) => {\n            this.hidden = event.isShowing\n        })\n        this.registerEventListener(EventKey.COMMAND_CAMERA_VIEW, (event: ChangeCameraEvent) => {\n            cameraViewPanel.cameraViewMode = event.viewMode\n            cameraViewPanel.updateAllButtonStates()\n            if (event.viewMode === CAMERA_VIEW_MODE.bird) {\n                if (this.lastSelectionEvent?.selectPanelType === SELECT_PANEL_TYPE.raider) this.selectSubPanel(this.selectRaiderPanel)\n                else if (this.lastSelectionEvent?.selectPanelType === SELECT_PANEL_TYPE.vehicle) this.selectSubPanel(this.lastSelectionEvent.noVehicleWithDriver ? selectVehicleEmptyPanel : selectVehicleManedPanel)\n                else {\n                    console.warn('Unexpected state', this.lastSelectionEvent)\n                }\n            } else {\n                this.selectSubPanel(cameraViewPanel)\n            }\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.relX = this.xOut\n        this.relY = this.yOut\n        this.movedIn = false\n        this.updatePosition()\n        this.mainPanel.relX = this.mainPanel.xOut\n        this.mainPanel.relY = this.mainPanel.yOut\n        this.mainPanel.movedIn = false\n        this.mainPanel.updatePosition()\n        this.numRequestedRaiders = 0\n        this.hasRaiderTeleport = false\n        this.hasMaxRaiders = false\n        this.lastSelectionEvent = undefined\n    }\n\n    addSubPanel<T extends IconSubPanel>(childPanel: T): T {\n        this.addChild(childPanel)\n        this.subPanels.push(childPanel)\n        return childPanel\n    }\n\n    selectSubPanel(targetPanel: IconSubPanel) {\n        this.subPanels.forEach((subPanel) => subPanel !== targetPanel && subPanel.setMovedIn(true))\n        targetPanel.setMovedIn(false)\n    }\n\n    onSelectedSurfaceChange(isFloor: boolean, hasRubble: boolean, isSite: boolean, isLava: boolean) {\n        if (isFloor) {\n            if (hasRubble) {\n                this.selectSubPanel(this.selectRubblePanel)\n            } else if (isLava) {\n                this.selectSubPanel(this.selectLavaErosionPanel)\n            } else if (isSite) {\n                this.selectSubPanel(this.selectSitePanel)\n            } else {\n                this.selectSubPanel(this.selectFloorPanel)\n            }\n        } else {\n            this.selectSubPanel(this.selectWallPanel)\n        }\n    }\n\n    isInactive(): boolean {\n        return this.movedIn || super.isInactive()\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.movedIn) return\n        super.onRedraw(context)\n    }\n}\n","import { GuiHoverEvent, GuiPointerDownEvent, GuiPointerUpEvent } from '../event/GuiEvent'\nimport { Button } from './Button'\n\nexport class ToggleButton extends Button {\n    toggleState: boolean = false\n\n    reset() {\n        super.reset()\n        this.toggleState = false\n    }\n\n    startBlinking() {\n        // Toggle buttons should not blink\n    }\n\n    onPointerMove(event: GuiHoverEvent): void {\n        const inRect = this.isInRect(event.sx, event.sy)\n        if (inRect && !this.hover) this.onHoverStart()\n        else if (!inRect && this.hover) this.onHoverEnd()\n        if (!this.isInactive()) {\n            event.hoverStateChanged = event.hoverStateChanged || this.hover !== inRect\n            this.hover = inRect\n            if (!this.hover && !this.toggleState) this.pressed = false\n        }\n        this.children.forEach((child) => child.onPointerMove(event))\n    }\n\n    onPointerDown(event: GuiPointerDownEvent): boolean {\n        if (this.isInactive()) return false\n        const oldState = this.pressed\n        if (this.isInRect(event.sx, event.sy) || this.toggleState) {\n            if (!this.pressed && this.onClick) {\n                this.pressed = true\n            }\n        } else {\n            this.pressed = false\n        }\n        let updated = this.pressed !== oldState\n        this.children.forEach((child) => updated = child.onPointerDown(event) || updated)\n        if (updated) this.notifyRedraw()\n        return updated\n    }\n\n    onPointerUp(event: GuiPointerUpEvent): boolean {\n        if (this.isInactive()) return false\n        const inRect = this.isInRect(event.sx, event.sy)\n        let updated = inRect && this.pressed\n        if (updated) {\n            this.clicked(event)\n            this.pressed = updated && this.toggleState\n            this.hover = inRect\n        }\n        this.children.forEach((child) => updated = child.onPointerUp(event) || updated)\n        if (updated) this.notifyRedraw()\n        return updated\n    }\n\n    clicked(event: GuiPointerDownEvent) {\n        this.toggleState = !this.toggleState\n        super.clicked(event)\n    }\n\n    onPointerLeave(): boolean {\n        return false\n    }\n\n    setToggleState(toggleState: boolean) {\n        if (this.toggleState === toggleState) return\n        this.toggleState = toggleState\n        if (this.toggleState) this.pressed = true\n        this.notifyRedraw()\n    }\n}\n","import { ButtonTopCfg } from '../../cfg/ButtonsCfg'\nimport { PanelCfg } from '../../cfg/PanelCfg'\nimport { Button } from '../base/Button'\nimport { Panel } from '../base/Panel'\nimport { ToggleButton } from '../base/ToggleButton'\nimport { ToggleAlarmEvent } from '../../event/WorldEvents'\nimport { ShowOptionsEvent } from '../../event/LocalEvents'\nimport { EventKey } from '../../event/EventKeyEnum'\n\nexport class TopPanel extends Panel {\n    btnCallToArms: ToggleButton\n    btnOptions: Button\n    btnPriorities: ToggleButton\n\n    constructor(panelCfg: PanelCfg, buttonsCfg: ButtonTopCfg) {\n        super(panelCfg)\n        this.btnCallToArms = this.addChild(new ToggleButton(buttonsCfg.panelButtonTopPanelCallToArms))\n        this.btnCallToArms.onClick = () => {\n            this.publishEvent(new ToggleAlarmEvent(this.btnCallToArms.toggleState))\n        }\n        this.registerEventListener(EventKey.TOGGLE_ALARM, (event: ToggleAlarmEvent) => {\n            this.btnCallToArms.setToggleState(event.alarmState)\n        })\n        this.btnOptions = this.addChild(new Button(buttonsCfg.panelButtonTopPanelOptions))\n        this.btnOptions.onClick = () => {\n            this.publishEvent(new ShowOptionsEvent())\n        }\n        this.btnPriorities = this.addChild(new ToggleButton(buttonsCfg.panelButtonTopPanelPriorities))\n    }\n}\n","import { SpriteContext, SpriteImage } from '../../core/Sprite'\nimport { Panel } from '../base/Panel'\nimport { DEFAULT_FONT_NAME } from '../../params'\nimport { BitmapFontWorkerPool } from '../../worker/BitmapFontWorkerPool'\n\nexport class InformationPanel extends Panel {\n    textImage?: SpriteImage\n\n    setText(text?: string) {\n        BitmapFontWorkerPool.instance.createTextImage(DEFAULT_FONT_NAME, text, this.width - 80)\n            .then((textImage) => {\n                this.textImage = textImage\n                this.notifyRedraw()\n            })\n    }\n\n    onRedraw(context: SpriteContext) {\n        super.onRedraw(context)\n        if (this.textImage) context.drawImage(this.textImage, this.x + (this.width - this.textImage.width) / 2, this.y + 12)\n    }\n}\n","import { ButtonPriorityListCfg } from '../../cfg/ButtonsCfg'\nimport { PanelCfg } from '../../cfg/PanelCfg'\nimport { PrioritiesImagePositionsCfg, PriorityButtonListCfg, PriorityPositionsEntry } from '../../cfg/PriorityButtonsCfg'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { PRIORITY_IDENTIFIER, PriorityIdentifier } from '../../game/model/job/PriorityIdentifier'\nimport { Button } from '../base/Button'\nimport { Panel } from '../base/Panel'\nimport { UpdatePriorities } from '../../event/WorldEvents'\nimport { GameState } from '../../game/model/GameState'\nimport { PriorityEntry } from '../../game/model/job/PriorityEntry'\nimport { VERBOSE } from '../../params'\nimport { SpriteContext } from '../../core/Sprite'\n\nexport class PriorityListPanel extends Panel {\n    readonly prioPositions: PriorityPositionsEntry[] = []\n    readonly prioByName: Map<PriorityIdentifier, Button> = new Map()\n\n    constructor(panelCfg: PanelCfg, buttonsCfg: ButtonPriorityListCfg, cfgPos: PrioritiesImagePositionsCfg, cfg: PriorityButtonListCfg) {\n        super(panelCfg)\n        buttonsCfg.panelButtonPriorityListDisable.forEach((buttonCfg, index) => {\n            this.addChild(new Button(buttonCfg)).onClick = () => {\n                GameState.priorityList.toggle(index)\n            }\n        })\n        buttonsCfg.panelButtonPriorityListUpOne.forEach((buttonCfg, index) => {\n            this.addChild(new Button(buttonCfg)).onClick = () => {\n                GameState.priorityList.upOne(index)\n            }\n        })\n        this.addChild(new Button(buttonsCfg.panelButtonPriorityListReset)).onClick = () => {\n            GameState.priorityList.reset()\n        }\n\n        this.prioPositions = cfgPos.positionByIndex\n        this.prioByName.set(PRIORITY_IDENTIFIER.getIn, this.addChild(new Button(cfg.aiPriorityGetIn)))\n        this.prioByName.set(PRIORITY_IDENTIFIER.crystal, this.addChild(new Button(cfg.aiPriorityCrystal)))\n        this.prioByName.set(PRIORITY_IDENTIFIER.ore, this.addChild(new Button(cfg.aiPriorityOre)))\n        this.prioByName.set(PRIORITY_IDENTIFIER.repair, this.addChild(new Button(cfg.aiPriorityRepair)))\n        this.prioByName.set(PRIORITY_IDENTIFIER.clearing, this.addChild(new Button(cfg.aiPriorityClearing)))\n        this.prioByName.set(PRIORITY_IDENTIFIER.destruction, this.addChild(new Button(cfg.aiPriorityDestruction)))\n        this.prioByName.set(PRIORITY_IDENTIFIER.construction, this.addChild(new Button(cfg.aiPriorityConstruction)))\n        this.prioByName.set(PRIORITY_IDENTIFIER.reinforce, this.addChild(new Button(cfg.aiPriorityReinforce)))\n        this.prioByName.set(PRIORITY_IDENTIFIER.recharge, this.addChild(new Button(cfg.aiPriorityRecharge)))\n        this.prioByName.forEach((btn) => btn.hoverFrame = true)\n        this.registerEventListener(EventKey.UPDATE_PRIORITIES, (event: UpdatePriorities) => {\n            this.updateList(event.priorityList)\n        })\n    }\n\n    private updateList(priorityList: PriorityEntry[]) {\n        this.prioByName.forEach((btn) => btn.hidden = true)\n        let btnIndex = 0\n        let updated = false\n        priorityList.forEach((prioEntry, prioIndex) => {\n            const prioButton = this.prioByName.get(prioEntry.key)\n            if (!prioButton) {\n                if (VERBOSE) console.warn(`Could not find button for priority \"${prioEntry.key}\"`)\n                return\n            }\n            updated = updated || prioButton.hidden || prioButton.disabled !== !prioEntry.enabled\n            prioButton.hidden = false\n            prioButton.disabled = !prioEntry.enabled\n            prioButton.relX = this.prioPositions[btnIndex].x\n            prioButton.relY = this.prioPositions[btnIndex].y\n            prioButton.updatePosition()\n            prioButton.onClick = (cx: number, cy: number) => {\n                prioButton.hover = !!this.prioByName.get(priorityList[0].key)?.isInRect(cx, cy)\n                GameState.priorityList.pushToTop(prioIndex)\n            }\n            btnIndex++\n        })\n        if (updated) this.notifyRedraw()\n    }\n\n    isInactive(): boolean {\n        return this.movedIn || super.isInactive()\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.movedIn) return\n        super.onRedraw(context)\n    }\n}\n","import { InfoButtonCfg } from '../../cfg/ButtonCfg'\nimport { SpriteContext } from '../../core/Sprite'\nimport { clearTimeoutSafe } from '../../core/Util'\nimport { WorldLocationEvent } from '../../event/WorldEvents'\nimport { NATIVE_UPDATE_INTERVAL } from '../../params'\nimport { Button } from '../base/Button'\nimport { InfoDockPanel } from './InfoDockPanel'\nimport { InfoMessagesEntryConfig } from '../../cfg/InfoMessagesCfg'\n\nexport class InfoDockButton extends Button {\n    messages: WorldLocationEvent[] = [] // newest message first\n    text: string\n    animationTimeout?: NodeJS.Timeout\n    animationSpeedX = 0.5\n    animationSpeedY = 1\n\n    constructor(parent: InfoDockPanel, infoMessagesEntryConfig: InfoMessagesEntryConfig) {\n        super(new InfoButtonCfg(infoMessagesEntryConfig.buttonImageFilename))\n        this.text = infoMessagesEntryConfig.message\n        this.hidden = true\n\n        this.onClick = () => {\n            if (this.messages.length < 1) return\n            parent.buttonClicked(this)\n        }\n    }\n\n    reset() {\n        super.reset()\n        this.animationTimeout = clearTimeoutSafe(this.animationTimeout)\n        this.hidden = true\n        this.messages = []\n    }\n\n    slideToTarget(targetX: number, targetY: number): Promise<void> {\n        return new Promise<void>((resolve) => this.updateAnimation(targetX, targetY, resolve))\n    }\n\n    private updateAnimation(targetX: number, targetY: number, onDone: () => void) { // TODO refactor: almost equal with code for Panel\n        const diffX = targetX - this.relX\n        const diffY = targetY - this.relY\n        if (Math.abs(diffX) <= this.animationSpeedX && Math.abs(diffY) <= this.animationSpeedY) {\n            this.relX = targetX\n            this.relY = targetY\n            this.animationTimeout = undefined\n            if (onDone) onDone()\n        } else {\n            this.relX += Math.round(Math.sign(diffX) * Math.sqrt(Math.abs(diffX)) * this.animationSpeedX)\n            this.relY += Math.round(Math.sign(diffY) * Math.sqrt(Math.abs(diffY)) * this.animationSpeedY)\n            const that = this\n            this.animationTimeout = setTimeout(() => that.updateAnimation(targetX, targetY, onDone), NATIVE_UPDATE_INTERVAL)\n        }\n        this.updatePosition()\n        this.notifyRedraw()\n    }\n\n    onRedraw(context: SpriteContext) {\n        super.onRedraw(context)\n        if (this.hidden) return\n        context.textAlign = 'left'\n        context.font = 'bold 10px sans-serif'\n        context.fillStyle = '#fff'\n        context.fillText(this.messages.length.toString(), this.x + 2, this.y + this.height / 2 + 2)\n    }\n}\n","import { ButtonInfoDockCfg } from '../../cfg/ButtonsCfg'\nimport { PanelCfg } from '../../cfg/PanelCfg'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { WorldLocationEvent } from '../../event/WorldEvents'\nimport { Button } from '../base/Button'\nimport { Panel } from '../base/Panel'\nimport { InfoDockButton } from './InfoDockButton'\nimport { InfoMessagesCfg, InfoMessagesEntryConfig } from '../../cfg/InfoMessagesCfg'\nimport { InformationPanel } from './InformationPanel'\nimport { CameraControl, PlaySoundEvent } from '../../event/GuiCommand'\nimport { WorldLocationEventMap } from '../../event/EventTypeMap'\nimport { SaveGameManager } from '../../resource/SaveGameManager'\n\nexport class InfoDockPanel extends Panel {\n    readonly stackButtons: InfoDockButton[] = []\n\n    constructor(panelCfg: PanelCfg, buttonsCfg: ButtonInfoDockCfg, infoMessagesConfig: InfoMessagesCfg, readonly informationPanel: InformationPanel) {\n        super(panelCfg)\n        this.addChild(new Button(buttonsCfg.panelButtonInfoDockGoto)).onClick = () => this.gotoLatestMessage()\n        this.addChild(new Button(buttonsCfg.panelButtonInfoDockClose)).onClick = () => this.dropLatestMessage()\n\n        this.addInfoDockButton(infoMessagesConfig.infoGenericDeath, EventKey.LOCATION_DEATH)\n        this.addInfoDockButton(infoMessagesConfig.infoGenericMonster, EventKey.LOCATION_MONSTER, EventKey.LOCATION_MONSTER_GONE)\n        this.addInfoDockButton(infoMessagesConfig.infoCrystalFound, EventKey.LOCATION_CRYSTAL_FOUND)\n        this.addInfoDockButton(infoMessagesConfig.infoUnderAttack, EventKey.LOCATION_UNDER_ATTACK)\n        this.addInfoDockButton(infoMessagesConfig.infoLandslide, EventKey.LOCATION_LANDSLIDE)\n        this.addInfoDockButton(infoMessagesConfig.infoPowerDrain, EventKey.LOCATION_POWER_DRAIN)\n        this.addInfoDockButton(infoMessagesConfig.infoSlugEmerge, EventKey.LOCATION_SLUG_EMERGE, EventKey.LOCATION_SLUG_GONE)\n        this.addInfoDockButton(infoMessagesConfig.infoFoundMiniFigure, EventKey.LOCATION_RAIDER_DISCOVERED)\n    }\n\n    reset() {\n        super.reset()\n        this.stackButtons.length = 0\n    }\n\n    private gotoLatestMessage() {\n        if (this.stackButtons.length < 1) return\n        const btn = this.stackButtons[0]\n        if (btn.messages.length < 1) return\n        const pos = btn.messages[0].location\n        if (pos) this.publishEvent(new CameraControl({jumpToWorld: pos.getPosition2D()}))\n    }\n\n    private dropLatestMessage() {\n        if (this.stackButtons.length < 1) return\n        const button = this.stackButtons[0]\n        if (button.messages.length < 1) return\n        button.messages.shift()\n        this.redrawAfterMessageStackUpdate(button)\n    }\n\n    private redrawAfterMessageStackUpdate(button: InfoDockButton) {\n        if (button.messages.length < 1) {\n            button.hidden = true\n            this.informationPanel.setMovedIn(true)\n            this.stackButtons.remove(button)\n            this.slideStackIntoPosition().then()\n        }\n        button.notifyRedraw()\n    }\n\n    private addInfoDockButton(config: InfoMessagesEntryConfig, eventType: keyof WorldLocationEventMap, eventTypeGone?: keyof WorldLocationEventMap) {\n        const infoDockButton = this.addChild(new InfoDockButton(this, config))\n        this.registerEventListener(eventType, (event: WorldLocationEvent) => {\n            if (infoDockButton.messages.some((m) => m.location === event.location)) return\n            infoDockButton.hidden = false\n            while (infoDockButton.messages.length >= 9) infoDockButton.messages.pop()\n            infoDockButton.messages.unshift(event)\n            this.showButton(infoDockButton)\n            const sample = config.sfxName\n            if (sample && !SaveGameManager.preferences.muteDevSounds) this.publishEvent(new PlaySoundEvent(sample, true))\n        })\n        if (eventTypeGone) {\n            this.registerEventListener(eventTypeGone, (event: WorldLocationEvent) => {\n                infoDockButton.messages.removeAll((e) => e.location === event.location)\n                this.redrawAfterMessageStackUpdate(infoDockButton)\n            })\n        }\n    }\n\n    private showButton(button: InfoDockButton) {\n        if (this.stackButtons.includes(button)) {\n            button.notifyRedraw()\n        } else {\n            this.slideInButton(button)\n        }\n    }\n\n    private slideInButton(button: InfoDockButton) {\n        this.stackButtons.forEach(btn => btn.disabled = true)\n        const targetY = -this.stackButtons.map(b => b.height).reduce((prev, cur) => prev + cur, 0)\n        this.stackButtons.push(button)\n        button.relX = -button.width\n        button.relY = targetY - button.height\n        button.updatePosition()\n        button.slideToTarget(0, targetY).then(() => this.stackButtons.forEach(btn => btn.disabled = false))\n    }\n\n    buttonClicked(button: InfoDockButton) {\n        if (button !== this.stackButtons[0]) {\n            this.pushFirst(button)\n        } else {\n            this.informationPanel.setText(button.text)\n            this.informationPanel.toggleState()\n        }\n    }\n\n    private pushFirst(button: InfoDockButton) {\n        this.stackButtons.splice(this.stackButtons.indexOf(button), 1)\n        this.stackButtons.unshift(button)\n        this.slideStackIntoPosition().then(() => {\n            this.informationPanel.setText(button.text)\n            this.informationPanel.setMovedIn(false)\n        })\n    }\n\n    private slideStackIntoPosition() {\n        this.stackButtons.forEach(btn => btn.disabled = true)\n        let relY = 0\n        const promises = this.stackButtons.map(btn => {\n            const p = btn.slideToTarget(0, relY)\n            relY -= btn.height\n            return p\n        })\n        return new Promise<void>((resolve) => {\n            Promise.all(promises).then(() => {\n                this.stackButtons.forEach(btn => btn.disabled = false)\n                resolve()\n            })\n        })\n    }\n}\n","import { MouseButtonType } from '../../event/EventTypeEnum'\n\nexport class GuiEvent {\n    constructor(public sx: number, public sy: number) {\n    }\n}\n\nexport class GuiHoverEvent extends GuiEvent {\n    hoverStateChanged: boolean = false\n}\n\nexport class GuiPointerDownEvent extends GuiEvent {\n    constructor(sx: number, sy: number, public button: MouseButtonType) {\n        super(sx, sy)\n    }\n}\n\nexport class GuiPointerUpEvent extends GuiEvent {\n    constructor(sx: number, sy: number, public button: MouseButtonType) {\n        super(sx, sy)\n    }\n}\n","import { ButtonCameraControlCfg } from '../../cfg/ButtonsCfg'\nimport { PanelCfg } from '../../cfg/PanelCfg'\nimport { PanelRotationControlCfg, PanelRotationControlImageCfg } from '../../cfg/PanelRotationControlCfg'\nimport { CameraControl } from '../../event/GuiCommand'\nimport { Button } from '../base/Button'\nimport { Panel } from '../base/Panel'\nimport { CAMERA_ROTATION, CameraRotation } from '../../scene/BirdViewControls'\n\nexport class CameraControlPanel extends Panel {\n    constructor(panelCfg: PanelCfg, buttonsCfg: ButtonCameraControlCfg, panelRotationControlCfg: PanelRotationControlCfg) {\n        super(panelCfg)\n        this.addChild(new Button(buttonsCfg.panelButtonCameraControlZoomIn)).onClick = () => {\n            this.publishEvent(new CameraControl({zoom: -1}))\n        }\n        this.addChild(new Button(buttonsCfg.panelButtonCameraControlZoomOut)).onClick = () => {\n            this.publishEvent(new CameraControl({zoom: 1}))\n        }\n        this.addChild(new Button(buttonsCfg.panelButtonCameraControlCycleBuildings)).onClick = () => {\n            this.publishEvent(new CameraControl({cycleBuilding: true}))\n        }\n        this.addControlImage(panelRotationControlCfg.leftImage, CAMERA_ROTATION.left)\n        this.addControlImage(panelRotationControlCfg.upImage, CAMERA_ROTATION.up)\n        this.addControlImage(panelRotationControlCfg.rightImage, CAMERA_ROTATION.right)\n        this.addControlImage(panelRotationControlCfg.downImage, CAMERA_ROTATION.down)\n    }\n\n    private addControlImage(cfg: PanelRotationControlImageCfg, rotationIndex: CameraRotation) {\n        this.addChild(new Button({\n            highlightFile: cfg.imgHighlight,\n            relX: cfg.x - this.relX,\n            relY: cfg.y - this.relY,\n        })).onClick = () => {\n            this.publishEvent(new CameraControl({rotationIndex}))\n        }\n    }\n}\n","import { ScaledLayer } from './ScaledLayer'\nimport { RadarPanel } from '../../gui/radar/RadarPanel'\nimport { MessagePanel } from '../../gui/messagepanel/MessagePanel'\nimport { Panel } from '../../gui/base/Panel'\nimport { PanelCrystalSideBar } from '../../gui/sidebar/PanelCrystalSideBar'\nimport { MainPanel } from '../../gui/main/MainPanel'\nimport { TopPanel } from '../../gui/toppanel/TopPanel'\nimport { InformationPanel } from '../../gui/infodock/InformationPanel'\nimport { PriorityListPanel } from '../../gui/toppanel/PriorityListPanel'\nimport { InfoDockPanel } from '../../gui/infodock/InfoDockPanel'\nimport { BaseElement } from '../../gui/base/BaseElement'\nimport { PlaySoundEvent } from '../../event/GuiCommand'\nimport { CursorManager } from '../CursorManager'\nimport { GamePointerEvent } from '../../event/GamePointerEvent'\nimport { USE_KEYBOARD_SHORTCUTS } from '../../params'\nimport { KEY_EVENT, KeyEventType, MOUSE_BUTTON, POINTER_EVENT, PointerEventType } from '../../event/EventTypeEnum'\nimport { GuiHoverEvent, GuiPointerDownEvent, GuiPointerUpEvent } from '../../gui/event/GuiEvent'\nimport { CameraControlPanel } from '../../gui/cameracontrol/CameraControlPanel'\nimport { GameWheelEvent } from '../../event/GameWheelEvent'\nimport { GameKeyboardEvent } from '../../event/GameKeyboardEvent'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { EventBroker } from '../../event/EventBroker'\nimport { BaseEvent, EventTypeMap } from '../../event/EventTypeMap'\nimport { EventKey } from '../../event/EventKeyEnum'\n\nexport class GuiBaseLayer extends ScaledLayer {\n    readonly rootElement: BaseElement\n    readonly panels: Panel[] = []\n    layerScale = 1 // XXX Scaled panel crystal sidebar does not fit\n\n    constructor() {\n        super()\n        this.rootElement = new BaseElement()\n        this.rootElement.notifyRedraw = () => this.animationFrame.notifyRedraw()\n        this.rootElement.publishEvent = (event: BaseEvent) => {\n            EventBroker.publish(event)\n        }\n        this.rootElement.registerEventListener = <Type extends keyof EventTypeMap>(eventType: Type, callback: (event: EventTypeMap[Type]) => void) => {\n            EventBroker.subscribe(eventType, callback)\n        }\n        this.animationFrame.onRedraw = (context) => {\n            this.rootElement.onRedraw(context)\n        }\n        new Map<keyof HTMLElementEventMap, PointerEventType>([\n            ['pointermove', POINTER_EVENT.move],\n            ['pointerdown', POINTER_EVENT.down],\n            ['pointerup', POINTER_EVENT.up],\n            ['pointerleave', POINTER_EVENT.leave],\n        ]).forEach((eventEnum, eventType) => {\n            this.addEventListener(eventType, (event): boolean => {\n                const gameEvent = new GamePointerEvent(eventEnum, event as PointerEvent)\n                ;[gameEvent.canvasX, gameEvent.canvasY] = this.transformCoords(gameEvent.clientX, gameEvent.clientY)\n                return this.handlePointerEvent(gameEvent)\n            })\n        })\n        this.addEventListener('wheel', (event: WheelEvent): boolean => {\n            const gameEvent = new GameWheelEvent(event)\n            ;[gameEvent.canvasX, gameEvent.canvasY] = this.transformCoords(gameEvent.clientX, gameEvent.clientY)\n            return this.animationFrame.isOpaque(gameEvent.canvasX, gameEvent.canvasY)\n        })\n        EventBroker.subscribe(EventKey.UNPAUSE_GAME, () => {\n            this.animationFrame.notifyRedraw()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.rootElement.reset()\n        this.panels.forEach((p) => p.reset())\n    }\n\n    resize(width: number, height: number) {\n        super.resize(width * this.layerScale, height * this.layerScale)\n    }\n\n    addPanel<T extends Panel>(panel: T): T {\n        this.rootElement.addChild(panel)\n        this.panels.push(panel)\n        return panel\n    }\n\n    handlePointerEvent(event: GamePointerEvent): boolean {\n        const hit = this.animationFrame.isOpaque(event.canvasX, event.canvasY)\n        if (hit) {\n            CursorManager.changeCursor('standard') // TODO don't spam so many events?!\n            if (event.eventEnum === POINTER_EVENT.move) {\n                this.rootElement.onPointerMove(new GuiHoverEvent(event.canvasX, event.canvasY))\n            } else if (event.eventEnum === POINTER_EVENT.down) {\n                if (event.button === MOUSE_BUTTON.main) {\n                    this.rootElement.onPointerDown(new GuiPointerDownEvent(event.canvasX, event.canvasY, event.button))\n                }\n            } else if (event.eventEnum === POINTER_EVENT.up) {\n                if (event.button === MOUSE_BUTTON.main) {\n                    const stateChanged = this.rootElement.onPointerUp(new GuiPointerUpEvent(event.canvasX, event.canvasY, event.button))\n                    if (!stateChanged) {\n                        CursorManager.changeCursor('notOkay', 1000)\n                        this.rootElement.publishEvent(new PlaySoundEvent('SFX_NotOkay', false))\n                    }\n                }\n            }\n        } else if (event.eventEnum === POINTER_EVENT.move || event.eventEnum === POINTER_EVENT.leave) {\n            this.rootElement.onPointerLeave()\n        }\n        return hit\n    }\n}\n\nexport class GuiTopLeftLayer extends GuiBaseLayer {\n    readonly panelRadar: RadarPanel\n\n    constructor() {\n        super()\n        this.canvas.style.justifySelf = 'start'\n        this.canvas.style.alignSelf = 'start'\n        this.panelRadar = this.addPanel(new RadarPanel(GameConfig.instance.panels.panelRadar, GameConfig.instance.panels.panelRadarFill, GameConfig.instance.panels.panelRadarOverlay, GameConfig.instance.buttons.panelRadar))\n        this.animationFrame.notifyRedraw()\n    }\n}\n\nexport class GuiTopRightLayer extends GuiBaseLayer {\n    readonly panelMain: MainPanel\n    readonly panelTopPanel: TopPanel\n    readonly panelPriorityList: PriorityListPanel\n\n    constructor() {\n        super()\n        this.canvas.style.justifySelf = 'end'\n        this.canvas.style.alignSelf = 'start'\n        this.panelPriorityList = this.addPanel(new PriorityListPanel(GameConfig.instance.panels.panelPriorityList, GameConfig.instance.buttons.panelPriorityList, GameConfig.instance.prioritiesImagePositions, GameConfig.instance.priorityImages))\n        this.panelTopPanel = this.addPanel(new TopPanel(GameConfig.instance.panels.panelTopPanel, GameConfig.instance.buttons.panelTopPanel))\n        this.panelMain = this.addPanel(new MainPanel())\n        this.animationFrame.notifyRedraw()\n        // link panels\n        this.panelTopPanel.btnPriorities.onClick = () => {\n            if (this.panelTopPanel.btnPriorities.toggleState) {\n                this.panelMain.setMovedIn(true, () => this.panelPriorityList.setMovedIn(false))\n            } else {\n                this.panelPriorityList.setMovedIn(true, () => this.panelMain.setMovedIn(false))\n            }\n        }\n        new Map<keyof HTMLElementEventMap, KeyEventType>([\n            ['keydown', KEY_EVENT.down],\n            ['keyup', KEY_EVENT.up],\n        ]).forEach((eventEnum, eventType) => {\n            this.addEventListener(eventType, (event): boolean => {\n                const gameEvent = new GameKeyboardEvent(eventEnum, event as KeyboardEvent)\n                return this.handleKeyEvent(gameEvent)\n            })\n        })\n    }\n\n    handleKeyEvent(event: GameKeyboardEvent): boolean {\n        if (this.panelMain.movedIn || !USE_KEYBOARD_SHORTCUTS) return false\n        const activeSubPanels = this.panelMain.subPanels.filter((p) => !p.movedIn)\n        const activeIconPanelButtons = activeSubPanels.flatMap((p) => p.iconPanelButtons)\n        const buttonWithKey = activeIconPanelButtons.find((b) => b.hotkey === event.key)\n        if (buttonWithKey && !buttonWithKey.isInactive()) {\n            if (event.eventEnum === KEY_EVENT.up) {\n                const bx = buttonWithKey.x + buttonWithKey.width / 2\n                const by = buttonWithKey.y + buttonWithKey.height / 2\n                buttonWithKey.onClick?.(bx, by)\n            }\n            return true\n        }\n        return false\n    }\n}\n\nexport class GuiBottomRightLayer extends GuiBaseLayer {\n    readonly panelCrystalSideBar: PanelCrystalSideBar\n    readonly panelCameraControl: Panel\n\n    constructor() {\n        super()\n        this.canvas.style.justifySelf = 'end'\n        this.canvas.style.alignSelf = 'end'\n        this.panelCameraControl = this.addPanel(new CameraControlPanel(GameConfig.instance.panels.panelCameraControl, GameConfig.instance.buttons.panelCameraControl, GameConfig.instance.panelRotationControl))\n        this.panelCrystalSideBar = this.addPanel(new PanelCrystalSideBar(GameConfig.instance.panels.panelCrystalSideBar, GameConfig.instance.buttons.panelCrystalSideBar))\n        this.animationFrame.notifyRedraw()\n    }\n}\n\nexport class GuiBottomLeftLayer extends GuiBaseLayer {\n    readonly panelMessages: MessagePanel\n    readonly panelMessagesSide: Panel\n    readonly panelInformation: InformationPanel\n    readonly panelInfoDock: InfoDockPanel\n\n    constructor() {\n        super()\n        this.canvas.style.justifySelf = 'start'\n        this.canvas.style.alignSelf = 'end'\n        this.panelInformation = this.addPanel(new InformationPanel(GameConfig.instance.panels.panelInformation))\n        this.panelInfoDock = this.addPanel(new InfoDockPanel(GameConfig.instance.panels.panelInfoDock, GameConfig.instance.buttons.panelInfoDock, GameConfig.instance.infoMessages, this.panelInformation))\n        this.panelMessagesSide = this.addPanel(new Panel(GameConfig.instance.panels.panelMessagesSide))\n        this.panelMessages = this.addPanel(new MessagePanel(GameConfig.instance.panels.panelMessages, GameConfig.instance.textMessagesWithImages))\n        this.animationFrame.notifyRedraw()\n    }\n}\n","import { ButtonCfg } from '../../cfg/ButtonCfg'\nimport { PanelCfg } from '../../cfg/PanelCfg'\nimport { Rect } from '../../core/Rect'\nimport { GameConfig } from '../../cfg/GameConfig'\n\nexport class BriefingPanelCfg extends PanelCfg {\n    // XXX find config values for this class\n\n    titleFontName: string\n    titleWindow: Rect\n    textFontName: string\n    textWindow: Rect\n    nextButtonCfg: ButtonCfg\n    backButtonCfg: ButtonCfg\n\n    constructor() {\n        super()\n        this.titleFontName = 'Interface/Fonts/MbriefFont2.bmp'\n        const dialogCfg = GameConfig.instance.dialog\n        if (!dialogCfg.titleWindow) throw new Error('No title window config given')\n        this.titleWindow = {...dialogCfg.titleWindow}\n        this.textFontName = 'Interface/Fonts/MbriefFont.bmp'\n        if (!dialogCfg.textWindow) throw new Error('No text window config given')\n        this.textWindow = {...dialogCfg.textWindow}\n        this.textWindow.y -= 10 // XXX Why offset needed? Better use help window?\n        this.nextButtonCfg = Object.assign(new ButtonCfg(), {\n            buttonType: 'Next briefing paragraph',\n            relX: 394,\n            relY: 214,\n            normalFile: GameConfig.instance.main.nextButton,\n        })\n        this.backButtonCfg = Object.assign(new ButtonCfg(), {\n            buttonType: 'Previous briefing paragraph',\n            relX: 54,\n            relY: 214,\n            normalFile: GameConfig.instance.main.backArrow,\n        })\n    }\n}\n","import { SpriteContext, SpriteImage } from '../../core/Sprite'\nimport { Button } from '../base/Button'\nimport { Panel } from '../base/Panel'\nimport { BriefingPanelCfg } from './BriefingPanelCfg'\nimport { SetSpaceToContinueEvent, ShowMissionAdvisorEvent, ShowMissionBriefingEvent } from '../../event/LocalEvents'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { BitmapFontWorkerPool } from '../../worker/BitmapFontWorkerPool'\nimport { SoundManager } from '../../audio/SoundManager'\nimport { EventBroker } from '../../event/EventBroker'\n\nexport class BriefingPanel extends Panel {\n    cfg: BriefingPanelCfg\n    imgTitle?: SpriteImage\n    titleRelX: number = 0\n    titleRelY: number = 0\n    btnNext: Button\n    btnBack: Button\n    imgBack?: SpriteImage\n    imgParagraphList: (SpriteImage | undefined)[] = []\n    paragraph: number = 0\n    objectiveParagraphs: string[] = []\n    objectiveSfxName: string = ''\n    objectiveSfx?: AudioBufferSourceNode\n    onContinueMission: () => void = () => console.log('Start mission')\n\n    constructor() {\n        super()\n        this.cfg = new BriefingPanelCfg()\n        this.onClick = () => this.nextParagraph() // fallback for touch displays without keyboard like mobile browsers\n        this.titleRelX = this.cfg.titleWindow.x + this.cfg.titleWindow.w / 2\n        this.titleRelY = this.cfg.titleWindow.y\n        this.btnNext = this.addChild(new Button(this.cfg.nextButtonCfg))\n        this.btnNext.onClick = () => this.nextParagraph()\n        this.btnBack = this.addChild(new Button(this.cfg.backButtonCfg))\n        this.btnBack.onClick = () => this.prevParagraph()\n        this.hidden = true\n    }\n\n    reset() {\n        super.reset()\n        this.hidden = true\n        this.setParagraph(0)\n        this.objectiveSfxName = ''\n        this.objectiveSfx?.stop()\n        this.objectiveSfx = undefined\n    }\n\n    setup(dialogTitle: string, objectiveText: string, objectiveBackImgCfg: { filename: string, x: number, y: number }, objectiveSfx: string) {\n        this.imgBack = ResourceManager.getImage(objectiveBackImgCfg.filename)\n        this.relX = this.xIn = objectiveBackImgCfg.x\n        this.relY = this.yIn = objectiveBackImgCfg.y\n        this.width = this.imgBack?.width || 0\n        this.height = this.imgBack?.height || 0\n        this.updatePosition()\n        this.objectiveParagraphs = objectiveText?.split('\\\\a') || []\n        this.objectiveSfxName = objectiveSfx\n        this.objectiveSfx?.stop()\n        this.objectiveSfx = undefined\n        BitmapFontWorkerPool.instance.createTextImage(this.cfg.titleFontName, dialogTitle).then((textImage) => {\n            this.imgTitle = textImage\n            this.notifyRedraw()\n        })\n        Promise.all(this.objectiveParagraphs.map((txt) => {\n            return BitmapFontWorkerPool.instance.createTextImage(this.cfg.textFontName, txt, this.cfg.textWindow.w, false)\n        })).then((textImages) => {\n            this.imgParagraphList = textImages\n            this.notifyRedraw()\n        })\n    }\n\n    setParagraph(paragraph: number) {\n        if (paragraph < 0) return\n        if (paragraph > 0 && paragraph > this.objectiveParagraphs.length - 1) {\n            this.objectiveSfx?.stop()\n            this.onContinueMission()\n            return\n        }\n        this.paragraph = paragraph\n        this.btnNext.hidden = this.paragraph >= this.objectiveParagraphs.length - 1\n        this.btnBack.hidden = this.paragraph < 1\n        this.notifyRedraw()\n    }\n\n    nextParagraph() {\n        this.setParagraph(this.paragraph + 1)\n    }\n\n    prevParagraph() {\n        this.setParagraph(this.paragraph - 1)\n    }\n\n    show() {\n        super.show()\n        this.setParagraph(0)\n        if (this.objectiveSfxName) {\n            this.objectiveSfx?.stop()\n            this.objectiveSfx = SoundManager.playSfxSound(this.objectiveSfxName)\n            this.objectiveSfx?.addEventListener('ended', () => EventBroker.publish(new ShowMissionAdvisorEvent(false)))\n        }\n        this.btnNext.hidden = this.paragraph >= this.objectiveParagraphs.length - 1\n        this.btnBack.hidden = this.paragraph < 1\n        this.publishEvent(new SetSpaceToContinueEvent(true))\n        this.publishEvent(new ShowMissionBriefingEvent(true))\n    }\n\n    hide() {\n        super.hide()\n        this.objectiveSfx?.stop()\n        this.objectiveSfx = undefined\n        this.publishEvent(new SetSpaceToContinueEvent(false))\n        this.publishEvent(new ShowMissionBriefingEvent(false))\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        if (this.imgBack) context.drawImage(this.imgBack, this.x, this.y)\n        if (this.imgTitle) context.drawImage(this.imgTitle, Math.round(this.x + this.titleRelX - this.imgTitle.width / 2), this.y + this.titleRelY)\n        const imgParagraph = this.imgParagraphList[this.paragraph]\n        if (imgParagraph) context.drawImage(imgParagraph, this.x + this.cfg.textWindow.x, this.y + this.cfg.textWindow.y)\n        super.onRedraw(context)\n    }\n}\n","import { MenuCycleItemCfg } from '../../cfg/MenuCycleItemCfg'\nimport { SpriteContext, SpriteImage } from '../../core/Sprite'\nimport { BaseElement } from '../base/BaseElement'\nimport { GuiHoverEvent, GuiPointerDownEvent, GuiPointerUpEvent } from '../event/GuiEvent'\nimport { MenuEntryCfg } from '../../cfg/MenuEntryCfg'\nimport { BitmapFontWorkerPool } from '../../worker/BitmapFontWorkerPool'\n\nexport class MenuCycleItem extends BaseElement {\n    imgTextNormal?: SpriteImage\n    imgTextHover?: SpriteImage\n    imgLabelOnNormal?: SpriteImage\n    imgLabelOffNormal?: SpriteImage\n    imgLabelOnHover?: SpriteImage\n    imgLabelOffHover?: SpriteImage\n\n    labelX: number = 0\n    state: boolean = false\n    onStateChanged: (state: boolean) => void = (state) => console.log(`TODO: cycle item clicked; state: ${state}`)\n\n    constructor(menuCfg: MenuEntryCfg, itemCfg: MenuCycleItemCfg) {\n        super()\n        this.relX = itemCfg.x\n        this.relY = itemCfg.y\n        this.labelX = itemCfg.width\n        Promise.all([\n            BitmapFontWorkerPool.instance.createTextImage(menuCfg.loFont, itemCfg.description),\n            BitmapFontWorkerPool.instance.createTextImage(menuCfg.hiFont, itemCfg.description),\n            BitmapFontWorkerPool.instance.createTextImage(menuCfg.loFont, itemCfg.labelOff),\n            BitmapFontWorkerPool.instance.createTextImage(menuCfg.hiFont, itemCfg.labelOff),\n            BitmapFontWorkerPool.instance.createTextImage(menuCfg.loFont, itemCfg.labelOn),\n            BitmapFontWorkerPool.instance.createTextImage(menuCfg.hiFont, itemCfg.labelOn),\n        ]).then((textImages) => {\n            [this.imgTextNormal, this.imgTextHover, this.imgLabelOffNormal, this.imgLabelOffHover, this.imgLabelOnNormal, this.imgLabelOnHover] = textImages\n            this.width = itemCfg.width + Math.max(this.imgLabelOnHover?.width || 0, this.imgLabelOffHover?.width || 0)\n            this.height = this.imgTextNormal?.height || 0\n        })\n        this.onClick = () => {\n            this.state = !this.state\n            this.onStateChanged(this.state)\n        }\n    }\n\n    setState(state: boolean) {\n        this.state = state\n    }\n\n    onPointerMove(event: GuiHoverEvent): void {\n        super.onPointerMove(event)\n        if (event.hoverStateChanged) this.notifyRedraw()\n    }\n\n    onPointerDown(event: GuiPointerDownEvent): boolean {\n        const stateChanged = super.onPointerDown(event)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    onPointerUp(event: GuiPointerUpEvent): boolean {\n        const stateChanged = super.onPointerUp(event)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    onPointerLeave(): boolean {\n        const stateChanged = super.onPointerLeave()\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        let img = this.imgTextNormal\n        let imgLabel = this.state ? this.imgLabelOnNormal : this.imgLabelOffNormal\n        if (this.hover) {\n            img = this.imgTextHover\n            imgLabel = this.state ? this.imgLabelOnHover : this.imgLabelOffHover\n        }\n        if (img) context.drawImage(img, this.x, this.y)\n        if (imgLabel) context.drawImage(imgLabel, this.x + this.labelX, this.y)\n        super.onRedraw(context)\n    }\n}\n","import { MenuLabelItemCfg } from '../../cfg/MenuLabelItemCfg'\nimport { SpriteContext, SpriteImage } from '../../core/Sprite'\nimport { BaseElement } from '../base/BaseElement'\nimport { GuiHoverEvent, GuiPointerDownEvent, GuiPointerUpEvent } from '../event/GuiEvent'\nimport { MenuEntryCfg } from '../../cfg/MenuEntryCfg'\nimport { BitmapFontWorkerPool } from '../../worker/BitmapFontWorkerPool'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { LevelEntryCfg } from '../../cfg/LevelsCfg'\n\nexport class MenuLabelItem extends BaseElement {\n    target: string\n    loImg?: SpriteImage\n    hiImg?: SpriteImage\n\n    constructor(menuCfg: MenuEntryCfg, itemCfg: MenuLabelItemCfg, parentCenterX: number) {\n        super()\n        this.target = itemCfg.target\n        Promise.all([\n            BitmapFontWorkerPool.instance.createTextImage(menuCfg.loFont, itemCfg.label),\n            BitmapFontWorkerPool.instance.createTextImage(menuCfg.hiFont, itemCfg.label),\n        ]).then((textImages) => {\n            [this.loImg, this.hiImg] = textImages\n            this.width = this.loImg?.width || 0\n            this.height = this.loImg?.height || 0\n            this.relX = menuCfg.autoCenter ? parentCenterX - this.width / 2 : itemCfg.x\n            this.updatePosition()\n        })\n        this.relY = itemCfg.y\n        this.registerEventListener(EventKey.LEVEL_SELECTED, (event) => {\n            this.disabled = LevelEntryCfg.isTutorial(event.levelConf.levelName) && itemCfg.flag === 'NotInTuto'\n        })\n    }\n\n    onPointerMove(event: GuiHoverEvent): void {\n        super.onPointerMove(event)\n        if (event.hoverStateChanged) this.notifyRedraw()\n    }\n\n    onPointerDown(event: GuiPointerDownEvent): boolean {\n        const stateChanged = super.onPointerDown(event)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    onPointerUp(event: GuiPointerUpEvent): boolean {\n        const stateChanged = super.onPointerUp(event)\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    onPointerLeave(): boolean {\n        const stateChanged = super.onPointerLeave()\n        if (stateChanged) this.notifyRedraw()\n        return stateChanged\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        if (this.hover) {\n            if (this.hiImg) context.drawImage(this.hiImg, this.x, this.y)\n        } else {\n            if (this.loImg) context.drawImage(this.loImg, this.x, this.y)\n        }\n        super.onRedraw(context)\n    }\n}\n","import { BaseButtonCfg } from '../../cfg/ButtonCfg'\nimport { MenuSliderItemCfg } from '../../cfg/MenuSliderItemCfg'\nimport { SpriteContext, SpriteImage } from '../../core/Sprite'\nimport { BaseElement } from '../base/BaseElement'\nimport { Button } from '../base/Button'\nimport { GuiHoverEvent } from '../event/GuiEvent'\nimport { MenuEntryCfg } from '../../cfg/MenuEntryCfg'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { BitmapFontWorkerPool } from '../../worker/BitmapFontWorkerPool'\n\nexport class MenuSliderItem extends BaseElement {\n    imgTextNormal?: SpriteImage\n    imgTextHover?: SpriteImage\n    imgLeft: SpriteImage\n    imgNormal: SpriteImage\n    imgHover: SpriteImage\n    imgRight: SpriteImage\n    sliderX: number = 0\n    min: number = 0\n    max: number = 1\n    value: number = 0\n    onValueChanged: (value: number) => void = (value) => console.log(`TODO: Slider value changed; value: ${value}`)\n\n    constructor(menuCfg: MenuEntryCfg, itemCfg: MenuSliderItemCfg) {\n        super()\n        this.relX = itemCfg.x\n        this.relY = itemCfg.y\n        this.sliderX = itemCfg.width\n        this.imgLeft = ResourceManager.getImage(itemCfg.imgLeft)\n        this.imgNormal = ResourceManager.getImage(itemCfg.imgOff)\n        this.imgHover = ResourceManager.getImage(itemCfg.imgOn)\n        this.imgRight = ResourceManager.getImage(itemCfg.imgRight)\n        const leftBtn = this.addChild(new Button(new BaseButtonCfg()))\n        leftBtn.imgNormal = ResourceManager.getImage(itemCfg.btnLeftNormal)\n        leftBtn.imgHover = ResourceManager.getImage(itemCfg.btnLeftHover)\n        leftBtn.relX = this.sliderX - this.imgLeft.width - leftBtn.imgHover.width\n        leftBtn.width = leftBtn.imgHover.width\n        leftBtn.height = leftBtn.imgHover.height\n        leftBtn.updatePosition()\n        leftBtn.onClick = () => {\n            if (this.value > this.min) {\n                this.value = Math.max(this.value - 1, this.min)\n                this.onValueChanged(this.value / this.max)\n            }\n        }\n        const rightBtn = this.addChild(new Button(new BaseButtonCfg()))\n        rightBtn.imgNormal = ResourceManager.getImage(itemCfg.btnRightNormal)\n        rightBtn.imgHover = ResourceManager.getImage(itemCfg.btnRightHover)\n        rightBtn.relX = this.sliderX + this.imgNormal.width + this.imgRight.width * 2\n        rightBtn.width = rightBtn.imgHover.width\n        rightBtn.height = rightBtn.imgHover.height\n        rightBtn.updatePosition()\n        rightBtn.onClick = () => {\n            if (this.value < this.max) {\n                this.value = Math.min(this.value + 1, this.max)\n                this.onValueChanged(this.value / this.max)\n            }\n        }\n        this.width = itemCfg.width + leftBtn.imgHover.width + this.imgLeft.width + this.imgNormal.width + this.imgRight.width * 2 + rightBtn.imgHover.width\n        this.min = itemCfg.min\n        this.max = itemCfg.max || 1\n        this.value = this.min\n        Promise.all([\n            BitmapFontWorkerPool.instance.createTextImage(menuCfg.loFont, itemCfg.description),\n            BitmapFontWorkerPool.instance.createTextImage(menuCfg.hiFont, itemCfg.description),\n        ]).then((textImages) => {\n            [this.imgTextNormal, this.imgTextHover] = textImages\n            this.height = this.imgTextNormal?.height || 0\n        })\n    }\n\n    setValue(value: number) {\n        this.value = Math.max(0, Math.min(1, value)) * this.max\n    }\n\n    onPointerMove(event: GuiHoverEvent): void {\n        super.onPointerMove(event)\n        if (event.hoverStateChanged) this.notifyRedraw()\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        let img = this.imgTextNormal\n        if (this.hover) {\n            img = this.imgTextHover\n        }\n        if (img) context.drawImage(img, this.x, this.y)\n        let posX = this.x + this.sliderX\n        context.drawImage(this.imgLeft, posX, this.y)\n        context.drawImage(this.imgNormal, posX, this.y)\n        const dw = Math.round(this.value / this.max * this.imgHover.width)\n        context.drawImage(this.imgHover, 0, 0, dw, this.imgHover.height, posX, this.y, dw, this.imgHover.height)\n        posX += this.imgNormal.width\n        context.drawImage(this.imgRight, posX, this.y)\n        super.onRedraw(context)\n    }\n}\n","import { MenuEntryCfg } from '../../cfg/MenuEntryCfg'\nimport { SpriteContext, SpriteImage } from '../../core/Sprite'\nimport { NATIVE_SCREEN_HEIGHT, NATIVE_SCREEN_WIDTH } from '../../params'\nimport { BaseElement } from '../base/BaseElement'\nimport { MenuCycleItem } from './MenuCycleItem'\nimport { MenuLabelItem } from './MenuLabelItem'\nimport { MenuSliderItem } from './MenuSliderItem'\nimport { ResourceManager } from '../../resource/ResourceManager'\nimport { BitmapFontWorkerPool } from '../../worker/BitmapFontWorkerPool'\n\nexport class MenuLayer extends BaseElement {\n    menuImage: SpriteImage\n    titleImage?: SpriteImage\n    itemsTrigger: MenuLabelItem[] = []\n    itemsNext: MenuLabelItem[] = []\n    itemsCycle: MenuCycleItem[] = []\n    itemsSlider: MenuSliderItem[] = []\n\n    constructor(menuCfg: MenuEntryCfg) {\n        super()\n        this.relX = menuCfg.position.x\n        this.relY = menuCfg.position.y\n        this.menuImage = ResourceManager.getImage(menuCfg.menuImage)\n        BitmapFontWorkerPool.instance.createTextImage(menuCfg.menuFont, menuCfg.fullName)\n            .then((textImage) => this.titleImage = textImage)\n        menuCfg.itemsLabel.forEach((itemCfg) => {\n            const item = this.addChild(new MenuLabelItem(menuCfg, itemCfg, -this.relX + this.menuImage.width / 2))\n            if (itemCfg.actionName.toLowerCase() === 'trigger') {\n                this.itemsTrigger.push(item)\n            } else {\n                this.itemsNext.push(item)\n            }\n        })\n        this.itemsCycle = menuCfg.itemsCycle.map((itemCfg) => this.addChild(new MenuCycleItem(menuCfg, itemCfg)))\n        this.itemsSlider = menuCfg.itemsSlider.map((itemCfg) => this.addChild(new MenuSliderItem(menuCfg, itemCfg)))\n        this.hidden = true\n    }\n\n    reset() {\n        super.reset()\n        this.hidden = true\n    }\n\n    onRedraw(context: SpriteContext) {\n        if (this.hidden) return\n        context.drawImage(this.menuImage, (NATIVE_SCREEN_WIDTH - this.menuImage.width) / 2, (NATIVE_SCREEN_HEIGHT - this.menuImage.height) / 2)\n        if (this.titleImage) context.drawImage(this.titleImage, (NATIVE_SCREEN_WIDTH - this.titleImage.width) / 2, this.y)\n        super.onRedraw(context)\n    }\n}\n","import { MenuCfg } from '../../cfg/MenuCfg'\nimport { Panel } from '../base/Panel'\nimport { MenuLayer } from './MenuLayer'\n\nexport class MenuBasePanel extends Panel {\n    layersByKey: Map<string, MenuLayer> = new Map()\n\n    constructor(cfg: MenuCfg) {\n        super()\n        this.hidden = true\n        cfg.menus.forEach((menuCfg, index) => this.layersByKey.set(`menu${index + 1}`, this.addChild(new MenuLayer(menuCfg))))\n        this.layersByKey.forEach((layer) => layer.itemsNext.forEach((item) => item.onClick = () => this.selectLayer(item.target)))\n    }\n\n    reset() {\n        super.reset()\n        this.hidden = true\n    }\n\n    show() {\n        this.hidden = false\n        this.selectLayer('menu1')\n    }\n\n    hide() {\n        super.hide()\n        this.notifyRedraw()\n    }\n\n    selectLayer(key: string) {\n        const layer = this.layersByKey.get(key.toLowerCase())\n        if (!layer) {\n            console.error(`Could not find layer with key \"${key}\"`)\n            return\n        }\n        this.layersByKey.forEach(l => l !== layer && l.hide())\n        layer.show()\n        this.notifyRedraw()\n    }\n}\n","import { ChangePreferences } from '../../event/GuiCommand'\nimport { MenuLayer } from './MenuLayer'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { SaveGameManager } from '../../resource/SaveGameManager'\n\nexport function setupOptionsLayer(optionsLayer: MenuLayer, onRepeatBriefing: () => unknown) {\n    const gameSpeedSlider = optionsLayer.itemsSlider[0]\n    gameSpeedSlider.onValueChanged = (value) => {\n        SaveGameManager.preferences.gameSpeed = value\n        optionsLayer.publishEvent(new ChangePreferences())\n    }\n    const volumeSfxSlider = optionsLayer.itemsSlider[1]\n    volumeSfxSlider.onValueChanged = (value) => {\n        SaveGameManager.preferences.volumeSfx = value\n        optionsLayer.publishEvent(new ChangePreferences())\n    }\n    const volumeMusicSlider = optionsLayer.itemsSlider[2]\n    volumeMusicSlider.onValueChanged = (value) => {\n        SaveGameManager.preferences.volumeMusic = value\n        optionsLayer.publishEvent(new ChangePreferences())\n    }\n    const gameBrightnessSlider = optionsLayer.itemsSlider[3]\n    gameBrightnessSlider.onValueChanged = (value) => {\n        SaveGameManager.preferences.gameBrightness = value\n        optionsLayer.publishEvent(new ChangePreferences())\n    }\n    const showHelpWindowCycle = optionsLayer.itemsCycle[0]\n    showHelpWindowCycle.disabled = true // TODO Implement help window\n    showHelpWindowCycle.onStateChanged = (state) => {\n        SaveGameManager.preferences.showHelpWindow = state\n        optionsLayer.publishEvent(new ChangePreferences())\n    }\n    optionsLayer.itemsTrigger[0].onClick = () => onRepeatBriefing()\n\n    function updateAllValues() {\n        gameSpeedSlider.setValue(SaveGameManager.preferences.gameSpeed)\n        volumeSfxSlider.setValue(SaveGameManager.preferences.volumeSfx)\n        volumeMusicSlider.setValue(SaveGameManager.preferences.volumeMusic)\n        gameBrightnessSlider.setValue(SaveGameManager.preferences.gameBrightness)\n        showHelpWindowCycle.setState(SaveGameManager.preferences.showHelpWindow)\n    }\n\n    updateAllValues()\n\n    optionsLayer.registerEventListener(EventKey.COMMAND_CHANGE_PREFERENCES, () => updateAllValues())\n\n    const show = optionsLayer.show.bind(optionsLayer)\n    optionsLayer.show = () => {\n        show()\n        updateAllValues()\n    }\n}\n","import { MenuCfg } from '../../cfg/MenuCfg'\nimport { MenuBasePanel } from './MenuBasePanel'\nimport { setupOptionsLayer } from './OptionsLayerUtil'\n\nexport class OptionsPanel extends MenuBasePanel {\n    onContinueMission: () => void = () => console.log('continue mission')\n    onRepeatBriefing: () => void = () => console.log('repeat mission briefing')\n\n    constructor(cfg: MenuCfg, width: number, height: number) {\n        super(cfg)\n        this.width = width\n        this.height = height\n        const menu1 = this.layersByKey.get('menu1')\n        if (menu1) {\n            menu1.itemsTrigger[1].onClick = () => this.onContinueMission()\n            setupOptionsLayer(menu1, () => this.onRepeatBriefing())\n        }\n    }\n}\n","import { MenuCfg } from '../../cfg/MenuCfg'\nimport { MenuBasePanel } from './MenuBasePanel'\nimport { ChangePreferences } from '../../event/GuiCommand'\nimport { setupOptionsLayer } from './OptionsLayerUtil'\nimport { SaveGameManager } from '../../resource/SaveGameManager'\n\nexport class PausePanel extends MenuBasePanel {\n    onContinueGame: () => void = () => console.log('continue mission')\n    onRepeatBriefing: () => void = () => console.log('repeat mission briefing')\n    onAbortGame: () => void = () => console.log('abort mission')\n    onRestartGame: () => void = () => console.log('restart mission')\n\n    constructor(cfg: MenuCfg, width: number, height: number) {\n        super(cfg)\n        this.width = width\n        this.height = height\n        this.layersByKey.get('menu1')!.itemsTrigger[0].onClick = () => this.onContinueGame()\n        setupOptionsLayer(this.layersByKey.get('menu2')!, () => this.onRepeatBriefing())\n        this.layersByKey.get('menu3')!.itemsTrigger[0].onClick = () => this.onAbortGame()\n        this.layersByKey.get('menu4')!.itemsTrigger[0].onClick = () => this.onRestartGame()\n        const advOptions = this.layersByKey.get('menu5')!\n        const wallDetailsToggle = advOptions.itemsCycle[0]\n        wallDetailsToggle.setState(SaveGameManager.preferences.wallDetails)\n        wallDetailsToggle.onStateChanged = (state) => {\n            SaveGameManager.preferences.wallDetails = state\n            this.publishEvent(new ChangePreferences())\n        }\n        const musicToggle = advOptions.itemsCycle[1]\n        musicToggle.setState(SaveGameManager.preferences.toggleMusic)\n        musicToggle.onStateChanged = (state) => {\n            SaveGameManager.preferences.toggleMusic = state\n            this.publishEvent(new ChangePreferences())\n        }\n        const sfxToggle = advOptions.itemsCycle[2]\n        sfxToggle.setState(SaveGameManager.preferences.toggleSfx)\n        sfxToggle.onStateChanged = (state) => {\n            SaveGameManager.preferences.toggleSfx = state\n            this.publishEvent(new ChangePreferences())\n        }\n        const autoGameSpeedToggle = advOptions.itemsCycle[3]\n        autoGameSpeedToggle.disabled = true // TODO Implement auto game speed\n        autoGameSpeedToggle.setState(SaveGameManager.preferences.autoGameSpeed)\n    }\n}\n","import { LevelConfData } from '../../game/LevelLoader'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { ScaledLayer } from './ScaledLayer'\nimport { BriefingPanel } from '../../gui/briefing/BriefingPanel'\nimport { OptionsPanel } from '../../gui/overlay/OptionsPanel'\nimport { PausePanel } from '../../gui/overlay/PausePanel'\nimport { HideTooltip } from '../../event/GuiCommand'\nimport { CursorManager } from '../CursorManager'\nimport { Panel } from '../../gui/base/Panel'\nimport { GamePointerEvent } from '../../event/GamePointerEvent'\nimport { POINTER_EVENT, PointerEventType } from '../../event/EventTypeEnum'\nimport { GuiHoverEvent, GuiPointerDownEvent, GuiPointerUpEvent } from '../../gui/event/GuiEvent'\nimport { BaseElement } from '../../gui/base/BaseElement'\nimport { GAME_RESULT_STATE, GameResultState } from '../../game/model/GameResult'\nimport { GameResultEvent, RestartGameEvent } from '../../event/WorldEvents'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { EventBroker } from '../../event/EventBroker'\nimport { BaseEvent, EventTypeMap } from '../../event/EventTypeMap'\nimport { SaveGameManager } from '../../resource/SaveGameManager'\n\nexport class OverlayLayer extends ScaledLayer {\n    rootElement: BaseElement\n    panels: Panel[] = []\n    panelBriefing: BriefingPanel\n    panelOptions: OptionsPanel\n    panelPause: PausePanel\n\n    constructor() {\n        super()\n        this.rootElement = new BaseElement()\n        this.rootElement.notifyRedraw = () => this.animationFrame.notifyRedraw()\n        this.rootElement.publishEvent = (event: BaseEvent) => {\n            EventBroker.publish(event)\n        }\n        this.rootElement.registerEventListener = <Type extends keyof EventTypeMap>(eventType: Type, callback: (event: EventTypeMap[Type]) => void) => {\n            EventBroker.subscribe(eventType, callback)\n        }\n        this.panelPause = this.addPanel(new PausePanel(GameConfig.instance.menu.pausedMenu, this.canvas.width, this.canvas.height))\n        this.panelOptions = this.addPanel(new OptionsPanel(GameConfig.instance.menu.optionsMenu, this.canvas.width, this.canvas.height))\n        this.panelBriefing = this.addPanel(new BriefingPanel())\n        // link items\n        this.panelPause.onContinueGame = () => this.setActivePanel(undefined)\n        this.panelPause.onRepeatBriefing = () => this.setActivePanel(this.panelBriefing)\n        this.panelPause.onAbortGame = () => {\n            this.setActivePanel(undefined)\n            EventBroker.publish(new GameResultEvent(GAME_RESULT_STATE.quit))\n        }\n        this.panelPause.onRestartGame = () => EventBroker.publish(new RestartGameEvent())\n        this.panelOptions.onRepeatBriefing = () => this.setActivePanel(this.panelBriefing)\n        this.panelOptions.onContinueMission = () => this.setActivePanel(undefined)\n        this.panelBriefing.onContinueMission = () => this.setActivePanel(undefined)\n        this.animationFrame.onRedraw = (context) => {\n            this.rootElement.onRedraw(context)\n        }\n        this.animationFrame.notifyRedraw()\n        EventBroker.subscribe(EventKey.SHOW_OPTIONS, () => this.setActivePanel(this.panelOptions))\n        new Map<keyof HTMLElementEventMap, PointerEventType>([\n            ['pointermove', POINTER_EVENT.move],\n            ['pointerdown', POINTER_EVENT.down],\n            ['pointerup', POINTER_EVENT.up],\n            ['pointerleave', POINTER_EVENT.leave],\n        ]).forEach((eventEnum, eventType) => {\n            this.addEventListener(eventType, (event): boolean => {\n                const gameEvent = new GamePointerEvent(eventEnum, event as PointerEvent)\n                ;[gameEvent.canvasX, gameEvent.canvasY] = this.transformCoords(gameEvent.clientX, gameEvent.clientY)\n                return this.handlePointerEvent(gameEvent)\n            })\n        })\n        this.addEventListener('keyup', (event: KeyboardEvent): boolean => {\n            if (event.key === 'Escape' && this.panelBriefing.hidden) {\n                this.setActivePanel(this.panelPause.hidden && this.panelOptions.hidden ? this.panelPause : undefined)\n                return true\n            } else if (event.key === ' ' && !this.panelBriefing.hidden) { // space\n                this.panelBriefing.nextParagraph()\n                return true\n            }\n            return false\n        })\n        this.addEventListener('wheel', (): boolean => this.panels.some((p) => !p.hidden))\n    }\n\n    setupBriefing(levelConf: LevelConfData) {\n        const objectiveSfx = `Stream_Objective_Levels::${levelConf.levelName}`.toLowerCase()\n        this.panelBriefing.setup(GameConfig.instance.main.missionBriefingText, levelConf.objectiveTextCfg.objective, levelConf.objectiveImage, objectiveSfx)\n        this.panelBriefing.onContinueMission = () => this.setActivePanel(undefined)\n    }\n\n    showResultBriefing(result: GameResultState, levelConf: LevelConfData, onContinue: () => void) {\n        const mainCfg = GameConfig.instance.main\n        let title = ''\n        let text = ''\n        let sfx = ''\n        if (result === GAME_RESULT_STATE.complete) {\n            title = mainCfg.missionCompletedText\n            text = levelConf.objectiveTextCfg.completion\n            sfx = `Stream_ObjectiveAcheived_Levels::${levelConf.levelName}`.toLowerCase()\n        } else if (result === GAME_RESULT_STATE.failed) {\n            title = mainCfg.missionFailedText\n            text = levelConf.objectiveTextCfg.failure\n            sfx = `Stream_ObjectiveFailed_Levels::${levelConf.levelName}`.toLowerCase()\n        } else if (result === GAME_RESULT_STATE.crystalFailure) {\n            title = mainCfg.missionFailedText\n            text = levelConf.objectiveTextCfg.crystalFailure\n            sfx = 'Stream_ObjectiveFailedCrystals'\n        } else { // GameResultState.QUIT\n            onContinue()\n            return\n        }\n        this.panelBriefing.setup(title, text, levelConf.objectiveImage, sfx)\n        this.setActivePanel(this.panelBriefing)\n        this.panelBriefing.onContinueMission = onContinue\n        this.active = true\n    }\n\n    setActivePanel(panel: Panel | undefined) {\n        this.panels.forEach(p => p !== panel && p.hide())\n        if (panel) {\n            panel.show()\n            CursorManager.changeCursor('standard')\n            EventBroker.publish(new HideTooltip())\n        }\n        EventBroker.publish(new BaseEvent(panel ? EventKey.PAUSE_GAME : EventKey.UNPAUSE_GAME))\n        this.animationFrame.notifyRedraw()\n    }\n\n    reset(): void {\n        this.rootElement.reset()\n        this.panels.forEach((p) => p.reset())\n        this.setActivePanel(SaveGameManager.preferences.skipBriefings ? undefined : this.panelBriefing)\n    }\n\n    addPanel<T extends Panel>(panel: T): T {\n        this.rootElement.addChild(panel)\n        this.panels.push(panel)\n        return panel\n    }\n\n    handlePointerEvent(event: GamePointerEvent): boolean {\n        if (this.panels.every(p => p.hidden)) return false\n        if (event.eventEnum === POINTER_EVENT.move) {\n            this.rootElement.onPointerMove(new GuiHoverEvent(event.canvasX, event.canvasY))\n        } else if (event.eventEnum === POINTER_EVENT.down) {\n            this.rootElement.onPointerDown(new GuiPointerDownEvent(event.canvasX, event.canvasY, event.button))\n        } else if (event.eventEnum === POINTER_EVENT.up) {\n            this.rootElement.onPointerUp(new GuiPointerUpEvent(event.canvasX, event.canvasY, event.button))\n        } else if (event.eventEnum === POINTER_EVENT.leave) {\n            this.rootElement.onPointerLeave()\n        }\n        return true\n    }\n}\n","import { Rect } from '../../core/Rect'\nimport { SelectionFrameChangeEvent } from '../../event/LocalEvents'\nimport { AnimationFrame } from '../AnimationFrame'\nimport { ScreenLayer } from './ScreenLayer'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { EventBroker } from '../../event/EventBroker'\nimport { SaveGameManager } from '../../resource/SaveGameManager'\n\nexport class SelectionFrameLayer extends ScreenLayer {\n    readonly animationFrame: AnimationFrame\n    selectionRect?: Rect\n\n    constructor() {\n        super()\n        this.ratio = SaveGameManager.calcScreenRatio()\n        this.animationFrame = new AnimationFrame(this.canvas, this.readbackCanvas)\n        this.animationFrame.onRedraw = (context) => {\n            if (!this.selectionRect) return\n            context.strokeStyle = 'rgba(128, 192, 192, 0.5)'\n            context.lineWidth = 2\n            context.strokeRect(this.selectionRect.x, this.selectionRect.y, this.selectionRect.w, this.selectionRect.h)\n        }\n        EventBroker.subscribe(EventKey.SELECTION_FRAME_CHANGE, (event: SelectionFrameChangeEvent) => {\n            this.selectionRect = event.rect\n            this.animationFrame.notifyRedraw()\n        })\n    }\n\n    reset() {\n        super.reset()\n        this.selectionRect = undefined\n    }\n\n    resize(width: number, height: number) {\n        super.resize(width, height)\n        this.animationFrame.notifyRedraw()\n    }\n}\n","import { AnimationGroup } from './AnimationGroup'\nimport { SceneMesh } from './SceneMesh'\nimport { AnimationAction, AnimationClip, AnimationMixer, AnimationUtils, LoopOnce, LoopPingPong } from 'three'\n\nexport class AnimationLoopGroup extends AnimationGroup {\n    readonly loopActions: AnimationAction[] = []\n    readonly endActions: AnimationAction[] = []\n    loopStart: number = 0\n    loopEnd: number = 0\n    looping: boolean = false\n    playing: boolean = false\n\n    setLoop(loopStart: number, loopEnd: number): this {\n        this.loopStart = loopStart\n        this.loopEnd = loopEnd\n        return this\n    }\n\n    protected addMixer(mesh: SceneMesh, clip: AnimationClip) {\n        const fps = 25 // TODO get FPS from LWS\n        const startFrame = Math.round(fps * this.loopStart)\n        const endFrame = Math.round(fps * this.loopEnd)\n        const lastFrame = Math.round(fps * clip.duration)\n\n        const endMixer = new AnimationMixer(mesh)\n        this.animationMixers.push(endMixer)\n        const endClip = AnimationUtils.subclip(clip, 'clip.end', endFrame, lastFrame, fps)\n        const endAction = endMixer.clipAction(endClip)\n        this.endActions.push(endAction)\n        endAction.setLoop(LoopOnce, 0)\n        endAction.clampWhenFinished = true\n        endMixer.addEventListener('finished', () => {\n            if (this.onAnimationDone && !this.isDone && this.endActions.every((a) => !a.isRunning())) {\n                this.isDone = true\n                this.resetAnimation()\n                this.onAnimationDone()\n            }\n        })\n\n        const loopMixer = new AnimationMixer(mesh)\n        this.animationMixers.push(loopMixer)\n        const loopClip = AnimationUtils.subclip(clip, 'clip.loop', startFrame, endFrame, fps)\n        const loopAction = loopMixer.clipAction(loopClip)\n        this.loopActions.push(loopAction)\n        loopAction.setLoop(LoopPingPong, Infinity)\n\n        const startMixer = new AnimationMixer(mesh) // mixer needs to recreate after each group change\n        this.animationMixers.push(startMixer)\n        const startClip = AnimationUtils.subclip(clip, 'clip.start', 0, startFrame, fps)\n        const startAction = startMixer.clipAction(startClip)\n        this.animationActions.push(startAction)\n        startAction.setLoop(LoopOnce, 0)\n        startAction.clampWhenFinished = true\n        startMixer.addEventListener('finished', () => {\n            if (this.animationActions.every((a) => !a.isRunning())) {\n                if (!this.looping) {\n                    this.looping = true\n                    this.loopActions.forEach((a) => a.play())\n                }\n            }\n        })\n    }\n\n    interruptLoop() {\n        if (this.looping) {\n            this.loopActions.forEach((a) => a.stop())\n            this.endActions.forEach((a) => a.play())\n        } else if (this.playing) {\n            this.animationMixers.forEach((m) => m.stopAllAction())\n            this.endActions.forEach((a) => a.play())\n        }\n        this.looping = false\n        this.playing = false\n    }\n\n    play(): this {\n        super.play()\n        this.playing = true\n        return this\n    }\n\n    resetAnimation() {\n        super.resetAnimation()\n        this.looping = false\n        this.playing = false\n    }\n}\n","import { ScreenLayer } from './ScreenLayer'\nimport { AmbientLight, DoubleSide, PerspectiveCamera, Scene } from 'three'\nimport { CAMERA_FOV, NATIVE_UPDATE_INTERVAL } from '../../params'\nimport { AnimationLoopGroup } from '../../scene/AnimationLoopGroup'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { ShowMissionAdvisorEvent, ShowMissionBriefingEvent } from '../../event/LocalEvents'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { EventBroker } from '../../event/EventBroker'\nimport { BaseRenderer } from '../BaseRenderer'\nimport { clearIntervalSafe } from '../../core/Util'\nimport { SaveGameManager } from '../../resource/SaveGameManager'\n\nexport class AdvisorLayer extends ScreenLayer {\n    readonly renderer: BaseRenderer\n    readonly scene: Scene\n    readonly group?: AnimationLoopGroup\n    groupUpdateInterval?: NodeJS.Timeout\n\n    constructor() {\n        super()\n        this.ratio = SaveGameManager.calcScreenRatio()\n        this.renderer = new BaseRenderer(NATIVE_UPDATE_INTERVAL, this.canvas, {alpha: true})\n        this.renderer.camera = new PerspectiveCamera(CAMERA_FOV, 4 / 3, 0.1, 100)\n        // 510 -> 510 / 640 = 0.80 -> ... => 7.25 // XXX How to derive from numbers in cfg?\n        // 340 -> 340 / 480 = 0.71 -> ... => 3.8 // XXX How to derive from numbers in cfg?\n        this.renderer.camera.position.set(7.25, 3.8, -25)\n        this.renderer.camera.lookAt(7.25, 3.8, 0)\n        this.scene = new Scene()\n        this.scene.add(new AmbientLight(0xffffff, 1)) // XXX read from LWS file\n\n        const advisorPosCfg = GameConfig.instance.advisorPositions['Advisor_Objective'.toLowerCase()]\n        if (!advisorPosCfg) {\n            console.warn('Advisor position config for mission objective not found')\n            return\n        }\n        const advisorCfg = GameConfig.instance.advisor[advisorPosCfg.advisorType.toLowerCase()]\n        if (!advisorCfg) {\n            console.warn('Advisor config for mission objective not found', advisorPosCfg)\n            return\n        }\n\n        this.group = new AnimationLoopGroup(advisorCfg.animFileName, () => {\n            this.renderer.stopRendering()\n        }).setLoop(advisorCfg.loopStart, advisorCfg.loopEnd).setup()\n        this.group.meshList.forEach((m) => m.material.forEach((m) => m.side = DoubleSide)) // otherwise flipped normals\n        this.scene.add(this.group)\n        EventBroker.subscribe(EventKey.SHOW_MISSION_BRIEFING, (event: ShowMissionBriefingEvent) => {\n            if (event.isShowing) {\n                this.startRendering()\n            } else {\n                this.group?.interruptLoop()\n            }\n        })\n        EventBroker.subscribe(EventKey.SHOW_MISSION_ADVISOR, (event: ShowMissionAdvisorEvent) => {\n            if (event.showAdvisor) {\n                this.startRendering()\n            } else {\n                this.group?.interruptLoop()\n            }\n        })\n    }\n\n    startRendering() {\n        if (!this.group) return\n        this.group.play()\n        // XXX Play SFX for advisor, which seems always null\n        this.renderer.startRendering(this.scene).then()\n        this.groupUpdateInterval = clearIntervalSafe(this.groupUpdateInterval)\n        this.groupUpdateInterval = setInterval(() => {\n            this.group?.update(NATIVE_UPDATE_INTERVAL)\n        }, NATIVE_UPDATE_INTERVAL)\n    }\n\n    resize(width: number, height: number) {\n        super.resize(width, height)\n        this.renderer.setSize(width, height)\n    }\n\n    hide() {\n        super.hide()\n        this.groupUpdateInterval = clearIntervalSafe(this.groupUpdateInterval)\n        this.group?.resetAnimation()\n        this.renderer.stopRendering()\n    }\n\n    dispose() {\n        this.hide()\n        this.scene.clear()\n        this.renderer.dispose()\n    }\n}\n","import { ScaledLayer } from './ScaledLayer'\nimport { AbstractLayer } from './AbstractLayer'\nimport { EventBroker } from '../../event/EventBroker'\nimport { BaseEvent } from '../../event/EventTypeMap'\nimport { EventKey } from '../../event/EventKeyEnum'\nimport { GameScreen } from '../GameScreen'\nimport { HideTooltip } from '../../event/GuiCommand'\nimport { GameState } from '../../game/model/GameState'\nimport { PositionComponent } from '../../game/component/PositionComponent'\nimport { Vector3 } from 'three'\nimport { GameEntity } from '../../game/ECS'\nimport { SelectionNameComponent } from '../../game/component/SelectionNameComponent'\nimport { GameConfig } from '../../cfg/GameConfig'\nimport { EntityType } from '../../game/model/EntityType'\n\nexport class NamingLayer extends ScaledLayer {\n    readonly visibleLayers: AbstractLayer[] = []\n    showBackdrop: boolean = false\n    raiderName: string = ''\n    firstKey: boolean = true\n    raiderOnScreen = {x: 0, y: 0}\n\n    constructor(readonly gameScreen: GameScreen) {\n        super()\n        this.animationFrame.onRedraw = (context) => this.onRedraw(context)\n        this.addEventListener('keyup', (event: KeyboardEvent): boolean => {\n            if (event.key === 'Enter') {\n                return this.onEnterKeyUp()\n            } else if (this.showBackdrop && event.key === 'Backspace') {\n                if (this.firstKey) {\n                    this.firstKey = false\n                    this.raiderName = ''\n                } else {\n                    this.raiderName = this.raiderName.slice(0, -1)\n                }\n                this.animationFrame.notifyRedraw()\n                return true\n            }\n            return false\n        })\n        this.addEventListener('keypress', (event: KeyboardEvent): boolean => {\n            return this.onKeyPress(event)\n        })\n    }\n\n    private onRedraw(context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n        if (!this.showBackdrop) return\n        context.fillStyle = 'rgba(0, 0, 0, 0.25)'\n        context.fillRect(0, 0, this.fixedWidth, this.fixedHeight)\n        context.textAlign = 'left'\n        context.font = 'bold 8px sans-serif'\n        context.fillStyle = '#fff'\n        const label = this.firstKey ? this.raiderName : `\"${this.raiderName}\"`\n        context.fillText(label, this.raiderOnScreen.x, this.raiderOnScreen.y)\n    }\n\n    private onEnterKeyUp(): boolean {\n        const selectedRaider = this.gameScreen.worldMgr.entityMgr.selection.hasOnlyOneRaider()\n        if (!selectedRaider) return false\n        const raiderSaveGame = GameState.raiderSaveGameMap.get(selectedRaider)\n        if (!raiderSaveGame) return false\n        this.showBackdrop = !this.showBackdrop\n        EventBroker.publish(new BaseEvent(this.showBackdrop ? EventKey.PAUSE_GAME : EventKey.UNPAUSE_GAME))\n        if (this.showBackdrop) {\n            this.raiderName = raiderSaveGame.name || GameConfig.instance.objectNames[EntityType.PILOT.toLowerCase()] || 'Rock Raider'\n            this.firstKey = true\n            this.visibleLayers.length = 0\n            this.gameScreen.screenMaster.layers.forEach((l) => {\n                if (l !== this && l.active) {\n                    this.visibleLayers.push(l)\n                    l.active = false\n                }\n            })\n            this.gameScreen.worldMgr.ecs.getComponents(selectedRaider).get(SelectionNameComponent)?.setVisible(false)\n            this.raiderOnScreen = this.raiderToScreenPos(selectedRaider)\n        } else {\n            raiderSaveGame.name = this.raiderName || raiderSaveGame.name || ''\n            const selectionNameComponent = this.gameScreen.worldMgr.ecs.getComponents(selectedRaider).get(SelectionNameComponent)\n            selectionNameComponent?.setName(raiderSaveGame.name)\n            selectionNameComponent?.setVisible(true)\n            this.visibleLayers.forEach((l) => l.active = true)\n        }\n        this.animationFrame.notifyRedraw()\n        EventBroker.publish(new HideTooltip())\n        this.gameScreen.guiTopRightLayer.panelMain.selectRaiderPanel.toggleState()\n        return true\n    }\n\n    private raiderToScreenPos(raider: GameEntity): { x: number, y: number } {\n        const projected: Vector3 = this.gameScreen.worldMgr.ecs.getComponents(raider).get(PositionComponent)\n            .position.clone().add(new Vector3(0, 6, 0)).project(this.gameScreen.worldMgr.sceneMgr.cameraActive) || new Vector3()\n        return {\n            x: Math.max(this.fixedWidth * 0.1, Math.min(this.fixedWidth * 0.9, (projected.x + 1) * this.fixedWidth / 2)),\n            y: Math.max(this.fixedHeight * 0.1, Math.min(this.fixedHeight * 0.85, -(projected.y - 1) * this.fixedHeight / 2)),\n        }\n    }\n\n    private onKeyPress(event: KeyboardEvent): boolean {\n        if (!this.showBackdrop) return false\n        const keyCode = event.key.charCodeAt(0)\n        if (event.key.length === 1 && keyCode >= 32 && keyCode < 180) {\n            if (this.firstKey) {\n                this.firstKey = false\n                this.raiderName = event.key\n            } else {\n                this.raiderName += event.key\n            }\n            this.animationFrame.notifyRedraw()\n            return true\n        }\n        return false\n    }\n\n    reset() {\n        super.reset()\n        this.showBackdrop = false\n        this.raiderName = ''\n        this.firstKey = true\n        this.raiderOnScreen = {x: 0, y: 0}\n    }\n}\n","import { LevelConfData } from '../game/LevelLoader'\nimport { DeselectAll, InitRadarMap, ShowGameResultEvent } from '../event/LocalEvents'\nimport { EntityManager } from '../game/EntityManager'\nimport { GuiManager } from '../game/GuiManager'\nimport { GAME_RESULT_STATE, GameResult, GameResultState } from '../game/model/GameResult'\nimport { GameState } from '../game/model/GameState'\nimport { ObjectListLoader } from '../game/ObjectListLoader'\nimport { SceneManager } from '../game/SceneManager'\nimport { WorldManager } from '../game/WorldManager'\nimport { ADDITIONAL_RAIDER_PER_SUPPORT, DEV_MODE, MAX_RAIDER_BASE } from '../params'\nimport { GameLayer } from './layer/GameLayer'\nimport { GuiBottomLeftLayer, GuiBottomRightLayer, GuiTopLeftLayer, GuiTopRightLayer } from './layer/GuiMainLayer'\nimport { OverlayLayer } from './layer/OverlayLayer'\nimport { SelectionFrameLayer } from './layer/SelectionFrameLayer'\nimport { ScreenMaster } from './ScreenMaster'\nimport { SaveGameManager } from '../resource/SaveGameManager'\nimport { EventKey } from '../event/EventKeyEnum'\nimport { GameResultEvent, LevelSelectedEvent, MaterialAmountChanged } from '../event/WorldEvents'\nimport { EntityType } from '../game/model/EntityType'\nimport { AdvisorLayer } from './layer/AdvisorLayer'\nimport { EventBroker } from '../event/EventBroker'\nimport { NamingLayer } from './layer/NamingLayer'\nimport { PRNG } from '../game/factory/PRNG'\nimport { EncodingHelper } from '../resource/fileparser/EncodingHelper'\n\nexport class GameScreen {\n    readonly worldMgr: WorldManager\n    readonly gameLayer: GameLayer\n    readonly selectionFrameLayer: SelectionFrameLayer\n    readonly advisorLayer: AdvisorLayer\n    readonly namingLayer: NamingLayer\n    readonly guiTopLeftLayer: GuiTopLeftLayer\n    readonly guiTopRightLayer: GuiTopRightLayer\n    readonly guiBottomRightLayer: GuiBottomRightLayer\n    readonly guiBottomLeftLayer: GuiBottomLeftLayer\n    readonly overlayLayer: OverlayLayer\n    readonly sceneMgr: SceneManager\n    readonly entityMgr: EntityManager\n    readonly guiMgr: GuiManager\n    levelConf?: LevelConfData\n\n    constructor(readonly screenMaster: ScreenMaster) {\n        this.worldMgr = new WorldManager()\n        this.gameLayer = screenMaster.addLayer(new GameLayer(this.worldMgr), 500)\n        this.screenMaster.onGlobalMouseMoveEvent = this.gameLayer.onGlobalMouseMoveEvent.bind(this.gameLayer)\n        this.screenMaster.onGlobalMouseLeaveEvent = this.gameLayer.onGlobalMouseLeaveEvent.bind(this.gameLayer)\n        this.selectionFrameLayer = screenMaster.addLayer(new SelectionFrameLayer(), 510)\n        this.advisorLayer = screenMaster.addLayer(new AdvisorLayer(), 515)\n        this.namingLayer = screenMaster.addLayer(new NamingLayer(this), 518)\n        this.guiTopLeftLayer = screenMaster.addLayer(new GuiTopLeftLayer(), 520)\n        this.guiTopRightLayer = screenMaster.addLayer(new GuiTopRightLayer(), 521)\n        this.guiBottomRightLayer = screenMaster.addLayer(new GuiBottomRightLayer(), 522)\n        this.guiBottomLeftLayer = screenMaster.addLayer(new GuiBottomLeftLayer(), 523)\n        this.overlayLayer = screenMaster.addLayer(new OverlayLayer(), 530)\n        this.sceneMgr = new SceneManager(this.worldMgr, this.gameLayer.canvas)\n        this.entityMgr = new EntityManager(this.worldMgr)\n        this.guiMgr = new GuiManager(this.worldMgr)\n        EventBroker.subscribe(EventKey.GAME_RESULT_STATE, (event: GameResultEvent) => {\n            this.startEndgameSequence(event.result).then()\n        })\n        EventBroker.subscribe(EventKey.RESTART_GAME, () => this.restartLevel())\n        EventBroker.subscribe(EventKey.LEVEL_SELECTED, (event: LevelSelectedEvent) => {\n            this.levelConf = event.levelConf\n            this.setupAndStartLevel()\n        })\n    }\n\n    dispose() {\n        this.hide()\n        this.screenMaster.removeLayer(this.gameLayer)\n        this.screenMaster.removeLayer(this.selectionFrameLayer)\n        this.screenMaster.removeLayer(this.advisorLayer)\n        this.screenMaster.removeLayer(this.namingLayer)\n        this.screenMaster.removeLayer(this.guiTopLeftLayer)\n        this.screenMaster.removeLayer(this.guiTopRightLayer)\n        this.screenMaster.removeLayer(this.guiBottomRightLayer)\n        this.screenMaster.removeLayer(this.guiBottomLeftLayer)\n        this.screenMaster.removeLayer(this.overlayLayer)\n    }\n\n    restartLevel() {\n        if (!this.levelConf) throw new Error('No level config given')\n        this.hide()\n        EventBroker.publish(new LevelSelectedEvent(this.levelConf))\n        EventBroker.publish(new MaterialAmountChanged()) // XXX Remove workaround for UI redraw\n    }\n\n    private setupAndStartLevel() {\n        if (!this.levelConf) throw new Error('No level config given')\n        document.title = `${EncodingHelper.decodeString(this.levelConf.fullName)} - Rock Raiders Web`\n        const params = new URLSearchParams(window.location.search)\n        if (DEV_MODE) {\n            params.set('entry', this.levelConf.levelName)\n            history.pushState(null, '', `${window.location.pathname}?${params.toString()}`)\n        }\n        GameState.reset()\n        this.entityMgr.reset()\n        this.guiTopLeftLayer.reset()\n        this.guiTopRightLayer.reset()\n        this.guiBottomRightLayer.reset()\n        this.guiBottomLeftLayer.reset()\n        GameState.unassignedTeam = [...SaveGameManager.currentTeam]\n        const fixedSeed = DEV_MODE ? params.get('randomSeed') : undefined\n        if (fixedSeed) console.warn(`Using fixed random seed \"${fixedSeed}\"`)\n        PRNG.setSeed(fixedSeed || Math.random().toString().substring(2))\n        this.worldMgr.setup(this.levelConf)\n        this.sceneMgr.setupScene(this.levelConf)\n        // setup GUI\n        this.overlayLayer.setupBriefing(this.levelConf)\n        GameState.priorityList.setList(this.levelConf.priorities)\n        // load in non-space objects next\n        new ObjectListLoader(this.worldMgr, this.levelConf.disableStartTeleport).loadObjectList(this.levelConf.objectList)\n        EventBroker.publish(new InitRadarMap(this.sceneMgr.birdViewControls.target.clone(), this.sceneMgr.terrain))\n        // gather level start details for game result score calculation\n        GameState.totalDiggables = this.sceneMgr.terrain.countDiggables()\n        const crystalsInVehicles = [...this.entityMgr.vehicles, ...this.entityMgr.vehiclesUndiscovered].reduce((prev, v) => prev + v.stats.costCrystal, 0)\n        const crystalsInBuildings = [...this.entityMgr.buildings, ...this.entityMgr.buildingsUndiscovered].reduce((prev, v) => prev + v.stats.costCrystal, 0)\n        const crystalsDropped = [...this.entityMgr.materials, ...this.entityMgr.materialsUndiscovered].count((m) => m.entityType === EntityType.CRYSTAL || m.entityType === EntityType.DEPLETED_CRYSTAL)\n        const crystalsInLevel = this.sceneMgr.terrain.countCrystals() + crystalsInVehicles + crystalsInBuildings + crystalsDropped\n        GameState.totalCrystals = Math.max(this.levelConf?.reward?.quota?.crystals || 0, crystalsInLevel) // Level 20 has only 17 crystals but quota of 20\n        GameState.totalOres = this.sceneMgr.terrain.countOres()\n        GameState.noMultiSelect = this.levelConf.noMultiSelect\n        this.show()\n    }\n\n    show() {\n        this.gameLayer.show()\n        this.selectionFrameLayer.show()\n        this.advisorLayer.show()\n        this.namingLayer.show()\n        this.guiTopLeftLayer.show()\n        this.guiTopRightLayer.show()\n        this.guiBottomRightLayer.show()\n        this.guiBottomLeftLayer.show()\n        this.overlayLayer.show()\n        this.sceneMgr.startScene().then(() => {\n            this.worldMgr.start()\n            this.overlayLayer.setActivePanel(SaveGameManager.preferences.skipBriefings ? undefined : this.overlayLayer.panelBriefing)\n            this.screenMaster.loadingLayer.hide()\n        }).catch((e) => {\n            console.error(e)\n            // TODO Show dedicated critical error layer or debug layer\n        })\n    }\n\n    hide() {\n        this.entityMgr.disposeAll()\n        this.worldMgr.stop()\n        this.sceneMgr.disposeScene()\n        this.overlayLayer.hide()\n        this.guiTopLeftLayer.hide()\n        this.guiTopRightLayer.hide()\n        this.guiBottomRightLayer.hide()\n        this.guiBottomLeftLayer.hide()\n        this.namingLayer.hide()\n        this.advisorLayer.hide()\n        this.selectionFrameLayer.hide()\n        this.gameLayer.hide()\n        document.title = 'Rock Raiders Web'\n    }\n\n    async startEndgameSequence(resultState: GameResultState) {\n        if (!this.levelConf) throw new Error('No level config given')\n        this.selectionFrameLayer.active = false\n        this.guiTopLeftLayer.active = false\n        this.guiTopRightLayer.active = false\n        this.guiBottomRightLayer.active = false\n        this.guiBottomLeftLayer.active = false\n        this.overlayLayer.active = false\n        // TODO Disable scene to avoid further selections\n        EventBroker.publish(new DeselectAll())\n        const numMaxAirRaiders = this.levelConf.oxygenRate ? this.entityMgr.buildings.count((b) => b.entityType === EntityType.BARRACKS) * ADDITIONAL_RAIDER_PER_SUPPORT : MAX_RAIDER_BASE\n        const canvas = resultState === GAME_RESULT_STATE.complete ? await this.screenMaster.createScreenshot() : undefined\n        const result = new GameResult(this.levelConf.fullName, this.levelConf.reward, resultState, this.entityMgr.buildings.length, this.entityMgr.raiders.length, numMaxAirRaiders, this.worldMgr.gameTimeMs, canvas)\n        if (resultState === GAME_RESULT_STATE.complete) SaveGameManager.setLevelScore(this.levelConf.levelName, result.score)\n        if (!this.levelConf.disableEndTeleport) await this.worldMgr.teleportEnd()\n        this.worldMgr.stop()\n        this.overlayLayer.showResultBriefing(resultState, this.levelConf, () => {\n            this.hide()\n            EventBroker.publish(new ShowGameResultEvent(result))\n        })\n    }\n}\n","import { RewardButtonCfg } from '../cfg/RewardCfg'\nimport { SpriteContext, SpriteImage } from '../core/Sprite'\nimport { ChangeTooltip, HideTooltip } from '../event/GuiCommand'\nimport { ResourceManager } from '../resource/ResourceManager'\nimport { MainMenuBaseItem } from './MainMenuBaseItem'\nimport { TOOLTIP_DELAY_TEXT_MENU } from '../params'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { EventBroker } from '../event/EventBroker'\nimport { UiElementCallback } from './UiElementState'\nimport { SoundManager } from '../audio/SoundManager'\n\nexport class RewardScreenButton extends MainMenuBaseItem {\n    imgNormal: SpriteImage\n    imgHover: SpriteImage\n    imgPressed: SpriteImage\n    imgDisabled: SpriteImage\n\n    constructor(conf: RewardButtonCfg, tooltipKey: string) {\n        super(conf.x, conf.y)\n        this.imgNormal = ResourceManager.getImage(conf.imgNormalFilepath)\n        this.imgHover = ResourceManager.getImage(conf.imgHoverFilepath)\n        this.imgPressed = ResourceManager.getImage(conf.imgPressedFilepath)\n        this.imgDisabled = ResourceManager.getImage(conf.imgDisabledFilepath)\n        this.width = this.imgNormal.width\n        this.height = this.imgNormal.height\n        const tooltipText = GameConfig.instance.getTooltipText(tooltipKey)\n        this.state.onShowTooltip = () => EventBroker.publish(new ChangeTooltip(tooltipText, TOOLTIP_DELAY_TEXT_MENU))\n        this.state.onHideTooltip = () => EventBroker.publish(new HideTooltip(tooltipText))\n    }\n\n    set onPressed(callback: UiElementCallback) {\n        super.onPressed = () => {\n            SoundManager.playSfxSound('SFX_ButtonPressed')\n            callback()\n        }\n    }\n\n    draw(context: SpriteContext) {\n        super.draw(context)\n        if (!this.state.visible) return\n        let img = this.imgNormal\n        if (this.state.disabled) {\n            img = this.imgDisabled\n        } else if (this.state.pressed) {\n            img = this.imgPressed\n        } else if (this.state.hover) {\n            img = this.imgHover\n        }\n        context.drawImage(img, this.x, this.y)\n    }\n}\n","import { MainMenuBaseItem } from './MainMenuBaseItem'\nimport { SpriteContext, SpriteImage } from '../core/Sprite'\nimport { ResourceManager } from '../resource/ResourceManager'\nimport { BitmapFontWorkerPool } from '../worker/BitmapFontWorkerPool'\nimport { GameConfig } from '../cfg/GameConfig'\n\nexport class MainMenuOverwritePanel extends MainMenuBaseItem {\n    overwriteBack: SpriteImage\n    titleImg?: SpriteImage\n    titleX: number = 0\n    titleY: number = 0\n    textImg?: SpriteImage\n    textX: number = 0\n    textY: number = 0\n\n    constructor(parentWidth: number, parentHeight: number) {\n        super()\n        const dialogCfg = GameConfig.instance.dialog\n        this.overwriteBack = ResourceManager.getImage(dialogCfg.image)\n        this.width = this.overwriteBack.width\n        this.height = this.overwriteBack.height\n        this.x = (parentWidth - this.width) / 2\n        this.y = (parentHeight - this.height) / 2\n        this.zIndex = 50\n        BitmapFontWorkerPool.instance.createTextImage('Interface/Fonts/MbriefFont2.bmp', GameConfig.instance.menu.overwrite.title, dialogCfg.titleWindow.w).then((img) => {\n            if (!img) return\n            this.titleImg = img\n            this.titleX = this.x + dialogCfg.titleWindow.x + (dialogCfg.titleWindow.w - this.titleImg.width) / 2\n            this.titleY = this.y + dialogCfg.titleWindow.y\n        })\n    }\n\n    setIndex(saveGameIndex: number) {\n        const text = GameConfig.instance.menu.overwrite.text.replaceAll('%d', (saveGameIndex + 1).toString())\n        BitmapFontWorkerPool.instance.createTextImage('Interface/Fonts/MbriefFont.bmp', text, GameConfig.instance.dialog.textWindow.w).then((img) => {\n            if (!img) return\n            this.textImg = img\n            const dialogCfg = GameConfig.instance.dialog\n            this.textX = this.x + dialogCfg.textWindow.x + (dialogCfg.textWindow.w - this.textImg.width) / 2\n            this.textY = this.y + dialogCfg.textWindow.y\n        })\n    }\n\n    draw(context: SpriteContext) {\n        super.draw(context)\n        context.drawImage(this.overwriteBack, this.x, this.y)\n        if (this.titleImg) context.drawImage(this.titleImg, this.titleX, this.titleY)\n        if (this.textImg) context.drawImage(this.textImg, this.textX, this.textY)\n    }\n}\n","import { MainMenuLayer } from './MainMenuLayer'\nimport { MenuEntryCfg } from '../cfg/MenuEntryCfg'\nimport { GamePointerEvent } from '../event/GamePointerEvent'\nimport { POINTER_EVENT } from '../event/EventTypeEnum'\nimport { MainMenuLabelButton } from './MainMenuLabelButton'\nimport { MainMenuOverwritePanel } from './MainMenuOverwritePanel'\nimport { MenuLabelItemCfg } from '../cfg/MenuLabelItemCfg'\nimport { GameConfig } from '../cfg/GameConfig'\n\nexport class OverwriteLayer extends MainMenuLayer {\n    overwritePanel: MainMenuOverwritePanel\n    yesBtn: MainMenuLabelButton\n\n    constructor() {\n        const dialogCfg = GameConfig.instance.dialog\n        const layerCfg = {...(new MenuEntryCfg()), menuImage: dialogCfg.contrastOverlay, loFont: 'Interface/Fonts/MbriefFont.bmp', hiFont: 'Interface/Fonts/MbriefFont2.bmp'} as MenuEntryCfg\n        super(layerCfg)\n        this.overwritePanel = new MainMenuOverwritePanel(this.fixedWidth, this.fixedHeight)\n        this.items.push(this.overwritePanel)\n        const overwriteCfg = GameConfig.instance.menu.overwrite\n        const panelX = (this.fixedWidth - this.overwritePanel.width) / 2\n        const panelY = (this.fixedHeight - this.overwritePanel.height) / 2\n        this.yesBtn = new MainMenuLabelButton(this, {\n            x: panelX + dialogCfg.okWindow.x + 16, // XXX Why offset needed?\n            y: panelY + dialogCfg.okWindow.y,\n            label: overwriteCfg.ok,\n        } as MenuLabelItemCfg)\n        this.yesBtn.onPressed = () => this.hide()\n        this.items.push(this.yesBtn)\n        const noBtn = new MainMenuLabelButton(this, {\n            x: panelX + dialogCfg.cancelWindow.x + 20, // XXX Why offset needed?\n            y: panelY + dialogCfg.cancelWindow.y,\n            label: overwriteCfg.cancel,\n        } as MenuLabelItemCfg)\n        noBtn.onPressed = () => this.hide()\n        this.items.push(noBtn)\n    }\n\n    handlePointerEvent(event: GamePointerEvent): boolean {\n        super.handlePointerEvent(event)\n        return event.eventEnum !== POINTER_EVENT.leave\n    }\n}\n","import { RewardCfg } from '../cfg/RewardCfg'\nimport { SpriteImage } from '../core/Sprite'\nimport { clearTimeoutSafe } from '../core/Util'\nimport { MOUSE_BUTTON } from '../event/EventTypeEnum'\nimport { GAME_RESULT_STATE, GameResult } from '../game/model/GameResult'\nimport { LoadSaveLayer } from '../menu/LoadSaveLayer'\nimport { MainMenuBaseItem } from '../menu/MainMenuBaseItem'\nimport { RewardScreenButton } from '../menu/RewardScreenButton'\nimport { ResourceManager } from '../resource/ResourceManager'\nimport { SaveGameManager } from '../resource/SaveGameManager'\nimport { ScaledLayer } from './layer/ScaledLayer'\nimport { ScreenMaster } from './ScreenMaster'\nimport { EventKey } from '../event/EventKeyEnum'\nimport { AdvanceAfterRewardsEvent, ShowGameResultEvent } from '../event/LocalEvents'\nimport { OverwriteLayer } from '../menu/OverwriteLayer'\nimport { FlicAnimOverlay } from '../menu/FlicAnimOverlay'\nimport { BitmapFontWorkerPool } from '../worker/BitmapFontWorkerPool'\nimport { GameConfig } from '../cfg/GameConfig'\nimport { EventBroker } from '../event/EventBroker'\nimport { SoundManager } from '../audio/SoundManager'\n\nexport class RewardScreen {\n    readonly cfg: RewardCfg\n    readonly backgroundLayer: ScaledLayer\n    readonly resultsLayer: ScaledLayer\n    readonly descriptionTextLayer: ScaledLayer\n    readonly btnLayer: ScaledLayer\n    readonly saveGameLayer: LoadSaveLayer\n    readonly overwriteLayer: OverwriteLayer\n    readonly images: { img: SpriteImage, x: number, y: number }[] = []\n    readonly boxes: { img: SpriteImage, x: number, y: number }[] = []\n    readonly flics: FlicAnimOverlay[] = []\n    readonly fontNames: Map<string, string> = new Map()\n    readonly btnSave: RewardScreenButton\n    readonly btnAdvance: RewardScreenButton\n    resultIndex: number = 0\n    resultLastIndex: number = 0\n    texts: (SpriteImage | undefined)[] = []\n    uncoverTimeout?: NodeJS.Timeout\n    levelFullNameImg?: SpriteImage\n    resultText: string = ''\n    resultValues: (SpriteImage | undefined)[] = []\n    screenshot?: HTMLCanvasElement\n    sfxAmbientLoop?: AudioBufferSourceNode\n\n    constructor(readonly screenMaster: ScreenMaster) {\n        this.cfg = GameConfig.instance.reward\n        const backgroundImg = ResourceManager.getImage(this.cfg.wallpaper)\n        this.backgroundLayer = screenMaster.addLayer(new ScaledLayer('RewardBackgroundLayer'), 600)\n        this.backgroundLayer.animationFrame.onRedraw = (context) => context.drawImage(backgroundImg, 0, 0)\n        this.cfg.images.forEach((img) => {\n            this.images.push({img: ResourceManager.getImage(img.filePath), x: img.x, y: img.y})\n        })\n        this.cfg.boxImages.forEach((img) => {\n            this.boxes.push({img: ResourceManager.getImage(img.filePath), x: img.x, y: img.y})\n        })\n        Promise.all(Object.entries(this.cfg.fonts).map(([fontKey, fontValue], index) => {\n            this.fontNames.set(fontKey.toLowerCase(), fontValue)\n            const labelFontName = index < 9 ? fontValue : this.cfg.backFont\n            return BitmapFontWorkerPool.instance.createTextImage(labelFontName, this.cfg.text[index].text)\n        })).then((textImages) => this.texts = textImages)\n        this.resultsLayer = screenMaster.addLayer(new ScaledLayer('RewardResultsLayer'), 610)\n        this.resultsLayer.addEventListener('pointerup', (): boolean => {\n            this.uncoverTimeout = clearTimeoutSafe(this.uncoverTimeout)\n            this.resultIndex = this.resultLastIndex\n            this.btnSave.visible = true\n            this.btnAdvance.visible = true\n            this.resultsLayer.animationFrame.notifyRedraw()\n            this.descriptionTextLayer.animationFrame.notifyRedraw()\n            this.btnLayer.animationFrame.notifyRedraw()\n            return true\n        })\n        // TODO Unify handling all images, boxes, texts and flics by keys\n        const keyToIndex = ['crystals', 'ore', 'diggable', 'constructions', 'caverns', 'figures', 'rockmonsters', 'oxygen', 'timer', 'score']\n        Object.entries(this.cfg.flics).forEach(([key, flic]) => {\n            const flicIndex = keyToIndex.indexOf(key)\n            const flicImages = ResourceManager.getResource(flic.flhFilepath) ?? []\n            this.flics[flicIndex] = new FlicAnimOverlay(this.resultsLayer.animationFrame, flicImages, flic.rect.x, flic.rect.y, '') // XXX Consider width/height of rect to scale/clip?\n        })\n        this.descriptionTextLayer = screenMaster.addLayer(new ScaledLayer('RewardDescriptionLayer'), 620)\n        this.btnLayer = screenMaster.addLayer(new ScaledLayer('RewardButtonLayer'), 650)\n        this.btnSave = new RewardScreenButton(this.cfg.saveButton, 'ToolTip_Reward_Save')\n        this.btnSave.onPressed = () => {\n            this.sfxAmbientLoop?.stop()\n            this.sfxAmbientLoop = SoundManager.playLoopSound('SFX_AmbientMusicLoop')\n            this.saveGameLayer.show()\n        }\n        this.btnAdvance = new RewardScreenButton(this.cfg.advanceButton, 'ToolTip_Reward_Advance')\n        this.btnAdvance.onPressed = () => this.onAdvancePressed()\n        this.btnLayer.addEventListener('pointermove', (event: PointerEvent): boolean => {\n            const [canvasX, canvasY] = this.btnLayer.transformCoords(event.clientX, event.clientY)\n            this.btnSave.setHovered(this.btnSave.isHovered(canvasX, canvasY))\n            this.btnAdvance.setHovered(this.btnAdvance.isHovered(canvasX, canvasY))\n            if (this.btnSave.needsRedraw || this.btnAdvance.needsRedraw) this.btnLayer.animationFrame.notifyRedraw()\n            return false\n        })\n        this.btnLayer.addEventListener('pointerleave', (): boolean => {\n            this.btnSave.setHovered(false)\n            this.btnAdvance.setHovered(false)\n            if (this.btnSave.needsRedraw || this.btnAdvance.needsRedraw) this.btnLayer.animationFrame.notifyRedraw()\n            return false\n        })\n        this.btnLayer.addEventListener('pointerdown', (event: PointerEvent): boolean => {\n            if (event.button === MOUSE_BUTTON.main) {\n                const [canvasX, canvasY] = this.btnLayer.transformCoords(event.clientX, event.clientY)\n                this.btnSave.setHovered(this.btnSave.isHovered(canvasX, canvasY))\n                this.btnAdvance.setHovered(this.btnAdvance.isHovered(canvasX, canvasY))\n                this.btnSave.onMouseDown()\n                this.btnAdvance.onMouseDown()\n                if (this.btnSave.needsRedraw || this.btnAdvance.needsRedraw) {\n                    this.btnLayer.animationFrame.notifyRedraw()\n                    return true\n                }\n            }\n            return false\n        })\n        this.btnLayer.addEventListener('pointerup', (event: PointerEvent): boolean => {\n            if (event.button === MOUSE_BUTTON.main) {\n                this.btnSave.onMouseUp()\n                this.btnAdvance.onMouseUp()\n                if (this.btnSave.needsRedraw || this.btnAdvance.needsRedraw) {\n                    this.btnLayer.animationFrame.notifyRedraw()\n                    return true\n                }\n            }\n            return false\n        })\n        this.btnLayer.animationFrame.onRedraw = (context) => {\n            this.btnSave.draw(context)\n            this.btnAdvance.draw(context)\n        }\n        BitmapFontWorkerPool.instance.createTextImage(this.cfg.titleFont, 'No level selected')\n            .then((textImage) => this.levelFullNameImg = textImage)\n        this.saveGameLayer = screenMaster.addLayer(new LoadSaveLayer(GameConfig.instance.menu.mainMenuFull.menus[3], false), 660)\n        this.overwriteLayer = screenMaster.addLayer(new OverwriteLayer(), 670)\n        this.saveGameLayer.onItemAction = (item: MainMenuBaseItem) => {\n            if (item.actionName.equalsIgnoreCase('next')) {\n                this.saveGameLayer.hide()\n                this.sfxAmbientLoop?.stop()\n                this.sfxAmbientLoop = SoundManager.playLoopSound('SFX_MusicLoop')\n            } else if (item.actionName.toLowerCase().startsWith('save_game_')) {\n                if (SaveGameManager.hasSaveGame(item.targetIndex)) {\n                    this.overwriteLayer.overwritePanel.setIndex(item.targetIndex)\n                    this.overwriteLayer.yesBtn.onPressed = () => {\n                        SaveGameManager.saveGame(item.targetIndex, this.screenshot)\n                        this.overwriteLayer.hide()\n                        this.saveGameLayer.hide()\n                        this.sfxAmbientLoop?.stop()\n                        this.sfxAmbientLoop = SoundManager.playLoopSound('SFX_MusicLoop')\n                    }\n                    this.overwriteLayer.show()\n                } else {\n                    SaveGameManager.saveGame(item.targetIndex, this.screenshot)\n                    this.saveGameLayer.hide()\n                    this.sfxAmbientLoop?.stop()\n                    this.sfxAmbientLoop = SoundManager.playLoopSound('SFX_MusicLoop')\n                }\n            } else {\n                console.warn(`not implemented: ${item.actionName} - ${item.targetIndex}`)\n            }\n        }\n        EventBroker.subscribe(EventKey.SHOW_GAME_RESULT, (event: ShowGameResultEvent) => {\n            if (event.result.rewardConfig) {\n                this.showGameResult(event.result)\n            } else {\n                this.onAdvancePressed()\n            }\n        })\n    }\n\n    dispose() {\n        this.sfxAmbientLoop?.stop()\n        this.sfxAmbientLoop = undefined\n        this.screenMaster.removeLayer(this.backgroundLayer)\n        this.screenMaster.removeLayer(this.resultsLayer)\n        this.screenMaster.removeLayer(this.descriptionTextLayer)\n        this.screenMaster.removeLayer(this.btnLayer)\n        this.screenMaster.removeLayer(this.saveGameLayer)\n        this.screenMaster.removeLayer(this.overwriteLayer)\n    }\n\n    onAdvancePressed() {\n        this.sfxAmbientLoop?.stop()\n        this.sfxAmbientLoop = undefined\n        this.backgroundLayer.hide()\n        this.resultsLayer.hide()\n        this.descriptionTextLayer.hide()\n        this.btnLayer.hide()\n        this.saveGameLayer.hide()\n        this.flics.forEach((f) => f.stop())\n        EventBroker.publish(new AdvanceAfterRewardsEvent())\n    }\n\n    showGameResult(result: GameResult) {\n        console.log('Your game result', result)\n        if (!this.sfxAmbientLoop) this.sfxAmbientLoop = SoundManager.playLoopSound('SFX_MusicLoop')\n        BitmapFontWorkerPool.instance.createTextImage(this.cfg.titleFont, result.levelFullName)\n            .then((textImage) => this.levelFullNameImg = textImage)\n        this.btnSave.disabled = result.state !== GAME_RESULT_STATE.complete\n        this.resultText = this.cfg.quitText\n        this.resultLastIndex = this.images.length - 2\n        if (result.state === GAME_RESULT_STATE.complete) {\n            this.resultText = this.cfg.completeText\n            this.resultLastIndex = this.images.length - 1\n        } else if (result.state === GAME_RESULT_STATE.failed) {\n            this.resultText = this.cfg.failedText\n        }\n        this.screenshot = result.screenshot\n        this.resultValues.length = 0\n        Promise.all([\n            BitmapFontWorkerPool.instance.createTextImage(this.fontNames.get('crystals'), this.percentString(result.numCrystal, result.rewardConfig?.quota?.crystals || 0)),\n            BitmapFontWorkerPool.instance.createTextImage(this.fontNames.get('ore'), this.percentString(result.numOre, result.numTotalOres)),\n            BitmapFontWorkerPool.instance.createTextImage(this.fontNames.get('diggable'), this.percentString(result.remainingDiggables, result.totalDiggables, true)),\n            BitmapFontWorkerPool.instance.createTextImage(this.fontNames.get('constructions'), result.numBuildings.toString()),\n            BitmapFontWorkerPool.instance.createTextImage(this.fontNames.get('caverns'), this.percentString(result.discoveredCaverns, result.rewardConfig?.quota?.caverns || 0)),\n            BitmapFontWorkerPool.instance.createTextImage(this.fontNames.get('figures'), this.percentString(result.numRaiders, result.numMaxAirRaiders)),\n            BitmapFontWorkerPool.instance.createTextImage(this.fontNames.get('rockmonsters'), this.percentString(result.defencePercent, 100)),\n            BitmapFontWorkerPool.instance.createTextImage(this.fontNames.get('oxygen'), this.percentString(result.airLevelPercent, 100)),\n            BitmapFontWorkerPool.instance.createTextImage(this.fontNames.get('timer'), this.timeString(result.gameTimeMs)),\n            BitmapFontWorkerPool.instance.createTextImage(this.fontNames.get('score'), `${result.score}%`),\n        ]).then((textImages) => {\n            this.resultValues = textImages\n            this.show()\n        })\n    }\n\n    show() {\n        this.resultIndex = 0\n        this.btnSave.visible = false\n        this.btnAdvance.visible = false\n        this.uncoverResult()\n        BitmapFontWorkerPool.instance.createTextImage(this.cfg.titleFont, this.resultText)\n            .then((gameResultTextImg) => {\n                this.resultsLayer.animationFrame.onRedraw = (context) => {\n                    for (let c = 0; c <= this.resultIndex; c++) {\n                        const img = this.images[c]\n                        if (img) context.drawImage(img.img, img.x, img.y)\n                    }\n                    const flic = this.flics[this.resultIndex + 1]\n                    flic?.draw(context)\n                    for (let c = 0; c <= this.resultIndex; c++) {\n                        const box = this.boxes[c]\n                        if (box) context.drawImage(box.img, box.x, box.y)\n                    }\n                    for (let c = 0; c <= this.resultIndex; c++) {\n                        const txt = this.cfg.text[c]\n                        const text = this.resultValues[c]\n                        if (text) context.drawImage(text, txt.x - text.width / 2, txt.y)\n                    }\n                    if (this.levelFullNameImg) context.drawImage(this.levelFullNameImg, this.resultsLayer.fixedWidth / 2 - this.levelFullNameImg.width / 2, this.cfg.vertSpacing - this.levelFullNameImg.height / 2)\n                    if (gameResultTextImg) context.drawImage(gameResultTextImg, this.resultsLayer.fixedWidth / 2 - gameResultTextImg.width / 2, this.cfg.vertSpacing + (this.levelFullNameImg?.height || 0) / 2)\n                }\n                this.descriptionTextLayer.animationFrame.onRedraw = (context) => {\n                    const descriptionTextImg = this.texts[this.resultIndex]\n                    if (!descriptionTextImg) return\n                    const tx = this.resultIndex !== this.images.length - 1 ? this.cfg.textPos.x : 305\n                    const ty = this.resultIndex !== this.images.length - 1 ? this.cfg.textPos.y : 195\n                    context.drawImage(descriptionTextImg, tx - descriptionTextImg.width / 2, ty)\n                }\n                this.backgroundLayer.show()\n                this.resultsLayer.show()\n                this.descriptionTextLayer.show()\n                this.btnLayer.show()\n            })\n    }\n\n    percentString(actual: number, max: number, lessIsMore: boolean = false) {\n        if (max === 0) max = 1\n        let value = Math.round(Math.max(Math.min(actual / max, 1), 0) * 100)\n        if (lessIsMore) value = 100 - value\n        return `${value.toString()}%`\n    }\n\n    timeString(milliseconds: number) {\n        const seconds = Math.round(milliseconds / 1000)\n        const ss = RewardScreen.toPaddedString(seconds % 60)\n        const minutes = Math.floor(seconds / 60)\n        const mm = RewardScreen.toPaddedString(minutes % 60)\n        const hh = RewardScreen.toPaddedString(Math.floor(minutes / 60))\n        return `${hh}:${mm}:${ss}`\n    }\n\n    private static toPaddedString(num: number): string {\n        return `00${num.toString()}`.slice(-2)\n    }\n\n    uncoverResult() {\n        this.uncoverTimeout = clearTimeoutSafe(this.uncoverTimeout)\n        this.uncoverTimeout = setTimeout(() => {\n            const flic = this.resultIndex < this.resultLastIndex ? this.flics[this.resultIndex + 1] : null // XXX does not work for flics on first entry\n            const flicBeforeNext = flic?.play() ?? Promise.resolve()\n            flicBeforeNext.then(() => {\n                if (this.resultIndex < this.resultLastIndex) {\n                    this.resultIndex++\n                    this.uncoverResult()\n                } else {\n                    this.btnSave.visible = true\n                    this.btnAdvance.visible = true\n                }\n                this.resultsLayer.animationFrame.notifyRedraw()\n                this.descriptionTextLayer.animationFrame.notifyRedraw()\n                this.btnLayer.animationFrame.notifyRedraw()\n            })\n        }, this.cfg.timerMs)\n    }\n}\n","import { EventKey } from '../../event/EventKeyEnum'\nimport { ChangeTooltip, ForceRedrawTooltip, HideTooltip } from '../../event/GuiCommand'\nimport { ScreenLayer } from './ScreenLayer'\nimport { CURSOR_MAX_HEIGHT, NATIVE_SCREEN_HEIGHT, NATIVE_SCREEN_WIDTH } from '../../params'\nimport { clearTimeoutSafe } from '../../core/Util'\nimport { SoundManager } from '../../audio/SoundManager'\nimport { EventBroker } from '../../event/EventBroker'\nimport { SaveGameManager } from '../../resource/SaveGameManager'\nimport { SpriteImage } from '../../core/Sprite'\nimport { HTML_GAME_CANVAS_CONTAINER } from '../../core'\n\nexport class TooltipLayer extends ScreenLayer {\n    readonly lastCursorPos: { x: number, y: number } = {x: 0, y: 0}\n    tooltipTimeoutText?: NodeJS.Timeout\n    tooltipTimeoutSfx?: NodeJS.Timeout\n    cursorLeft: boolean = false\n    tooltipCanvas?: HTMLCanvasElement\n    lastTooltipKey: string = ''\n\n    constructor() {\n        super()\n        this.ratio = SaveGameManager.calcScreenRatio()\n        EventBroker.subscribe(EventKey.COMMAND_TOOLTIP_CHANGE, (event: ChangeTooltip) => {\n            if (this.cursorLeft || !this.active || event.tooltipKey === this.lastTooltipKey) return\n            this.lastTooltipKey = event.tooltipKey\n            this.tooltipTimeoutText = clearTimeoutSafe(this.tooltipTimeoutText)\n            this.tooltipTimeoutSfx = clearTimeoutSafe(this.tooltipTimeoutSfx)\n            if (this.tooltipCanvas) {\n                HTML_GAME_CANVAS_CONTAINER.removeChild(this.tooltipCanvas)\n                this.tooltipCanvas = undefined\n            }\n            this.tooltipTimeoutText = setTimeout(async () => {\n                this.changeTooltipImage(await event.getTooltipTextImg())\n            }, event.timeoutText)\n            const tooltipSfx = event.tooltipSfx\n            if (!SaveGameManager.preferences.muteDevSounds && tooltipSfx) {\n                this.tooltipTimeoutSfx = setTimeout(() => SoundManager.playVoice(tooltipSfx), event.timeoutSfx)\n            }\n        })\n        EventBroker.subscribe(EventKey.COMMAND_TOOLTIP_FORCE_REDRAW, async (event: ForceRedrawTooltip) => {\n            if (this.cursorLeft || !this.active || event.tooltipKey !== this.lastTooltipKey) return\n            this.changeTooltipImage(await event.getTooltipTextImg())\n        })\n        EventBroker.subscribe(EventKey.COMMAND_TOOLTIP_HIDE, (event: HideTooltip) => {\n            if (event.tooltipText && event.tooltipText !== this.lastTooltipKey) return\n            this.removeTooltip()\n        })\n        this.addEventListener('pointermove', (event: PointerEvent): boolean => {\n            this.cursorLeft = false\n            const clientRect = HTML_GAME_CANVAS_CONTAINER.getBoundingClientRect()\n            this.lastCursorPos.x = event.clientX - clientRect.left\n            this.lastCursorPos.y = event.clientY - clientRect.top + CURSOR_MAX_HEIGHT\n            if (this.tooltipCanvas) this.updateTooltipCanvasPosition()\n            return false\n        })\n        this.addEventListener('pointerleave', (): boolean => {\n            this.cursorLeft = true\n            this.removeTooltip()\n            return false\n        })\n        this.addEventListener('keyup', (event: KeyboardEvent): boolean => {\n            if (event.key === 'p') {\n                this.screenMaster?.saveScreenshot()\n                return true\n            }\n            return false\n        })\n        this.show()\n    }\n\n    private removeTooltip() {\n        this.tooltipTimeoutText = clearTimeoutSafe(this.tooltipTimeoutText)\n        this.tooltipTimeoutSfx = clearTimeoutSafe(this.tooltipTimeoutSfx)\n        if (this.tooltipCanvas) {\n            HTML_GAME_CANVAS_CONTAINER.removeChild(this.tooltipCanvas)\n            this.tooltipCanvas = undefined\n        }\n        this.lastTooltipKey = ''\n    }\n\n    private changeTooltipImage(tooltipImg: SpriteImage) {\n        if (this.tooltipCanvas) HTML_GAME_CANVAS_CONTAINER.removeChild(this.tooltipCanvas)\n        if (this.cursorLeft) return\n        this.tooltipCanvas = document.createElement('canvas')\n        HTML_GAME_CANVAS_CONTAINER.appendChild(this.tooltipCanvas)\n        const rect = HTML_GAME_CANVAS_CONTAINER.getBoundingClientRect()\n        const scale = Math.min(rect.width / NATIVE_SCREEN_WIDTH, rect.height / NATIVE_SCREEN_HEIGHT)\n        this.tooltipCanvas.width = Math.round(tooltipImg.width * scale)\n        this.tooltipCanvas.height = Math.round(tooltipImg.height * scale)\n        this.tooltipCanvas.style.position = 'absolute'\n        this.tooltipCanvas.style.zIndex = `${this.zIndex + 10}`\n        const context = this.tooltipCanvas.getContext('2d')\n        if (!context) {\n            console.warn('Could not get context for tooltip canvas')\n        } else {\n            context.drawImage(tooltipImg, 0, 0, this.tooltipCanvas.width, this.tooltipCanvas.height)\n        }\n        this.updateTooltipCanvasPosition()\n    }\n\n    private updateTooltipCanvasPosition() {\n        if (!this.tooltipCanvas) return\n        const posX = Math.min(this.lastCursorPos.x + this.tooltipCanvas.width, this.canvas.width) - this.tooltipCanvas.width\n        let posY: number\n        if (this.lastCursorPos.y + this.tooltipCanvas.height < this.canvas.height) {\n            posY = this.lastCursorPos.y\n        } else {\n            posY = this.lastCursorPos.y - CURSOR_MAX_HEIGHT - this.tooltipCanvas.height\n        }\n        this.tooltipCanvas.style.left = `${posX}px`\n        this.tooltipCanvas.style.top = `${posY}px`\n    }\n\n    show() {\n        this.reset()\n        super.show()\n    }\n\n    hide() {\n        super.hide()\n        this.tooltipTimeoutText = clearTimeoutSafe(this.tooltipTimeoutText)\n        this.tooltipTimeoutSfx = clearTimeoutSafe(this.tooltipTimeoutSfx)\n        this.cursorLeft = false\n        if (this.tooltipCanvas) HTML_GAME_CANVAS_CONTAINER.removeChild(this.tooltipCanvas)\n        this.tooltipCanvas = undefined\n    }\n}\n","import { cacheGetData } from '../resource/AssetCacheHelper'\nimport { SaveGameManager } from '../resource/SaveGameManager'\nimport { EventBroker } from '../event/EventBroker'\nimport { EventKey } from '../event/EventKeyEnum'\nimport { PRNG } from '../game/factory/PRNG'\n\nexport class MusicManager {\n    static readonly audioContext: AudioContext = new AudioContext()\n    static readonly musicTracks: AudioBuffer[] = []\n    static audioTarget: GainNode = this.audioContext.createGain()\n    static currentTrack?: AudioBufferSourceNode\n    static firstUnpause: boolean = true\n    static playNext: boolean = true\n\n    static init() {\n        this.musicTracks.length = 0\n        ;(async () => {\n            for (let c = 0; c < 10; c++) {\n                try {\n                    const musicData = await cacheGetData(`musictrack${c}`)\n                    if (!musicData) continue\n                    const audioBuffer = await this.audioContext.decodeAudioData(musicData)\n                    this.musicTracks.push(audioBuffer)\n                } catch (e) {\n                    console.error(`Could not decode music track ${c}`, e)\n                }\n            }\n            if (this.musicTracks.length < 1) console.warn('No music tracks found in cache')\n            if (!this.firstUnpause && this.playNext) this.playTracks()\n        })().then()\n        this.audioTarget.gain.value = SaveGameManager.getMusicVolume()\n        this.audioTarget.connect(this.audioContext.destination)\n        EventBroker.subscribe(EventKey.LEVEL_SELECTED, () => {\n            this.firstUnpause = true\n        })\n        EventBroker.subscribe(EventKey.UNPAUSE_GAME, () => {\n            if (this.firstUnpause) {\n                this.playTracks()\n                this.firstUnpause = false\n            }\n        })\n        EventBroker.subscribe(EventKey.GAME_RESULT_STATE, () => {\n            this.stopTracks()\n        })\n        EventBroker.subscribe(EventKey.RESTART_GAME, () => {\n            this.stopTracks()\n        })\n        EventBroker.subscribe(EventKey.COMMAND_CHANGE_PREFERENCES, () => {\n            this.audioTarget.gain.value = SaveGameManager.getMusicVolume()\n            if (SaveGameManager.preferences.toggleMusic) {\n                this.playTracks()\n            } else {\n                this.stopTracks()\n            }\n        })\n    }\n\n    static playTracks() {\n        try {\n            this.playNext = true\n            if (this.currentTrack) return // music already playing\n            const audioBuffer = PRNG.unsafe.sample(this.musicTracks) // TODO Consider CDStartTrack from config on first track\n            if (!audioBuffer) return\n            this.currentTrack = this.audioContext.createBufferSource()\n            this.currentTrack.buffer = audioBuffer\n            this.currentTrack.connect(this.audioTarget)\n            this.currentTrack.start()\n            this.currentTrack.addEventListener('ended', () => {\n                this.currentTrack = undefined\n                if (this.playNext) this.playTracks()\n            })\n        } catch (e) {\n            console.error('Could not play music track', e)\n        }\n    }\n\n    static stopTracks() {\n        this.playNext = false\n        this.currentTrack?.stop()\n        this.currentTrack = undefined\n    }\n}\n","import { MainMenuScreen } from './screen/MainMenuScreen'\nimport { ScreenMaster } from './screen/ScreenMaster'\nimport { GameScreen } from './screen/GameScreen'\nimport { RewardScreen } from './screen/RewardScreen'\nimport { DEV_MODE } from './params'\nimport { ObjectListLoader } from './game/ObjectListLoader'\nimport { SaveGameManager } from './resource/SaveGameManager'\nimport { GameResult } from './game/model/GameResult'\nimport { EventBroker } from './event/EventBroker'\nimport { SoundManager } from './audio/SoundManager'\nimport { TooltipLayer } from './screen/layer/TooltipLayer'\nimport { EventKey } from './event/EventKeyEnum'\nimport { MusicManager } from './audio/MusicManager'\n\nexport class GameModule {\n    readonly tooltipLayer: TooltipLayer\n    readonly mainMenuScreen: MainMenuScreen\n    readonly gameScreen: GameScreen\n    readonly rewardScreen: RewardScreen\n\n    constructor(readonly screenMaster: ScreenMaster) {\n        EventBroker.init()\n        EventBroker.subscribe(EventKey.COMMAND_CHANGE_PREFERENCES, () => {\n            screenMaster.onWindowResize()\n        })\n        SaveGameManager.loadSaveGames()\n        SaveGameManager.loadSaveGameScreenshots()\n        if (DEV_MODE) SaveGameManager.loadGame(0)\n        SoundManager.init()\n        MusicManager.init()\n        this.tooltipLayer = screenMaster.addLayer(new TooltipLayer(), 1000)\n        this.mainMenuScreen = new MainMenuScreen(screenMaster)\n        this.gameScreen = new GameScreen(screenMaster)\n        this.rewardScreen = new RewardScreen(screenMaster)\n        const params = new URLSearchParams(window.location.search)\n        SaveGameManager.preferences.testLevels = params.has('testlevels') || SaveGameManager.preferences.testLevels\n        const entry = params.get('entry')\n        if (DEV_MODE && entry) {\n            ObjectListLoader.numRaider = Number(params.get('numRaider')) || 0\n            ObjectListLoader.startVehicle = params.get('vehicle') || ''\n            const loadGame = params.get('loadGame') || ''\n            if (loadGame) SaveGameManager.loadGame(Number(loadGame))\n            if (entry === 'level') this.mainMenuScreen.showLevelSelection()\n            else if (entry === 'tutorial') this.mainMenuScreen.showMainMenu(2)\n            else if (entry === 'reward') this.rewardScreen.showGameResult(GameResult.random())\n            else if (entry === 'random') this.mainMenuScreen.selectLevelRandom()\n            else if (entry === 'credits') this.mainMenuScreen.showCredits()\n            else if (entry) this.mainMenuScreen.selectLevel(entry).then()\n        } else {\n            this.mainMenuScreen.showMainMenu()\n        }\n    }\n\n    dispose() {\n        console.warn('Disposing all screens and event brokers!')\n        this.tooltipLayer.hide()\n        this.screenMaster.removeLayer(this.tooltipLayer)\n        this.mainMenuScreen.dispose()\n        this.gameScreen.dispose()\n        this.rewardScreen.dispose()\n        // TODO Stop all SFX sound too\n        MusicManager.stopTracks()\n    }\n}\n","import { SaveGameManager, SaveGamePreferences } from './resource/SaveGameManager'\nimport { NerpRunner } from './nerp/NerpRunner'\nimport { GameConfig } from './cfg/GameConfig'\n\n// noinspection JSUnusedGlobalSymbols\nexport class ConsoleIntegration {\n    preferences: SaveGamePreferences = SaveGameManager.preferences\n    config: GameConfig = GameConfig.instance\n\n    nerpDebugToggle(): boolean {\n        NerpRunner.debug = !NerpRunner.debug\n        return NerpRunner.debug\n    }\n\n    savePreferences(): void {\n        SaveGameManager.savePreferences()\n    }\n}\n","import { CfgRecord, CfgValue } from '../resource/fileparser/CfgFileParser'\n\nexport class CfgEntry {\n    constructor(readonly root: CfgRecord) {\n    }\n\n    forEachEntry(callback: (key: string, entry: CfgEntry) => void): void {\n        const visitedKeys = new Set<string>()\n        Object.entries(this.root).forEach(([key, value]) => {\n            const unifiedKey = CfgEntry.unifyKey(key)\n            if (visitedKeys.has(unifiedKey)) {\n                return // When multiple values given for the same key, we only consider the FIRST one\n            }\n            visitedKeys.add(unifiedKey)\n            if (Array.isArray(value)) {\n                // No warning here, because some like \"PausedMenu\" has mixture of MenuCount value and records\n                return\n            }\n            callback(key, new CfgEntry(value))\n        })\n    }\n\n    forEachCfgEntryValue(callback: (value: CfgEntryValue, key: string) => void): void {\n        const visitedKeys = new Set<string>()\n        Object.entries(this.root).forEach(([key, value]) => {\n            const unifiedKey = CfgEntry.unifyKey(key)\n            if (visitedKeys.has(unifiedKey)) {\n                return // When multiple values given for the same key, we only consider the FIRST one\n            }\n            visitedKeys.add(unifiedKey)\n            if (!Array.isArray(value)) {\n                console.warn(`Unexpected object (${value}) given; expected config values`)\n                return\n            }\n            value.forEach((v) => {\n                callback(new CfgEntryValue(String.fromCharCode(...(v))), key)\n            })\n        })\n    }\n\n    getRecordOptional(searchKey: string): CfgEntry | undefined {\n        if (!searchKey) throw new Error('No key name given')\n        const objKeys = Object.keys(this.root)\n        const unifiedSearchKey = CfgEntry.unifyKey(searchKey)\n        const key = objKeys.find((k) => CfgEntry.unifyKey(k) === unifiedSearchKey)\n        if (!key) return undefined\n        const val = (this.root)[key]\n        if (val === undefined || val === null) return undefined\n        if (Array.isArray(val)) throw new Error(`Unexpected array (${val}) given; expected record object`)\n        return new CfgEntry(val)\n    }\n\n    getRecord(searchKey: string): CfgEntry {\n        const result = this.getRecordOptional(searchKey)\n        if (!result) throw new Error(`No value given for key \"${searchKey}\" in object (${Object.keys(parent)})`)\n        return result\n    }\n\n    getValue(searchKey: string): CfgEntryValue {\n        if (!this?.root) throw new Error('No config entry given')\n        if (!searchKey) throw new Error('No key name given')\n        if (Array.isArray(this.root)) throw new Error(`Unexpected array (${this}) given; expected record object type`)\n        const objKeys = Object.keys(this.root)\n        const unifiedSearchKey = CfgEntry.unifyKey(searchKey)\n        const key = objKeys.find((k) => CfgEntry.unifyKey(k) === unifiedSearchKey)\n        if (!key) return new CfgEntryValue(undefined)\n        const val = this.root[key]\n        if (val === undefined) return new CfgEntryValue(undefined)\n        if (!Array.isArray(val)) throw new Error(`Unexpected value (${val}) given; expected array with values`)\n        return new CfgEntryValue(String.fromCharCode(...(val[0]))) // When multiple values given for the same key, we only consider the FIRST one\n    }\n\n    private static unifyKey(keyValue: string) {\n        return keyValue.toString().toLowerCase().replaceAll(/[_-]/g, '')\n    }\n\n    findValueByPrefix(searchPrefix: string): CfgEntryValue {\n        const result = Object.values(this.root).flatMap((v) => v as CfgValue[]).find((value) => new CfgEntryValue(String.fromCharCode(...(value))).toString().startsWith(searchPrefix))\n        if (!result) throw new Error(`No value given with prefix \"${searchPrefix}\" in (${(Object.values(this.root))})`)\n        return new CfgEntryValue(String.fromCharCode(...(result)))\n    }\n}\n\nexport class CfgEntryValue {\n    constructor(readonly value: string | undefined) {\n    }\n\n    toArray(separator: string, expectedLength: number | undefined, fallback: CfgEntryValue[] = []): CfgEntryValue[] {\n        if (this.value === undefined) return fallback\n        let value = [this.value]\n        for (const sep of separator) {\n            value = value.flatMap((s) => s.split(sep))\n        }\n        if (expectedLength !== undefined && value.length !== expectedLength) throw new Error(`Invalid array value (${value}) with ${value.length} given; expected length of ${expectedLength}`)\n        return value.map((v) => new CfgEntryValue(v))\n    }\n\n    toString(fallback: string = ''): string {\n        if (this.value === undefined) return fallback\n        if (this.value.toLowerCase() === 'null') return ''\n        return this.value\n    }\n\n    toLabel(fallback: string = ''): string {\n        if (this.value === undefined) return fallback\n        return this.value.replace(/_/g, ' ')\n    }\n\n    toNumber(fallback: number = 0): number {\n        if (this.value === undefined) return fallback\n        if (this.value === '5\\\\') {\n            console.warn(`@Baz pls fix your config for game speed slider; \"${this.value}\" is not a number`)\n            return 5\n        }\n        const result = Number(this.value)\n        if (isNaN(result)) throw new Error(`Invalid value (${this.value}) given; expected number value`)\n        return result\n    }\n\n    toFileName(fallback: string = ''): string {\n        if (this.value === undefined) return fallback\n        if (this.value.toLowerCase() === 'null') return ''\n        return this.value.replaceAll('\\\\', '/')\n    }\n\n    toBoolean(fallback: boolean = false): boolean {\n        if (this.value === undefined) return fallback\n        const strVal = this.value.toLowerCase()\n        if (strVal === 'yes' || strVal === 'true') {\n            return true\n        } else if (strVal === 'no' || strVal === 'false') {\n            return false\n        } else {\n            throw new Error(`Invalid value (${strVal}) given; expected boolean`)\n        }\n    }\n\n    toLevelReference(fallback: string = ''): string {\n        if (this.value === undefined) return fallback\n        if (!this.value.toLowerCase().startsWith('Levels::'.toLowerCase())) throw new Error(`Invalid level reference (${(this.value)}) given; expected to start with \"Levels::\"`)\n        // XXX Assert level reference actually exists\n        return this.value.slice('Levels::'.length)\n    }\n\n    toTextureSet(fallback: string = ''): string {\n        if (this.value === undefined) return fallback\n        const value = this.toString()\n        if (!value.toLowerCase().startsWith('Textures::'.toLowerCase())) throw new Error(`Invalid texture set (${value}) given; expected to start with \"Textures::\"`)\n        // XXX Assert texture set reference actually exists\n        return value.slice('Textures::'.length)\n    }\n\n    toRGB(fallback: [r: number, g: number, b: number] = [0, 0, 0]): [r: number, g: number, b: number] {\n        if (this.value === undefined) return fallback\n        return this.toArray(':', 3).map((n) => Math.max(0, Math.min(255, n.toNumber())) / 255) as [number, number, number]\n    }\n\n    toPos(separator: string, fallback: { x: number, y: number } = {x: 0, y: 0}): { x: number, y: number } {\n        if (this.value === undefined) return fallback\n        const [x, y] = this.toArray(separator, 2).map((v) => v.toNumber())\n        return {x: x, y: y}\n    }\n}\n","import { VERBOSE } from '../../params'\nimport { CfgEntry } from '../../cfg/CfgEntry'\n\nconst PARSING_STATE = {\n    LOOKING_FOR_KEY: 1,\n    INSIDE_KEY: 2,\n    LOOKING_FOR_VALUE: 3,\n    INSIDE_VALUE: 4,\n} as const\ntype PARSING_STATE = typeof PARSING_STATE[keyof typeof PARSING_STATE]\n\nexport type CfgValue = number[]\n\nexport interface CfgRecord extends Record<string, CfgRecord | CfgValue[]> {\n}\n\nexport class CfgFileParser {\n    static parse(buffer: Uint8Array): CfgEntry {\n        const root: CfgRecord = {}\n        const ancestry: CfgRecord[] = []\n        let activeObject: CfgRecord = root\n        let isComment = false\n        let parsingState: PARSING_STATE = PARSING_STATE.LOOKING_FOR_KEY\n        let key = ''\n        let value: number[] = []\n        // debug output is a bad idea here, buffer size is about 232.611 characters and has 6781 lines\n        for (let seek = 0; seek < buffer.length; seek++) {\n            const charCode = buffer[seek]\n            if (charCode === ';'.charCodeAt(0) || charCode === '/'.charCodeAt(0)) { // someone used // as a marker for a comment\n                isComment = true\n            } else if (charCode === 10 || charCode === 13) {\n                isComment = false\n            }\n            if (!isComment) {\n                if (charCode > 32) { // not a whitespace\n                    if (parsingState === PARSING_STATE.LOOKING_FOR_KEY) {\n                        if (charCode === '}'.charCodeAt(0)) {\n                            const lastElement = ancestry.pop()\n                            if (!lastElement) throw new Error('Unexpected end of config ancestry stack')\n                            activeObject = lastElement\n                        } else {\n                            key = String.fromCharCode(charCode)\n                            if (key === '!') key = '' // XXX no clue what \"!\" at start of keys means...\n                            parsingState = PARSING_STATE.INSIDE_KEY\n                        }\n                    } else if (parsingState === PARSING_STATE.INSIDE_KEY) {\n                        key += String.fromCharCode(charCode)\n                    } else if (parsingState === PARSING_STATE.LOOKING_FOR_VALUE) {\n                        if (charCode === '{'.charCodeAt(0) && key !== 'FullName') { // start of a new object key is identifier\n                            ancestry.push(activeObject)\n                            activeObject = {}\n                            ancestry[ancestry.length - 1][key] = activeObject\n                            parsingState = PARSING_STATE.LOOKING_FOR_KEY\n                        } else {\n                            value = [charCode]\n                            parsingState = PARSING_STATE.INSIDE_VALUE\n                        }\n                    } else if (parsingState === PARSING_STATE.INSIDE_VALUE) {\n                        value.push(charCode)\n                    }\n                } else if (charCode === 9 || charCode === 10 || charCode === 13 || charCode === 32) { // some whitespace\n                    if (parsingState === PARSING_STATE.INSIDE_KEY) {\n                        parsingState = PARSING_STATE.LOOKING_FOR_VALUE\n                    } else if (parsingState === PARSING_STATE.INSIDE_VALUE) {\n                        if (activeObject.hasOwnProperty(key)) {\n                            (activeObject[key] as unknown[]).push(value)\n                        } else {\n                            activeObject[key] = [value]\n                        }\n                        parsingState = PARSING_STATE.LOOKING_FOR_KEY\n                    }\n                } else {\n                    throw new Error(`Unexpected character code found ${charCode} in config file`)\n                }\n            }\n        }\n\n        const entries = Object.values(root)\n        if (entries.length > 1 && VERBOSE) console.warn(`Config file contains (${entries.length}) objects! Will proceed with first object '${Object.keys(root)[0]}' only`)\n        return new CfgEntry(entries[0] as CfgRecord)\n    }\n}\n","import { GameFilesLoader } from './resource/GameFilesLoader'\nimport { DEFAULT_FONT_NAME, VERBOSE } from './params'\nimport { ScreenMaster } from './screen/ScreenMaster'\nimport { AssetRegistry } from './resource/AssetRegistry'\nimport { ResourceManager } from './resource/ResourceManager'\nimport { GameConfig } from './cfg/GameConfig'\nimport { BitmapFontWorkerPool } from './worker/BitmapFontWorkerPool'\nimport { GameModule } from './GameModule'\nimport { CursorManager } from './screen/CursorManager'\nimport { DependencySpriteWorkerPool } from './worker/DependencySpriteWorkerPool'\nimport { BitmapFont, BitmapFontData } from './core/BitmapFont'\nimport { BitmapWorkerPool } from './worker/BitmapWorkerPool'\nimport { ConsoleIntegration } from './ConsoleIntegration'\nimport { SaveGameManager } from './resource/SaveGameManager'\nimport { CfgFileParser } from './resource/fileparser/CfgFileParser'\nimport { createCanvas, createContext, imgDataToCanvas } from './core/ImageHelper'\nimport { SpriteImage } from './core/Sprite'\nimport { cacheGetData, cachePutData } from './resource/AssetCacheHelper'\nimport { AnimatedCursorData } from './screen/AnimatedCursor'\nimport { BitmapWithPalette } from './resource/fileparser/BitmapWithPalette'\nimport { InterfaceImageEntryCfg } from './cfg/InterfaceImageCfg'\n\ndeclare global {\n    interface Window {\n        rr: ConsoleIntegration;\n    }\n}\n\nexport async function start() {\n    if (window) window.rr = new ConsoleIntegration()\n    SaveGameManager.loadPreferences()\n    const screenMaster = new ScreenMaster()\n    const vfs = await new GameFilesLoader(screenMaster.loadingLayer).loadGameFiles()\n    screenMaster.loadingLayer.show()\n    screenMaster.loadingLayer.setLoadingMessage('Loading configuration...')\n    const cfgFiles = vfs.filterEntryNames('\\\\.cfg')\n    if (cfgFiles.length < 1) throw new Error('Invalid second WAD file given! No config file present at root level.')\n    if (cfgFiles.length > 1) console.warn(`Found multiple config files (${cfgFiles}) will proceed with first one \"${cfgFiles[0]}\" only`)\n    const result = CfgFileParser.parse(vfs.getFile(cfgFiles[0]).toArray())\n    console.log('Game configuration parsed', result)\n    GameConfig.instance.setFromRecord(result)\n    if (SaveGameManager.preferences.playVideos) await screenMaster.videoLayer.playVideo(`data/${GameConfig.instance.main.rrAvi}`)\n    screenMaster.loadingLayer.setLoadingMessage('Loading initial assets...')\n    const cursorImageName = GameConfig.instance.pointers.standard.fileName\n    await cacheGetData(cursorImageName).then((animatedCursorData) => {\n        if (!animatedCursorData) {\n            const fileData = vfs.getFile(cursorImageName).toDataView()\n            const imgData = BitmapWithPalette.decode(fileData).applyAlpha()\n            const cursorImage = createCanvas(imgData.width, imgData.height)\n            const context = cursorImage.getContext('2d')\n            if (!context) {\n                console.warn('Could not get context to draw cursor on canvas')\n            } else {\n                context.putImageData(imgData, 0, 0)\n            }\n            animatedCursorData = new AnimatedCursorData([cursorImage])\n            cachePutData(cursorImageName, animatedCursorData).then()\n        }\n        CursorManager.addCursor('standard', animatedCursorData.dataUrls)\n        CursorManager.changeCursor('standard')\n    })\n    Promise.all([\n        new Promise<SpriteImage>(async (resolve) => {\n            const loadingScreenImageName = GameConfig.instance.main.loadScreen\n            const fileData = vfs.getFile(loadingScreenImageName).toDataView()\n            const imgData = BitmapWithPalette.decode(fileData)\n            // TODO Caching the patched image should be faster\n            const context = createContext(imgData.width, imgData.height)\n            context.putImageData(imgData, 0, 0)\n            context.fillStyle = '#f00'\n            context.fillRect(38, 9, 131, 131)\n            resolve(context.canvas)\n        }),\n        new Promise<SpriteImage>(async (resolve) => {\n            const loadingBarImageName = GameConfig.instance.main.progressBar\n            const fileData = vfs.getFile(loadingBarImageName).toDataView()\n            const imgData = BitmapWithPalette.decode(fileData)\n            resolve(imgDataToCanvas(imgData))\n        }),\n        new Promise<SpriteImage>(async (resolve) => {\n            const fileData = vfs.getFile(DEFAULT_FONT_NAME).toDataView()\n            const imgData = BitmapWithPalette.decode(fileData)\n            const fontData = new BitmapFontData(imgData, 14)\n            BitmapFontWorkerPool.instance.setupPool(DEFAULT_FONT_NAME, fontData)\n            // waiting for actual pool here, is about 10 times longer\n            const loadingText = GameConfig.instance.main.loadingText\n            const imgLabel = new BitmapFont(fontData).createTextImage(loadingText)\n            if (!imgLabel) throw new Error('Could not create loading text image')\n            resolve(imgLabel)\n        }),\n    ]).then(([imgBackground, imgProgress, imgLabel]) => {\n        screenMaster.loadingLayer.enableGraphicMode(imgBackground, imgProgress, imgLabel)\n        if (VERBOSE) console.log('Initial loading done.')\n    })\n    BitmapWorkerPool.instance.startPool(16, undefined)\n    const assetRegistry = new AssetRegistry(vfs)\n    const assetLoaders = await assetRegistry.registerAllAssets(GameConfig.instance) // dynamically register all assets from config\n    let assetCount = 0\n    await Promise.all(assetLoaders.map((asset) => {\n        return new Promise<void>((resolve) => {\n            setTimeout(async () => {\n                try {\n                    await asset.load()\n                } catch (e) {\n                    if (!asset.optional &&\n                        // ignore known issues\n                        !asset.lAssetName.equalsIgnoreCase('Vehicles/BullDozer/VLBD_light.lwo') &&\n                        !asset.lAssetName.equalsIgnoreCase('Vehicles/LargeDigger/LD_bucket.lwo') &&\n                        !asset.lAssetName.equalsIgnoreCase('Vehicles/LargeDigger/LD_main.lwo') &&\n                        !asset.lAssetName.equalsIgnoreCase('Vehicles/LargeDigger/LD_C_Pit.lwo') &&\n                        !asset.lAssetName.equalsIgnoreCase('Vehicles/LargeDigger/LD_Light01.lwo') &&\n                        !asset.lAssetName.equalsIgnoreCase('Vehicles/LargeDigger/digbodlight.lwo') &&\n                        !asset.lAssetName.equalsIgnoreCase('Vehicles/LargeDigger/LD_PipeL.lwo')\n                    ) {\n                        console.error(e)\n                    }\n                }\n                assetCount++\n                screenMaster.loadingLayer.setLoadingProgress(assetCount / assetLoaders.length)\n                resolve()\n            })\n        })\n    }))\n    BitmapWorkerPool.instance.terminatePool()\n    await ResourceManager.loadAllCursor()\n    console.timeEnd('Total asset loading time')\n    console.log(`Loading of about ${(assetLoaders.length)} assets complete!`)\n    vfs.dispose()\n    screenMaster.loadingLayer.hide()\n    Array.from(document.getElementsByClassName('hide-after-loading-assets')).forEach((e) => {\n        (e as HTMLElement).style.visibility = 'hidden'\n    })\n\n    const teleportManConfig = GameConfig.instance.interfaceImages.teleportMan\n    const teleportManNormal = ResourceManager.getImageData(teleportManConfig.normalFile)\n    const teleportManDisabled = ResourceManager.getImageData(teleportManConfig.disabledFile)\n    const teleportManImageData: Map<string, [ImageData, ImageData]> = new Map()\n    teleportManImageData.set('Interface_MenuItem_TeleportMan'.toLowerCase(), [teleportManNormal, teleportManDisabled])\n    const depInterfaceBuildImageData: Map<string, [ImageData, ImageData]> = new Map()\n    Object.entries(GameConfig.instance.interfaceBuildImages).forEach(([key, cfg]: [string, InterfaceImageEntryCfg]) => {\n        depInterfaceBuildImageData.set(key, [ResourceManager.getImageData(cfg.normalFile), ResourceManager.getImageData(cfg.disabledFile)])\n    })\n    DependencySpriteWorkerPool.instance.setupPool({\n        teleportManImageData: teleportManImageData,\n        tooltipFontData: await assetRegistry.tooltipFontLoader.wait(),\n        plusSign: ResourceManager.getImageData('Interface/Dependencies/+.bmp'),\n        equalSign: ResourceManager.getImageData('Interface/Dependencies/=.bmp'),\n        depInterfaceBuildImageData: depInterfaceBuildImageData,\n    })\n\n    let game = new GameModule(screenMaster)\n    if (import.meta.hot) {\n        import.meta.hot.accept('./GameModule', (mNs) => {\n            if (!mNs) return\n            try {\n                game.dispose()\n                game = new mNs.GameModule(screenMaster)\n            } catch (e) {\n                console.error(e)\n            }\n        })\n    }\n}\n"],"names":["DEV_MODE","VERBOSE","ASSET_CACHE_DB_NAME","ASSET_CACHE_VERSION","JOB_SCHEDULE_INTERVAL","CHECK_CLEAR_RUBBLE_INTERVAL","CHECK_SPAWN_RAIDER_TIMER","CHECK_SPAWN_VEHICLE_TIMER","MAX_RAIDER_BASE","MAX_RAIDER_REQUEST","ADDITIONAL_RAIDER_PER_SUPPORT","PANEL_ANIMATION_MULTIPLIER","SEQUENCE_TEXTURE_INTERVAL_MS","KEY_PAN_SPEED","SPIDER_SLIP_RANGE_SQ","ITEM_ACTION_RANGE_SQ","UPDATE_INTERVAL_MS","BRICK_ORE_VALUE","CAMERA_FOV","CAMERA_MAX_DISTANCE","NUM_OF_LEVELS_TO_COMPLETE_GAME","SAVE_GAME_SCREENSHOT_WIDTH","SAVE_GAME_SCREENSHOT_HEIGHT","RAIDER_CARRY_SLOWDOWN","SURFACE_NUM_SEAM_LEVELS","SURFACE_NUM_CONTAINED_ORE","DEFAULT_GAME_SPEED_MULTIPLIER","DEFAULT_SFX_VOLUME","DEFAULT_MUSIC_VOLUME","DEFAULT_GAME_BRIGHTNESS","DEFAULT_SHOW_HELP_WINDOW","DEFAULT_WALL_DETAILS","DEFAULT_MUSIC_TOGGLE","DEFAULT_SFX_TOGGLE","DEFAULT_AUTO_GAME_SPEED","TOOLTIP_DELAY_TEXT_MENU","TOOLTIP_DELAY_TEXT_SCENE","TOOLTIP_DELAY_SFX","TOOLTIP_DELAY_SFX_MENU","DEFAULT_FONT_NAME","TOOLTIP_FONT_NAME","CAMERA_MIN_HEIGHT_ABOVE_TERRAIN","CAMERA_MAX_SHAKE_BUMP","CAMERA_MAX_SHAKE_TILES","AIR_LEVEL_WARNING_STEP","AIR_LEVEL_LEVEL_LOW","NERP_EXECUTION_INTERVAL","CURSOR_MAX_HEIGHT","MAP_PANEL_SURFACE_RECT_MARGIN","MAP_MAX_UPDATE_INTERVAL","SLUG_SUCK_TIME","SLUG_MAX_IDLE_TIME","RAIDER_PATH_PRECISION","DEFAULT_SCREEN_RATIO_FIXED","FPV_ENTITY_TURN_SPEED","POINTER_THRESHOLD_DOWN_UP_CLICK","CAMERA_PAN_LIMIT_MARGIN","NATIVE_SCREEN_WIDTH","NATIVE_SCREEN_HEIGHT","TILESIZE","NATIVE_UPDATE_INTERVAL","promisifyRequest","request","resolve","reject","createStore","storeName","dbp","txMode","callback","db","defaultGetStoreFunc","defaultGetStore","cacheGetData","key","customStore","store","cachePutData","value","VirtualFileSystem","encoding","file","filename","lName","regexStr","regex","f","entryName","SelectFilesAccordion","labelHTML","panel","option","input","label","FileSelectComponent","SelectFilesForm","btnText","fileNames","onSubmit","fileSelectInputs","fileName","fileSelect","btnStart","e","files","ByteStreamReader","dataView","offset","numBytes","byteLength","chars","c","charCodes","char","data","numOfBytes","result","Z_FIXED$1","Z_BINARY","Z_TEXT","Z_UNKNOWN$1","zero$1","buf","len","STORED_BLOCK","STATIC_TREES","DYN_TREES","MIN_MATCH$1","MAX_MATCH$1","LENGTH_CODES$1","LITERALS$1","L_CODES$1","D_CODES$1","BL_CODES$1","HEAP_SIZE$1","MAX_BITS$1","Buf_size","MAX_BL_BITS","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","extra_lbits","extra_dbits","extra_blbits","bl_order","DIST_CODE_LEN","static_ltree","static_dtree","_dist_code","_length_code","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","d_code","dist","put_short","s","w","send_bits","length","send_code","tree","bi_reverse","code","res","bi_flush","gen_bitlen","desc","max_code","stree","has_stree","extra","base","n","m","bits","xbits","overflow","gen_codes","bl_count","next_code","tr_static_init","init_block","bi_windup","smaller","depth","_n2","_m2","pqdownheap","k","v","j","compress_block","ltree","dtree","lc","sx","build_tree","node","scan_tree","prevlen","curlen","nextlen","count","max_count","min_count","send_tree","build_bl_tree","max_blindex","send_all_trees","lcodes","dcodes","blcodes","rank","detect_data_type","block_mask","static_init_done","_tr_init$1","_tr_stored_block$1","stored_len","last","_tr_align$1","_tr_flush_block$1","opt_lenb","static_lenb","_tr_tally$1","_tr_init_1","_tr_stored_block_1","_tr_flush_block_1","_tr_tally_1","_tr_align_1","trees","adler32","adler","pos","s1","s2","adler32_1","makeTable","table","crcTable","crc32","crc","t","end","i","crc32_1","messages","constants$2","_tr_init","_tr_stored_block","_tr_flush_block","_tr_tally","_tr_align","Z_NO_FLUSH$2","Z_PARTIAL_FLUSH","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY$1","Z_UNKNOWN","Z_DEFLATED$2","MAX_MEM_LEVEL","MAX_WBITS$1","DEF_MEM_LEVEL","LENGTH_CODES","LITERALS","L_CODES","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","PRESET_DICT","INIT_STATE","GZIP_STATE","EXTRA_STATE","NAME_STATE","COMMENT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","OS_CODE","err","strm","errorCode","zero","slide_hash","p","wsize","HASH_ZLIB","prev","HASH","flush_pending","flush_block_only","put_byte","b","putShortMSB","read_buf","start","size","longest_match","cur_match","chain_length","scan","match","best_len","nice_match","limit","_win","wmask","strend","scan_end1","scan_end","fill_window","_w_size","more","str","deflate_stored","flush","min_block","left","have","used","deflate_fast","hash_head","bflush","deflate_slow","max_insert","deflate_rle","deflate_huff","Config","good_length","max_lazy","nice_length","max_chain","func","configuration_table","lm_init","DeflateState","deflateStateCheck","deflateResetKeep","deflateReset","ret","deflateSetHeader","head","deflateInit2","level","method","windowBits","memLevel","strategy","wrap","deflateInit","deflate$2","old_flush","header","level_flags","beg","copy","gzhead_extra","val","bstate","deflateEnd","status","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","next","deflateInit_1","deflateInit2_1","deflateReset_1","deflateResetKeep_1","deflateSetHeader_1","deflate_2$1","deflateEnd_1","deflateSetDictionary_1","deflateInfo","deflate_1$2","_has","obj","assign","sources","source","flattenChunks","chunks","l","chunk","common","STR_APPLY_UIA_OK","_utf8len","q","string2buf","c2","m_pos","str_len","buf_len","buf2binstring","buf2string","max","out","utf16buf","c_len","utf8border","strings","ZStream","zstream","toString$1","Z_NO_FLUSH$1","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFAULT_COMPRESSION","Z_DEFAULT_STRATEGY","Z_DEFLATED$1","Deflate$1","options","opt","dict","flush_mode","chunkSize","_flush_mode","deflate$1","deflator","deflateRaw$1","gzip$1","Deflate_1$1","deflate_2","deflateRaw_1$1","gzip_1$1","deflate_1$1","BAD$1","TYPE$1","inffast","_in","_out","dmax","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from","from_source","output","state","top","dolen","dodist","MAXBITS","ENOUGH_LENS$1","ENOUGH_DISTS$1","CODES$1","LENS$1","DISTS$1","lbase","lext","dbase","dext","inflate_table","type","lens","lens_index","codes","table_index","work","opts","sym","min","root","curr","drop","huff","incr","fill","low","mask","offs","here_bits","here_op","here_val","inftrees","CODES","LENS","DISTS","Z_FINISH$1","Z_BLOCK","Z_TREES","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","Z_BUF_ERROR","Z_DEFLATED","HEAD","FLAGS","TIME","OS","EXLEN","EXTRA","NAME","COMMENT","HCRC","DICTID","DICT","TYPE","TYPEDO","STORED","COPY_","COPY","TABLE","LENLENS","CODELENS","LEN_","LEN","LENEXT","DIST","DISTEXT","MATCH","LIT","CHECK","LENGTH","DONE","BAD","MEM","SYNC","ENOUGH_LENS","ENOUGH_DISTS","MAX_WBITS","DEF_WBITS","zswap32","InflateState","inflateStateCheck","inflateResetKeep","inflateReset","inflateReset2","inflateInit2","inflateInit","virgin","lenfix","distfix","fixedtables","updatewindow","src","inflate$2","put","last_bits","last_op","last_val","hbuf","order","inf_leave","inflateEnd","inflateGetHeader","inflateSetDictionary","dictid","inflateReset_1","inflateReset2_1","inflateResetKeep_1","inflateInit_1","inflateInit2_1","inflate_2$1","inflateEnd_1","inflateGetHeader_1","inflateSetDictionary_1","inflateInfo","inflate_1$2","GZheader","gzheader","toString","Z_NO_FLUSH","Z_FINISH","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Inflate$1","last_avail_out","next_out_utf8","tail","utf8str","inflate$1","inflator","inflateRaw$1","Inflate_1$1","inflate_2","inflateRaw_1$1","ungzip$1","inflate_1$1","Deflate","deflate","deflateRaw","gzip","Inflate","inflate","inflateRaw","ungzip","Deflate_1","deflate_1","deflateRaw_1","gzip_1","Inflate_1","inflate_1","inflateRaw_1","ungzip_1","constants_1","pako","VirtualFile","view","buffer","CabFile","cabHeaderContent","cabVolumeContent","verbose","reader","signature","version","volumeInfo","cabDescriptorOffset","cabDescriptorSize","majorVersion","fileTableOffset","fileTableSize","fileTableSize2","directoryCount","fileCount","fileTableOffset2","fileGroupOffsets","fileOffsetsTable","fileGroups","list","nameOffset","name","firstFile","lastFile","fileGroup","fileDescriptorOffset","directoryIndex","flags","compressed","expandedSize","compressedSize","dataOffset","dirname","filePathName","progress","firstSlashIndex","mappedFileName","cached","fileData","bytesLeft","chunkBuffer","inflated","Pako","IsoFileParser","volumeDescriptorTypeCode","VOLUME_DESCRIPTOR_TYPE_CODE","cabHeaderFile","cabVolumeFile","cabFile","cabFiles","parentName","lenDirRecord","locExt","dataLen","isDirectory","lenFileIdentifier","fileIdentifierRaw","firstCharCode","indexDelimiter","fileIdentifier","filePathIdentifier","startOffset","CueFileParser","cueFileBuffer","binFileBuffer","CueHdrFileParser","isoFile","audioTracks","cueEntries","cueEntry","startSector","endSector","endOffset","entryLength","entryData","writeOffset","isoBuffer","audioBuffer","entryDataLength","trackArr","trackView","encoder","read","lines","binFileLine","binFileParts","index","line","indexLine","line2","r","parts","typeSplit","typeUpper","posSplit","SelectFilesProgress","done","total","parent","MAX_32_BITS","MAX_16_BITS","MAX_8_BITS","COMPRESSION_METHOD_DEFLATE","COMPRESSION_METHOD_DEFLATE_64","COMPRESSION_METHOD_STORE","COMPRESSION_METHOD_AES","LOCAL_FILE_HEADER_SIGNATURE","SPLIT_ZIP_FILE_SIGNATURE","DATA_DESCRIPTOR_RECORD_SIGNATURE","CENTRAL_FILE_HEADER_SIGNATURE","END_OF_CENTRAL_DIR_SIGNATURE","ZIP64_END_OF_CENTRAL_DIR_SIGNATURE","ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE","END_OF_CENTRAL_DIR_LENGTH","ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH","ZIP64_END_OF_CENTRAL_DIR_LENGTH","DATA_DESCRIPTOR_RECORD_LENGTH","DATA_DESCRIPTOR_RECORD_ZIP_64_LENGTH","DATA_DESCRIPTOR_RECORD_SIGNATURE_LENGTH","EXTRAFIELD_TYPE_ZIP64","EXTRAFIELD_TYPE_AES","EXTRAFIELD_TYPE_NTFS","EXTRAFIELD_TYPE_NTFS_TAG1","EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP","EXTRAFIELD_TYPE_UNICODE_PATH","EXTRAFIELD_TYPE_UNICODE_COMMENT","EXTRAFIELD_TYPE_USDZ","EXTRAFIELD_TYPE_INFOZIP","EXTRAFIELD_TYPE_UNIX","BITFLAG_ENCRYPTED","BITFLAG_LEVEL","BITFLAG_DATA_DESCRIPTOR","BITFLAG_LANG_ENCODING_FLAG","FILE_ATTR_MSDOS_DIR_MASK","FILE_ATTR_MSDOS_READONLY_MASK","FILE_ATTR_MSDOS_HIDDEN_MASK","FILE_ATTR_MSDOS_SYSTEM_MASK","FILE_ATTR_MSDOS_ARCHIVE_MASK","FILE_ATTR_UNIX_TYPE_MASK","FILE_ATTR_UNIX_TYPE_DIR","FILE_ATTR_UNIX_EXECUTABLE_MASK","FILE_ATTR_UNIX_DEFAULT_MASK","FILE_ATTR_UNIX_SETUID_MASK","FILE_ATTR_UNIX_SETGID_MASK","FILE_ATTR_UNIX_STICKY_MASK","DIRECTORY_SIGNATURE","HEADER_SIZE","HEADER_OFFSET_SIGNATURE","HEADER_OFFSET_COMPRESSED_SIZE","HEADER_OFFSET_UNCOMPRESSED_SIZE","UNDEFINED_VALUE","UNDEFINED_TYPE","FUNCTION_TYPE","MINIMUM_CHUNK_SIZE","maxWorkers","DEFAULT_CONFIGURATION","config","getConfiguration","getChunkSize","configure","configuration","baseURI","terminateWorkerTimeout","useCompressionStream","useWebWorkers","CompressionStream","DecompressionStream","CompressionStreamZlib","DecompressionStreamZlib","workerURI","wasmURI","setIfDefined","propertyName","propertyValue","Crc32","Crc32Stream","stream","controller","encodeText","bitArray","a1","a2","shift","a","x","_end","carry","last2","shift2","codec","arr","tmp","bytes","hash","sha1","ol","nl","h","d","words","cipher","aes","sbox","decTable","keyLen","encKey","decKey","rcon","encTable","sboxInv","th","xInv","x2","x4","x8","tDec","tEnc","dir","nInnerRounds","t0","t1","t2","t3","kIndex","b2","random","typedArray","m_w","m_z","rcache","_r","mode","prf","iv","word","b1","b3","counter","bl","misc","password","salt","u","ui","arrayBuffer","outLength","hmac","Hash","exKey","bs","GET_RANDOM_VALUES_SUPPORTED","ERR_INVALID_PASSWORD","ERR_INVALID_SIGNATURE","ERR_ABORT_CHECK_PASSWORD","getRandomValues","array","BLOCK_LENGTH","RAW_FORMAT","PBKDF2_ALGORITHM","HASH_ALGORITHM","HASH_FUNCTION","BASE_KEY_ALGORITHM","DERIVED_BITS_ALGORITHM","DERIVED_BITS_USAGE","SALT_LENGTH","KEY_LENGTH","SIGNATURE_LENGTH","COUNTER_DEFAULT_VALUE","CRYPTO_API_SUPPORTED","subtle","SUBTLE_API_SUPPORTED","codecBytes","Aes","CtrGladman","HmacSha1","IMPORT_KEY_SUPPORTED","DERIVE_BITS_SUPPORTED","AESDecryptionStream","rawPassword","signed","encryptionStrength","checkPasswordOnly","encodePassword","aesCrypto","strength","resolveReady","ready","createDecryptionKeys","subarray","append","ctr","pending","chunkToDecrypt","originalSignature","decryptedChunkArray","encryptedChunk","toBits","decryptedChunk","fromBits","indexSignature","AESEncryptionStream","preamble","createEncryptionKeys","encryptedChunkArray","concat","paddingStart","paddingEnd","verifySignature","inputLength","expand","inputChunk","outputChunk","decrypt","passwordVerificationKey","createKeys","passwordVerification","encrypt","baseKey","importKey","derivedBits","deriveBits","compositeKey","authentication","format","algorithm","extractable","keyUsages","leftArray","rightArray","inputArray","begin","HEADER_LENGTH","ZipCryptoDecryptionStream","zipCrypto","decryptedHeader","ZipCryptoEncryptionStream","target","getByte","updateKeys","keys","byte","key0","key1","key2","getInt32","getInt8","temp","number","ERR_INVALID_UNCOMPRESSED_SIZE","FORMAT_DEFLATE_RAW","FORMAT_DEFLATE64_RAW","DeflateStream","encrypted","crc32Stream","encryptionStream","readable","pipeThrough","pipeThroughCommpressionStream","setReadable","InflateStream","deflate64","decryptionStream","dataViewSignature","CompressionStreamNative","Stream","error","transformStream","MESSAGE_EVENT_TYPE","MESSAGE_START","MESSAGE_PULL","MESSAGE_DATA","MESSAGE_ACK_DATA","MESSAGE_CLOSE","CODEC_DEFLATE","CODEC_INFLATE","CodecStream","codecType","inputSize","inputSizeStream","outputSizeStream","ChunkStream","pendingChunk","transform","newChunk","WEB_WORKERS_SUPPORTED","initModule","configureWorker","initModuleFunction","CodecWorker","workerData","writable","streamOptions","transferStreams","onTaskFinished","signal","ProgressWatcherStream","worker","busy","resolveTerminated","createWebWorkerInterface","createWorkerInterface","onstart","onprogress","onend","chunkOffset","callHandler","handler","parameters","runWorker","getWebWorker","runWebWorker","codecStream","outputSize","resolveResult","rejectResult","closed","watchClosedStream","streamsTransferred","sendMessage","resultValue","writableSource","resolveStreamClosed","writer","reason","transferStreamsSupported","url","workerOptions","scriptUrl","event","onMessage","message","transferables","messageId","stack","responseError","close","pool","pendingRequests","indexWorker","streamCopy","getWorker","clearTerminateTimeout","terminateWorker","terminateTimeout","ERR_ITERATOR_COMPLETED_TOO_SOON","DEFAULT_CHUNK_SIZE","PROPERTY_NAME_WRITABLE","Reader","diskNumberStart","dataSize","readUint8Array","BlobReader","blob","offsetEnd","Uint8ArrayReader","SplitDataReader","readers","diskReader","indexDiskReader","diskNumber","currentDiskNumber","currentReaderOffset","currentReader","currentReaderSize","chunkLength","firstPart","secondPart","SplitDataWriter","writerGenerator","maxSize","diskSourceWriter","diskWritable","diskWriter","availableSize","writeChunk","closeDisk","initStream","GenericReader","GenericWriter","initSize","CP437","VALID_CP437","decodeCP437","stringValue","indexCharacter","decodeText","PROPERTY_NAME_FILENAME","PROPERTY_NAME_RAW_FILENAME","PROPERTY_NAME_COMMENT","PROPERTY_NAME_RAW_COMMENT","PROPERTY_NAME_UNCOMPRESSED_SIZE","PROPERTY_NAME_COMPRESSED_SIZE","PROPERTY_NAME_OFFSET","PROPERTY_NAME_DISK_NUMBER_START","PROPERTY_NAME_LAST_MODIFICATION_DATE","PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE","PROPERTY_NAME_LAST_ACCESS_DATE","PROPERTY_NAME_RAW_LAST_ACCESS_DATE","PROPERTY_NAME_CREATION_DATE","PROPERTY_NAME_RAW_CREATION_DATE","PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTES","PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTES","PROPERTY_NAME_MSDOS_ATTRIBUTES_RAW","PROPERTY_NAME_MSDOS_ATTRIBUTES","PROPERTY_NAME_MS_DOS_COMPATIBLE","PROPERTY_NAME_ZIP64","PROPERTY_NAME_ENCRYPTED","PROPERTY_NAME_VERSION","PROPERTY_NAME_VERSION_MADE_BY","PROPERTY_NAME_ZIPCRYPTO","PROPERTY_NAME_DIRECTORY","PROPERTY_NAME_EXECUTABLE","PROPERTY_NAME_COMPRESSION_METHOD","PROPERTY_NAME_SIGNATURE","PROPERTY_NAME_EXTRA_FIELD","PROPERTY_NAME_EXTRA_FIELD_INFOZIP","PROPERTY_NAME_EXTRA_FIELD_UNIX","PROPERTY_NAME_UID","PROPERTY_NAME_GID","PROPERTY_NAME_UNIX_MODE","PROPERTY_NAME_SETUID","PROPERTY_NAME_SETGID","PROPERTY_NAME_STICKY","PROPERTY_NAME_BITFLAG","PROPERTY_NAME_FILENAME_UTF8","PROPERTY_NAME_COMMENT_UTF8","PROPERTY_NAME_RAW_EXTRA_FIELD","PROPERTY_NAME_EXTRA_FIELD_ZIP64","PROPERTY_NAME_EXTRA_FIELD_UNICODE_PATH","PROPERTY_NAME_EXTRA_FIELD_UNICODE_COMMENT","PROPERTY_NAME_EXTRA_FIELD_AES","PROPERTY_NAME_EXTRA_FIELD_NTFS","PROPERTY_NAME_EXTRA_FIELD_EXTENDED_TIMESTAMP","PROPERTY_NAMES","Entry","OPTION_FILENAME_ENCODING","OPTION_COMMENT_ENCODING","OPTION_DECODE_TEXT","OPTION_EXTRACT_PREPENDED_DATA","OPTION_EXTRACT_APPENDED_DATA","OPTION_PASSWORD","OPTION_RAW_PASSWORD","OPTION_PASS_THROUGH","OPTION_SIGNAL","OPTION_CHECK_PASSWORD_ONLY","OPTION_CHECK_OVERLAPPING_ENTRY_ONLY","OPTION_CHECK_OVERLAPPING_ENTRY","OPTION_CHECK_SIGNATURE","OPTION_USE_WEB_WORKERS","OPTION_USE_COMPRESSION_STREAM","OPTION_TRANSFER_STREAMS","OPTION_PREVENT_CLOSE","ERR_BAD_FORMAT","ERR_EOCDR_NOT_FOUND","ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND","ERR_CENTRAL_DIRECTORY_NOT_FOUND","ERR_LOCAL_FILE_HEADER_NOT_FOUND","ERR_EXTRAFIELD_ZIP64_NOT_FOUND","ERR_ENCRYPTED","ERR_UNSUPPORTED_ENCRYPTION","ERR_UNSUPPORTED_COMPRESSION","ERR_SPLIT_ZIP_FILE","ERR_OVERLAPPING_ENTRY","CHARSET_UTF8","PROPERTY_NAME_UTF8_SUFFIX","CHARSET_CP437","ZIP64_PROPERTIES","ZIP64_EXTRACTION","getUint32","getBigUint64","ZipReader","zipReader","endOfDirectoryInfo","seekSignature","signatureArray","signatureView","getDataView","endOfDirectoryView","directoryDataLength","directoryDataOffset","commentOffset","commentLength","getUint16","appendedDataOffset","lastDiskNumber","expectedLastDiskNumber","filesLength","prependedDataLength","endOfDirectoryLocatorArray","endOfDirectoryLocatorView","endOfDirectoryArray","expectedDirectoryDataOffset","originalDirectoryDataOffset","directoryArray","directoryView","expectedDirectoryDataLength","filenameEncoding","getOptionValue","commentEncoding","indexFile","fileEntry","ZipEntry","readCommonHeader","languageEncodingFlag","filenameOffset","extraFieldOffset","versionMadeBy","msDosCompatible","unixCompatible","rawFilename","rawComment","filenameUTF8","commentUTF8","externalFileAttributes","msdosAttributesRaw","msdosAttributes","offsetFileEntry","decode","rawFilenameEncoding","rawCommentEncoding","comment","readCommonFooter","unixExternalUpper","setuid","setgid","sticky","executable","modeIsDir","upperIsDir","entry","extractPrependedData","extractAppendedData","entries","readRanges","zipEntry","extraFieldAES","extraFieldZip64","compressionMethod","bitFlag","rawLastModDate","uncompressedSize","dataDescriptor","localDirectory","dataArray","passThrough","extraFieldLength","filenameLength","lastAccessDate","creationDate","checkOverlappingEntry","checkOverlappingEntryOnly","detectOverlappingEntry","directory","rawBitFlag","getDate","rawExtraField","extraField","rawExtraFieldView","offsetExtraField","readExtraFieldZip64","extraFieldUnicodePath","readExtraFieldUnicode","extraFieldUnicodeComment","readExtraFieldAES","extraFieldNTFS","readExtraFieldNTFS","extraFieldUnix","readExtraFieldUnix","extraFieldInfoZip","extraFieldExtendedTimestamp","readExtraFieldExtendedTimestamp","extraFieldUSDZ","extraFieldView","missingProperties","indexMissingProperty","extraction","extraFieldUnicode","rawPropertyName","getUint8","tag1Data","tagValue","attributeSize","tag1View","rawLastAccessDate","rawCreationDate","lastModDate","getDateNTFS","extraFieldData","isInfoZip","uidSize","uidBytes","uid","unpackUnixId","gidSize","gidBytes","gid","unixMode","timeProperties","timeRawProperties","indexProperty","time","diskOffset","indexReader","dataDescriptorLength","dataDescriptorArray","readSignature","readCompressedSize","readUncompressedSize","range","otherRange","minimumBytes","maximumLength","setUint32","maximumBytes","seek","indexByte","timeRaw","date","A","g","B","E","I","C","Q","Y","D","wasm","malloc","free","memory","setWasmExports","wasmAPI","_make","isCompress","outBufferSize","inBufferSize","heap","process","last_consumed","scratch","toRead","prod","consumed","produced","initializedModule","uri","arrayBufferFromDataURI","wasmInstance","dataURI","base64","binary","modulePromise","configureZlibModule","mimeTypes","subtype","indexMimeType","configureWebWorker","ZipFileParser","vfs","zipFileContent","zipEntries","wadEntries","lFileName","dataEntries","SelectFilesModal","onFilesLoaded","heading","content","hints","btn","buffers","urlFileName","zipFileLength","hintWadFiles","wadContainer","cueBinFilesPanel","cueBinFilesProgress","cueBinFilesForm","cueFile","allFiles","isoFilesPanel","isoFilesProgress","isoFilesForm","isoFileBuffer","wadFilesForm","cabFilesPanel","cabFilesProgress","cabFilesForm","cabHeader","cabVolume","xhr","ObjectListEntryCfg","WadParser","textDecoder","numberOfEntries","lEntryNames","bufferStart","entryIndex","fileLength","fileStartOffset","map","row","objectList","currentObject","objectStartMatch","drivingMatch","split","EncodingHelper","encoded","encodeChar","GameFilesLoader","loadingLayer","HTML_GAME_CONTAINER","vfsFileNames","getSpriteContext","canvas","contextAttributes","context","createCanvas","width","height","createContext","createDummyContext","y","createDummyImgData","px","py","setPixel","imgData","getPixel","imgDataToCanvas","AnimationFrame","readbackCanvas","onRedraw","cancelAnimationFrameSafe","scaleX","scaleY","canvasX","canvasY","AbstractLayer","eventType","listener","zIndex","ScreenLayer","layerName","idealHeight","clientX","clientY","clientRect","ScaledLayer","cx","cy","InfoMessagesCfg","InfoMessagesEntryConfig","cfgValue","TextInfoMessageCfg","TextInfoMessageEntryCfg","BubblesCfg","BaseButtonCfg","ButtonCfg","InfoButtonCfg","buttonImageFilename","IconPanelBackButtonCfg","ButtonsCfg","ButtonRadarCfg","ButtonCrystalSideBarCfg","ButtonTopCfg","ButtonInformationCfg","ButtonPriorityListCfg","ButtonCameraControlCfg","ButtonInfoDockCfg","Rect","DialogCfg","VehicleEntityStats","BuildingEntityStats","MonsterEntityStats","PilotStats","RockMonsterStats","SmallSpiderStats","BatStats","TinyRMStats","TinyIMStats","SlugStats","LavaMonsterStats","IceMonsterStats","HoverboardStats","SmallHeliStats","SmallMlpStats","SmallCatStats","SmallDiggerStats","SmallTruckStats","BulldozerStats","WalkerDiggerStats","LargeDiggerStats","LargeCatStats","LargeHeliStats","LargeMlpStats","BarracksStats","PowerStationStats","OreRefineryStats","TeleportPadStats","TeleportBigStats","DocksStats","ToolStationStats","GunStationStats","GeodomeStats","UpgradeStats","PowerCrystalStats","ProcessedOreStats","OreStats","BoulderStats","PusherStats","FreezerStats","LaserShotStats","ElectricFenceStats","PathStats","GameStatsCfg","PRIORITY_IDENTIFIER","SaveGamePreferences","SaveGameManager","preferences","saveGames","SaveGame","_","screenshot","img","levelNameList","levelName","LevelEntryCfg","SaveGameLevel","SaveGameRaider","score","previousAttempt","levelScore","matched","other","trainings","EntityType","getEntityTypeByName","getMonsterEntityTypeByName","ObjectiveImageCfg","prio","LevelPrioritiesEntryConfig","valReward","LevelRewardConfig","GameConfig","levelEntryCfg","levelLink","enabled","LevelRewardImportanceConfig","LevelRewardQuotaConfig","MainCfg","rectVal","MenuCycleItemCfg","MenuLabelItemCfg","MenuSliderItemCfg","MenuEntryCfg","menuImgVal","MenuEntryOverlayCfg","OverwriteCfg","GameMenuCfg","LevelTextCfg","MenuCfg","SaveImageCfg","SaveTextCfg","MenuPanelCfg","PanelCfg","PanelsCfg","PanelRotationControlCfg","PanelRotationControlImageCfg","PriorityButtonListCfg","PriorityButtonCfg","tooltipText","tooltipSfx","PrioritiesImagePositionsCfg","PriorityPositionsEntry","RewardCfg","RewardFontsCfg","RewardButtonCfg","imgConf","RewardImageCfg","RewardTextCfg","cfgKey","nums","TexturesCfg","TextureEntryCfg","MiscObjectsCfg","RockFallStyle","ObjInfoCfg","HungerImageCfg","WeaponTypeListCfg","WeaponTypeCfg","entityType","SamplesCfg","cfgVal","sndPath","InterfaceSurroundImagesEntryCfg","AdvisorTypeCfg","AdvisorPositionCfg","PointersCfg","PointersEntryCfg","InterfaceImageEntryCfg","buttonType","hotkeyName","tooltip","tooltipDisabled","hotkeyMatch","InterfaceImagesCfg","InterfaceBuildImagesCfg","cfg","numStr","num","bubblesKey","entityTypeStr","dependency","depEntry","levelConf","tileSize","tooltipKey","surfaceTypeVal","keyVal","toolTypeIndex","abilityTypeIndex","LoadingLayer","text","imgBackground","imgProgress","imgLabel","rectProgress","loadX","loadY","loadingBarWidth","FFMessageType","getMessageID","messageID","ERROR_NOT_LOADED","ERROR_TERMINATED","FFmpeg","#worker","#resolves","#rejects","#logEventCallbacks","#progressEventCallbacks","#registerHandlers","id","#send","trans","classWorkerURL","args","timeout","ids","path","fsType","mountPoint","oldPath","newPath","FFFSType","ffmpegCore","ffmpegWasm","FFmpegWasm","ffmpeg","arg","videoFileName","videoFileData","outputFilePath","fromCache","returnCode","segmentNum","isEmpty","VideoLayer","videoFilePath","videoData","getFilename","mediaSource","sourceBuf","currentSegment","nextSegment","ScreenMaster","HTML_GAME_CANVAS_CONTAINER","closeButton","DebugHelper","copyToClipboard","clsName","onClickCallback","zIndexStart","nextLayer","eventClone","layer","aspectRatio","screenRatio","activeLayers","layers","maxLayerWidth","maxLayerHeight","link","RonFileParser","multiValues","values","isNum","lv","multiProperties","TypedWorkerFrontend","onResponseFromWorker","transfer","TypedWorkerThreaded","response","TypedWorkerFallback","_transfer","HEADER_TYPE","isHeaderType","maskColor","maskRed","maskGreen","maskBlue","maskAlpha","maskRedR","maskGreenR","maskBlueR","maskAlphaR","shiftedMaskRedL","shiftedMaskGreenL","shiftedMaskBlueL","shiftedMaskAlphaL","Compression","isCompression","BmpDecoder","bufferView","toRGBA","headerSize","compression","blue","green","red","quad","coloShift","xLen","padding","location","rgb","lowNibble","first4","last4","loc","processPixel","rgbIndex","BitmapWithPalette","bitmapData","decoder","alphaIndex","fallbackColor","alphaColor","grey","AbstractWorkerSystem","msg","workerRequestHash","BITMAP_WORKER_REQUEST_TYPE","BitmapSystem","decoded","AbstractWorkerPool","poolSize","setupMessage","broadcast","workerFrontend","wadWorker","openRequests","idleWorker","requests","nextMessage","BitmapWorkerPool","LevelObjectiveTextEntry","ObjectiveTextParser","txtFileText","currentLevel","UVData","LWOUVParser","fileIndex","numOfMats","matName","mapName","numOfCoords","tupleLine","uvIndex","uvLength","uvLine","nextLine","tupleLength","MSVCDecoder","videoFormat","previousFrame","chunkReader","byteA","byteB","blockRowLen","blockColHeight","blockIndex","colorA","quad1A","quad1B","quad2A","quad2B","quad3A","quad3B","quad4A","quad4B","blockColors","colorB","blockColor","imageData","blockX","blockY","targetFrame","numBlocks","color","AVIVideoStream","streamIndex","streamHeader","WAVE_FORMAT_MSADPCM","AVIReader","chunkType","nextOffset","AVIParser","expectedListType","listType","item","ADPCMAudioDecoder","audioFormat","channels","wSamplesPerBlock","coefficient1","coefficient2","delta","sample1","sample2","predictor","channel","nibble","expanded","AVIAudioStream","magic","fileType","headerList","headerItem","aviReader","streamHeaderItem","streamFormatItem","streamDataItem","streamIndexStr","SceneMesh","Mesh","geometry","material","elapsedMs","SequenceTextureMaterial","MeshPhongMaterial","clone","textures","addedSeqNum","opacity","LUMINOUS_BIT","OUTLINE_BIT","SMOOTHING_BIT","COLORHIGHLIGHTS_BIT","COLORFILTER_BIT","OPAQUEEDGE_BIT","TRANSPARENTEDGE_BIT","SHARPTERMINATOR_BIT","DOUBLESIDED_BIT","ADDITIVE_BIT","SHADOWALPHA_BIT","XAXIS_BIT","YAXIS_BIT","ZAXIS_BIT","WORLDCOORDS_BIT","NEGATIVEIMAGE_BIT","PIXELBLENDING_BIT","ANTIALIASING_BIT","ReflectionMode","isReflectionMode","LWOBParser","textureLoader","uvData","LWOBFileReader","BufferGeometry","fileSize","readerByteLength","cursor","BufferAttribute","vertices","uvs","indices","numIndices","faceIndices","materialIndex","faceUvs","addVert","vertIndex","faceUvIndex","chunkEnd","materialName","textureFlags","textureSize","Vector3","textureCenter","sequenceOffset","sequenceFlags","sequenceLoopLength","reflectionMode","textureColorArray","subChunkType","subChunkSize","colorArray","lastColorByte","DoubleSide","AdditiveBlending","refractiveIndex","edgeTransparencyThreshold","maxSmoothAngle","luminosity","diffuse","specular","glossiness","reflection","transparency","vLuminosity","vDiffuse","vSpecular","textureTypeName","lastTextureColorByte","textureValue","textureFilepath","lTextureFilename","horizontalWrappingMode","verticalWrappingMode","antialiasingStrength","reflectionModeValue","sceneBackgroundFilepath","textureName","ClampToEdgeWrapping","RepeatWrapping","MirroredRepeatWrapping","center","group","vertexIndex","z","LWOBTextureLoader","Loader","textureFilename","onLoad","charBuffer","currentChar","AnimatedCursorData","cursorImages","AnimatedCursor","cursorUrls","targetElement","clearIntervalSafe","CursorManager","dataUrls","clearTimeoutSafe","ResourceManager","resourceName","imageName","blankPointerImageData","loadingCursors","cursorEntry","cursorFileName","animatedCursorData","cursorCanvas","cursorImageName","cursorImage","basename","lBasename","meshPath","texture","rotation","rotatedTexture","Texture","SRGBColorSpace","NearestFilter","lwoFilepath","ResourceManagerTextureLoader","lwoData","lwoBuffer","sharedLwoFilepath","sharedLwoBuffer","getPath","uvFilepath","lwscFilepath","lwscData","aeName","aeFilename","animData","hasSequence","alphaIndexMatch","FlhParser","interFrameMode","frameIndex","chunkStart","numChunks","seg","repeat","numLines","linesDone","packCount","opcode","opType","firstFrame","EventKey","PriorityEntry","Observer","EventBroker","BaseEvent","JobCreateEvent","job","RequestedRaidersChanged","numRequested","RequestedVehiclesChanged","vehicle","MaterialAmountChanged","GameState","UsedCrystalsChanged","CavernDiscovered","OreFoundEvent","ToggleAlarmEvent","alarmState","DynamiteExplosionEvent","position","GameResultEvent","RestartGameEvent","LevelSelectedEvent","AirLevelChanged","airLevel","MonsterEmergeEvent","surface","NerpMessageEvent","messageTimeoutMs","arrowDisabled","UpdatePriorities","priorityList","NerpSuppressArrowEvent","suppressArrow","ShootLaserEvent","entity","MonsterLaserHitEvent","weaponCfg","WorldLocationEvent","PriorityList","priorities","element","priorityIdentifier","targetIndex","currentIndex","priority","paramName","fallback","cyrb128","seed","h1","h2","h3","h4","sfc32","SeededRandomGenerator","hashed","maximum","randomIndex","PRNG","masterSeed","master","terrainSeed","movementSeed","damageSeed","animationSeed","nerpSeed","GAME_RESULT_STATE","GameResult","levelFullName","rewardConfig","numBuildings","numRaiders","numMaxAirRaiders","gameTimeMs","quota","importance","randomLevelConf","AbstractGameComponent","AbstractGameSystem","ComponentContainer","component","componentClass","componentClasses","cls","ECS","container","entities","system","dirtySystemEntities","PositionComponent","worldPos","Vector2","SurfaceType","typeNum","SURFACE_TYPE","AnimatedSceneEntityComponent","sceneEntity","FlockComponent","defaults","HealthBarSprite","Sprite","yOffset","scale","canBeShownPermanently","SpriteMaterial","barWidth","barHeight","barBorderSize","sizeFactor","posY","CanvasTexture","targetStatus","nextStatus","redPosX","HealthFontSprite","startScale","healthNumber","numImg","totalWidth","letter","HealthComponent","triggerAlarm","rockFallDamage","nextHealth","MAP_MARKER_TYPE","MAP_MARKER_CHANGE","MapMarkerComponent","mapMarkerType","BARRIER_ACTIVITY","DYNAMITE_ACTIVITY","BUILDING_ACTIVITY","ANIM_ENTITY_ACTIVITY","RAIDER_ACTIVITY","ROCK_MONSTER_ACTIVITY","SLUG_ACTIVITY","SceneAudioMesh","SoundManager","sfxVolume","sfxName","PositionalAudio","hiddenObj","SceneEntity","Group","AnimationGroup","lwsFilepath","onAnimationDone","durationTimeoutMs","onAnimationTrigger","lowerName","mesh","opacityTracks","NumberKeyframeTrack","clip","AnimationClip","mixer","AnimationMixer","animationAction","LoopOnce","deltaTimeInSeconds","AnimationQualityGroup","animEntityData","carryRubbleWorkaround","AnimatedSceneEntity","animatedData","driver","animationName","animatedGroup","wheelParentMesh","wheelMesh","camJoints","multiplier","upgradeLevel","upgrade","upgradeMesh","upgradeFilename","upgradeAnimData","carryJoint","worldTarget","pivotWorldPos","diff","angleToTarget","yPivot","parentDir","parentAngle","angle","sceneMgr","worldPosition","headingRad","MovableStatsComponent","stats","isOnPath","isOnRubble","routeSpeed","pathCoef","rubbleCoef","RandomMoveComponent","maxIdleTimer","MonsterStatsComponent","LastWillComponent","onDeath","ROCK_MONSTER_BEHAVIOR_STATE","RockMonsterBehaviorComponent","WorldTargetComponent","radiusSq","PathTarget","targetLocation","building","site","focusPoint","RAIDER_TOOL","RaiderTools","tool","RAIDER_TRAINING","RaiderTrainings","training","JOB_STATE","Job","fulfiller","PickSphereMesh","SceneSelectionComponent","parentObj","userData","pickSphereRadius","SphereGeometry","MeshBasicMaterial","SelectionFrameSprite","pickSphereDiameter","hexColor","ctx","selectionFrameTexture","SelectionFrameComponent","pickSphereHeightOffset","pickSphereCenter","selectionFrame","MapSurfaceRect","VEHICLE_UPGRADE","VehicleUpgrades","upgrades","SELECT_PANEL_TYPE","SelectionChanged","entityMgr","buildingEntity","buildingHealthComponent","DeselectAll","BuildingsChangedEvent","current","minLevel","RaidersAmountChangedEvent","RaiderTrainingCompleteEvent","VehicleUpgradeCompleteEvent","InitRadarMap","mapFocus","terrain","UpdateRadarTerrain","UpdateRadarSurface","UpdateRadarEntityEvent","change","radius","UpdateRadarCamera","cameraRect","ShowMissionBriefingEvent","isShowing","ShowMissionAdvisorEvent","showAdvisor","ShowGameResultEvent","ShowOptionsEvent","SetSpaceToContinueEvent","FollowerSetCanvasEvent","FollowerSetLookAtEvent","SelectionFrameChangeEvent","rect","GuiButtonBlinkEvent","blinking","GuiBackButtonClicked","GuiBuildButtonClicked","GuiGetToolButtonClicked","GuiTrainRaiderButtonClicked","AdvanceAfterRewardsEvent","RAIDER_SCARE_RANGE","RaiderScareComponent","scareRadius","CarryJob","carryItem","carriedEntityType","oreSites","oreRefineries","crystalSites","powerStations","sites","targetCenter","pickupRadius","buildingType","droppedItem","targetBuilding","MaterialSpawner","raider","pickSphere","targetSurface","MaterialEntity","worldMgr","targetSite","positionComponent","BeamUpComponent","BitmapFontData","fontImageData","charHeight","cols","rows","maxCharWidth","isLimiterColor","getActualCharacterWidth","actualWidth","startX","startY","BitmapFont","maxWidth","autoCenter","rowX","rowY","letterX","letterImgData","rowText","rowWidth","wordWidth","charCode","letterImg","BITMAP_FONT_WORKER_REQUEST_TYPE","BitmapFontSystem","font","textImageData","BitmapFontWorkerPool","fontName","fontData","TooltipSpriteBuilder","energy","tooltipTextImages","numToolSlots","tools","tooltipTextImage","toolIcons","trainingIcons","crystals","ores","bricks","crystalsTextImage","oresTextImage","bricksTextImage","buildingMissingOreForUpgrade","oreImg","rowsThenCols","contentWidth","contentHeight","posX","maxHeight","ChangeTooltip","timeoutText","timeoutSfx","ForceRedrawTooltip","getTooltipTextImg","HideTooltip","PlaySoundEvent","sample","isVoice","SelectBuildMode","PickTool","CreatePowerPath","PlaceFence","MakeRubble","CreateClearRubbleJob","UpgradeBuilding","BeamUpBuilding","BeamUpFence","ChangeBuildingPowerState","CreateDrillJob","CreateReinforceJob","CreateDynamiteJob","CancelSurfaceJobs","RaiderEat","RaiderDrop","RaiderUpgrade","RaiderBeamUp","TrainRaider","CancelBuilding","VehicleCallMan","VehicleBeamUp","VehicleDriverGetOut","VehicleUnload","VehicleLoad","CameraControl","RepairLava","ChangePreferences","UpgradeVehicle","RepairBuilding","DropBirdScarer","CAMERA_VIEW_MODE","ChangeCameraEvent","viewMode","TooltipComponent","sfxKey","getTextImg","barrierLocation","floorPosition","oreMesh","brickMesh","energyCrystalMesh","depletedCrystalMesh","electricFenceMesh","statsFence","healthComponent","energyCallback","objectKey","objectName","SLUG_BEHAVIOR_STATE","SlugBehaviorComponent","EntityPushedComponent","HeadingComponent","MonsterSpawner","spiderStats","batStats","flockEntities","flockSceneEntity","speedModifier","components","numCrystalsEaten","NerpRunner","script","iconCLickedEntry","iconName","increased","iconConfig","itemKey","iconClickedEntry","register","regNum","timer","tutoBlockId","allowMessages","typeName","slugHole","slug","behaviorComponent","sampleLengthMultiplier","timeAddedAfterSample","timeForNoSample","recordedEntity","monster","messageNumber","sampleLength","sampleTimeoutMs","tutoBlocks","targetBlock","surfaceType","numClicks","tutoBlock","numCrystals","numOre","recordedIndex","speed","unknown","numOfCrystals","crystal","zoomLevel","targetZoom","methodName","methodArgs","setRegisterMatch","addRegisterMatch","subRegisterMatch","getRegisterMatch","setTimerMatch","getTimerMatch","flashIconMatch","setIconClickedMatch","getIconClickedMatch","lMethodName","memberName","statement","AudioListener","audio","AudioContext","soundName","sound","audioId","DEG2RAD","clamp","degToRad","degrees","denormalize","normalize","Quaternion","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","cos","sqrSin","sin","tDir","quaternion","euler","update","c1","c3","s3","axis","halfAngle","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","vFrom","vTo","step","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","qa","theta1","theta2","r1","r2","attribute","scalar","_quaternion","vx","vy","vz","qx","qy","qz","qw","tx","ty","tz","camera","minVal","maxVal","alpha","v1","v2","ax","ay","az","bx","by","bz","denominator","planeNormal","_vector","normal","theta","dx","dy","dz","phi","sinPhiRadius","sy","sz","FloatType","StaticDrawUsage","_vector2","_id","itemSize","normalized","index1","index2","WALL_TYPE","SurfaceGeometry","wallType","topLeft","topRight","bottomRight","bottomLeft","uvOffset","topLeftVertex","topRightVertex","bottomRightVertex","bottomLeftVertex","normals","addFaceAndNormals","uvIndexes","uv","vertexUvs","topLeftHigh","bottomRightHigh","topRightHigh","bottomLeftHigh","positionAttribute","normalAttribute","uvAttribute","bufferAttribute","vectors","dimensions","SurfaceVertex","high","seamProgress","SurfaceMesh","SurfaceMeshLow","hex","textureRotation","proMeshFilepath","adjacent","wallAngle","rotationIndex","geo","topLeftOffset","bottomLeftOffset","bottomRightOffset","topRightOffset","geoPos","frontLeft","backLeft","frontRight","backRight","nearThreshold","nearTopLeft","nearBottomLeft","nearBottomRight","nearTopRight","nearOthers","avgFrontLeft","avgBackLeft","avgFrontRight","point","vecList","avgVec","SurfaceMeshPro","recursive","RoofMesh","BackSide","mergeGeometries","geometries","useGroups","isIndexed","attributesUsed","morphAttributesUsed","attributes","morphAttributes","morphTargetsRelative","mergedGeometry","attributesCount","indexOffset","mergedIndex","mergedAttribute","mergeAttributes","numMorphTargets","morphAttributesToMerge","mergedMorphAttribute","TypedArray","gpuType","arrayLength","tupleOffset","AssetLoader","assetName","optional","ImageAssetLoader","bitmap","TextureAssetLoader","AlphaImageAssetLoader","AlphaTranslucentImageAssetLoader","FontAssetLoader","NerpScriptAssetLoader","ObjectiveTextsAssetLoader","objectives","MapAssetLoader","ObjectListAssetLoader","SoundAssetLoader","sndKeys","errors","e2","sndKey","LWOAssetLoader","FlhAssetLoader","flhContent","images","UVAssetLoader","uvContent","AVIAssetLoader","CreditsAssetLoader","ProMeshTextureLoader","assetRegistry","flipY","theme","_textureFilename","textureFilePaths","ProMeshLoader","meshFilePathA","meshFilePathB","meshFileContentA","meshFileContentB","proMeshTextureLoaderA","lwoDataA","proMeshTextureLoaderB","lwoDataB","proMesh","geoA","geoB","AnimEntityData","AnimEntityUpgradeData","lNameType","lUpgradeFilepath","parentNullName","parentNullIndex","AnimEntityParser","cfgRoot","rootKey","cameraName","iGet","polyBodies","polyKey","activityName","keyName","act","lActivityName","isLws","transcoef","looping","trigger","levelKey","upgradesCfg","upgradesByLevel","upgradeTypeName","upgradeEntry","upgradeTypeEntry","LWSCData","LWSCObject","LWSCParser","filePath","sceneFileVersion","lineParts","positionTrack","rotationTrack","scaleTrack","invPivotMat","Matrix4","positionMat","rotationMat","scaleMat","calcMat","newPosition","newRotation","newScale","minTimesLength","nameParts","sfxFrameStart","sfxFrameEnd","times","sfxNames","StringKeyframeTrack","lenInfos","lenFrames","relPos","relRot","relScale","infos","keyframeIndex","timeFromIndex","pitch","bank","Euler","VectorKeyframeTrack","QuaternionKeyframeTrack","shadowBits","selfShadow","castShadow","receiveShadow","opacities","numOfInformationChannels","numOfKeyframes","pivotElements","NerpMsgParser","wadData","sndMatch","txtMatch","AssetRegistry","gameConfig","assetPath","bmpName","nerpMessages","uType","bType","adv","mType","yieldToMainThread","vType","miscObjects","shape","textureFolder","themes","imgPath","basePath","aeFilepath","aeSharedFilepath","lwsSharedFilepath","lwoSharedFilepath","aeFile","wheelMeshName","polyType","lwsPath","folderPath","menuCfg","menuImageAlpha","fontCharHeight","useInterFrameMode","overlay","loader","UiElementState","hovered","disabled","hidden","MainMenuBaseItem","actionName","MOUSE_BUTTON","POINTER_EVENT","KEY_EVENT","GamePointerEvent","eventEnum","pointerType","lPointerType","button","MainMenuIconButton","MainMenuLabelButton","textImages","GameWheelEvent","FlicAnimOverlay","animationFrame","flicImages","MainMenuLayer","titleImage","flic","gameEvent","needsRedraw","deltaY","nextScrollSpeedY","forceRelease","hasHovered","absY","scrollYBefore","MainMenuLevelButton","onlyTutorials","imgActive","imgInactive","imgCross","onShowTooltipCallback","MainMenuPanel","readbackContext","MainMenuWindow","area","textImage","totalHeight","LevelSelectLayer","levelTextCfg","levelTextWindow","levelButton","levelNum","tutPrefix","swapped","MainMenuLoadSaveButton","loading","btnNum","buttonLabel","overlayCfg","LoadSaveLayer","saveImage","percent","slotText","screenshots","MainMenuCreditsLayer","fontHeight","bitmapLines","creditsBackAVI","videoStreams","lineImage","BaseRenderer","redrawMs","scene","WebGLRenderer","FullScreenShader","ShaderMaterial","OrthographicCamera","Float32BufferAttribute","renderer","TransparentBackgroundShader","TransparentBackgroundRenderer","WebGLRenderTarget","DepthTexture","uniforms","UniformsUtils","RockWipeLayer","aspect","PerspectiveCamera","Scene","AmbientLight","light","DirectionalLight","NerpScript","NerpStatement","NerpNumber","NerpLabel","NerpJump","nerpRunner","jumpCounter","NerpInvocation","functionName","argValues","NerpConditional","check","truthy","NerpComparator","comparator","right","NerpParser","nerpScriptFile","nerpScriptContent","includeName","includedScript","firstLine","macroLines","mLine","macroLine","macroCall","labelMatch","labelName","macrosByName","macro","expression","opSplit","brackets","spaceSplit","jumpMatch","LevelLoader","objectiveTextCfg","terrainMap","predugMap","textureSet","rockFallStyle","mapFileName","MainMenuScreen","screenMaster","oldIndex","maxDurationMs","allLevels","unlockedLevels","incompleteLevels","RaiderJob","MoveJob","GetToolJob","toolstation","pathSurface","walkableSurface","UpgradeVehicleJob","costIndex","upgradeCostOre","upgradeCostBrick","upgradeAnimationSpeed","GameSelection","selection","added","selectionFrameComponent","before","after","deselected","pathToToolstation","updateSafe","updatable","EntityManager","buildingTypes","bt","buildings","closest","minDist","bPos","statsKey","primary","primaryPath","opposite","targets","minX","minZ","maxX","maxZ","numRaidersUndiscovered","listing","onRemove","discovered","healthBarSprite","healthFontSprite","position2d","rangeSq","vPos","isTeamMember","unassigned","ManVehicleJob","hopOnSpot","getInRadius","RaiderInfoComponent","BubbleSprite","hungerLevel","EatJob","TrainRaiderJob","UpgradeRaiderJob","bubbleTextureName","BuildingType","teleportedEntityTypes","upgradeName","OxygenComponent","oxygenCoefficient","ScannerComponent","TeleportComponent","pathSurfaces","primaryPathSurface","waterPathSurface","LaserBeamTurretComponent","BuildingEntity","radHeading","disableTeleportIn","secondaryOffset","pathOffset","sceneSelectionComponent","quantity","barrierLocations","energized","stateChanged","scannerRange","changedCrystals","statsProperty","stat","BuildingSite","primarySurface","secondarySurface","secondaryPathSurface","closestToolstation","needed","assigned","neededType","byType","materials","RepairBuildingJob","GuiManager","cameraControls","fence","jumpTo","gameSpeedIndex","birdScarer","jointScale","EntityStep","stepLength","targetReached","MOVE_STATE","BulletComponent","bulletAnim","bulletType","SelectionNameSprite","spriteTexture","SelectionNameComponent","Raider","raiderName","idleAnim","raiderPosition2D","spider","spiderPosition2D","sceneEntityComponent","rocky","rockySceneEntity","rockyPosition2D","wakeRadius","currentPath","chanceToRestPerSecond","maxTurn","dir3d","targetWorld","currentSurface","pathMultiplier","rubbleMultiplier","carriesMultiplier","followUpJob","statsDrillName","unAssignFromSite","carriedEntity","workActivity","workplace","alarmTarget","moveState","targetComponents","attacks","attack","gunPos","targetPos","bulletEntity","positionAsPathTarget","carriedPositionComponent","VehicleEntity","aeNames","driverActivityStand","driverActivityRoute","health","dropCarried","spawnSurface","vehiclePosition2D","fulfillerPos","matNearby","carriedEntities","carried","driverScannerComponent","hopOffSpot","scannerComponent","carryType","walkableNeighbor","upgraded","nextUpgradeLevel","carriedItem","surfsToCheck","canPickupVehicle","vehicleSurface","canPickupMaterial","accessibleNeighbors","direction","targetedPosition","targetedSurface","unloadSurface","dropOffVehicle","unloadPosition","VehicleFactory","ObjectListLoader","disableStartTeleport","olEntry","olKey","vehicleKey","cameraOffset","cameraPos","randomPosition","infoComp","raiderSceneSelection","vehicleSceneSelection","_changeEvent","_startEvent","_endEvent","_ray","Ray","_plane","Plane","_TILT_LIMIT","MathUtils","_v","_twoPI","_STATE","_EPS","OrbitControls","Controls","object","domElement","MOUSE","TOUCH","Spherical","onPointerMove","onPointerDown","onPointerUp","onContextMenu","onMouseWheel","onKeyDown","onTouchStart","onTouchMove","onMouseDown","onMouseMove","interceptControlDown","interceptControlUp","deltaTime","zoomChanged","prevRadius","newRadius","radiusDelta","mouseBefore","prevZoom","mouseAfter","normalizedDelta","distance","objectMatrix","deltaX","targetDistance","dollyScale","needsUpdate","centerX","centerY","pointerId","newEvent","mouseAction","MapControls","CAMERA_ROTATION","BirdViewControls","pair","zoom","maxDist","e1","offsetTargetToCamera","moveTarget","nextCameraTargetPos","shakeDistanceTiles","shakeMultiplier","bump","locked","panSpeed","BuildPlacementMarkerMesh","posWithOffset","surfaceMesh","BuildPlacementMarker","marker","sdxv","sdzv","sdx","sdz","offsets","neededCrystals","neededBricks","neededOres","needsAnything","centerPrimary","barrierOffset","centerSecondary","ClearRubbleJob","surfaceRubblePositions","DrillJob","digPositions","surfaceDigPositions","surfaceCenter","fulfillerWorkRange","digPos","workPos","drillPerSecond","drillTime","ReinforceJob","EmergeComponent","emergeSpawnId","triggerSurface","emergeSurface","FallInComponent","maxTimerMs","FluidSurfaceComponent","tileX","tileY","CompleteSurfaceJob","placedItems","placed","targetSurfaceType","Surface","roofTexture","tooltipComponent","walls","caveFound","neighbor","floorNeighbor","grp","drillTimeSeconds","drillPosition","drillProgress","seamDropPosition","droppedOre","droppedCrystals","crumblePosition","wallNeighbors","randomWallNeighbor","neighborToRight","crumbleAngle","rockFallAnimName","nonWallNeighbor","numSpiders","hiddenInRubble","force","minSeamProgress","suffix","powerPath","proMeshSuffix","bottom","pathSum","digPosition","intersect","Raycaster","terrainHeight","oldSurfaceType","wasPath","items","itemsOnSite","pathTo","getHeap","BinaryHeap","astar","graph","heuristic","openHeap","closestNode","currentNode","neighbors","il","gScore","beenVisited","pos0","pos1","d1","d2","D2","Graph","gridIn","GridNode","grid","graphString","nodes","rowDebug","weight","fromNeighbor","scoreFunction","parentN","elemScore","child2N","child1N","swap","child1Score","child1","child2","TerrainPathStep","remainingStepLength","TerrainPathSegment","startLocation","startDir","targetDir","approxLength","nextP","p0","p1","p2","p3","fraction","vecLength","totalApproxLength","lengthOffset","turn","newPos","newDir","TerrainPath","locations","ConfiguredGraph","precision","PathFinder","surfaces","preferredTargetLocation","pathTarget","objects","lengthSq","objs","isPreferred","shortest","acc","preferred","o","gridStart","gridEnd","startTileX","startTileY","endTileX","endTileY","graphKey","pathKey","resultPath","startNode","endNode","startWeights","freshPath","weights","col","Terrain","worldX","worldZ","each","totalDiggables","totalCrystals","totalOres","fallInPosition","world","dy0","dy1","floorY","checked","toCheck","LavaErosionComponent","erosionLevel","addSmokeEffect","erosionSurfaceType","lwsFilename","TerrainLoader","surfaceTypeNum","predugLevel","PREDUG_MAP","pathMapLevel","PATH_MAP","currentCryOre","lavaErosionComponent","emergeValue","BirdViewCamera","r1x","r1y","r2x","r2y","startPoint","endPoint","tmpPoint","vecNear","vecTopLeft","vecTopRight","vecDownRight","vecDownLeft","vectemp1","vectemp2","vectemp3","deep","frustum","Frustum","planes","TorchLightCursor","Object3D","torchLight","PointLight","alarmLight","SpotLight","rotationRad","SceneRenderer","Pass","_camera","FullscreenTriangleGeometry","_geometry","FullScreenQuad","RenderPass","overrideMaterial","clearColor","clearAlpha","Color","writeBuffer","readBuffer","oldAutoClear","oldClearAlpha","oldOverrideMaterial","CopyShader","ShaderPass","shader","textureID","MaskPass","writeValue","clearValue","ClearMaskPass","EffectComposer","renderTarget","HalfFloatType","NoBlending","Clock","pass","passIndex","currentRenderTarget","maskActive","stencil","effectiveWidth","effectiveHeight","pixelRatio","OutputShader","OutputPass","RawShaderMaterial","ColorManagement","SRGBTransfer","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","AgXToneMapping","NeutralToneMapping","CustomToneMapping","GreenScaleShader","FollowerRenderer","ecs","lookAtPosition","off","LeveledAmbientLight","lightLevel","ObjectPointer","CameraFrustumUpdater","now","SceneManager","selectedEntityPosition","FogExp2","infoComponent","followerCanvas","selectedEntity","targetPosition","origin","lookVector","vecToSurf","loop","sprite","terrainCheckOrigin","terrainIntersectionPoint","minCameraPosY","centerPosition","groundPosition","remote","EatBarracksJob","Supervisor","availableJobs","barracks","unemployedRaider","unemployedVehicles","closestVehicle","closestVehicleDistance","pathToWorkplace","pathToJob","closestRaider","minDistance","closestToolRaider","minToolDistance","requiredTool","closestTrainingRaider","minTrainingDistance","closestTrainingArea","requiredTraining","pathToTrainingSite","raiderSurface","blockedSite","safeNeighbor","startSurface","rad","clearRubbleJob","MovementSystem","dirty","worldTargetComponent","statsComponent","entitySpeed","SceneEntityPositionSystem","SceneEntityHeadingSystem","headingComponent","RandomMoveBehaviorSystem","FlockBehaviorSystem","frameMult","flockComponent","avgDir","flockEntity","minDistLength","evasionDir","targetDist","targetDistLength","DamageSystem","explosion","inRangeSq","landslide","BeamUpSystem","beamUpComponent","OxygenSystem","coefSum","oxygenComponent","airDiff","nextAirLevel","MapMarkerUpdateSystem","mapMarkerComponent","EntityFrozenComponent","freezerTimeMs","BoulderComponent","targetEntity","targetBuildingType","targetLevel","ROCKY_GRAB_DISTANCE_SQ","ROCKY_GATHER_DISTANCE_SQ","ROCKY_BOULDER_THROW_DISTANCE_SQ","ROCKY_MELEE_ATTACK_DISTANCE_SQ","RockMonsterBehaviorSystem","laserDamage","pathFinder","drivingVehiclePositions","monsterTargetBuildings","rockyPos","targetWall","prevTargetComponent","vehicleInMeleeRange","raiderInGrabRange","targetCrystal","crystalPosition","crystalPathTarget","targetBuildingSurface","prevState","buildingPathTargets","closestBuilding","buildingComponents","boulderTexture","wallPathTargets","closestCrystal","vehicleComponents","prevScale","raiderPositionComponent","parentScale","FENCE_RANGE_SQ","ElectricFenceSystem","fenceProtectedSurfaces","studProtectedSurfaces","beamPos","short","energizedBuildingSurfaces","changed","activeSurface","studPositions","toAdd","possibleStud","longBeams","surfaceLeft","surfaceRight","beamHeading","shortBeams","fenceSurface","nextBeam","DeathSystem","RunPanicJob","runTarget","RaiderScareSystem","scareComponent","selectionChanged","raiderPos","scareNeighbors","SLUG_SUCK_DISTANCE_SQ","SLUG_ENTER_DISTANCE_SQ","SlugBehaviorSystem","scarerPositions","slugPos","energizedBuildings","randomTarget","scarerInRange","safePos","enterTargets","TerrainScannerSystem","scanned","BulletSystem","bulletComponent","targetStats","bulletPos","bulletLocation","entityFrozenComponent","pushTarget","BoulderSystem","boulderComponent","boulderExplode","boulderDamage","LavaErosionSystem","levelSelectedEvent","canStartNewErosion","erosionComponent","erosionDelayMs","PowerGrid","energyConsumer","energySources","addedToGrid","removedFromGrid","removed","EmergeSystem","busySurfaces","emergeSpawns","triggeredEmerges","emergeComponent","spawn","spawnCenter","TeleportSystem","requestedChange","teleports","teleport","walkOutPos","spawnedVehicleType","teleportBuilding","FallInSystem","fallInComponent","FluidSurfaceSystem","wave","fluidComponent","indexToLoc","waveX","waveY","BeamMat","MeshStandardMaterial","isBlue","LaserBeamMesh","geoYBlue","PlaneGeometry","geoXBlue","blueMat","geoYWhite","geoXWhite","whiteMat","LaserShot","LaserShotSystem","turretComponent","closestToolstore","spawnPos","beamLength","rockyPickSpheres","rockyIntersection","soundParent","floorIntersection","laserDestroyTime","laserProgress","currentShots","WorldManager","elapsedGameTimeMs","GameKeyboardEvent","SelectionRaycaster","raycaster","SceneRaycaster","intersection","allowDoubleSelection","gameEntity","selectable","GameLayer","cursorTarget","doubleSelection","cursorTargetSurface","doubleSelect","selectedRaiders","manVehicleJob","closestTrainingSite","drillJob","clearJob","hasRaiderSelected","selectionCenter","cameraActive","screenPanOffset","BaseElement","child","inRect","oldState","Button","btnCfgPart","blinkingByDefault","btnCfg","numbers","Panel","panelCfg","movedIn","onDone","targetX","targetY","diffX","diffY","MapRendererWorkerRequestType","MapRendererWorkerRequestType2","MapRendererWorker","rectColor","rectSize","normalizedRectSize","geoScanContext","scanRadius","surfaceRectSize","surfaceRect","surfaceX","surfaceY","topMid","topDown","arrowTip","midLeft","mid","tipRight","shaftRight","shaftBottomRight","tipLeft","shaftLeft","shaftBottomLeft","MapRenderer","terrainSprite","entitySprite","monsterSprite","materialSprite","geoScanSprite","camSprite","msgInit","surfaceMap","requestId","MapView","parentPanel","ex","ez","FollowerView","RadarPanel","panelFillCfg","panelOverlayCfg","buttonsCfg","TextInfoMessage","infoImage","sfxSample","MessagePanel","textInfoMessageConfig","customMessageCfg","nextAirLevelWidth","nextPercent","critical","infoMessageCfg","arrowHidden","maxMessageWidth","textImageHeight","txtX","infoX","SideBarLabel","PanelCrystalSideBar","curX","curY","imgCrystal","DependencySpriteWorkerRequestType","DependencySpriteWorkerRequestType2","DependencySpriteSystem","upgradeNames","tooltipFont","plusSignImg","equalsSignImg","deps","dep","depImages","depImg","dependencySprite","minLevelImg","signImg","DependencySpriteWorkerPool","dependencies","depHash","dependencyImage","IconPanelButton","interfaceImageCfg","parentWidth","menuIndex","autoRedraw","targetState","IconSubPanel","numOfItems","onBackPanel","deselectAll","frameImgCfg","menuItem","BuildingPanel","interfaceBuildImage","GetToolPanel","interfaceImage","IconPanelButtonLabel","IconPanelToggleButton","menuItemOffCfg","menuItemOnCfg","targetToggleState","toggleStateChanged","SelectBuildingPanel","repairBuildingItem","powerSwitchItem","upgradeItem","deleteBuildingItem","SelectFencePanel","beamUpFence","SelectFloorPanel","pathItem","removeItem","placeFenceItem","SelectLavaErosionPanel","cancelBuilding","SelectRaiderPanel","feedItem","unloadItem","dropBirdScarer","firstPersonView","shoulderView","deleteRaiderItem","SelectRubblePanel","clearRubbleItem","SelectSitePanel","SelectVehicleEmptyPanel","manVehicleItem","deleteVehicleItem","SelectVehicleManedPanel","unloadVehicleItem","loadVehicleItem","leaveVehicleItem","SelectWallPanel","itemDrill","itemReinforce","itemDynamite","itemDeselect","TrainRaiderPanel","trainingItem","VehiclePanel","UpgradeVehiclePanel","ChangeCameraPanel","birdViewItem","shoulderViewItem","fpvViewItem","MainPanel","buildingPanel","smallVehiclePanel","largeVehiclePanel","selectBuildingPanel","trainRaiderPanel","getToolPanel","selectVehicleEmptyPanel","selectVehicleManedPanel","upgradeVehiclePanel","selectFencePanel","cameraViewPanel","teleportRaider","requestedRaiderLabel","buildingItem","smallVehicleItem","largeVehicleItem","childPanel","targetPanel","subPanel","isFloor","hasRubble","isSite","isLava","ToggleButton","updated","toggleState","TopPanel","InformationPanel","PriorityListPanel","cfgPos","buttonCfg","btnIndex","prioEntry","prioIndex","prioButton","InfoDockButton","infoMessagesEntryConfig","that","InfoDockPanel","infoMessagesConfig","informationPanel","eventTypeGone","infoDockButton","cur","relY","promises","GuiEvent","GuiHoverEvent","GuiPointerDownEvent","GuiPointerUpEvent","CameraControlPanel","panelRotationControlCfg","GuiBaseLayer","hit","GuiTopLeftLayer","GuiTopRightLayer","GuiBottomRightLayer","GuiBottomLeftLayer","BriefingPanelCfg","dialogCfg","BriefingPanel","dialogTitle","objectiveText","objectiveBackImgCfg","objectiveSfx","txt","paragraph","imgParagraph","MenuCycleItem","itemCfg","MenuLabelItem","parentCenterX","MenuSliderItem","leftBtn","rightBtn","dw","MenuLayer","MenuBasePanel","setupOptionsLayer","optionsLayer","onRepeatBriefing","gameSpeedSlider","volumeSfxSlider","volumeMusicSlider","gameBrightnessSlider","showHelpWindowCycle","updateAllValues","show","OptionsPanel","menu1","PausePanel","advOptions","wallDetailsToggle","musicToggle","sfxToggle","autoGameSpeedToggle","OverlayLayer","onContinue","mainCfg","title","sfx","SelectionFrameLayer","AnimationLoopGroup","loopStart","loopEnd","startFrame","endFrame","lastFrame","endMixer","endClip","AnimationUtils","endAction","loopMixer","loopClip","loopAction","LoopPingPong","startMixer","startClip","startAction","AdvisorLayer","advisorPosCfg","advisorCfg","NamingLayer","gameScreen","selectedRaider","raiderSaveGame","selectionNameComponent","projected","keyCode","GameScreen","crystalsInVehicles","crystalsInBuildings","crystalsDropped","crystalsInLevel","resultState","RewardScreenButton","conf","MainMenuOverwritePanel","parentHeight","saveGameIndex","OverwriteLayer","layerCfg","overwriteCfg","panelX","panelY","noBtn","RewardScreen","backgroundImg","fontKey","fontValue","labelFontName","keyToIndex","flicIndex","gameResultTextImg","box","descriptionTextImg","actual","lessIsMore","milliseconds","seconds","ss","minutes","mm","TooltipLayer","tooltipImg","MusicManager","musicData","GameModule","params","ConsoleIntegration","CfgEntry","visitedKeys","unifiedKey","CfgEntryValue","searchKey","objKeys","unifiedSearchKey","keyValue","searchPrefix","separator","expectedLength","sep","strVal","PARSING_STATE","CfgFileParser","ancestry","activeObject","isComment","parsingState","lastElement","cfgFiles","loadingScreenImageName","loadingBarImageName","loadingText","assetLoaders","assetCount","asset","teleportManConfig","teleportManNormal","teleportManDisabled","teleportManImageData","depInterfaceBuildImageData"],"mappings":"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S,CACR,MACA,MACA,MACA,KACA,EACD,QAAS,MACT,QAAS,CACR,MACA,KACA,EACD,WAAY,MACZ,cAAe,MACf,SAAU,OACV,QAAS,MACT,aAAc,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,EACD,QAAS,MACT,SAAU,MACV,QAAS,MACT,gBAAiB,QACjB,SAAU,QACV,aAAc,KACd,aAAc,WACd,WAAY,MACZ,wBAAyB,MACzB,SAAU,CACT,OACA,KACA,EACD,QAAS,MACT,cAAe,CACd,QACA,MACA,KACA,EACD,qBAAsB,OACtB,eAAgB,OAChB,4BAA6B,QAC7B,eAAgB,OAChB,eAAgB,OAChB,QAAS,MACT,SAAU,OACV,oBAAqB,CACpB,MACA,KACA,EACD,WAAY,MACZ,kBAAmB,MACnB,mBAAoB,OACpB,SAAU,MACV,iBAAkB,MAClB,UAAW,QACX,QAAS,MACT,QAAS,MACT,UAAW,CACV,MACA,KACA,OACA,EACD,WAAY,MACZ,kBAAmB,CAClB,MACA,MACA,MACA,KACA,EACD,WAAY,CACX,IACA,EACD,wBAAyB,CACxB,MACA,KACA,EACD,QAAS,MACT,WAAY,IACZ,mBAAoB,MACpB,sBAAuB,MACvB,gBAAiB,CAChB,MACA,KACA,EACD,SAAU,CACT,MACA,MACA,KACA,EACD,oBAAqB,MACrB,2BAA4B,CAC3B,MACA,KACA,EACD,SAAU,KACV,OAAQ,KACR,SAAU,OACV,oBAAqB,CACpB,MACA,MACA,EACD,gBAAiB,MACjB,YAAa,MACb,YAAa,UACb,WAAY,SACZ,QAAS,MACT,WAAY,KACZ,WAAY,KACZ,YAAa,CACZ,UACA,MACA,EACD,UAAW,CACV,IACA,IACA,MACA,MACA,KACA,EACD,UAAW,QACX,gBAAiB,MACjB,UAAW,KACX,iBAAkB,CACjB,MACA,MACA,KACA,EACD,QAAS,MACT,SAAU,MACV,cAAe,MACf,WAAc,KACd,cAAe,UACf,YAAa,QACb,kBAAmB,QACnB,iBAAkB,QAClB,cAAe,QACf,cAAe,QACf,aAAc,QACd,cAAe,MACf,WAAY,OACZ,WAAY,QACZ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A,KACA,EACD,qBAAsB,MACtB,eAAgB,MAChB,mBAAoB,MACpB,cAAe,MACf,WAAY,CACX,MACA,MACA,EACD,gBAAiB,MACjB,aAAc,MACd,YAAa,WACb,eAAgB,OAChB,UAAW,MACX,gBAAiB,MACjB,UAAW,MACX,eAAgB,MAChB,qBAAsB,MACtB,UAAW,MACX,aAAc,MACd,WAAY,MACZ,WAAY,OACZ,oBAAqB,MACrB,uBAAwB,MACxB,sBAAuB,MACvB,6BAA8B,MAC9B,wCAAyC,SACzC,wBAAyB,MACzB,yBAA0B,MAC1B,8BAA+B,MAC/B,UAAW,CACV,MACA,MACA,EACD,qBAAsB,MACtB,eAAgB,OAChB,OAAU,MACV,OAAU,MACV,WAAY,OACZ,eAAgB,WAChB,mBAAoB,MACpB,mBAAoB,CACnB,MACA,MACA,MACA,KACA,EACD,mBAAoB,MACpB,mBAAoB,MACpB,UAAW,CACV,MACA,OACA,EACD,SAAU,KACV,UAAW,CACV,MACA,KACA,EACD,mBAAoB,MACpB,SAAU,OACV,eAAgB,MAChB,mBAAoB,MACpB,eAAgB,MAChB,eAAgB,MAChB,oBAAqB,MACrB,QAAS,MACT,aAAc,MACd,qBAAsB,MACtB,mBAAoB,MACpB,aAAc,MACd,aAAc,MACd,aAAc,CACb,MACA,KACA,EACD,eAAgB,CACf,MACA,MACA,MACA,KACA,EACD,YAAa,MACb,mBAAoB,MACpB,UAAW,MACX,eAAgB,SAChB,yBAA0B,UAC1B,mBAAoB,CACnB,MACA,KACA,EACD,QAAS,MACT,qBAAsB,CACrB,MACA,MACA,EACD,mBAAoB,cACpB,gBAAiB,MACjB,YAAa,OACb,aAAc,MACd,eAAgB,MAChB,WAAY,MACZ,6BAA8B,MAC9B,gBAAiB,CAChB,MACA,MACA,KACA,EACD,eAAgB,CACf,MACA,MACA,MACA,KACA,EACD,YAAa,MACb,gBAAiB,MACjB,eAAgB,MAChB,eAAgB,MAChB,YAAa,MACb,QAAS,MACT,WAAY,CACX,MACA,KACA,EACD,uBAAwB,CACvB,MACA,KACA,EACD,0BAA2B,MAC3B,oBAAqB,MACrB,QAAS,MACT,aAAc,OACd,WAAY,MACZ,eAAgB,KAChB,YAAa,MACb,SAAU,MACV,cAAe,MACf,OAAQ,KACR,aAAc,CACb,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,EACD,WAAY,OACZ,gBAAiB,MACjB,WAAY,OACZ,UAAW,MACX,UAAW,MACX,YAAa,MACb,WAAY,OACZ,SAAU,CACT,OACA,QACA,OACA,KACA,EACD,KAAQ,OACR,UAAW,MACX,MAAS,MACT,SAAY,MACZ,2BAA4B,MAC5B,UAAa,MACb,iBAAkB,MAClB,sBAAuB,MACvB,aAAc,IACd,YAAa,CACZ,MACA,MACA,MACA,KACA,EACD,gBAAiB,MACjB,KAAQ,CACP,KACA,KACA,EACD,WAAY,CACX,MACA,MACA,EACD,4BAA6B,CAC5B,MACA,MACA,EACD,uBAAwB,MACxB,cAAe,CACd,KACA,SACA,UACA,SACA,aACA,SACA,YACA,EACD,cAAe,MACf,cAAe,MACf,UAAW,CACV,MACA,KACA,EACD,SAAU,CACT,KACA,IACA,EACD,KAAQ,CACP,OACA,KACH,CACE,EACD,MAAS,CACR,IAAO,MACP,SAAU,MACV,QAAW,MACX,MAAS,CACR,KACA,KACA,EACD,KAAQ,OACR,KAAQ,CACP,MACA,OACA,MACA,KACA,EACD,KAAQ,CACP,OACA,QACA,MACA,MACA,OACA,MACA,KACA,EACD,QAAW,MACX,IAAO,CACN,MACA,MACA,KACA,EACD,UAAW,MACX,SAAU,OACV,QAAS,MACT,WAAY,MACZ,WAAY,MACZ,iBAAkB,MAClB,cAAe,KACf,QAAS,MACT,MAAS,MACT,IAAO,OACP,IAAO,MACP,KAAQ,MACR,iBAAkB,CACjB,MACA,MACA,EACD,oBAAqB,MACrB,UAAW,MACX,UAAW,MACX,aAAc,QACd,mBAAoB,MACpB,6BAA8B,MAC9B,sBAAuB,YACvB,sBAAuB,YACvB,sBAAuB,YACvB,UAAW,MACX,KAAQ,OACR,QAAS,MACT,aAAc,MACd,wBAAyB,MACzB,GAAM,KACN,IAAO,MACP,KAAQ,CACP,OACA,MACA,KACA,EACD,KAAQ,OACR,IAAO,KACP,EACD,SAAY,CACX,YAAa,MACb,UAAW,CACV,MACA,OACA,EACD,cAAe,MACf,kBAAmB,CAClB,OACA,SACA,MACA,EACD,QAAS,MACT,WAAY,MACZ,QAAS,MACT,SAAU,OACV,QAAS,MACT,YAAa,MACb,cAAe,MACf,SAAU,CACT,OACA,KACA,EACD,QAAS,MACT,QAAS,CACR,MACA,KACA,EACD,uBAAwB,CACvB,MACA,MACA,EACD,iBAAkB,CACjB,MACA,MACA,OACA,EACD,wBAAyB,CACxB,MACA,MACA,EACD,kBAAmB,MACnB,mBAAoB,CACnB,MACA,MACA,KACA,EACD,iBAAkB,MAClB,kBAAmB,MACnB,YAAa,MACb,QAAS,MACT,YAAa,CACZ,OACA,KACA,EACD,aAAc,CACb,MACA,IACA,EACD,aAAc,MACd,gBAAiB,MACjB,qBAAsB,OACtB,gBAAiB,MACjB,eAAgB,KAChB,gBAAiB,MACjB,eAAgB,KAChB,YAAa,MACb,UAAW,OACX,SAAU,OACV,cAAe,IACf,gBAAiB,MACjB,gBAAiB,CAChB,MACA,SACA,KACA,EACD,cAAe,MACf,cAAe,MACf,oBAAqB,CACpB,MACA,KACA,EACD,qBAAsB,MACtB,WAAY,MACZ,cAAe,KACf,mBAAoB,MACpB,QAAS,MACT,SAAU,OACV,QAAS,KACT,EACD,KAAQ,CACP,IAAO,MACP,KAAQ,OACR,MAAS,OACT,EACD,MAAS,CACR,IAAO,MACP,IAAO,MACP,KAAQ,CACP,OACA,MACA,MACA,OACA,YACA,KACA,EACD,IAAO,MACP,IAAO,MACP,UAAW,CACV,MACA,MACA,EACD,KAAQ,CACP,OACA,KACA,EACD,WAAY,CACX,OACA,KACA,EACD,eAAgB,OAChB,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,cAAe,MACf,qBAAsB,MACtB,sBAAuB,MACvB,oBAAqB,MACrB,cAAe,MACf,SAAU,MACV,OAAQ,MACR,QAAS,MACT,cAAe,MACf,gBAAiB,MACjB,oBAAqB,MACrB,oBAAqB,MACrB,qBAAsB,MACtB,oBAAqB,MACrB,QAAS,MACT,YAAa,MACb,YAAa,MACb,gBAAiB,MACjB,IAAO,MACP,IAAO,MACP,MAAS,KACT,IAAO,MACP,WAAY,OACZ,IAAO,MACP,mBAAoB,CACnB,MACA,OACA,MACA,MACA,EACD,UAAW,MACX,UAAW,MACX,mBAAoB,MACpB,UAAW,MACX,UAAW,MACX,2BAA4B,MAC5B,2BAA4B,MAC5B,cAAe,MACf,eAAgB,MAChB,cAAe,MACf,WAAY,MACZ,KAAQ,OACR,QAAS,MACT,QAAS,MACT,aAAc,CACb,KACA,MACA,MACA,MACA,KACA,EACD,SAAU,CACT,MACA,KACA,EACD,QAAS,MACT,UAAW,MACX,KAAQ,QACR,KAAQ,CACP,OACA,MACA,EACD,MAAS,CACR,MACA,EACD,sBAAuB,MACvB,cAAe,MACf,aAAc,MACd,SAAU,OACV,cAAe,MACf,cAAe,MACf,cAAe,MACf,gBAAiB,MACjB,kBAAmB,CAClB,MACA,MACA,KACA,EACD,eAAgB,CACf,MACA,KACA,EACD,cAAe,MACf,aAAc,MACd,aAAc,MACd,aAAc,KACd,EACD,QAAW,CACV,OAAU,CACT,MACA,OACA,MACA,QACA,KACH,CACE,EACD,MAAS,CACR,KAAQ,CACP,MACA,MACA,EACD,KAAQ,CACP,MACA,OACA,MACA,EACD,KAAQ,CACP,MACA,MACA,EACD,WAAY,CACX,OACA,OACA,EACD,UAAW,OACX,aAAc,CACb,OACA,OACA,EACD,kBAAmB,MACnB,UAAW,MACX,UAAW,MACX,UAAW,MACX,UAAW,MACX,eAAgB,OAChB,UAAW,KACX,EACD,KAAQ,CACP,iBAAkB,CACjB,WACA,UACA,EACD,SAAY,CACX,MACA,MACA,KACA,EACD,IAAO,MACP,IAAO,MACP,KAAQ,MACR,KAAQ,CACP,OACA,MACA,QACA,KACA,EACD,KAAQ,MACR,MAAS,CACR,MACA,OACA,MACA,OACA,MACA,OACA,MACA,KACA,MACA,OACA,KACA,EACD,SAAY,MACZ,UAAa,CACZ,MACA,KACA,EACD,QAAW,KACX,uBAAwB,MACxB,8BAA+B,MAC/B,cAAe,MACf,oBAAqB,OACrB,WAAY,MACZ,QAAS,MACT,WAAY,CACX,MACA,MACA,MACA,IACA,EACD,WAAY,CACX,MACA,MACA,MACA,IACA,EACD,cAAe,MACf,SAAU,IACV,SAAU,QACV,YAAa,KACb,SAAU,OACV,qBAAsB,MACtB,QAAS,MACT,WAAY,CACX,IACA,MACA,KACA,KACA,EACD,YAAa,MACb,WAAY,KACZ,UAAW,QACX,WAAY,MACZ,QAAS,CACR,MACA,IACA,EACD,QAAS,CACR,MACA,MACA,MACA,KACA,EACD,cAAe,MACf,UAAW,MACX,GAAM,KACN,gBAAiB,MACjB,KAAQ,CACP,OACA,KACA,EACD,MAAS,CACR,IACA,KACA,OACA,MACA,KACA,IACA,EACD,OAAU,MACV,WAAY,CACX,MACA,OACA,MACA,EACD,MAAS,QACT,WAAY,OACZ,iBAAkB,QAClB,iBAAkB,QAClB,iBAAkB,QAClB,mBAAoB,MACpB,UAAW,MACX,mBAAoB,MACpB,eAAgB,KAChB,gBAAiB,OACjB,gBAAiB,OACjB,QAAS,CACR,IACA,KACA,EACD,MAAO,CACN,IACA,IACA,KACA,EACD,YAAa,CACZ,IACA,MACA,MACA,KACA,EACD,SAAU,OACV,QAAS,MACT,QAAS,MACT,aAAc,KACd,YAAe,MACf,WAAc,KACd,KAAQ,OACR,SAAY,CACX,KACA,WACA,QACA,QACA,EACD,aAAc,KACd,aAAc,IACd,EACD,MAAS,CACR,KAAQ,OACR,OAAQ,MACR,QAAW,MACX,GAAM,KACN,GAAM,CACL,MACA,IACA,EACD,IAAO,MACP,GAAM,KACN,KAAQ,CACP,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,EACD,IAAO,CACN,MACA,OACA,MACA,EACD,UAAa,CACZ,KACA,KACA,EACD,IAAO,MACP,cAAe,CACd,MACA,KACA,EACD,QAAS,MACT,WAAY,CACX,MACA,KACA,EACD,QAAS,MACT,WAAY,CACX,MACA,MACA,KACA,EACD,UAAW,KACX,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,YAAa,MACb,cAAe,QACf,aAAc,CACb,MACA,MACA,O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","x_google_ignoreList":[7,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,87,88,89,90,91,92,93,179,180,181,182,183,184,188,247,248,270,271,272,273,274,275,276,277]}