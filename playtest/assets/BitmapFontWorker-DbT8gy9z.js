(function(){"use strict";class C{constructor(e){this.worker=e,e.onMessageFromFrontend=t=>{try{t.request?this.onMessageFromFrontend(t.workerRequestHash,t.request):console.warn("Worker received message without request from frontend")}catch(o){console.error(o)}}}sendResponse(e,t,o){this.worker.sendResponse({workerRequestHash:e,response:t},o)}}function v(n,e){if(!n)throw new Error("No canvas given");const t=n.getContext("2d",e);if(!t)throw new Error("Could not get context");return t}function I(n,e){const t=document.createElement("canvas");return t.width=n,t.height=e,t}function u(n,e){if(n<1||e<1)return console.error(`Can't create context with size ${n} x ${e}`),F(64,64);let t;return typeof document<"u"?t=I(n,e):t=new OffscreenCanvas(n,e),v(t)}function F(n,e){const t=u(n,e);for(let o=0;o<e;o+=16)for(let a=0;a<n;a+=16)a/16%2===o/16%2?t.fillStyle="rgb(0,255,255)":t.fillStyle="rgb(255,0,255)",t.fillRect(a,o,16,16);return t}function y(n,e,t,o,a,r,c=255){const s=(t*n.width+e)*4;n.data[s]=o,n.data[s+1]=a,n.data[s+2]=r,n.data[s+3]=c}function M(n,e,t){const o=(t*n.width+e)*4;return{r:n.data[o],g:n.data[o+1],b:n.data[o+2],a:n.data[o+3]}}class T{constructor(e){this.data=e}createTextImageData(e,t,o=!0){if(!e)return;e=e.replace(/_/g," ");const a=this.determineRows(e,t),r=Math.max(1,...a.map(s=>s.width)),c=new ImageData(r,this.data.charHeight*(a.length||1));return a.forEach((s,i)=>{const f=o?Math.round((r-s.width)/2):0,l=i*this.data.charHeight;let d=0;for(let x=0;x<s.text.length;x++){const h=this.data.charCodeMap.get(s.text.charCodeAt(x));if(h){for(let m=d;m<d+h.width;m++)for(let g=0;g<h.height;g++){const p=M(h,m-d,g);y(c,f+m,l+g,p.r,p.g,p.b,p.a)}d+=h.width}}}),c}createTextImage(e,t,o=!0){if(!e)return;const a=this.createTextImageData(e,t,o);if(!a)return;const r=u(a.width,a.height);return r.putImageData(a,0,0),r.canvas}determineRows(e,t){const o=[];let a="",r=0;return e.replaceAll("	","    ").split(" ").forEach(c=>{let s=0;for(let i=0;i<c.length;i++){const f=c.charCodeAt(i),l=this.data.charCodeMap.get(f);if(l)s+=l.width;else{const d=c.charAt(i);f!==13&&console.error(`Ignoring letter '${d}' (${f}) of word "${e}" not found in charset of size ${this.data.charCodeMap.size}!`)}}r>0?!t||r+this.data.spaceWidth+s<t?(a+=` ${c}`,r+=this.data.spaceWidth+s):(o.push({text:a,width:r}),a=c,r=s):(a+=c,r+=s)}),r>0&&o.push({text:a,width:r}),o}}class ${constructor(e){this.worker=e,e.addEventListener("message",t=>this.onMessageFromFrontend(t?.data))}onMessageFromFrontend=()=>{throw new Error("Not implemented")};sendResponse(e,t){this.worker.postMessage(e,t)}}const w={addFont:1,createTextImage:2};class N extends C{fontCache=new Map;onMessageFromFrontend(e,t){if(!t.fontName){console.error(`No fontname given for '${t.text}'`),this.sendResponse(e,{textImageData:void 0});return}switch(t.type){case w.addFont:if(!t.fontData){console.error(`No font data given for '${t.fontName}'`),this.sendResponse(e,{textImageData:void 0});return}this.fontCache.set(t.fontName.toLowerCase(),new T(t.fontData)),this.sendResponse(e,{textImageData:void 0});break;case w.createTextImage:if(!t.text){console.error(`No text given for '${t.fontName}'`),this.sendResponse(e,{textImageData:void 0});return}const o=this.fontCache.get(t.fontName.toLowerCase());if(!o){console.error(`Unknown font '${t.fontName}' for '${t.text}'. Possible options are: ${Array.from(this.fontCache.keys())}`),this.sendResponse(e,{textImageData:void 0});return}const a=o.createTextImageData(t.text,t.maxWidth,t.autoCenter);this.sendResponse(e,{textImageData:a});break}}}const E=self;new N(new $(E))})();
//# sourceMappingURL=BitmapFontWorker-DbT8gy9z.js.map
