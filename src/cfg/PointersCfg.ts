import { ConfigSetFromEntryValue, ConfigSetFromRecord } from './Configurable'
import { CfgEntry, CfgEntryValue } from './CfgEntry'

export type Cursor = keyof PointersCfg

export class PointersCfg implements ConfigSetFromRecord {
    blank: PointersEntryCfg = new PointersEntryCfg()
    standard: PointersEntryCfg = new PointersEntryCfg()
    drill: PointersEntryCfg = new PointersEntryCfg()
    cantDrill: PointersEntryCfg = new PointersEntryCfg()
    clear: PointersEntryCfg = new PointersEntryCfg()
    go: PointersEntryCfg = new PointersEntryCfg()
    cantGo: PointersEntryCfg = new PointersEntryCfg()
    teleport: PointersEntryCfg = new PointersEntryCfg()
    cantTeleport: PointersEntryCfg = new PointersEntryCfg()
    reinforce: PointersEntryCfg = new PointersEntryCfg()
    cantReinforce: PointersEntryCfg = new PointersEntryCfg()
    selected: PointersEntryCfg = new PointersEntryCfg()
    radarPan: PointersEntryCfg = new PointersEntryCfg()
    trackObject: PointersEntryCfg = new PointersEntryCfg()
    zoom: PointersEntryCfg = new PointersEntryCfg()
    cantZoom: PointersEntryCfg = new PointersEntryCfg()
    help: PointersEntryCfg = new PointersEntryCfg()
    cantHelp: PointersEntryCfg = new PointersEntryCfg()
    putDown: PointersEntryCfg = new PointersEntryCfg()
    getIn: PointersEntryCfg = new PointersEntryCfg()
    getOut: PointersEntryCfg = new PointersEntryCfg()
    okay: PointersEntryCfg = new PointersEntryCfg()
    notOkay: PointersEntryCfg = new PointersEntryCfg()
    canBuild: PointersEntryCfg = new PointersEntryCfg()
    cannotBuild: PointersEntryCfg = new PointersEntryCfg()
    dynamite: PointersEntryCfg = new PointersEntryCfg()
    cantDynamite: PointersEntryCfg = new PointersEntryCfg()
    pickUp: PointersEntryCfg = new PointersEntryCfg()
    cantPickUp: PointersEntryCfg = new PointersEntryCfg()
    pickUpOre: PointersEntryCfg = new PointersEntryCfg()
    manCantDig: PointersEntryCfg = new PointersEntryCfg()
    vehicleCantDig: PointersEntryCfg = new PointersEntryCfg()
    manDig: PointersEntryCfg = new PointersEntryCfg()
    vehicleDig: PointersEntryCfg = new PointersEntryCfg()
    manCantPickUp: PointersEntryCfg = new PointersEntryCfg()
    vehicleCantPickUp: PointersEntryCfg = new PointersEntryCfg()
    manPickUp: PointersEntryCfg = new PointersEntryCfg()
    vehiclePickUp: PointersEntryCfg = new PointersEntryCfg()
    manCantGo: PointersEntryCfg = new PointersEntryCfg()
    vehicleCantGo: PointersEntryCfg = new PointersEntryCfg()
    manGo: PointersEntryCfg = new PointersEntryCfg()
    vehicleGo: PointersEntryCfg = new PointersEntryCfg()
    manClear: PointersEntryCfg = new PointersEntryCfg()
    vehicleClear: PointersEntryCfg = new PointersEntryCfg()
    surfaceTypeImmovable: PointersEntryCfg = new PointersEntryCfg()
    surfaceTypeHard: PointersEntryCfg = new PointersEntryCfg()
    surfaceTypeMedium: PointersEntryCfg = new PointersEntryCfg()
    surfaceTypeLoose: PointersEntryCfg = new PointersEntryCfg()
    surfaceTypeSoil: PointersEntryCfg = new PointersEntryCfg()
    surfaceTypeOreSeam: PointersEntryCfg = new PointersEntryCfg()
    surfaceTypeCrystalSeam: PointersEntryCfg = new PointersEntryCfg()
    surfaceTypeRechargeSeam: PointersEntryCfg = new PointersEntryCfg()

    setFromRecord(cfgValue: CfgEntry): this {
        this.blank.setFromValue(cfgValue.getValue('Pointer_Blank'))
        this.standard.setFromValue(cfgValue.getValue('Pointer_Standard'))
        this.drill.setFromValue(cfgValue.getValue('Pointer_Drill'))
        this.cantDrill.setFromValue(cfgValue.getValue('Pointer_CantDrill'))
        this.clear.setFromValue(cfgValue.getValue('Pointer_Clear'))
        this.go.setFromValue(cfgValue.getValue('Pointer_Go'))
        this.cantGo.setFromValue(cfgValue.getValue('Pointer_CantGo'))
        this.teleport.setFromValue(cfgValue.getValue('Pointer_Teleport'))
        this.cantTeleport.setFromValue(cfgValue.getValue('Pointer_CantTeleport'))
        this.reinforce.setFromValue(cfgValue.getValue('Pointer_Reinforce'))
        this.cantReinforce.setFromValue(cfgValue.getValue('Pointer_CantReinforce'))
        this.selected.setFromValue(cfgValue.getValue('Pointer_Selected'))
        this.radarPan.setFromValue(cfgValue.getValue('Pointer_RadarPan'))
        this.trackObject.setFromValue(cfgValue.getValue('Pointer_TrackObject'))
        this.zoom.setFromValue(cfgValue.getValue('Pointer_Zoom'))
        this.cantZoom.setFromValue(cfgValue.getValue('Pointer_CantZoom'))
        this.help.setFromValue(cfgValue.getValue('Pointer_Help'))
        this.cantHelp.setFromValue(cfgValue.getValue('Pointer_CantHelp'))
        this.putDown.setFromValue(cfgValue.getValue('Pointer_PutDown'))
        this.getIn.setFromValue(cfgValue.getValue('Pointer_GetIn'))
        this.getOut.setFromValue(cfgValue.getValue('Pointer_GetOut'))
        this.okay.setFromValue(cfgValue.getValue('Pointer_Okay'))
        this.notOkay.setFromValue(cfgValue.getValue('Pointer_NotOkay'))
        this.canBuild.setFromValue(cfgValue.getValue('Pointer_CanBuild'))
        this.cannotBuild.setFromValue(cfgValue.getValue('Pointer_CannotBuild'))
        this.dynamite.setFromValue(cfgValue.getValue('Pointer_Dynamite'))
        this.cantDynamite.setFromValue(cfgValue.getValue('Pointer_CantDynamite'))
        this.pickUp.setFromValue(cfgValue.getValue('Pointer_PickUp'))
        this.cantPickUp.setFromValue(cfgValue.getValue('Pointer_CantPickUp'))
        this.pickUpOre.setFromValue(cfgValue.getValue('Pointer_PickUpOre'))
        this.manCantDig.setFromValue(cfgValue.getValue('Pointer_LegoManCantDig'))
        this.vehicleCantDig.setFromValue(cfgValue.getValue('Pointer_VehicleCantDig'))
        this.manDig.setFromValue(cfgValue.getValue('Pointer_LegoManDig'))
        this.vehicleDig.setFromValue(cfgValue.getValue('Pointer_VehicleDig'))
        this.manCantPickUp.setFromValue(cfgValue.getValue('Pointer_LegoManCantPickUp'))
        this.vehicleCantPickUp.setFromValue(cfgValue.getValue('Pointer_VehicleCantPickUp'))
        this.manPickUp.setFromValue(cfgValue.getValue('Pointer_LegoManPickUp'))
        this.vehiclePickUp.setFromValue(cfgValue.getValue('Pointer_VehiclePickUp'))
        this.manCantGo.setFromValue(cfgValue.getValue('Pointer_LegoManCantGo'))
        this.vehicleCantGo.setFromValue(cfgValue.getValue('Pointer_VehicleCantGo'))
        this.manGo.setFromValue(cfgValue.getValue('Pointer_LegoManGo'))
        this.vehicleGo.setFromValue(cfgValue.getValue('Pointer_VehicleGo'))
        this.manClear.setFromValue(cfgValue.getValue('Pointer_LegoManClear'))
        this.vehicleClear.setFromValue(cfgValue.getValue('Pointer_VehicleClear'))
        this.surfaceTypeImmovable.setFromValue(cfgValue.getValue('Pointer_SurfaceType_Immovable'))
        this.surfaceTypeHard.setFromValue(cfgValue.getValue('Pointer_SurfaceType_Hard'))
        this.surfaceTypeMedium.setFromValue(cfgValue.getValue('Pointer_SurfaceType_Medium'))
        this.surfaceTypeLoose.setFromValue(cfgValue.getValue('Pointer_SurfaceType_Loose'))
        this.surfaceTypeSoil.setFromValue(cfgValue.getValue('Pointer_SurfaceType_Soil'))
        this.surfaceTypeOreSeam.setFromValue(cfgValue.getValue('Pointer_SurfaceType_OreSeam'))
        this.surfaceTypeCrystalSeam.setFromValue(cfgValue.getValue('Pointer_SurfaceType_CrystalSeam'))
        this.surfaceTypeRechargeSeam.setFromValue(cfgValue.getValue('Pointer_SurfaceType_RechargeSeam'))
        return this
    }
}

export class PointersEntryCfg implements ConfigSetFromEntryValue {
    fileName: string = ''
    flhStart: number = 0
    flhEnd: number = 0

    setFromValue(cfgValue: CfgEntryValue): this {
        const array = cfgValue.toArray(',', undefined)
        if (array.length === 3) {
            this.fileName = array[0].toFileName()
            this.flhStart = array[1].toNumber()
            this.flhEnd = array[2].toNumber()
        } else if (array.length === 1) {
            this.fileName = array[0].toFileName()
        } else {
            console.warn(`Unexpected pointers config (${array}) given; expected 3 or 1 values`)
        }
        return this
    }
}
